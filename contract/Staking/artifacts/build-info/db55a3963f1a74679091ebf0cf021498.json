{
	"id": "db55a3963f1a74679091ebf0cf021498",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"Staking/Staking.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.6;\r\n\r\nimport \"../_lib/SafeMath.sol\";\r\nimport \"../_lib/ERC20.sol\";\r\nimport \"../_lib/Ownable.sol\";\r\n\r\ninterface IPokerToken {\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address _owner) external view returns (uint256);\r\n\r\n    function transfer(address _to, uint256 _amount) external returns (bool);\r\n\r\n    function transferFrom(\r\n        address _from,\r\n        address _to,\r\n        uint256 _amount\r\n    ) external returns (bool);\r\n\r\n    function mint(address _to, uint256 _amount) external;\r\n\r\n    function burn(uint256 _amount) external;\r\n}\r\n\r\ninterface IBurnCoin {\r\n    function burn(uint256 _amount) external;\r\n}\r\n\r\ncontract Staking {\r\n    using SafeMath for uint256;\r\n    IPokerToken poker;\r\n    IBurnCoin burnCoin;\r\n    address public owner;\r\n\r\n    constructor(IPokerToken _poker, IBurnCoin _burncoin) public {\r\n        poker = _poker;\r\n        owner = msg.sender;\r\n        lastUpdateTime = getTime();\r\n        burnCoin = _burncoin;\r\n    }\r\n\r\n    struct UserInfo {\r\n        uint256 shares;\r\n        uint256 lastDepositedTime;\r\n        uint256 lastUserActionTime;\r\n        uint256 rewardDebt;\r\n        uint256 rewards;\r\n        uint256 amount;\r\n    }\r\n\r\n    uint256 public accPerShare = 0;\r\n    uint256 public totalShares = 0;\r\n    uint256 public totalAmount = 0;\r\n    uint256 public lastUpdateTime = 0;\r\n    uint256 public withdrawFee = 1000;\r\n    uint256 public withdrawFeePeriod = 7 days; // 7 days\r\n    //uint256 public withdrawFeePeriod = 10 minutes; // 测试用\r\n    uint256 public stakingStartTime = 0;\r\n    bool public stakingSwitch = false;\r\n    uint256 decimals = 18;\r\n\r\n    uint256 constant ONE = 10**18;\r\n\r\n    function divFloor(uint256 target, uint256 d)\r\n        internal\r\n        pure\r\n        returns (uint256)\r\n    {\r\n        return target.mul(ONE).div(d);\r\n    }\r\n\r\n    function decimalMul(uint256 target, uint256 d)\r\n        internal\r\n        pure\r\n        returns (uint256)\r\n    {\r\n        return target.mul(d) / ONE;\r\n    }\r\n\r\n    mapping(address => UserInfo) public userInfo;\r\n\r\n    event Deposit(\r\n        address indexed sender,\r\n        uint256 amount,\r\n        uint256 shares,\r\n        uint256 lastDepositedTime\r\n    );\r\n    event Withdraw(address indexed sender, uint256 amount, uint256 shares);\r\n\r\n    function deposit(uint256 _amount) public {\r\n        require(_amount > 0, \"Nothing to deposit\");\r\n\r\n        updatePool();\r\n        UserInfo storage user = userInfo[msg.sender];\r\n\r\n        if (user.amount > 0) {\r\n            uint256 pending = decimalMul(user.amount, accPerShare).sub(\r\n                user.rewardDebt\r\n            );\r\n            //totalAmount = totalAmount.sub(pending);\r\n            user.rewards = user.rewards.add(pending);\r\n        } else user.rewards = 0;\r\n\r\n        poker.transferFrom(msg.sender, address(this), _amount);\r\n\r\n        uint256 currentShares = _amount.mul(getEther());\r\n        /*\r\n        if (totalShares != 0) {\r\n            currentShares = (_amount.mul(totalShares)).div(totalAmount);\r\n        } else {\r\n            currentShares = _amount.mul(getEther());\r\n        }\r\n        */\r\n\r\n        user.shares = user.shares.add(currentShares);\r\n        totalShares = totalShares.add(currentShares);\r\n\r\n        user.amount = user.amount.add(_amount);\r\n        user.rewardDebt = decimalMul(user.amount, accPerShare);\r\n\r\n        user.lastUserActionTime = getTime();\r\n        user.lastDepositedTime = getTime();\r\n\r\n        emit Deposit(msg.sender, _amount, currentShares, block.timestamp);\r\n    }\r\n\r\n    function withdraw(uint256 _shares) public {\r\n        UserInfo storage user = userInfo[msg.sender];\r\n        require(_shares > 0, \"Nothing to withdraw\");\r\n        require(_shares <= user.shares, \"Withdraw amount exceeds balance\");\r\n\r\n        updatePool();\r\n\r\n        //用户所有收益\r\n        uint256 userTotalAmount = decimalMul(user.amount, accPerShare)\r\n            .sub(user.rewardDebt)\r\n            .add(user.rewards);\r\n\r\n        //提取收益部分的份额\r\n        uint256 withdrawAmount = userTotalAmount.mul(_shares).div(user.shares);\r\n\r\n        //提取原账户中的份额\r\n        uint256 userAmount = user.amount.mul(_shares).div(user.shares);\r\n\r\n        user.shares = user.shares.sub(_shares);\r\n        totalShares = totalShares.sub(_shares);\r\n\r\n        require(\r\n            totalAmount >= withdrawAmount,\r\n            \"Withdraw amount exceeds balance\"\r\n        );\r\n\r\n        //矿池-待提收益\r\n        totalAmount = totalAmount.sub(withdrawAmount);\r\n\r\n        //历史收益\r\n        user.rewards = userTotalAmount.sub(withdrawAmount);\r\n\r\n        //实际提取总数\r\n        withdrawAmount = withdrawAmount.add(userAmount);\r\n\r\n        if (getTime() < user.lastDepositedTime.add(withdrawFeePeriod)) {\r\n            uint256 currentWithdrawFee = withdrawAmount.mul(100).div(10000);\r\n            withdrawAmount = withdrawAmount.sub(currentWithdrawFee);\r\n            poker.transfer(address(burnCoin), currentWithdrawFee);\r\n            burnCoin.burn(currentWithdrawFee);\r\n        }\r\n\r\n        poker.transfer(msg.sender, withdrawAmount);\r\n        user.amount = user.amount.sub(userAmount);\r\n\r\n        if (user.shares > 0)\r\n            user.rewardDebt = decimalMul(user.amount, accPerShare);\r\n\r\n        user.lastUserActionTime = block.timestamp;\r\n\r\n        emit Withdraw(msg.sender, withdrawAmount, _shares);\r\n    }\r\n\r\n    function updatePool() public {\r\n        uint256 curTime = getTime();\r\n        if (curTime <= lastUpdateTime) {\r\n            return;\r\n        }\r\n\r\n        if (totalShares <= 0) {\r\n            lastUpdateTime = curTime;\r\n            return;\r\n        }\r\n\r\n        uint256 multiplier = now - lastUpdateTime;\r\n        uint256 reward = multiplier.mul(getStakingCoinPerSec());\r\n        lastUpdateTime = curTime;\r\n        totalAmount = totalAmount.add(reward);\r\n        accPerShare = accPerShare.add(divFloor(reward, this.totalDeposit())); //一个单位的份额价值更新\r\n        poker.mint(address(this), reward);\r\n    }\r\n\r\n    function pendingCoin() external view returns (uint256) {\r\n        uint256 curTime = getTime();\r\n        if (totalShares <= 0) {\r\n            return 0;\r\n        }\r\n        uint256 multiplier = curTime - lastUpdateTime;\r\n        uint256 reward = multiplier.mul(getStakingCoinPerSec());\r\n        return reward;\r\n    }\r\n\r\n    function totalStakingAmount() public view returns (uint256) {\r\n        return this.pendingCoin().add(getDepositBalance());\r\n    }\r\n\r\n    function totalDeposit() external view returns (uint256) {\r\n        return totalShares.div(ONE);\r\n    }\r\n\r\n    function computePer() external view returns (uint256) {\r\n        return\r\n            accPerShare.add(divFloor(this.pendingCoin(), this.totalDeposit()));\r\n    }\r\n\r\n    function myBenefits() public view returns (uint256) {\r\n        UserInfo storage user = userInfo[msg.sender];\r\n        if (user.shares == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 ben = decimalMul(user.amount, this.computePer());\r\n\r\n        if (ben > user.rewardDebt) return ben.sub(user.rewardDebt);\r\n        else return 0;\r\n    }\r\n\r\n    function myValue() public view returns (uint256) {\r\n        UserInfo storage user = userInfo[msg.sender];\r\n        if (user.shares == 0) return 0;\r\n        return\r\n            decimalMul(user.amount, this.computePer())\r\n                .sub(user.rewardDebt)\r\n                .add(user.rewards)\r\n                .add(user.amount);\r\n    }\r\n\r\n    function sharesPrice() public view returns (uint256) {\r\n        if (totalShares == 0) return 0;\r\n        return totalShares.mul(this.computePer()).div(totalShares);\r\n    }\r\n\r\n    // function getTime()\r\n    function getTime() public view returns (uint256) {\r\n        return now;\r\n    }\r\n\r\n    function getDepositBalance() public view returns (uint256) {\r\n        return poker.balanceOf(address(this));\r\n    }\r\n\r\n    function getEther() public view returns (uint256) {\r\n        return 10**uint256(decimals);\r\n    }\r\n\r\n    //todo 当前是测试时间\r\n    function getStakingCoinPerSec() public view returns (uint256) {\r\n        uint256 sec = 24 * 3600;\r\n        uint256 curTime = getTime();\r\n        uint256 coin = 1;\r\n\r\n        if (stakingSwitch == false) {\r\n            //uint256 maxCoin = 122300;\r\n            coin = 12000000000000; //maxCoin.mul((10**uint256(decimals))).div(sec);\r\n            return coin;\r\n        }\r\n\r\n        // 24 * 3600 * 7 * 2\r\n        if (curTime < (stakingStartTime + 60 * 5)) {\r\n            uint256 maxCoin = 2800000;\r\n            coin = maxCoin.mul((10**uint256(decimals))).div(sec);\r\n        }\r\n        // 24 * 3600 * 7 * 4\r\n        else if (curTime < (stakingStartTime + 60 * 10)) {\r\n            uint256 maxCoin = 1400000;\r\n            coin = maxCoin.mul((10**uint256(decimals))).div(sec);\r\n        } else {\r\n            uint256 maxCoin = 122300;\r\n            coin = maxCoin.mul((10**uint256(decimals))).div(sec);\r\n        }\r\n        return coin;\r\n    }\r\n\r\n    function setStakingSwitch(bool flag) public {\r\n        if (msg.sender == owner) {\r\n            if (flag) {\r\n                stakingStartTime = getTime();\r\n            } else {\r\n                stakingStartTime = 0;\r\n            }\r\n            stakingSwitch = flag;\r\n        }\r\n    }\r\n}\r\n"
			},
			"_lib/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.6;\r\n\r\nimport \"./Context.sol\";\r\n\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() internal {\r\n        _owner = _msgSender();\r\n        emit OwnershipTransferred(address(0), _owner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(_msgSender() == _owner, \"not owner\");\r\n        _;\r\n    }\r\n    \r\n    function isOwner() public view returns (bool){\r\n        bool flag = _msgSender() == _owner;\r\n        require(flag==true,\"not owner\");\r\n        return flag;\r\n    }\r\n\r\n}\r\n"
			},
			"_lib/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.6;\r\n\r\nimport \"./SafeMath.sol\";\r\nimport \"./IERC20.sol\";\r\nimport \"./Context.sol\";\r\n\r\ncontract ERC20 is IERC20, Context {\r\n    using SafeMath for uint256;\r\n\r\n    mapping(address => uint256) internal _balances;\r\n    mapping(address => mapping(address => uint256)) internal _allowances;\r\n\r\n    uint256 internal _totalSupply;\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    string public name;\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    string public symbol;\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\r\n     * called.\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    uint8 public decimals;\r\n\r\n    /**\r\n     * @dev Sets the values for {_name} and {_symbol}, {_decimals}\r\n     *\r\n     * To select a different value for {decimals}, use {_setupDecimals}.\r\n     *\r\n     * All three of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor(\r\n        string memory _name,\r\n        string memory _symbol,\r\n        uint8 _decimals,\r\n        uint256 _supply\r\n    ) public {\r\n        name = _name;\r\n        symbol = _symbol;\r\n        decimals = _decimals;\r\n        _supply = _supply * 10**uint256(_decimals);\r\n        _totalSupply = _supply;\r\n        _balances[msg.sender] = _supply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() external view override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address _owner)\r\n        external\r\n        view\r\n        override\r\n        returns (uint256)\r\n    {\r\n        return _balances[_owner];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `_to` cannot be the zero address.\r\n     * - the caller must have a balance of at least `_amount`.\r\n     */\r\n    function transfer(address _to, uint256 _amount)\r\n        external\r\n        override\r\n        returns (bool)\r\n    {\r\n        _transfer(_msgSender(), _to, _amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address _owner, address _spender)\r\n        external\r\n        view\r\n        override\r\n        returns (uint256)\r\n    {\r\n        return _allowances[_owner][_spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `_spender` cannot be the zero address.\r\n     */\r\n    function approve(address _spender, uint256 _amount)\r\n        external\r\n        override\r\n        returns (bool)\r\n    {\r\n        _approve(_msgSender(), _spender, _amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {ERC20}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `_from` and `_to` cannot be the zero address.\r\n     * - `_from` must have a balance of at least `_amount`.\r\n     * - the caller must have allowance for `_from`'s tokens of at least\r\n     * `_amount`.\r\n     */\r\n    function transferFrom(\r\n        address _from,\r\n        address _to,\r\n        uint256 _amount\r\n    ) external override returns (bool) {\r\n        require(_from != address(0) && _to != address(0));\r\n\r\n        _approve(\r\n            _from,\r\n            _msgSender(),\r\n            _allowances[_from][_msgSender()].sub(_amount)\r\n        );\r\n        _transfer(_from, _to, _amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves tokens `_amount` from `_from` to `_to`.\r\n     *\r\n     * This is internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `_from` cannot be the zero address.\r\n     * - `_to` cannot be the zero address.\r\n     * - `_from` must have a balance of at least `_amount`.\r\n     */\r\n    function _transfer(\r\n        address _from,\r\n        address _to,\r\n        uint256 _amount\r\n    ) internal {\r\n        require(_from != address(0), \"transfer from 0\");\r\n        require(_to != address(0), \"transfer to 0\");\r\n        require(_to != address(0xdead), \"transfer to 0xdead\");\r\n\r\n        _balances[_from] = _balances[_from].sub(_amount);\r\n        _balances[_to] = _balances[_to].add(_amount);\r\n        emit Transfer(_from, _to, _amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `_spender` over the `_owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `_owner` cannot be the zero address.\r\n     * - `_spender` cannot be the zero address.\r\n     */\r\n    function _approve(\r\n        address _owner,\r\n        address _spender,\r\n        uint256 _amount\r\n    ) internal {\r\n        require(_owner != address(0), \"approve from 0\");\r\n        require(_spender != address(0), \"approve to 0\");\r\n\r\n        _allowances[_owner][_spender] = _amount;\r\n        emit Approval(_owner, _spender, _amount);\r\n    }\r\n\r\n    /** @dev Creates `_amount` tokens and assigns them to `_to`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     */\r\n    function _mint(address _to, uint256 _amount) internal {\r\n        require(_to != address(0), \"mint to 0\");\r\n\r\n        _totalSupply = _totalSupply.add(_amount);\r\n        _balances[_to] = _balances[_to].add(_amount);\r\n        emit Transfer(address(0), _to, _amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `_amount` tokens from `_from`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `_from` cannot be the zero address.\r\n     * - `_from` must have at least `_amount` tokens.\r\n     */\r\n    function _burn(address _from, uint256 _amount) internal {\r\n        require(_from != address(0), \"burn from 0\");\r\n        require(_from != address(0xdead), \"burn from 0xdead\");\r\n\r\n        _balances[_from] = _balances[_from].sub(_amount);\r\n        _totalSupply = _totalSupply.sub(_amount);\r\n        emit Transfer(_from, address(0xdead), _amount);\r\n    }\r\n}\r\n"
			},
			"_lib/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.6;\r\n\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a, \"SafeMath: subtraction overflow\");\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Solidity only automatically asserts when dividing by 0\r\n        require(b > 0, \"SafeMath: division by zero\");\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b != 0, \"SafeMath: modulo by zero\");\r\n        return a % b;\r\n    }\r\n}\r\n\r\nlibrary SafeMathExt {\r\n    function add128(uint128 a, uint128 b) internal pure returns (uint128) {\r\n        uint128 c = a + b;\r\n        require(c >= a, \"uint128: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    function sub128(uint128 a, uint128 b) internal pure returns (uint128) {\r\n        require(b <= a, \"uint128: subtraction overflow\");\r\n        uint128 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    function add64(uint64 a, uint64 b) internal pure returns (uint64) {\r\n        uint64 c = a + b;\r\n        require(c >= a, \"uint64: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    function sub64(uint64 a, uint64 b) internal pure returns (uint64) {\r\n        require(b <= a, \"uint64: subtraction overflow\");\r\n        uint64 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    function safe128(uint256 a) internal pure returns (uint128) {\r\n        require(\r\n            a < 0x0100000000000000000000000000000000,\r\n            \"uint128: number overflow\"\r\n        );\r\n        return uint128(a);\r\n    }\r\n\r\n    function safe64(uint256 a) internal pure returns (uint64) {\r\n        require(a < 0x010000000000000000, \"uint64: number overflow\");\r\n        return uint64(a);\r\n    }\r\n\r\n    function safe32(uint256 a) internal pure returns (uint32) {\r\n        require(a < 0x0100000000, \"uint32: number overflow\");\r\n        return uint32(a);\r\n    }\r\n\r\n    function safe16(uint256 a) internal pure returns (uint16) {\r\n        require(a < 0x010000, \"uint32: number overflow\");\r\n        return uint16(a);\r\n    }\r\n}\r\n\r\nlibrary Math {\r\n    /**\r\n     * @dev Returns the largest of two numbers.\r\n     */\r\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a >= b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two numbers.\r\n     */\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two numbers. The result is rounded towards\r\n     * zero.\r\n     */\r\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // (a + b) / 2 can overflow, so we distribute\r\n        return (a / 2) + (b / 2) + (((a % 2) + (b % 2)) / 2);\r\n    }\r\n}\r\n"
			},
			"_lib/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.6;\r\n\r\n/*\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with GSN meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address payable) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes memory) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}"
			},
			"_lib/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.6;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n * From https://github.com/OpenZeppelin/openzeppelin-contracts\r\n */\r\ninterface IERC20 {\r\n  /**\r\n   * @dev Returns the amount of tokens in existence.\r\n   */\r\n  function totalSupply() external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Returns the amount of tokens owned by `account`.\r\n   */\r\n  function balanceOf(address account) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n  function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Returns the remaining number of tokens that `spender` will be\r\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n   * zero by default.\r\n   *\r\n   * This value changes when {approve} or {transferFrom} are called.\r\n   */\r\n  function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n   * that someone may use both the old and the new allowance by unfortunate\r\n   * transaction ordering. One possible solution to mitigate this race\r\n   * condition is to first reduce the spender's allowance to 0 and set the\r\n   * desired value afterwards:\r\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n   *\r\n   * Emits an {Approval} event.\r\n   */\r\n  function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n   * allowance mechanism. `amount` is then deducted from the caller's\r\n   * allowance.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n  function transferFrom(\r\n    address sender,\r\n    address recipient,\r\n    uint256 amount\r\n  ) external returns (bool);\r\n\r\n  /**\r\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n   * another (`to`).\r\n   *\r\n   * Note that `value` may be zero.\r\n   */\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n  /**\r\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n   * a call to {approve}. `value` is the new allowance.\r\n   */\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Staking/Staking.sol": {
				"IBurnCoin": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(uint256)": "42966c68"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Staking/Staking.sol\":\"IBurnCoin\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Staking/Staking.sol\":{\"keccak256\":\"0x069b9f42444cbe927fcae269b07d2479e3cd57e943252efa2ff01c18a0ce543f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d29e37f1c2157422a71845ca7deea9044fa2d5372f9bbeac92b591503b32747b\",\"dweb:/ipfs/QmS4qDq7LmJX1JBfT7A3Ba4bPmEdtAzR1rDoFmAXMNWKCe\"]},\"_lib/Context.sol\":{\"keccak256\":\"0x77ec8b534124690b04754bc03aaa982479b91b9f7508bed54455c161e93a02e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf08de24c3951531b87b85a75157d4b26ddcb8952452672f9da9f63c06982e9f\",\"dweb:/ipfs/QmaUzytpjpYHNTXw3Hy4cdKmNoU5PWpyMZBhorK69pk8sA\"]},\"_lib/ERC20.sol\":{\"keccak256\":\"0x2ce16e09e444519aec6a0e1f355325dfe2af844ea539ae8f8a7d53a2daf6d844\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb89e49b22ff4dd4d67fe590e95ce997d8a5a83db5ca8a246086dd4a56f01a72\",\"dweb:/ipfs/QmfZbMN1MNau96zL4xS1EtA9gVyNRWPwZCWwGVVeNG8uNF\"]},\"_lib/IERC20.sol\":{\"keccak256\":\"0x943e16fe1fdaa84c7329da3fa5aab8ce507ff7b6776a3925e97ffc0beef9692a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7727696ef766547aaa34152d06a443c5c8924fa363f47e51335d0e3d619c194\",\"dweb:/ipfs/QmRYgfYhpyjHaQjSJMG5fDdDGbQA9eXCGhuSRnwGfoSyCD\"]},\"_lib/Ownable.sol\":{\"keccak256\":\"0x9bb16a0785f0f888e4b470311e02af5bb72f0663d7be20eb7a60902e29e35406\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://014bf309648c0793be70899bc260d7094e17de223ed8eaebae9327643623cf93\",\"dweb:/ipfs/QmR4LhypLf6CVNvqxgDDAJ4E9E5h3wqV6RT8g7jERZdVLT\"]},\"_lib/SafeMath.sol\":{\"keccak256\":\"0xe1bb41b0568cdd4364bb5fcba4fd6065df59c3ea8147e040fb9c978bc3a89af5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e4192a8253ea1f04e97ac1ac3df25dc77719696b0bee70b3af1a4a56edcb5b\",\"dweb:/ipfs/QmaQ4TkRxpXxjtKKewy2oAgJXFbdqSwacBUMrNaSgZ72jt\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IPokerToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"mint(address,uint256)": "40c10f19",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Staking/Staking.sol\":\"IPokerToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Staking/Staking.sol\":{\"keccak256\":\"0x069b9f42444cbe927fcae269b07d2479e3cd57e943252efa2ff01c18a0ce543f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d29e37f1c2157422a71845ca7deea9044fa2d5372f9bbeac92b591503b32747b\",\"dweb:/ipfs/QmS4qDq7LmJX1JBfT7A3Ba4bPmEdtAzR1rDoFmAXMNWKCe\"]},\"_lib/Context.sol\":{\"keccak256\":\"0x77ec8b534124690b04754bc03aaa982479b91b9f7508bed54455c161e93a02e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf08de24c3951531b87b85a75157d4b26ddcb8952452672f9da9f63c06982e9f\",\"dweb:/ipfs/QmaUzytpjpYHNTXw3Hy4cdKmNoU5PWpyMZBhorK69pk8sA\"]},\"_lib/ERC20.sol\":{\"keccak256\":\"0x2ce16e09e444519aec6a0e1f355325dfe2af844ea539ae8f8a7d53a2daf6d844\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb89e49b22ff4dd4d67fe590e95ce997d8a5a83db5ca8a246086dd4a56f01a72\",\"dweb:/ipfs/QmfZbMN1MNau96zL4xS1EtA9gVyNRWPwZCWwGVVeNG8uNF\"]},\"_lib/IERC20.sol\":{\"keccak256\":\"0x943e16fe1fdaa84c7329da3fa5aab8ce507ff7b6776a3925e97ffc0beef9692a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7727696ef766547aaa34152d06a443c5c8924fa363f47e51335d0e3d619c194\",\"dweb:/ipfs/QmRYgfYhpyjHaQjSJMG5fDdDGbQA9eXCGhuSRnwGfoSyCD\"]},\"_lib/Ownable.sol\":{\"keccak256\":\"0x9bb16a0785f0f888e4b470311e02af5bb72f0663d7be20eb7a60902e29e35406\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://014bf309648c0793be70899bc260d7094e17de223ed8eaebae9327643623cf93\",\"dweb:/ipfs/QmR4LhypLf6CVNvqxgDDAJ4E9E5h3wqV6RT8g7jERZdVLT\"]},\"_lib/SafeMath.sol\":{\"keccak256\":\"0xe1bb41b0568cdd4364bb5fcba4fd6065df59c3ea8147e040fb9c978bc3a89af5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e4192a8253ea1f04e97ac1ac3df25dc77719696b0bee70b3af1a4a56edcb5b\",\"dweb:/ipfs/QmaQ4TkRxpXxjtKKewy2oAgJXFbdqSwacBUMrNaSgZ72jt\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Staking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IPokerToken",
									"name": "_poker",
									"type": "address"
								},
								{
									"internalType": "contract IBurnCoin",
									"name": "_burncoin",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lastDepositedTime",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "accPerShare",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "computePer",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDepositBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getEther",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getStakingCoinPerSec",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastUpdateTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "myBenefits",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "myValue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pendingCoin",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "flag",
									"type": "bool"
								}
							],
							"name": "setStakingSwitch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sharesPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingSwitch",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalDeposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalShares",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStakingAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "updatePool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastDepositedTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastUserActionTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardDebt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewards",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_shares",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawFeePeriod",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Staking/Staking.sol\":718:9243  contract Staking {\r... */\n  mstore(0x40, 0x80)\n    /* \"Staking/Staking.sol\":1290:1291  0 */\n  0x00\n    /* \"Staking/Staking.sol\":1261:1291  uint256 public accPerShare = 0 */\n  0x03\n  sstore\n    /* \"Staking/Staking.sol\":1327:1328  0 */\n  0x00\n    /* \"Staking/Staking.sol\":1298:1328  uint256 public totalShares = 0 */\n  0x04\n  sstore\n    /* \"Staking/Staking.sol\":1364:1365  0 */\n  0x00\n    /* \"Staking/Staking.sol\":1335:1365  uint256 public totalAmount = 0 */\n  0x05\n  sstore\n    /* \"Staking/Staking.sol\":1404:1405  0 */\n  0x00\n    /* \"Staking/Staking.sol\":1372:1405  uint256 public lastUpdateTime = 0 */\n  0x06\n  sstore\n    /* \"Staking/Staking.sol\":1441:1445  1000 */\n  0x03e8\n    /* \"Staking/Staking.sol\":1412:1445  uint256 public withdrawFee = 1000 */\n  0x07\n  sstore\n    /* \"Staking/Staking.sol\":1487:1493  7 days */\n  0x093a80\n    /* \"Staking/Staking.sol\":1452:1493  uint256 public withdrawFeePeriod = 7 days */\n  0x08\n  sstore\n    /* \"Staking/Staking.sol\":1611:1612  0 */\n  0x00\n    /* \"Staking/Staking.sol\":1577:1612  uint256 public stakingStartTime = 0 */\n  0x09\n  sstore\n    /* \"Staking/Staking.sol\":1647:1652  false */\n  0x00\n    /* \"Staking/Staking.sol\":1619:1652  bool public stakingSwitch = false */\n  0x0a\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Staking/Staking.sol\":1678:1680  18 */\n  0x12\n    /* \"Staking/Staking.sol\":1659:1680  uint256 decimals = 18 */\n  0x0b\n  sstore\n    /* \"Staking/Staking.sol\":853:1043  constructor(IPokerToken _poker, IBurnCoin _burncoin) public {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x40\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"Staking/Staking.sol\":932:938  _poker */\n  dup2\n    /* \"Staking/Staking.sol\":924:929  poker */\n  0x00\n  dup1\n    /* \"Staking/Staking.sol\":924:938  poker = _poker */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Staking/Staking.sol\":957:967  msg.sender */\n  caller\n    /* \"Staking/Staking.sol\":949:954  owner */\n  0x02\n  0x00\n    /* \"Staking/Staking.sol\":949:967  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Staking/Staking.sol\":995:1004  getTime() */\n  tag_5\n    /* \"Staking/Staking.sol\":995:1002  getTime */\n  shl(0x20, tag_6)\n    /* \"Staking/Staking.sol\":995:1004  getTime() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"Staking/Staking.sol\":978:992  lastUpdateTime */\n  0x06\n    /* \"Staking/Staking.sol\":978:1004  lastUpdateTime = getTime() */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Staking/Staking.sol\":1026:1035  _burncoin */\n  dup1\n    /* \"Staking/Staking.sol\":1015:1023  burnCoin */\n  0x01\n  0x00\n    /* \"Staking/Staking.sol\":1015:1035  burnCoin = _burncoin */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Staking/Staking.sol\":853:1043  constructor(IPokerToken _poker, IBurnCoin _burncoin) public {\r... */\n  pop\n  pop\n    /* \"Staking/Staking.sol\":718:9243  contract Staking {\r... */\n  jump(tag_7)\n    /* \"Staking/Staking.sol\":7671:7749  function getTime() public view returns (uint256) {\r... */\ntag_6:\n    /* \"Staking/Staking.sol\":7711:7718  uint256 */\n  0x00\n    /* \"Staking/Staking.sol\":7738:7741  now */\n  timestamp\n    /* \"Staking/Staking.sol\":7731:7741  return now */\n  swap1\n  pop\n    /* \"Staking/Staking.sol\":7671:7749  function getTime() public view returns (uint256) {\r... */\n  swap1\n  jump\t// out\n    /* \"Staking/Staking.sol\":718:9243  contract Staking {\r... */\ntag_7:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Staking/Staking.sol\":718:9243  contract Staking {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x936b6cec\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xde0ff7c5\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xe6fa445d\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xe6fa445d\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xe941fa78\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf6153ccd\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xfc3e532b\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0xde0ff7c5\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xdf10b4e6\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xe3161ddd\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x936b6cec\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xb6b55f25\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xb8a3b366\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xc8f33c91\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xd201114a\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd2890a01\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x557ed1ba\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x557ed1ba\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x6abfd183\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6e5b9634\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x77926869\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x81ad5718\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x0497de4a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1959a002\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1a39d8ef\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x3a98ef39\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x47f1aae7\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Staking/Staking.sol\":7757:7872  function getDepositBalance() public view returns (uint256) {\r... */\n    tag_3:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking/Staking.sol\":2056:2100  mapping(address => UserInfo) public userInfo */\n    tag_4:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_36\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      dup8\n      dup2\n      mstore\n      0x20\n      add\n      dup7\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking/Staking.sol\":1335:1365  uint256 public totalAmount = 0 */\n    tag_5:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking/Staking.sol\":3564:5398  function withdraw(uint256 _shares) public {\r... */\n    tag_6:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_41\n      jump\t// in\n    tag_39:\n      stop\n        /* \"Staking/Staking.sol\":1298:1328  uint256 public totalShares = 0 */\n    tag_7:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking/Staking.sol\":7121:7457  function myValue() public view returns (uint256) {\r... */\n    tag_8:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking/Staking.sol\":7671:7749  function getTime() public view returns (uint256) {\r... */\n    tag_9:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking/Staking.sol\":1577:1612  uint256 public stakingStartTime = 0 */\n    tag_10:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking/Staking.sol\":6600:6759  function computePer() external view returns (uint256) {\r... */\n    tag_11:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking/Staking.sol\":7465:7636  function sharesPrice() public view returns (uint256) {\r... */\n    tag_12:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking/Staking.sol\":8958:9240  function setStakingSwitch(bool flag) public {\r... */\n    tag_13:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      iszero\n      iszero\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_56\n      jump\t// in\n    tag_54:\n      stop\n        /* \"Staking/Staking.sol\":824:844  address public owner */\n    tag_14:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking/Staking.sol\":6767:7113  function myBenefits() public view returns (uint256) {\r... */\n    tag_15:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking/Staking.sol\":2334:3556  function deposit(uint256 _amount) public {\r... */\n    tag_16:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_63\n      jump\t// in\n    tag_61:\n      stop\n        /* \"Staking/Staking.sol\":8019:8950  function getStakingCoinPerSec() public view returns (uint256) {\r... */\n    tag_17:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking/Staking.sol\":1372:1405  uint256 public lastUpdateTime = 0 */\n    tag_18:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking/Staking.sol\":6353:6482  function totalStakingAmount() public view returns (uint256) {\r... */\n    tag_19:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking/Staking.sol\":1261:1291  uint256 public accPerShare = 0 */\n    tag_20:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking/Staking.sol\":7880:7977  function getEther() public view returns (uint256) {\r... */\n    tag_21:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking/Staking.sol\":1452:1493  uint256 public withdrawFeePeriod = 7 days */\n    tag_22:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking/Staking.sol\":5406:6023  function updatePool() public {\r... */\n    tag_23:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      stop\n        /* \"Staking/Staking.sol\":1619:1652  bool public stakingSwitch = false */\n    tag_24:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking/Staking.sol\":1412:1445  uint256 public withdrawFee = 1000 */\n    tag_25:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking/Staking.sol\":6490:6592  function totalDeposit() external view returns (uint256) {\r... */\n    tag_26:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking/Staking.sol\":6031:6345  function pendingCoin() external view returns (uint256) {\r... */\n    tag_27:\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking/Staking.sol\":7757:7872  function getDepositBalance() public view returns (uint256) {\r... */\n    tag_33:\n        /* \"Staking/Staking.sol\":7807:7814  uint256 */\n      0x00\n        /* \"Staking/Staking.sol\":7834:7839  poker */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking/Staking.sol\":7834:7849  poker.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Staking/Staking.sol\":7858:7862  this */\n      address\n        /* \"Staking/Staking.sol\":7834:7864  poker.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_89\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_89:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Staking/Staking.sol\":7827:7864  return poker.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"Staking/Staking.sol\":7757:7872  function getDepositBalance() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"Staking/Staking.sol\":2056:2100  mapping(address => UserInfo) public userInfo */\n    tag_36:\n      mstore(0x20, 0x0c)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      dup1\n      0x05\n      add\n      sload\n      swap1\n      pop\n      dup7\n      jump\t// out\n        /* \"Staking/Staking.sol\":1335:1365  uint256 public totalAmount = 0 */\n    tag_38:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"Staking/Staking.sol\":3564:5398  function withdraw(uint256 _shares) public {\r... */\n    tag_41:\n        /* \"Staking/Staking.sol\":3617:3638  UserInfo storage user */\n      0x00\n        /* \"Staking/Staking.sol\":3641:3649  userInfo */\n      0x0c\n        /* \"Staking/Staking.sol\":3641:3661  userInfo[msg.sender] */\n      0x00\n        /* \"Staking/Staking.sol\":3650:3660  msg.sender */\n      caller\n        /* \"Staking/Staking.sol\":3641:3661  userInfo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking/Staking.sol\":3617:3661  UserInfo storage user = userInfo[msg.sender] */\n      swap1\n      pop\n        /* \"Staking/Staking.sol\":3690:3691  0 */\n      0x00\n        /* \"Staking/Staking.sol\":3680:3687  _shares */\n      dup3\n        /* \"Staking/Staking.sol\":3680:3691  _shares > 0 */\n      gt\n        /* \"Staking/Staking.sol\":3672:3715  require(_shares > 0, \"Nothing to withdraw\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x13\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4e6f7468696e6720746f20776974686472617700000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_92:\n        /* \"Staking/Staking.sol\":3745:3749  user */\n      dup1\n        /* \"Staking/Staking.sol\":3745:3756  user.shares */\n      0x00\n      add\n      sload\n        /* \"Staking/Staking.sol\":3734:3741  _shares */\n      dup3\n        /* \"Staking/Staking.sol\":3734:3756  _shares <= user.shares */\n      gt\n      iszero\n        /* \"Staking/Staking.sol\":3726:3792  require(_shares <= user.shares, \"Withdraw amount exceeds balance\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x576974686472617720616d6f756e7420657863656564732062616c616e636500\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"Staking/Staking.sol\":3805:3817  updatePool() */\n      tag_94\n        /* \"Staking/Staking.sol\":3805:3815  updatePool */\n      tag_77\n        /* \"Staking/Staking.sol\":3805:3817  updatePool() */\n      jump\t// in\n    tag_94:\n        /* \"Staking/Staking.sol\":3860:3883  uint256 userTotalAmount */\n      0x00\n        /* \"Staking/Staking.sol\":3886:3989  decimalMul(user.amount, accPerShare)\r... */\n      tag_95\n        /* \"Staking/Staking.sol\":3976:3980  user */\n      dup3\n        /* \"Staking/Staking.sol\":3976:3988  user.rewards */\n      0x04\n      add\n      sload\n        /* \"Staking/Staking.sol\":3886:3957  decimalMul(user.amount, accPerShare)\r... */\n      tag_96\n        /* \"Staking/Staking.sol\":3941:3945  user */\n      dup5\n        /* \"Staking/Staking.sol\":3941:3956  user.rewardDebt */\n      0x03\n      add\n      sload\n        /* \"Staking/Staking.sol\":3886:3922  decimalMul(user.amount, accPerShare) */\n      tag_97\n        /* \"Staking/Staking.sol\":3897:3901  user */\n      dup7\n        /* \"Staking/Staking.sol\":3897:3908  user.amount */\n      0x05\n      add\n      sload\n        /* \"Staking/Staking.sol\":3910:3921  accPerShare */\n      sload(0x03)\n        /* \"Staking/Staking.sol\":3886:3896  decimalMul */\n      tag_98\n        /* \"Staking/Staking.sol\":3886:3922  decimalMul(user.amount, accPerShare) */\n      jump\t// in\n    tag_97:\n        /* \"Staking/Staking.sol\":3886:3940  decimalMul(user.amount, accPerShare)\r... */\n      tag_99\n      swap1\n        /* \"Staking/Staking.sol\":3886:3957  decimalMul(user.amount, accPerShare)\r... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_96:\n        /* \"Staking/Staking.sol\":3886:3975  decimalMul(user.amount, accPerShare)\r... */\n      tag_100\n      swap1\n        /* \"Staking/Staking.sol\":3886:3989  decimalMul(user.amount, accPerShare)\r... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_95:\n        /* \"Staking/Staking.sol\":3860:3989  uint256 userTotalAmount = decimalMul(user.amount, accPerShare)\r... */\n      swap1\n      pop\n        /* \"Staking/Staking.sol\":4041:4063  uint256 withdrawAmount */\n      0x00\n        /* \"Staking/Staking.sol\":4066:4111  userTotalAmount.mul(_shares).div(user.shares) */\n      tag_101\n        /* \"Staking/Staking.sol\":4099:4103  user */\n      dup4\n        /* \"Staking/Staking.sol\":4099:4110  user.shares */\n      0x00\n      add\n      sload\n        /* \"Staking/Staking.sol\":4066:4094  userTotalAmount.mul(_shares) */\n      tag_102\n        /* \"Staking/Staking.sol\":4086:4093  _shares */\n      dup7\n        /* \"Staking/Staking.sol\":4066:4081  userTotalAmount */\n      dup6\n        /* \"Staking/Staking.sol\":4066:4085  userTotalAmount.mul */\n      tag_103\n      swap1\n        /* \"Staking/Staking.sol\":4066:4094  userTotalAmount.mul(_shares) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_102:\n        /* \"Staking/Staking.sol\":4066:4098  userTotalAmount.mul(_shares).div */\n      tag_104\n      swap1\n        /* \"Staking/Staking.sol\":4066:4111  userTotalAmount.mul(_shares).div(user.shares) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_101:\n        /* \"Staking/Staking.sol\":4041:4111  uint256 withdrawAmount = userTotalAmount.mul(_shares).div(user.shares) */\n      swap1\n      pop\n        /* \"Staking/Staking.sol\":4163:4181  uint256 userAmount */\n      0x00\n        /* \"Staking/Staking.sol\":4184:4225  user.amount.mul(_shares).div(user.shares) */\n      tag_105\n        /* \"Staking/Staking.sol\":4213:4217  user */\n      dup5\n        /* \"Staking/Staking.sol\":4213:4224  user.shares */\n      0x00\n      add\n      sload\n        /* \"Staking/Staking.sol\":4184:4208  user.amount.mul(_shares) */\n      tag_106\n        /* \"Staking/Staking.sol\":4200:4207  _shares */\n      dup8\n        /* \"Staking/Staking.sol\":4184:4188  user */\n      dup8\n        /* \"Staking/Staking.sol\":4184:4195  user.amount */\n      0x05\n      add\n      sload\n        /* \"Staking/Staking.sol\":4184:4199  user.amount.mul */\n      tag_103\n      swap1\n        /* \"Staking/Staking.sol\":4184:4208  user.amount.mul(_shares) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_106:\n        /* \"Staking/Staking.sol\":4184:4212  user.amount.mul(_shares).div */\n      tag_104\n      swap1\n        /* \"Staking/Staking.sol\":4184:4225  user.amount.mul(_shares).div(user.shares) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_105:\n        /* \"Staking/Staking.sol\":4163:4225  uint256 userAmount = user.amount.mul(_shares).div(user.shares) */\n      swap1\n      pop\n        /* \"Staking/Staking.sol\":4252:4276  user.shares.sub(_shares) */\n      tag_107\n        /* \"Staking/Staking.sol\":4268:4275  _shares */\n      dup6\n        /* \"Staking/Staking.sol\":4252:4256  user */\n      dup6\n        /* \"Staking/Staking.sol\":4252:4263  user.shares */\n      0x00\n      add\n      sload\n        /* \"Staking/Staking.sol\":4252:4267  user.shares.sub */\n      tag_99\n      swap1\n        /* \"Staking/Staking.sol\":4252:4276  user.shares.sub(_shares) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_107:\n        /* \"Staking/Staking.sol\":4238:4242  user */\n      dup5\n        /* \"Staking/Staking.sol\":4238:4249  user.shares */\n      0x00\n      add\n        /* \"Staking/Staking.sol\":4238:4276  user.shares = user.shares.sub(_shares) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking/Staking.sol\":4301:4325  totalShares.sub(_shares) */\n      tag_108\n        /* \"Staking/Staking.sol\":4317:4324  _shares */\n      dup6\n        /* \"Staking/Staking.sol\":4301:4312  totalShares */\n      sload(0x04)\n        /* \"Staking/Staking.sol\":4301:4316  totalShares.sub */\n      tag_99\n      swap1\n        /* \"Staking/Staking.sol\":4301:4325  totalShares.sub(_shares) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_108:\n        /* \"Staking/Staking.sol\":4287:4298  totalShares */\n      0x04\n        /* \"Staking/Staking.sol\":4287:4325  totalShares = totalShares.sub(_shares) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking/Staking.sol\":4375:4389  withdrawAmount */\n      dup2\n        /* \"Staking/Staking.sol\":4360:4371  totalAmount */\n      sload(0x05)\n        /* \"Staking/Staking.sol\":4360:4389  totalAmount >= withdrawAmount */\n      lt\n      iszero\n        /* \"Staking/Staking.sol\":4338:4448  require(\r... */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x576974686472617720616d6f756e7420657863656564732062616c616e636500\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"Staking/Staking.sol\":4506:4537  totalAmount.sub(withdrawAmount) */\n      tag_110\n        /* \"Staking/Staking.sol\":4522:4536  withdrawAmount */\n      dup3\n        /* \"Staking/Staking.sol\":4506:4517  totalAmount */\n      sload(0x05)\n        /* \"Staking/Staking.sol\":4506:4521  totalAmount.sub */\n      tag_99\n      swap1\n        /* \"Staking/Staking.sol\":4506:4537  totalAmount.sub(withdrawAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_110:\n        /* \"Staking/Staking.sol\":4492:4503  totalAmount */\n      0x05\n        /* \"Staking/Staking.sol\":4492:4537  totalAmount = totalAmount.sub(withdrawAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking/Staking.sol\":4589:4624  userTotalAmount.sub(withdrawAmount) */\n      tag_111\n        /* \"Staking/Staking.sol\":4609:4623  withdrawAmount */\n      dup3\n        /* \"Staking/Staking.sol\":4589:4604  userTotalAmount */\n      dup5\n        /* \"Staking/Staking.sol\":4589:4608  userTotalAmount.sub */\n      tag_99\n      swap1\n        /* \"Staking/Staking.sol\":4589:4624  userTotalAmount.sub(withdrawAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_111:\n        /* \"Staking/Staking.sol\":4574:4578  user */\n      dup5\n        /* \"Staking/Staking.sol\":4574:4586  user.rewards */\n      0x04\n      add\n        /* \"Staking/Staking.sol\":4574:4624  user.rewards = userTotalAmount.sub(withdrawAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking/Staking.sol\":4684:4714  withdrawAmount.add(userAmount) */\n      tag_112\n        /* \"Staking/Staking.sol\":4703:4713  userAmount */\n      dup2\n        /* \"Staking/Staking.sol\":4684:4698  withdrawAmount */\n      dup4\n        /* \"Staking/Staking.sol\":4684:4702  withdrawAmount.add */\n      tag_100\n      swap1\n        /* \"Staking/Staking.sol\":4684:4714  withdrawAmount.add(userAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_112:\n        /* \"Staking/Staking.sol\":4667:4714  withdrawAmount = withdrawAmount.add(userAmount) */\n      swap2\n      pop\n        /* \"Staking/Staking.sol\":4743:4788  user.lastDepositedTime.add(withdrawFeePeriod) */\n      tag_113\n        /* \"Staking/Staking.sol\":4770:4787  withdrawFeePeriod */\n      sload(0x08)\n        /* \"Staking/Staking.sol\":4743:4747  user */\n      dup6\n        /* \"Staking/Staking.sol\":4743:4765  user.lastDepositedTime */\n      0x01\n      add\n      sload\n        /* \"Staking/Staking.sol\":4743:4769  user.lastDepositedTime.add */\n      tag_100\n      swap1\n        /* \"Staking/Staking.sol\":4743:4788  user.lastDepositedTime.add(withdrawFeePeriod) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_113:\n        /* \"Staking/Staking.sol\":4731:4740  getTime() */\n      tag_114\n        /* \"Staking/Staking.sol\":4731:4738  getTime */\n      tag_47\n        /* \"Staking/Staking.sol\":4731:4740  getTime() */\n      jump\t// in\n    tag_114:\n        /* \"Staking/Staking.sol\":4731:4788  getTime() < user.lastDepositedTime.add(withdrawFeePeriod) */\n      lt\n        /* \"Staking/Staking.sol\":4727:5066  if (getTime() < user.lastDepositedTime.add(withdrawFeePeriod)) {\r... */\n      iszero\n      tag_115\n      jumpi\n        /* \"Staking/Staking.sol\":4805:4831  uint256 currentWithdrawFee */\n      0x00\n        /* \"Staking/Staking.sol\":4834:4868  withdrawAmount.mul(100).div(10000) */\n      tag_116\n        /* \"Staking/Staking.sol\":4862:4867  10000 */\n      0x2710\n        /* \"Staking/Staking.sol\":4834:4857  withdrawAmount.mul(100) */\n      tag_117\n        /* \"Staking/Staking.sol\":4853:4856  100 */\n      0x64\n        /* \"Staking/Staking.sol\":4834:4848  withdrawAmount */\n      dup7\n        /* \"Staking/Staking.sol\":4834:4852  withdrawAmount.mul */\n      tag_103\n      swap1\n        /* \"Staking/Staking.sol\":4834:4857  withdrawAmount.mul(100) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_117:\n        /* \"Staking/Staking.sol\":4834:4861  withdrawAmount.mul(100).div */\n      tag_104\n      swap1\n        /* \"Staking/Staking.sol\":4834:4868  withdrawAmount.mul(100).div(10000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_116:\n        /* \"Staking/Staking.sol\":4805:4868  uint256 currentWithdrawFee = withdrawAmount.mul(100).div(10000) */\n      swap1\n      pop\n        /* \"Staking/Staking.sol\":4900:4938  withdrawAmount.sub(currentWithdrawFee) */\n      tag_118\n        /* \"Staking/Staking.sol\":4919:4937  currentWithdrawFee */\n      dup2\n        /* \"Staking/Staking.sol\":4900:4914  withdrawAmount */\n      dup5\n        /* \"Staking/Staking.sol\":4900:4918  withdrawAmount.sub */\n      tag_99\n      swap1\n        /* \"Staking/Staking.sol\":4900:4938  withdrawAmount.sub(currentWithdrawFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_118:\n        /* \"Staking/Staking.sol\":4883:4938  withdrawAmount = withdrawAmount.sub(currentWithdrawFee) */\n      swap3\n      pop\n        /* \"Staking/Staking.sol\":4953:4958  poker */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking/Staking.sol\":4953:4967  poker.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"Staking/Staking.sol\":4976:4984  burnCoin */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking/Staking.sol\":4987:5005  currentWithdrawFee */\n      dup4\n        /* \"Staking/Staking.sol\":4953:5006  poker.transfer(address(burnCoin), currentWithdrawFee) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_121\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_121:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_122\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_122:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      pop\n        /* \"Staking/Staking.sol\":5021:5029  burnCoin */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking/Staking.sol\":5021:5034  burnCoin.burn */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42966c68\n        /* \"Staking/Staking.sol\":5035:5053  currentWithdrawFee */\n      dup3\n        /* \"Staking/Staking.sol\":5021:5054  burnCoin.burn(currentWithdrawFee) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_125\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_125:\n      pop\n      pop\n      pop\n      pop\n        /* \"Staking/Staking.sol\":4727:5066  if (getTime() < user.lastDepositedTime.add(withdrawFeePeriod)) {\r... */\n      pop\n    tag_115:\n        /* \"Staking/Staking.sol\":5078:5083  poker */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking/Staking.sol\":5078:5092  poker.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"Staking/Staking.sol\":5093:5103  msg.sender */\n      caller\n        /* \"Staking/Staking.sol\":5105:5119  withdrawAmount */\n      dup5\n        /* \"Staking/Staking.sol\":5078:5120  poker.transfer(msg.sender, withdrawAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_128\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_128:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_129\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_129:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      pop\n        /* \"Staking/Staking.sol\":5145:5172  user.amount.sub(userAmount) */\n      tag_130\n        /* \"Staking/Staking.sol\":5161:5171  userAmount */\n      dup2\n        /* \"Staking/Staking.sol\":5145:5149  user */\n      dup6\n        /* \"Staking/Staking.sol\":5145:5156  user.amount */\n      0x05\n      add\n      sload\n        /* \"Staking/Staking.sol\":5145:5160  user.amount.sub */\n      tag_99\n      swap1\n        /* \"Staking/Staking.sol\":5145:5172  user.amount.sub(userAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_130:\n        /* \"Staking/Staking.sol\":5131:5135  user */\n      dup5\n        /* \"Staking/Staking.sol\":5131:5142  user.amount */\n      0x05\n      add\n        /* \"Staking/Staking.sol\":5131:5172  user.amount = user.amount.sub(userAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking/Staking.sol\":5203:5204  0 */\n      0x00\n        /* \"Staking/Staking.sol\":5189:5193  user */\n      dup5\n        /* \"Staking/Staking.sol\":5189:5200  user.shares */\n      0x00\n      add\n      sload\n        /* \"Staking/Staking.sol\":5189:5204  user.shares > 0 */\n      gt\n        /* \"Staking/Staking.sol\":5185:5273  if (user.shares > 0)\r... */\n      iszero\n      tag_131\n      jumpi\n        /* \"Staking/Staking.sol\":5237:5273  decimalMul(user.amount, accPerShare) */\n      tag_132\n        /* \"Staking/Staking.sol\":5248:5252  user */\n      dup5\n        /* \"Staking/Staking.sol\":5248:5259  user.amount */\n      0x05\n      add\n      sload\n        /* \"Staking/Staking.sol\":5261:5272  accPerShare */\n      sload(0x03)\n        /* \"Staking/Staking.sol\":5237:5247  decimalMul */\n      tag_98\n        /* \"Staking/Staking.sol\":5237:5273  decimalMul(user.amount, accPerShare) */\n      jump\t// in\n    tag_132:\n        /* \"Staking/Staking.sol\":5219:5223  user */\n      dup5\n        /* \"Staking/Staking.sol\":5219:5234  user.rewardDebt */\n      0x03\n      add\n        /* \"Staking/Staking.sol\":5219:5273  user.rewardDebt = decimalMul(user.amount, accPerShare) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking/Staking.sol\":5185:5273  if (user.shares > 0)\r... */\n    tag_131:\n        /* \"Staking/Staking.sol\":5312:5327  block.timestamp */\n      timestamp\n        /* \"Staking/Staking.sol\":5286:5290  user */\n      dup5\n        /* \"Staking/Staking.sol\":5286:5309  user.lastUserActionTime */\n      0x02\n      add\n        /* \"Staking/Staking.sol\":5286:5327  user.lastUserActionTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking/Staking.sol\":5354:5364  msg.sender */\n      caller\n        /* \"Staking/Staking.sol\":5345:5390  Withdraw(msg.sender, withdrawAmount, _shares) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n        /* \"Staking/Staking.sol\":5366:5380  withdrawAmount */\n      dup4\n        /* \"Staking/Staking.sol\":5382:5389  _shares */\n      dup8\n        /* \"Staking/Staking.sol\":5345:5390  Withdraw(msg.sender, withdrawAmount, _shares) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Staking/Staking.sol\":3564:5398  function withdraw(uint256 _shares) public {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Staking/Staking.sol\":1298:1328  uint256 public totalShares = 0 */\n    tag_43:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"Staking/Staking.sol\":7121:7457  function myValue() public view returns (uint256) {\r... */\n    tag_45:\n        /* \"Staking/Staking.sol\":7161:7168  uint256 */\n      0x00\n        /* \"Staking/Staking.sol\":7181:7202  UserInfo storage user */\n      dup1\n        /* \"Staking/Staking.sol\":7205:7213  userInfo */\n      0x0c\n        /* \"Staking/Staking.sol\":7205:7225  userInfo[msg.sender] */\n      0x00\n        /* \"Staking/Staking.sol\":7214:7224  msg.sender */\n      caller\n        /* \"Staking/Staking.sol\":7205:7225  userInfo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking/Staking.sol\":7181:7225  UserInfo storage user = userInfo[msg.sender] */\n      swap1\n      pop\n        /* \"Staking/Staking.sol\":7255:7256  0 */\n      0x00\n        /* \"Staking/Staking.sol\":7240:7244  user */\n      dup2\n        /* \"Staking/Staking.sol\":7240:7251  user.shares */\n      0x00\n      add\n      sload\n        /* \"Staking/Staking.sol\":7240:7256  user.shares == 0 */\n      eq\n        /* \"Staking/Staking.sol\":7236:7266  if (user.shares == 0) return 0 */\n      iszero\n      tag_134\n      jumpi\n        /* \"Staking/Staking.sol\":7265:7266  0 */\n      0x00\n        /* \"Staking/Staking.sol\":7258:7266  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_133)\n        /* \"Staking/Staking.sol\":7236:7266  if (user.shares == 0) return 0 */\n    tag_134:\n        /* \"Staking/Staking.sol\":7297:7449  decimalMul(user.amount, this.computePer())\r... */\n      tag_135\n        /* \"Staking/Staking.sol\":7437:7441  user */\n      dup2\n        /* \"Staking/Staking.sol\":7437:7448  user.amount */\n      0x05\n      add\n      sload\n        /* \"Staking/Staking.sol\":7297:7414  decimalMul(user.amount, this.computePer())\r... */\n      tag_136\n        /* \"Staking/Staking.sol\":7401:7405  user */\n      dup4\n        /* \"Staking/Staking.sol\":7401:7413  user.rewards */\n      0x04\n      add\n      sload\n        /* \"Staking/Staking.sol\":7297:7378  decimalMul(user.amount, this.computePer())\r... */\n      tag_137\n        /* \"Staking/Staking.sol\":7362:7366  user */\n      dup6\n        /* \"Staking/Staking.sol\":7362:7377  user.rewardDebt */\n      0x03\n      add\n      sload\n        /* \"Staking/Staking.sol\":7297:7339  decimalMul(user.amount, this.computePer()) */\n      tag_138\n        /* \"Staking/Staking.sol\":7308:7312  user */\n      dup8\n        /* \"Staking/Staking.sol\":7308:7319  user.amount */\n      0x05\n      add\n      sload\n        /* \"Staking/Staking.sol\":7321:7325  this */\n      address\n        /* \"Staking/Staking.sol\":7321:7336  this.computePer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6e5b9634\n        /* \"Staking/Staking.sol\":7321:7338  this.computePer() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_139\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_139:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_141\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_141:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_142\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_142:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Staking/Staking.sol\":7297:7307  decimalMul */\n      tag_98\n        /* \"Staking/Staking.sol\":7297:7339  decimalMul(user.amount, this.computePer()) */\n      jump\t// in\n    tag_138:\n        /* \"Staking/Staking.sol\":7297:7361  decimalMul(user.amount, this.computePer())\r... */\n      tag_99\n      swap1\n        /* \"Staking/Staking.sol\":7297:7378  decimalMul(user.amount, this.computePer())\r... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_137:\n        /* \"Staking/Staking.sol\":7297:7400  decimalMul(user.amount, this.computePer())\r... */\n      tag_100\n      swap1\n        /* \"Staking/Staking.sol\":7297:7414  decimalMul(user.amount, this.computePer())\r... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_136:\n        /* \"Staking/Staking.sol\":7297:7436  decimalMul(user.amount, this.computePer())\r... */\n      tag_100\n      swap1\n        /* \"Staking/Staking.sol\":7297:7449  decimalMul(user.amount, this.computePer())\r... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_135:\n        /* \"Staking/Staking.sol\":7277:7449  return\r... */\n      swap2\n      pop\n      pop\n        /* \"Staking/Staking.sol\":7121:7457  function myValue() public view returns (uint256) {\r... */\n    tag_133:\n      swap1\n      jump\t// out\n        /* \"Staking/Staking.sol\":7671:7749  function getTime() public view returns (uint256) {\r... */\n    tag_47:\n        /* \"Staking/Staking.sol\":7711:7718  uint256 */\n      0x00\n        /* \"Staking/Staking.sol\":7738:7741  now */\n      timestamp\n        /* \"Staking/Staking.sol\":7731:7741  return now */\n      swap1\n      pop\n        /* \"Staking/Staking.sol\":7671:7749  function getTime() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"Staking/Staking.sol\":1577:1612  uint256 public stakingStartTime = 0 */\n    tag_49:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"Staking/Staking.sol\":6600:6759  function computePer() external view returns (uint256) {\r... */\n    tag_51:\n        /* \"Staking/Staking.sol\":6645:6652  uint256 */\n      0x00\n        /* \"Staking/Staking.sol\":6685:6751  accPerShare.add(divFloor(this.pendingCoin(), this.totalDeposit())) */\n      tag_145\n        /* \"Staking/Staking.sol\":6701:6750  divFloor(this.pendingCoin(), this.totalDeposit()) */\n      tag_146\n        /* \"Staking/Staking.sol\":6710:6714  this */\n      address\n        /* \"Staking/Staking.sol\":6710:6726  this.pendingCoin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfc3e532b\n        /* \"Staking/Staking.sol\":6710:6728  this.pendingCoin() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_147\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_147:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_149\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_149:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_150\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_150:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Staking/Staking.sol\":6730:6734  this */\n      address\n        /* \"Staking/Staking.sol\":6730:6747  this.totalDeposit */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf6153ccd\n        /* \"Staking/Staking.sol\":6730:6749  this.totalDeposit() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_151\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_151:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_153\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_153:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_154\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_154:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Staking/Staking.sol\":6701:6709  divFloor */\n      tag_155\n        /* \"Staking/Staking.sol\":6701:6750  divFloor(this.pendingCoin(), this.totalDeposit()) */\n      jump\t// in\n    tag_146:\n        /* \"Staking/Staking.sol\":6685:6696  accPerShare */\n      sload(0x03)\n        /* \"Staking/Staking.sol\":6685:6700  accPerShare.add */\n      tag_100\n      swap1\n        /* \"Staking/Staking.sol\":6685:6751  accPerShare.add(divFloor(this.pendingCoin(), this.totalDeposit())) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_145:\n        /* \"Staking/Staking.sol\":6665:6751  return\r... */\n      swap1\n      pop\n        /* \"Staking/Staking.sol\":6600:6759  function computePer() external view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"Staking/Staking.sol\":7465:7636  function sharesPrice() public view returns (uint256) {\r... */\n    tag_53:\n        /* \"Staking/Staking.sol\":7509:7516  uint256 */\n      0x00\n        /* \"Staking/Staking.sol\":7548:7549  0 */\n      dup1\n        /* \"Staking/Staking.sol\":7533:7544  totalShares */\n      sload(0x04)\n        /* \"Staking/Staking.sol\":7533:7549  totalShares == 0 */\n      eq\n        /* \"Staking/Staking.sol\":7529:7559  if (totalShares == 0) return 0 */\n      iszero\n      tag_157\n      jumpi\n        /* \"Staking/Staking.sol\":7558:7559  0 */\n      0x00\n        /* \"Staking/Staking.sol\":7551:7559  return 0 */\n      swap1\n      pop\n      jump(tag_156)\n        /* \"Staking/Staking.sol\":7529:7559  if (totalShares == 0) return 0 */\n    tag_157:\n        /* \"Staking/Staking.sol\":7577:7628  totalShares.mul(this.computePer()).div(totalShares) */\n      tag_158\n        /* \"Staking/Staking.sol\":7616:7627  totalShares */\n      sload(0x04)\n        /* \"Staking/Staking.sol\":7577:7611  totalShares.mul(this.computePer()) */\n      tag_159\n        /* \"Staking/Staking.sol\":7593:7597  this */\n      address\n        /* \"Staking/Staking.sol\":7593:7608  this.computePer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6e5b9634\n        /* \"Staking/Staking.sol\":7593:7610  this.computePer() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_160\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_160:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_162\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_162:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_163\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_163:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Staking/Staking.sol\":7577:7588  totalShares */\n      sload(0x04)\n        /* \"Staking/Staking.sol\":7577:7592  totalShares.mul */\n      tag_103\n      swap1\n        /* \"Staking/Staking.sol\":7577:7611  totalShares.mul(this.computePer()) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_159:\n        /* \"Staking/Staking.sol\":7577:7615  totalShares.mul(this.computePer()).div */\n      tag_104\n      swap1\n        /* \"Staking/Staking.sol\":7577:7628  totalShares.mul(this.computePer()).div(totalShares) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_158:\n        /* \"Staking/Staking.sol\":7570:7628  return totalShares.mul(this.computePer()).div(totalShares) */\n      swap1\n      pop\n        /* \"Staking/Staking.sol\":7465:7636  function sharesPrice() public view returns (uint256) {\r... */\n    tag_156:\n      swap1\n      jump\t// out\n        /* \"Staking/Staking.sol\":8958:9240  function setStakingSwitch(bool flag) public {\r... */\n    tag_56:\n        /* \"Staking/Staking.sol\":9031:9036  owner */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking/Staking.sol\":9017:9036  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking/Staking.sol\":9017:9027  msg.sender */\n      caller\n        /* \"Staking/Staking.sol\":9017:9036  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Staking/Staking.sol\":9013:9233  if (msg.sender == owner) {\r... */\n      iszero\n      tag_165\n      jumpi\n        /* \"Staking/Staking.sol\":9057:9061  flag */\n      dup1\n        /* \"Staking/Staking.sol\":9053:9187  if (flag) {\r... */\n      iszero\n      tag_166\n      jumpi\n        /* \"Staking/Staking.sol\":9101:9110  getTime() */\n      tag_167\n        /* \"Staking/Staking.sol\":9101:9108  getTime */\n      tag_47\n        /* \"Staking/Staking.sol\":9101:9110  getTime() */\n      jump\t// in\n    tag_167:\n        /* \"Staking/Staking.sol\":9082:9098  stakingStartTime */\n      0x09\n        /* \"Staking/Staking.sol\":9082:9110  stakingStartTime = getTime() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking/Staking.sol\":9053:9187  if (flag) {\r... */\n      jump(tag_168)\n    tag_166:\n        /* \"Staking/Staking.sol\":9170:9171  0 */\n      0x00\n        /* \"Staking/Staking.sol\":9151:9167  stakingStartTime */\n      0x09\n        /* \"Staking/Staking.sol\":9151:9171  stakingStartTime = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking/Staking.sol\":9053:9187  if (flag) {\r... */\n    tag_168:\n        /* \"Staking/Staking.sol\":9217:9221  flag */\n      dup1\n        /* \"Staking/Staking.sol\":9201:9214  stakingSwitch */\n      0x0a\n      0x00\n        /* \"Staking/Staking.sol\":9201:9221  stakingSwitch = flag */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Staking/Staking.sol\":9013:9233  if (msg.sender == owner) {\r... */\n    tag_165:\n        /* \"Staking/Staking.sol\":8958:9240  function setStakingSwitch(bool flag) public {\r... */\n      pop\n      jump\t// out\n        /* \"Staking/Staking.sol\":824:844  address public owner */\n    tag_58:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Staking/Staking.sol\":6767:7113  function myBenefits() public view returns (uint256) {\r... */\n    tag_60:\n        /* \"Staking/Staking.sol\":6810:6817  uint256 */\n      0x00\n        /* \"Staking/Staking.sol\":6830:6851  UserInfo storage user */\n      dup1\n        /* \"Staking/Staking.sol\":6854:6862  userInfo */\n      0x0c\n        /* \"Staking/Staking.sol\":6854:6874  userInfo[msg.sender] */\n      0x00\n        /* \"Staking/Staking.sol\":6863:6873  msg.sender */\n      caller\n        /* \"Staking/Staking.sol\":6854:6874  userInfo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking/Staking.sol\":6830:6874  UserInfo storage user = userInfo[msg.sender] */\n      swap1\n      pop\n        /* \"Staking/Staking.sol\":6904:6905  0 */\n      0x00\n        /* \"Staking/Staking.sol\":6889:6893  user */\n      dup2\n        /* \"Staking/Staking.sol\":6889:6900  user.shares */\n      0x00\n      add\n      sload\n        /* \"Staking/Staking.sol\":6889:6905  user.shares == 0 */\n      eq\n        /* \"Staking/Staking.sol\":6885:6942  if (user.shares == 0) {\r... */\n      iszero\n      tag_170\n      jumpi\n        /* \"Staking/Staking.sol\":6929:6930  0 */\n      0x00\n        /* \"Staking/Staking.sol\":6922:6930  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_169)\n        /* \"Staking/Staking.sol\":6885:6942  if (user.shares == 0) {\r... */\n    tag_170:\n        /* \"Staking/Staking.sol\":6954:6965  uint256 ben */\n      0x00\n        /* \"Staking/Staking.sol\":6968:7010  decimalMul(user.amount, this.computePer()) */\n      tag_171\n        /* \"Staking/Staking.sol\":6979:6983  user */\n      dup3\n        /* \"Staking/Staking.sol\":6979:6990  user.amount */\n      0x05\n      add\n      sload\n        /* \"Staking/Staking.sol\":6992:6996  this */\n      address\n        /* \"Staking/Staking.sol\":6992:7007  this.computePer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6e5b9634\n        /* \"Staking/Staking.sol\":6992:7009  this.computePer() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_172\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_172:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_174\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_174:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_175\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_175:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Staking/Staking.sol\":6968:6978  decimalMul */\n      tag_98\n        /* \"Staking/Staking.sol\":6968:7010  decimalMul(user.amount, this.computePer()) */\n      jump\t// in\n    tag_171:\n        /* \"Staking/Staking.sol\":6954:7010  uint256 ben = decimalMul(user.amount, this.computePer()) */\n      swap1\n      pop\n        /* \"Staking/Staking.sol\":7033:7037  user */\n      dup2\n        /* \"Staking/Staking.sol\":7033:7048  user.rewardDebt */\n      0x03\n      add\n      sload\n        /* \"Staking/Staking.sol\":7027:7030  ben */\n      dup2\n        /* \"Staking/Staking.sol\":7027:7048  ben > user.rewardDebt */\n      gt\n        /* \"Staking/Staking.sol\":7023:7105  if (ben > user.rewardDebt) return ben.sub(user.rewardDebt);\r... */\n      iszero\n      tag_176\n      jumpi\n        /* \"Staking/Staking.sol\":7057:7081  ben.sub(user.rewardDebt) */\n      tag_177\n        /* \"Staking/Staking.sol\":7065:7069  user */\n      dup3\n        /* \"Staking/Staking.sol\":7065:7080  user.rewardDebt */\n      0x03\n      add\n      sload\n        /* \"Staking/Staking.sol\":7057:7060  ben */\n      dup3\n        /* \"Staking/Staking.sol\":7057:7064  ben.sub */\n      tag_99\n      swap1\n        /* \"Staking/Staking.sol\":7057:7081  ben.sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_177:\n        /* \"Staking/Staking.sol\":7050:7081  return ben.sub(user.rewardDebt) */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_169)\n        /* \"Staking/Staking.sol\":7023:7105  if (ben > user.rewardDebt) return ben.sub(user.rewardDebt);\r... */\n    tag_176:\n        /* \"Staking/Staking.sol\":7104:7105  0 */\n      0x00\n        /* \"Staking/Staking.sol\":7097:7105  return 0 */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Staking/Staking.sol\":6767:7113  function myBenefits() public view returns (uint256) {\r... */\n    tag_169:\n      swap1\n      jump\t// out\n        /* \"Staking/Staking.sol\":2334:3556  function deposit(uint256 _amount) public {\r... */\n    tag_63:\n        /* \"Staking/Staking.sol\":2404:2405  0 */\n      0x00\n        /* \"Staking/Staking.sol\":2394:2401  _amount */\n      dup2\n        /* \"Staking/Staking.sol\":2394:2405  _amount > 0 */\n      gt\n        /* \"Staking/Staking.sol\":2386:2428  require(_amount > 0, \"Nothing to deposit\") */\n      tag_180\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4e6f7468696e6720746f206465706f7369740000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_180:\n        /* \"Staking/Staking.sol\":2441:2453  updatePool() */\n      tag_181\n        /* \"Staking/Staking.sol\":2441:2451  updatePool */\n      tag_77\n        /* \"Staking/Staking.sol\":2441:2453  updatePool() */\n      jump\t// in\n    tag_181:\n        /* \"Staking/Staking.sol\":2464:2485  UserInfo storage user */\n      0x00\n        /* \"Staking/Staking.sol\":2488:2496  userInfo */\n      0x0c\n        /* \"Staking/Staking.sol\":2488:2508  userInfo[msg.sender] */\n      0x00\n        /* \"Staking/Staking.sol\":2497:2507  msg.sender */\n      caller\n        /* \"Staking/Staking.sol\":2488:2508  userInfo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking/Staking.sol\":2464:2508  UserInfo storage user = userInfo[msg.sender] */\n      swap1\n      pop\n        /* \"Staking/Staking.sol\":2539:2540  0 */\n      0x00\n        /* \"Staking/Staking.sol\":2525:2529  user */\n      dup2\n        /* \"Staking/Staking.sol\":2525:2536  user.amount */\n      0x05\n      add\n      sload\n        /* \"Staking/Staking.sol\":2525:2540  user.amount > 0 */\n      gt\n        /* \"Staking/Staking.sol\":2521:2808  if (user.amount > 0) {\r... */\n      iszero\n      tag_182\n      jumpi\n        /* \"Staking/Staking.sol\":2557:2572  uint256 pending */\n      0x00\n        /* \"Staking/Staking.sol\":2575:2664  decimalMul(user.amount, accPerShare).sub(\r... */\n      tag_183\n        /* \"Staking/Staking.sol\":2634:2638  user */\n      dup3\n        /* \"Staking/Staking.sol\":2634:2649  user.rewardDebt */\n      0x03\n      add\n      sload\n        /* \"Staking/Staking.sol\":2575:2611  decimalMul(user.amount, accPerShare) */\n      tag_184\n        /* \"Staking/Staking.sol\":2586:2590  user */\n      dup5\n        /* \"Staking/Staking.sol\":2586:2597  user.amount */\n      0x05\n      add\n      sload\n        /* \"Staking/Staking.sol\":2599:2610  accPerShare */\n      sload(0x03)\n        /* \"Staking/Staking.sol\":2575:2585  decimalMul */\n      tag_98\n        /* \"Staking/Staking.sol\":2575:2611  decimalMul(user.amount, accPerShare) */\n      jump\t// in\n    tag_184:\n        /* \"Staking/Staking.sol\":2575:2615  decimalMul(user.amount, accPerShare).sub */\n      tag_99\n      swap1\n        /* \"Staking/Staking.sol\":2575:2664  decimalMul(user.amount, accPerShare).sub(\r... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_183:\n        /* \"Staking/Staking.sol\":2557:2664  uint256 pending = decimalMul(user.amount, accPerShare).sub(\r... */\n      swap1\n      pop\n        /* \"Staking/Staking.sol\":2749:2774  user.rewards.add(pending) */\n      tag_185\n        /* \"Staking/Staking.sol\":2766:2773  pending */\n      dup2\n        /* \"Staking/Staking.sol\":2749:2753  user */\n      dup4\n        /* \"Staking/Staking.sol\":2749:2761  user.rewards */\n      0x04\n      add\n      sload\n        /* \"Staking/Staking.sol\":2749:2765  user.rewards.add */\n      tag_100\n      swap1\n        /* \"Staking/Staking.sol\":2749:2774  user.rewards.add(pending) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_185:\n        /* \"Staking/Staking.sol\":2734:2738  user */\n      dup3\n        /* \"Staking/Staking.sol\":2734:2746  user.rewards */\n      0x04\n      add\n        /* \"Staking/Staking.sol\":2734:2774  user.rewards = user.rewards.add(pending) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking/Staking.sol\":2521:2808  if (user.amount > 0) {\r... */\n      pop\n      jump(tag_186)\n    tag_182:\n        /* \"Staking/Staking.sol\":2807:2808  0 */\n      0x00\n        /* \"Staking/Staking.sol\":2792:2796  user */\n      dup2\n        /* \"Staking/Staking.sol\":2792:2804  user.rewards */\n      0x04\n      add\n        /* \"Staking/Staking.sol\":2792:2808  user.rewards = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking/Staking.sol\":2521:2808  if (user.amount > 0) {\r... */\n    tag_186:\n        /* \"Staking/Staking.sol\":2821:2826  poker */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking/Staking.sol\":2821:2839  poker.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"Staking/Staking.sol\":2840:2850  msg.sender */\n      caller\n        /* \"Staking/Staking.sol\":2860:2864  this */\n      address\n        /* \"Staking/Staking.sol\":2867:2874  _amount */\n      dup6\n        /* \"Staking/Staking.sol\":2821:2875  poker.transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_187\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_187:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_189\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_189:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_190\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_190:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      pop\n        /* \"Staking/Staking.sol\":2888:2909  uint256 currentShares */\n      0x00\n        /* \"Staking/Staking.sol\":2912:2935  _amount.mul(getEther()) */\n      tag_191\n        /* \"Staking/Staking.sol\":2924:2934  getEther() */\n      tag_192\n        /* \"Staking/Staking.sol\":2924:2932  getEther */\n      tag_73\n        /* \"Staking/Staking.sol\":2924:2934  getEther() */\n      jump\t// in\n    tag_192:\n        /* \"Staking/Staking.sol\":2912:2919  _amount */\n      dup5\n        /* \"Staking/Staking.sol\":2912:2923  _amount.mul */\n      tag_103\n      swap1\n        /* \"Staking/Staking.sol\":2912:2935  _amount.mul(getEther()) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_191:\n        /* \"Staking/Staking.sol\":2888:2935  uint256 currentShares = _amount.mul(getEther()) */\n      swap1\n      pop\n        /* \"Staking/Staking.sol\":3176:3206  user.shares.add(currentShares) */\n      tag_193\n        /* \"Staking/Staking.sol\":3192:3205  currentShares */\n      dup2\n        /* \"Staking/Staking.sol\":3176:3180  user */\n      dup4\n        /* \"Staking/Staking.sol\":3176:3187  user.shares */\n      0x00\n      add\n      sload\n        /* \"Staking/Staking.sol\":3176:3191  user.shares.add */\n      tag_100\n      swap1\n        /* \"Staking/Staking.sol\":3176:3206  user.shares.add(currentShares) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_193:\n        /* \"Staking/Staking.sol\":3162:3166  user */\n      dup3\n        /* \"Staking/Staking.sol\":3162:3173  user.shares */\n      0x00\n      add\n        /* \"Staking/Staking.sol\":3162:3206  user.shares = user.shares.add(currentShares) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking/Staking.sol\":3231:3261  totalShares.add(currentShares) */\n      tag_194\n        /* \"Staking/Staking.sol\":3247:3260  currentShares */\n      dup2\n        /* \"Staking/Staking.sol\":3231:3242  totalShares */\n      sload(0x04)\n        /* \"Staking/Staking.sol\":3231:3246  totalShares.add */\n      tag_100\n      swap1\n        /* \"Staking/Staking.sol\":3231:3261  totalShares.add(currentShares) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_194:\n        /* \"Staking/Staking.sol\":3217:3228  totalShares */\n      0x04\n        /* \"Staking/Staking.sol\":3217:3261  totalShares = totalShares.add(currentShares) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking/Staking.sol\":3288:3312  user.amount.add(_amount) */\n      tag_195\n        /* \"Staking/Staking.sol\":3304:3311  _amount */\n      dup4\n        /* \"Staking/Staking.sol\":3288:3292  user */\n      dup4\n        /* \"Staking/Staking.sol\":3288:3299  user.amount */\n      0x05\n      add\n      sload\n        /* \"Staking/Staking.sol\":3288:3303  user.amount.add */\n      tag_100\n      swap1\n        /* \"Staking/Staking.sol\":3288:3312  user.amount.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_195:\n        /* \"Staking/Staking.sol\":3274:3278  user */\n      dup3\n        /* \"Staking/Staking.sol\":3274:3285  user.amount */\n      0x05\n      add\n        /* \"Staking/Staking.sol\":3274:3312  user.amount = user.amount.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking/Staking.sol\":3341:3377  decimalMul(user.amount, accPerShare) */\n      tag_196\n        /* \"Staking/Staking.sol\":3352:3356  user */\n      dup3\n        /* \"Staking/Staking.sol\":3352:3363  user.amount */\n      0x05\n      add\n      sload\n        /* \"Staking/Staking.sol\":3365:3376  accPerShare */\n      sload(0x03)\n        /* \"Staking/Staking.sol\":3341:3351  decimalMul */\n      tag_98\n        /* \"Staking/Staking.sol\":3341:3377  decimalMul(user.amount, accPerShare) */\n      jump\t// in\n    tag_196:\n        /* \"Staking/Staking.sol\":3323:3327  user */\n      dup3\n        /* \"Staking/Staking.sol\":3323:3338  user.rewardDebt */\n      0x03\n      add\n        /* \"Staking/Staking.sol\":3323:3377  user.rewardDebt = decimalMul(user.amount, accPerShare) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking/Staking.sol\":3416:3425  getTime() */\n      tag_197\n        /* \"Staking/Staking.sol\":3416:3423  getTime */\n      tag_47\n        /* \"Staking/Staking.sol\":3416:3425  getTime() */\n      jump\t// in\n    tag_197:\n        /* \"Staking/Staking.sol\":3390:3394  user */\n      dup3\n        /* \"Staking/Staking.sol\":3390:3413  user.lastUserActionTime */\n      0x02\n      add\n        /* \"Staking/Staking.sol\":3390:3425  user.lastUserActionTime = getTime() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking/Staking.sol\":3461:3470  getTime() */\n      tag_198\n        /* \"Staking/Staking.sol\":3461:3468  getTime */\n      tag_47\n        /* \"Staking/Staking.sol\":3461:3470  getTime() */\n      jump\t// in\n    tag_198:\n        /* \"Staking/Staking.sol\":3436:3440  user */\n      dup3\n        /* \"Staking/Staking.sol\":3436:3458  user.lastDepositedTime */\n      0x01\n      add\n        /* \"Staking/Staking.sol\":3436:3470  user.lastDepositedTime = getTime() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking/Staking.sol\":3496:3506  msg.sender */\n      caller\n        /* \"Staking/Staking.sol\":3488:3548  Deposit(msg.sender, _amount, currentShares, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x36af321ec8d3c75236829c5317affd40ddb308863a1236d2d277a4025cccee1e\n        /* \"Staking/Staking.sol\":3508:3515  _amount */\n      dup5\n        /* \"Staking/Staking.sol\":3517:3530  currentShares */\n      dup4\n        /* \"Staking/Staking.sol\":3532:3547  block.timestamp */\n      timestamp\n        /* \"Staking/Staking.sol\":3488:3548  Deposit(msg.sender, _amount, currentShares, block.timestamp) */\n      mload(0x40)\n      dup1\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Staking/Staking.sol\":2334:3556  function deposit(uint256 _amount) public {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Staking/Staking.sol\":8019:8950  function getStakingCoinPerSec() public view returns (uint256) {\r... */\n    tag_65:\n        /* \"Staking/Staking.sol\":8072:8079  uint256 */\n      0x00\n        /* \"Staking/Staking.sol\":8092:8103  uint256 sec */\n      dup1\n        /* \"Staking/Staking.sol\":8106:8115  24 * 3600 */\n      0x015180\n        /* \"Staking/Staking.sol\":8092:8115  uint256 sec = 24 * 3600 */\n      swap1\n      pop\n        /* \"Staking/Staking.sol\":8126:8141  uint256 curTime */\n      0x00\n        /* \"Staking/Staking.sol\":8144:8153  getTime() */\n      tag_200\n        /* \"Staking/Staking.sol\":8144:8151  getTime */\n      tag_47\n        /* \"Staking/Staking.sol\":8144:8153  getTime() */\n      jump\t// in\n    tag_200:\n        /* \"Staking/Staking.sol\":8126:8153  uint256 curTime = getTime() */\n      swap1\n      pop\n        /* \"Staking/Staking.sol\":8164:8176  uint256 coin */\n      0x00\n        /* \"Staking/Staking.sol\":8179:8180  1 */\n      0x01\n        /* \"Staking/Staking.sol\":8164:8180  uint256 coin = 1 */\n      swap1\n      pop\n        /* \"Staking/Staking.sol\":8214:8219  false */\n      0x00\n        /* \"Staking/Staking.sol\":8197:8219  stakingSwitch == false */\n      iszero\n      iszero\n        /* \"Staking/Staking.sol\":8197:8210  stakingSwitch */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Staking/Staking.sol\":8197:8219  stakingSwitch == false */\n      iszero\n      iszero\n      eq\n        /* \"Staking/Staking.sol\":8193:8385  if (stakingSwitch == false) {\r... */\n      iszero\n      tag_201\n      jumpi\n        /* \"Staking/Staking.sol\":8284:8298  12000000000000 */\n      0x0ae9f7bcc000\n        /* \"Staking/Staking.sol\":8277:8298  coin = 12000000000000 */\n      swap1\n      pop\n        /* \"Staking/Staking.sol\":8369:8373  coin */\n      dup1\n        /* \"Staking/Staking.sol\":8362:8373  return coin */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_199)\n        /* \"Staking/Staking.sol\":8193:8385  if (stakingSwitch == false) {\r... */\n    tag_201:\n        /* \"Staking/Staking.sol\":8461:8467  60 * 5 */\n      0x012c\n        /* \"Staking/Staking.sol\":8442:8458  stakingStartTime */\n      sload(0x09)\n        /* \"Staking/Staking.sol\":8442:8467  stakingStartTime + 60 * 5 */\n      add\n        /* \"Staking/Staking.sol\":8431:8438  curTime */\n      dup3\n        /* \"Staking/Staking.sol\":8431:8468  curTime < (stakingStartTime + 60 * 5) */\n      lt\n        /* \"Staking/Staking.sol\":8427:8921  if (curTime < (stakingStartTime + 60 * 5)) {\r... */\n      iszero\n      tag_202\n      jumpi\n        /* \"Staking/Staking.sol\":8485:8500  uint256 maxCoin */\n      0x00\n        /* \"Staking/Staking.sol\":8503:8510  2800000 */\n      0x2ab980\n        /* \"Staking/Staking.sol\":8485:8510  uint256 maxCoin = 2800000 */\n      swap1\n      pop\n        /* \"Staking/Staking.sol\":8532:8577  maxCoin.mul((10**uint256(decimals))).div(sec) */\n      tag_203\n        /* \"Staking/Staking.sol\":8573:8576  sec */\n      dup5\n        /* \"Staking/Staking.sol\":8532:8568  maxCoin.mul((10**uint256(decimals))) */\n      tag_204\n        /* \"Staking/Staking.sol\":8557:8565  decimals */\n      sload(0x0b)\n        /* \"Staking/Staking.sol\":8545:8547  10 */\n      0x0a\n        /* \"Staking/Staking.sol\":8545:8566  10**uint256(decimals) */\n      exp\n        /* \"Staking/Staking.sol\":8532:8539  maxCoin */\n      dup5\n        /* \"Staking/Staking.sol\":8532:8543  maxCoin.mul */\n      tag_103\n      swap1\n        /* \"Staking/Staking.sol\":8532:8568  maxCoin.mul((10**uint256(decimals))) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_204:\n        /* \"Staking/Staking.sol\":8532:8572  maxCoin.mul((10**uint256(decimals))).div */\n      tag_104\n      swap1\n        /* \"Staking/Staking.sol\":8532:8577  maxCoin.mul((10**uint256(decimals))).div(sec) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_203:\n        /* \"Staking/Staking.sol\":8525:8577  coin = maxCoin.mul((10**uint256(decimals))).div(sec) */\n      swap2\n      pop\n        /* \"Staking/Staking.sol\":8427:8921  if (curTime < (stakingStartTime + 60 * 5)) {\r... */\n      pop\n      jump(tag_205)\n    tag_202:\n        /* \"Staking/Staking.sol\":8668:8675  60 * 10 */\n      0x0258\n        /* \"Staking/Staking.sol\":8649:8665  stakingStartTime */\n      sload(0x09)\n        /* \"Staking/Staking.sol\":8649:8675  stakingStartTime + 60 * 10 */\n      add\n        /* \"Staking/Staking.sol\":8638:8645  curTime */\n      dup3\n        /* \"Staking/Staking.sol\":8638:8676  curTime < (stakingStartTime + 60 * 10) */\n      lt\n        /* \"Staking/Staking.sol\":8634:8921  if (curTime < (stakingStartTime + 60 * 10)) {\r... */\n      iszero\n      tag_206\n      jumpi\n        /* \"Staking/Staking.sol\":8693:8708  uint256 maxCoin */\n      0x00\n        /* \"Staking/Staking.sol\":8711:8718  1400000 */\n      0x155cc0\n        /* \"Staking/Staking.sol\":8693:8718  uint256 maxCoin = 1400000 */\n      swap1\n      pop\n        /* \"Staking/Staking.sol\":8740:8785  maxCoin.mul((10**uint256(decimals))).div(sec) */\n      tag_207\n        /* \"Staking/Staking.sol\":8781:8784  sec */\n      dup5\n        /* \"Staking/Staking.sol\":8740:8776  maxCoin.mul((10**uint256(decimals))) */\n      tag_208\n        /* \"Staking/Staking.sol\":8765:8773  decimals */\n      sload(0x0b)\n        /* \"Staking/Staking.sol\":8753:8755  10 */\n      0x0a\n        /* \"Staking/Staking.sol\":8753:8774  10**uint256(decimals) */\n      exp\n        /* \"Staking/Staking.sol\":8740:8747  maxCoin */\n      dup5\n        /* \"Staking/Staking.sol\":8740:8751  maxCoin.mul */\n      tag_103\n      swap1\n        /* \"Staking/Staking.sol\":8740:8776  maxCoin.mul((10**uint256(decimals))) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_208:\n        /* \"Staking/Staking.sol\":8740:8780  maxCoin.mul((10**uint256(decimals))).div */\n      tag_104\n      swap1\n        /* \"Staking/Staking.sol\":8740:8785  maxCoin.mul((10**uint256(decimals))).div(sec) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_207:\n        /* \"Staking/Staking.sol\":8733:8785  coin = maxCoin.mul((10**uint256(decimals))).div(sec) */\n      swap2\n      pop\n        /* \"Staking/Staking.sol\":8634:8921  if (curTime < (stakingStartTime + 60 * 10)) {\r... */\n      pop\n      jump(tag_209)\n    tag_206:\n        /* \"Staking/Staking.sol\":8818:8833  uint256 maxCoin */\n      0x00\n        /* \"Staking/Staking.sol\":8836:8842  122300 */\n      0x01ddbc\n        /* \"Staking/Staking.sol\":8818:8842  uint256 maxCoin = 122300 */\n      swap1\n      pop\n        /* \"Staking/Staking.sol\":8864:8909  maxCoin.mul((10**uint256(decimals))).div(sec) */\n      tag_210\n        /* \"Staking/Staking.sol\":8905:8908  sec */\n      dup5\n        /* \"Staking/Staking.sol\":8864:8900  maxCoin.mul((10**uint256(decimals))) */\n      tag_211\n        /* \"Staking/Staking.sol\":8889:8897  decimals */\n      sload(0x0b)\n        /* \"Staking/Staking.sol\":8877:8879  10 */\n      0x0a\n        /* \"Staking/Staking.sol\":8877:8898  10**uint256(decimals) */\n      exp\n        /* \"Staking/Staking.sol\":8864:8871  maxCoin */\n      dup5\n        /* \"Staking/Staking.sol\":8864:8875  maxCoin.mul */\n      tag_103\n      swap1\n        /* \"Staking/Staking.sol\":8864:8900  maxCoin.mul((10**uint256(decimals))) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_211:\n        /* \"Staking/Staking.sol\":8864:8904  maxCoin.mul((10**uint256(decimals))).div */\n      tag_104\n      swap1\n        /* \"Staking/Staking.sol\":8864:8909  maxCoin.mul((10**uint256(decimals))).div(sec) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_210:\n        /* \"Staking/Staking.sol\":8857:8909  coin = maxCoin.mul((10**uint256(decimals))).div(sec) */\n      swap2\n      pop\n        /* \"Staking/Staking.sol\":8634:8921  if (curTime < (stakingStartTime + 60 * 10)) {\r... */\n      pop\n    tag_209:\n        /* \"Staking/Staking.sol\":8427:8921  if (curTime < (stakingStartTime + 60 * 5)) {\r... */\n    tag_205:\n        /* \"Staking/Staking.sol\":8938:8942  coin */\n      dup1\n        /* \"Staking/Staking.sol\":8931:8942  return coin */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"Staking/Staking.sol\":8019:8950  function getStakingCoinPerSec() public view returns (uint256) {\r... */\n    tag_199:\n      swap1\n      jump\t// out\n        /* \"Staking/Staking.sol\":1372:1405  uint256 public lastUpdateTime = 0 */\n    tag_67:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"Staking/Staking.sol\":6353:6482  function totalStakingAmount() public view returns (uint256) {\r... */\n    tag_69:\n        /* \"Staking/Staking.sol\":6404:6411  uint256 */\n      0x00\n        /* \"Staking/Staking.sol\":6431:6474  this.pendingCoin().add(getDepositBalance()) */\n      tag_213\n        /* \"Staking/Staking.sol\":6454:6473  getDepositBalance() */\n      tag_214\n        /* \"Staking/Staking.sol\":6454:6471  getDepositBalance */\n      tag_33\n        /* \"Staking/Staking.sol\":6454:6473  getDepositBalance() */\n      jump\t// in\n    tag_214:\n        /* \"Staking/Staking.sol\":6431:6435  this */\n      address\n        /* \"Staking/Staking.sol\":6431:6447  this.pendingCoin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfc3e532b\n        /* \"Staking/Staking.sol\":6431:6449  this.pendingCoin() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_215\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_215:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_217\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_217:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_218\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_218:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Staking/Staking.sol\":6431:6453  this.pendingCoin().add */\n      tag_100\n      swap1\n        /* \"Staking/Staking.sol\":6431:6474  this.pendingCoin().add(getDepositBalance()) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_213:\n        /* \"Staking/Staking.sol\":6424:6474  return this.pendingCoin().add(getDepositBalance()) */\n      swap1\n      pop\n        /* \"Staking/Staking.sol\":6353:6482  function totalStakingAmount() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"Staking/Staking.sol\":1261:1291  uint256 public accPerShare = 0 */\n    tag_71:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"Staking/Staking.sol\":7880:7977  function getEther() public view returns (uint256) {\r... */\n    tag_73:\n        /* \"Staking/Staking.sol\":7921:7928  uint256 */\n      0x00\n        /* \"Staking/Staking.sol\":7960:7968  decimals */\n      sload(0x0b)\n        /* \"Staking/Staking.sol\":7948:7950  10 */\n      0x0a\n        /* \"Staking/Staking.sol\":7948:7969  10**uint256(decimals) */\n      exp\n        /* \"Staking/Staking.sol\":7941:7969  return 10**uint256(decimals) */\n      swap1\n      pop\n        /* \"Staking/Staking.sol\":7880:7977  function getEther() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"Staking/Staking.sol\":1452:1493  uint256 public withdrawFeePeriod = 7 days */\n    tag_75:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"Staking/Staking.sol\":5406:6023  function updatePool() public {\r... */\n    tag_77:\n        /* \"Staking/Staking.sol\":5446:5461  uint256 curTime */\n      0x00\n        /* \"Staking/Staking.sol\":5464:5473  getTime() */\n      tag_221\n        /* \"Staking/Staking.sol\":5464:5471  getTime */\n      tag_47\n        /* \"Staking/Staking.sol\":5464:5473  getTime() */\n      jump\t// in\n    tag_221:\n        /* \"Staking/Staking.sol\":5446:5473  uint256 curTime = getTime() */\n      swap1\n      pop\n        /* \"Staking/Staking.sol\":5499:5513  lastUpdateTime */\n      sload(0x06)\n        /* \"Staking/Staking.sol\":5488:5495  curTime */\n      dup2\n        /* \"Staking/Staking.sol\":5488:5513  curTime <= lastUpdateTime */\n      gt\n        /* \"Staking/Staking.sol\":5484:5548  if (curTime <= lastUpdateTime) {\r... */\n      tag_222\n      jumpi\n        /* \"Staking/Staking.sol\":5530:5537  return; */\n      pop\n      jump(tag_220)\n        /* \"Staking/Staking.sol\":5484:5548  if (curTime <= lastUpdateTime) {\r... */\n    tag_222:\n        /* \"Staking/Staking.sol\":5579:5580  0 */\n      0x00\n        /* \"Staking/Staking.sol\":5564:5575  totalShares */\n      sload(0x04)\n        /* \"Staking/Staking.sol\":5564:5580  totalShares <= 0 */\n      gt\n        /* \"Staking/Staking.sol\":5560:5654  if (totalShares <= 0) {\r... */\n      tag_223\n      jumpi\n        /* \"Staking/Staking.sol\":5614:5621  curTime */\n      dup1\n        /* \"Staking/Staking.sol\":5597:5611  lastUpdateTime */\n      0x06\n        /* \"Staking/Staking.sol\":5597:5621  lastUpdateTime = curTime */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking/Staking.sol\":5636:5643  return; */\n      pop\n      jump(tag_220)\n        /* \"Staking/Staking.sol\":5560:5654  if (totalShares <= 0) {\r... */\n    tag_223:\n        /* \"Staking/Staking.sol\":5666:5684  uint256 multiplier */\n      0x00\n        /* \"Staking/Staking.sol\":5693:5707  lastUpdateTime */\n      sload(0x06)\n        /* \"Staking/Staking.sol\":5687:5690  now */\n      timestamp\n        /* \"Staking/Staking.sol\":5687:5707  now - lastUpdateTime */\n      sub\n        /* \"Staking/Staking.sol\":5666:5707  uint256 multiplier = now - lastUpdateTime */\n      swap1\n      pop\n        /* \"Staking/Staking.sol\":5718:5732  uint256 reward */\n      0x00\n        /* \"Staking/Staking.sol\":5735:5773  multiplier.mul(getStakingCoinPerSec()) */\n      tag_224\n        /* \"Staking/Staking.sol\":5750:5772  getStakingCoinPerSec() */\n      tag_225\n        /* \"Staking/Staking.sol\":5750:5770  getStakingCoinPerSec */\n      tag_65\n        /* \"Staking/Staking.sol\":5750:5772  getStakingCoinPerSec() */\n      jump\t// in\n    tag_225:\n        /* \"Staking/Staking.sol\":5735:5745  multiplier */\n      dup4\n        /* \"Staking/Staking.sol\":5735:5749  multiplier.mul */\n      tag_103\n      swap1\n        /* \"Staking/Staking.sol\":5735:5773  multiplier.mul(getStakingCoinPerSec()) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_224:\n        /* \"Staking/Staking.sol\":5718:5773  uint256 reward = multiplier.mul(getStakingCoinPerSec()) */\n      swap1\n      pop\n        /* \"Staking/Staking.sol\":5801:5808  curTime */\n      dup3\n        /* \"Staking/Staking.sol\":5784:5798  lastUpdateTime */\n      0x06\n        /* \"Staking/Staking.sol\":5784:5808  lastUpdateTime = curTime */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking/Staking.sol\":5833:5856  totalAmount.add(reward) */\n      tag_226\n        /* \"Staking/Staking.sol\":5849:5855  reward */\n      dup2\n        /* \"Staking/Staking.sol\":5833:5844  totalAmount */\n      sload(0x05)\n        /* \"Staking/Staking.sol\":5833:5848  totalAmount.add */\n      tag_100\n      swap1\n        /* \"Staking/Staking.sol\":5833:5856  totalAmount.add(reward) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_226:\n        /* \"Staking/Staking.sol\":5819:5830  totalAmount */\n      0x05\n        /* \"Staking/Staking.sol\":5819:5856  totalAmount = totalAmount.add(reward) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking/Staking.sol\":5881:5935  accPerShare.add(divFloor(reward, this.totalDeposit())) */\n      tag_227\n        /* \"Staking/Staking.sol\":5897:5934  divFloor(reward, this.totalDeposit()) */\n      tag_228\n        /* \"Staking/Staking.sol\":5906:5912  reward */\n      dup3\n        /* \"Staking/Staking.sol\":5914:5918  this */\n      address\n        /* \"Staking/Staking.sol\":5914:5931  this.totalDeposit */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf6153ccd\n        /* \"Staking/Staking.sol\":5914:5933  this.totalDeposit() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_229\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_229:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_231\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_231:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_232\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_232:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Staking/Staking.sol\":5897:5905  divFloor */\n      tag_155\n        /* \"Staking/Staking.sol\":5897:5934  divFloor(reward, this.totalDeposit()) */\n      jump\t// in\n    tag_228:\n        /* \"Staking/Staking.sol\":5881:5892  accPerShare */\n      sload(0x03)\n        /* \"Staking/Staking.sol\":5881:5896  accPerShare.add */\n      tag_100\n      swap1\n        /* \"Staking/Staking.sol\":5881:5935  accPerShare.add(divFloor(reward, this.totalDeposit())) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_227:\n        /* \"Staking/Staking.sol\":5867:5878  accPerShare */\n      0x03\n        /* \"Staking/Staking.sol\":5867:5935  accPerShare = accPerShare.add(divFloor(reward, this.totalDeposit())) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking/Staking.sol\":5982:5987  poker */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking/Staking.sol\":5982:5992  poker.mint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x40c10f19\n        /* \"Staking/Staking.sol\":6001:6005  this */\n      address\n        /* \"Staking/Staking.sol\":6008:6014  reward */\n      dup4\n        /* \"Staking/Staking.sol\":5982:6015  poker.mint(address(this), reward) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_233\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_233:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_235\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_235:\n      pop\n      pop\n      pop\n      pop\n        /* \"Staking/Staking.sol\":5406:6023  function updatePool() public {\r... */\n      pop\n      pop\n      pop\n    tag_220:\n      jump\t// out\n        /* \"Staking/Staking.sol\":1619:1652  bool public stakingSwitch = false */\n    tag_79:\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"Staking/Staking.sol\":1412:1445  uint256 public withdrawFee = 1000 */\n    tag_81:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"Staking/Staking.sol\":6490:6592  function totalDeposit() external view returns (uint256) {\r... */\n    tag_83:\n        /* \"Staking/Staking.sol\":6537:6544  uint256 */\n      0x00\n        /* \"Staking/Staking.sol\":6564:6584  totalShares.div(ONE) */\n      tag_237\n        /* \"Staking/Staking.sol\":1712:1718  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Staking/Staking.sol\":6564:6575  totalShares */\n      sload(0x04)\n        /* \"Staking/Staking.sol\":6564:6579  totalShares.div */\n      tag_104\n      swap1\n        /* \"Staking/Staking.sol\":6564:6584  totalShares.div(ONE) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_237:\n        /* \"Staking/Staking.sol\":6557:6584  return totalShares.div(ONE) */\n      swap1\n      pop\n        /* \"Staking/Staking.sol\":6490:6592  function totalDeposit() external view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"Staking/Staking.sol\":6031:6345  function pendingCoin() external view returns (uint256) {\r... */\n    tag_85:\n        /* \"Staking/Staking.sol\":6077:6084  uint256 */\n      0x00\n        /* \"Staking/Staking.sol\":6097:6112  uint256 curTime */\n      dup1\n        /* \"Staking/Staking.sol\":6115:6124  getTime() */\n      tag_239\n        /* \"Staking/Staking.sol\":6115:6122  getTime */\n      tag_47\n        /* \"Staking/Staking.sol\":6115:6124  getTime() */\n      jump\t// in\n    tag_239:\n        /* \"Staking/Staking.sol\":6097:6124  uint256 curTime = getTime() */\n      swap1\n      pop\n        /* \"Staking/Staking.sol\":6154:6155  0 */\n      0x00\n        /* \"Staking/Staking.sol\":6139:6150  totalShares */\n      sload(0x04)\n        /* \"Staking/Staking.sol\":6139:6155  totalShares <= 0 */\n      gt\n        /* \"Staking/Staking.sol\":6135:6192  if (totalShares <= 0) {\r... */\n      tag_240\n      jumpi\n        /* \"Staking/Staking.sol\":6179:6180  0 */\n      0x00\n        /* \"Staking/Staking.sol\":6172:6180  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_238)\n        /* \"Staking/Staking.sol\":6135:6192  if (totalShares <= 0) {\r... */\n    tag_240:\n        /* \"Staking/Staking.sol\":6202:6220  uint256 multiplier */\n      0x00\n        /* \"Staking/Staking.sol\":6233:6247  lastUpdateTime */\n      sload(0x06)\n        /* \"Staking/Staking.sol\":6223:6230  curTime */\n      dup3\n        /* \"Staking/Staking.sol\":6223:6247  curTime - lastUpdateTime */\n      sub\n        /* \"Staking/Staking.sol\":6202:6247  uint256 multiplier = curTime - lastUpdateTime */\n      swap1\n      pop\n        /* \"Staking/Staking.sol\":6258:6272  uint256 reward */\n      0x00\n        /* \"Staking/Staking.sol\":6275:6313  multiplier.mul(getStakingCoinPerSec()) */\n      tag_241\n        /* \"Staking/Staking.sol\":6290:6312  getStakingCoinPerSec() */\n      tag_242\n        /* \"Staking/Staking.sol\":6290:6310  getStakingCoinPerSec */\n      tag_65\n        /* \"Staking/Staking.sol\":6290:6312  getStakingCoinPerSec() */\n      jump\t// in\n    tag_242:\n        /* \"Staking/Staking.sol\":6275:6285  multiplier */\n      dup4\n        /* \"Staking/Staking.sol\":6275:6289  multiplier.mul */\n      tag_103\n      swap1\n        /* \"Staking/Staking.sol\":6275:6313  multiplier.mul(getStakingCoinPerSec()) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_241:\n        /* \"Staking/Staking.sol\":6258:6313  uint256 reward = multiplier.mul(getStakingCoinPerSec()) */\n      swap1\n      pop\n        /* \"Staking/Staking.sol\":6331:6337  reward */\n      dup1\n        /* \"Staking/Staking.sol\":6324:6337  return reward */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"Staking/Staking.sol\":6031:6345  function pendingCoin() external view returns (uint256) {\r... */\n    tag_238:\n      swap1\n      jump\t// out\n        /* \"Staking/Staking.sol\":1892:2048  function decimalMul(uint256 target, uint256 d)\r... */\n    tag_98:\n        /* \"Staking/Staking.sol\":1989:1996  uint256 */\n      0x00\n        /* \"Staking/Staking.sol\":1712:1718  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Staking/Staking.sol\":2021:2034  target.mul(d) */\n      tag_244\n        /* \"Staking/Staking.sol\":2032:2033  d */\n      dup4\n        /* \"Staking/Staking.sol\":2021:2027  target */\n      dup6\n        /* \"Staking/Staking.sol\":2021:2031  target.mul */\n      tag_103\n      swap1\n        /* \"Staking/Staking.sol\":2021:2034  target.mul(d) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_244:\n        /* \"Staking/Staking.sol\":2021:2040  target.mul(d) / ONE */\n      dup2\n      tag_245\n      jumpi\n      invalid\n    tag_245:\n      div\n        /* \"Staking/Staking.sol\":2014:2040  return target.mul(d) / ONE */\n      swap1\n      pop\n        /* \"Staking/Staking.sol\":1892:2048  function decimalMul(uint256 target, uint256 d)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"_lib/SafeMath.sol\":773:957  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_99:\n        /* \"_lib/SafeMath.sol\":831:838  uint256 */\n      0x00\n        /* \"_lib/SafeMath.sol\":864:865  a */\n      dup3\n        /* \"_lib/SafeMath.sol\":859:860  b */\n      dup3\n        /* \"_lib/SafeMath.sol\":859:865  b <= a */\n      gt\n      iszero\n        /* \"_lib/SafeMath.sol\":851:900  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_247\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_247:\n        /* \"_lib/SafeMath.sol\":911:920  uint256 c */\n      0x00\n        /* \"_lib/SafeMath.sol\":927:928  b */\n      dup3\n        /* \"_lib/SafeMath.sol\":923:924  a */\n      dup5\n        /* \"_lib/SafeMath.sol\":923:928  a - b */\n      sub\n        /* \"_lib/SafeMath.sol\":911:928  uint256 c = a - b */\n      swap1\n      pop\n        /* \"_lib/SafeMath.sol\":948:949  c */\n      dup1\n        /* \"_lib/SafeMath.sol\":941:949  return c */\n      swap2\n      pop\n      pop\n        /* \"_lib/SafeMath.sol\":773:957  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"_lib/SafeMath.sol\":317:498  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_100:\n        /* \"_lib/SafeMath.sol\":375:382  uint256 */\n      0x00\n        /* \"_lib/SafeMath.sol\":395:404  uint256 c */\n      dup1\n        /* \"_lib/SafeMath.sol\":411:412  b */\n      dup3\n        /* \"_lib/SafeMath.sol\":407:408  a */\n      dup5\n        /* \"_lib/SafeMath.sol\":407:412  a + b */\n      add\n        /* \"_lib/SafeMath.sol\":395:412  uint256 c = a + b */\n      swap1\n      pop\n        /* \"_lib/SafeMath.sol\":436:437  a */\n      dup4\n        /* \"_lib/SafeMath.sol\":431:432  c */\n      dup2\n        /* \"_lib/SafeMath.sol\":431:437  c >= a */\n      lt\n      iszero\n        /* \"_lib/SafeMath.sol\":423:469  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_249\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_249:\n        /* \"_lib/SafeMath.sol\":489:490  c */\n      dup1\n        /* \"_lib/SafeMath.sol\":482:490  return c */\n      swap2\n      pop\n      pop\n        /* \"_lib/SafeMath.sol\":317:498  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"_lib/SafeMath.sol\":1208:1678  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_103:\n        /* \"_lib/SafeMath.sol\":1266:1273  uint256 */\n      0x00\n        /* \"_lib/SafeMath.sol\":1515:1516  0 */\n      dup1\n        /* \"_lib/SafeMath.sol\":1510:1511  a */\n      dup4\n        /* \"_lib/SafeMath.sol\":1510:1516  a == 0 */\n      eq\n        /* \"_lib/SafeMath.sol\":1506:1553  if (a == 0) {\r... */\n      iszero\n      tag_251\n      jumpi\n        /* \"_lib/SafeMath.sol\":1540:1541  0 */\n      0x00\n        /* \"_lib/SafeMath.sol\":1533:1541  return 0 */\n      swap1\n      pop\n      jump(tag_250)\n        /* \"_lib/SafeMath.sol\":1506:1553  if (a == 0) {\r... */\n    tag_251:\n        /* \"_lib/SafeMath.sol\":1565:1574  uint256 c */\n      0x00\n        /* \"_lib/SafeMath.sol\":1581:1582  b */\n      dup3\n        /* \"_lib/SafeMath.sol\":1577:1578  a */\n      dup5\n        /* \"_lib/SafeMath.sol\":1577:1582  a * b */\n      mul\n        /* \"_lib/SafeMath.sol\":1565:1582  uint256 c = a * b */\n      swap1\n      pop\n        /* \"_lib/SafeMath.sol\":1610:1611  b */\n      dup3\n        /* \"_lib/SafeMath.sol\":1605:1606  a */\n      dup5\n        /* \"_lib/SafeMath.sol\":1601:1602  c */\n      dup3\n        /* \"_lib/SafeMath.sol\":1601:1606  c / a */\n      dup2\n      tag_252\n      jumpi\n      invalid\n    tag_252:\n      div\n        /* \"_lib/SafeMath.sol\":1601:1611  c / a == b */\n      eq\n        /* \"_lib/SafeMath.sol\":1593:1649  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_253\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_253:\n        /* \"_lib/SafeMath.sol\":1669:1670  c */\n      dup1\n        /* \"_lib/SafeMath.sol\":1662:1670  return c */\n      swap2\n      pop\n      pop\n        /* \"_lib/SafeMath.sol\":1208:1678  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_250:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"_lib/SafeMath.sol\":2146:2479  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_104:\n        /* \"_lib/SafeMath.sol\":2204:2211  uint256 */\n      0x00\n        /* \"_lib/SafeMath.sol\":2303:2304  0 */\n      dup1\n        /* \"_lib/SafeMath.sol\":2299:2300  b */\n      dup3\n        /* \"_lib/SafeMath.sol\":2299:2304  b > 0 */\n      gt\n        /* \"_lib/SafeMath.sol\":2291:2335  require(b > 0, \"SafeMath: division by zero\") */\n      tag_255\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_255:\n        /* \"_lib/SafeMath.sol\":2346:2355  uint256 c */\n      0x00\n        /* \"_lib/SafeMath.sol\":2362:2363  b */\n      dup3\n        /* \"_lib/SafeMath.sol\":2358:2359  a */\n      dup5\n        /* \"_lib/SafeMath.sol\":2358:2363  a / b */\n      dup2\n      tag_256\n      jumpi\n      invalid\n    tag_256:\n      div\n        /* \"_lib/SafeMath.sol\":2346:2363  uint256 c = a / b */\n      swap1\n      pop\n        /* \"_lib/SafeMath.sol\":2470:2471  c */\n      dup1\n        /* \"_lib/SafeMath.sol\":2463:2471  return c */\n      swap2\n      pop\n      pop\n        /* \"_lib/SafeMath.sol\":2146:2479  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Staking/Staking.sol\":1727:1884  function divFloor(uint256 target, uint256 d)\r... */\n    tag_155:\n        /* \"Staking/Staking.sol\":1822:1829  uint256 */\n      0x00\n        /* \"Staking/Staking.sol\":1854:1876  target.mul(ONE).div(d) */\n      tag_258\n        /* \"Staking/Staking.sol\":1874:1875  d */\n      dup3\n        /* \"Staking/Staking.sol\":1854:1869  target.mul(ONE) */\n      tag_259\n        /* \"Staking/Staking.sol\":1712:1718  10**18 */\n      0x0de0b6b3a7640000\n        /* \"Staking/Staking.sol\":1854:1860  target */\n      dup7\n        /* \"Staking/Staking.sol\":1854:1864  target.mul */\n      tag_103\n      swap1\n        /* \"Staking/Staking.sol\":1854:1869  target.mul(ONE) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_259:\n        /* \"Staking/Staking.sol\":1854:1873  target.mul(ONE).div */\n      tag_104\n      swap1\n        /* \"Staking/Staking.sol\":1854:1876  target.mul(ONE).div(d) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_258:\n        /* \"Staking/Staking.sol\":1847:1876  return target.mul(ONE).div(d) */\n      swap1\n      pop\n        /* \"Staking/Staking.sol\":1727:1884  function divFloor(uint256 target, uint256 d)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n\n    auxdata: 0xa2646970667358221220c0f842b06e7dbbaaf8121ec704af3383d8ee7a6318e421d9dd7b287c7af08e3264736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405260006003556000600455600060055560006006556103e860075562093a8060085560006009556000600a60006101000a81548160ff0219169083151502179055506012600b5534801561005657600080fd5b50604051611d0f380380611d0f8339818101604052604081101561007957600080fd5b810190808051906020019092919080519060200190929190505050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061012361017160201b60201c565b60068190555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610179565b600042905090565b611b87806101886000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c8063936b6cec116100de578063de0ff7c511610097578063e6fa445d11610071578063e6fa445d1461047f578063e941fa781461049f578063f6153ccd146104bd578063fc3e532b146104db57610173565b8063de0ff7c514610439578063df10b4e614610457578063e3161ddd1461047557610173565b8063936b6cec14610375578063b6b55f2514610393578063b8a3b366146103c1578063c8f33c91146103df578063d201114a146103fd578063d2890a011461041b57610173565b8063557ed1ba11610130578063557ed1ba146102995780636abfd183146102b75780636e5b9634146102d557806377926869146102f357806381ad5718146103115780638da5cb5b1461034157610173565b80630497de4a146101785780631959a002146101965780631a39d8ef146102115780632e1a7d4d1461022f5780633a98ef391461025d57806347f1aae71461027b575b600080fd5b6101806104f9565b6040518082815260200191505060405180910390f35b6101d8600480360360208110156101ac57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105c3565b60405180878152602001868152602001858152602001848152602001838152602001828152602001965050505050505060405180910390f35b6102196105ff565b6040518082815260200191505060405180910390f35b61025b6004803603602081101561024557600080fd5b8101908080359060200190929190505050610605565b005b610265610c39565b6040518082815260200191505060405180910390f35b610283610c3f565b6040518082815260200191505060405180910390f35b6102a1610d71565b6040518082815260200191505060405180910390f35b6102bf610d79565b6040518082815260200191505060405180910390f35b6102dd610d7f565b6040518082815260200191505060405180910390f35b6102fb610ea4565b6040518082815260200191505060405180910390f35b61033f6004803603602081101561032757600080fd5b81019080803515159060200190929190505050610f68565b005b610349610ffe565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61037d611024565b6040518082815260200191505060405180910390f35b6103bf600480360360208110156103a957600080fd5b8101908080359060200190929190505050611147565b005b6103c961146c565b6040518082815260200191505060405180910390f35b6103e7611588565b6040518082815260200191505060405180910390f35b61040561158e565b6040518082815260200191505060405180910390f35b61042361162f565b6040518082815260200191505060405180910390f35b610441611635565b6040518082815260200191505060405180910390f35b61045f611642565b6040518082815260200191505060405180910390f35b61047d611648565b005b610487611816565b60405180821515815260200191505060405180910390f35b6104a7611829565b6040518082815260200191505060405180910390f35b6104c561182f565b6040518082815260200191505060405180910390f35b6104e3611853565b6040518082815260200191505060405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561058357600080fd5b505afa158015610597573d6000803e3d6000fd5b505050506040513d60208110156105ad57600080fd5b8101908080519060200190929190505050905090565b600c6020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154908060050154905086565b60055481565b6000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600082116106be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f4e6f7468696e6720746f2077697468647261770000000000000000000000000081525060200191505060405180910390fd5b8060000154821115610738576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f576974686472617720616d6f756e7420657863656564732062616c616e63650081525060200191505060405180910390fd5b610740611648565b600061077e8260040154610770846003015461076286600501546003546118a5565b6118d390919063ffffffff16565b61195c90919063ffffffff16565b905060006107ab836000015461079d86856119e490919063ffffffff16565b611a6a90919063ffffffff16565b905060006107dc84600001546107ce8787600501546119e490919063ffffffff16565b611a6a90919063ffffffff16565b90506107f58585600001546118d390919063ffffffff16565b8460000181905550610812856004546118d390919063ffffffff16565b600481905550816005541015610890576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f576974686472617720616d6f756e7420657863656564732062616c616e63650081525060200191505060405180910390fd5b6108a5826005546118d390919063ffffffff16565b6005819055506108be82846118d390919063ffffffff16565b84600401819055506108d9818361195c90919063ffffffff16565b91506108f4600854856001015461195c90919063ffffffff16565b6108fc610d71565b1015610ac157600061092c61271061091e6064866119e490919063ffffffff16565b611a6a90919063ffffffff16565b905061094181846118d390919063ffffffff16565b925060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156109f657600080fd5b505af1158015610a0a573d6000803e3d6000fd5b505050506040513d6020811015610a2057600080fd5b810190808051906020019092919050505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015610aa757600080fd5b505af1158015610abb573d6000803e3d6000fd5b50505050505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610b5257600080fd5b505af1158015610b66573d6000803e3d6000fd5b505050506040513d6020811015610b7c57600080fd5b810190808051906020019092919050505050610ba58185600501546118d390919063ffffffff16565b8460050181905550600084600001541115610bd357610bca84600501546003546118a5565b84600301819055505b4284600201819055503373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5688387604051808381526020018281526020019250505060405180910390a25050505050565b60045481565b600080600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081600001541415610c9a576000915050610d6e565b610d6a8160050154610d5c8360040154610d4e8560030154610d4087600501543073ffffffffffffffffffffffffffffffffffffffff16636e5b96346040518163ffffffff1660e01b815260040160206040518083038186803b158015610d0057600080fd5b505afa158015610d14573d6000803e3d6000fd5b505050506040513d6020811015610d2a57600080fd5b81019080805190602001909291905050506118a5565b6118d390919063ffffffff16565b61195c90919063ffffffff16565b61195c90919063ffffffff16565b9150505b90565b600042905090565b60095481565b6000610e9f610e8e3073ffffffffffffffffffffffffffffffffffffffff1663fc3e532b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610dcd57600080fd5b505afa158015610de1573d6000803e3d6000fd5b505050506040513d6020811015610df757600080fd5b81019080805190602001909291905050503073ffffffffffffffffffffffffffffffffffffffff1663f6153ccd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e4e57600080fd5b505afa158015610e62573d6000803e3d6000fd5b505050506040513d6020811015610e7857600080fd5b8101908080519060200190929190505050611af9565b60035461195c90919063ffffffff16565b905090565b6000806004541415610eb95760009050610f65565b610f62600454610f543073ffffffffffffffffffffffffffffffffffffffff16636e5b96346040518163ffffffff1660e01b815260040160206040518083038186803b158015610f0857600080fd5b505afa158015610f1c573d6000803e3d6000fd5b505050506040513d6020811015610f3257600080fd5b81019080805190602001909291905050506004546119e490919063ffffffff16565b611a6a90919063ffffffff16565b90505b90565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610ffb578015610fd757610fcc610d71565b600981905550610fe0565b60006009819055505b80600a60006101000a81548160ff0219169083151502179055505b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160000154141561107f576000915050611144565b600061110f82600501543073ffffffffffffffffffffffffffffffffffffffff16636e5b96346040518163ffffffff1660e01b815260040160206040518083038186803b1580156110cf57600080fd5b505afa1580156110e3573d6000803e3d6000fd5b505050506040513d60208110156110f957600080fd5b81019080805190602001909291905050506118a5565b9050816003015481111561113d576111348260030154826118d390919063ffffffff16565b92505050611144565b6000925050505b90565b600081116111bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4e6f7468696e6720746f206465706f736974000000000000000000000000000081525060200191505060405180910390fd5b6111c5611648565b6000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160050154111561126457600061123d826003015461122f84600501546003546118a5565b6118d390919063ffffffff16565b905061125681836004015461195c90919063ffffffff16565b82600401819055505061126f565b600081600401819055505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561131e57600080fd5b505af1158015611332573d6000803e3d6000fd5b505050506040513d602081101561134857600080fd5b8101908080519060200190929190505050506000611376611367611635565b846119e490919063ffffffff16565b905061138f81836000015461195c90919063ffffffff16565b82600001819055506113ac8160045461195c90919063ffffffff16565b6004819055506113c983836005015461195c90919063ffffffff16565b82600501819055506113e182600501546003546118a5565b82600301819055506113f1610d71565b8260020181905550611401610d71565b82600101819055503373ffffffffffffffffffffffffffffffffffffffff167f36af321ec8d3c75236829c5317affd40ddb308863a1236d2d277a4025cccee1e84834260405180848152602001838152602001828152602001935050505060405180910390a2505050565b600080620151809050600061147f610d71565b905060006001905060001515600a60009054906101000a900460ff16151514156114b757650ae9f7bcc0009050809350505050611585565b61012c600954018210156114ff576000622ab98090506114f7846114e9600b54600a0a846119e490919063ffffffff16565b611a6a90919063ffffffff16565b91505061157e565b6102586009540182101561154757600062155cc0905061153f84611531600b54600a0a846119e490919063ffffffff16565b611a6a90919063ffffffff16565b91505061157d565b60006201ddbc90506115798461156b600b54600a0a846119e490919063ffffffff16565b611a6a90919063ffffffff16565b9150505b5b8093505050505b90565b60065481565b600061162a61159b6104f9565b3073ffffffffffffffffffffffffffffffffffffffff1663fc3e532b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156115e157600080fd5b505afa1580156115f5573d6000803e3d6000fd5b505050506040513d602081101561160b57600080fd5b810190808051906020019092919050505061195c90919063ffffffff16565b905090565b60035481565b6000600b54600a0a905090565b60085481565b6000611652610d71565b905060065481116116635750611814565b60006004541161167a578060068190555050611814565b600060065442039050600061169f61169061146c565b836119e490919063ffffffff16565b9050826006819055506116bd8160055461195c90919063ffffffff16565b600581905550611761611750823073ffffffffffffffffffffffffffffffffffffffff1663f6153ccd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561171057600080fd5b505afa158015611724573d6000803e3d6000fd5b505050506040513d602081101561173a57600080fd5b8101908080519060200190929190505050611af9565b60035461195c90919063ffffffff16565b60038190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1930836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1580156117f857600080fd5b505af115801561180c573d6000803e3d6000fd5b505050505050505b565b600a60009054906101000a900460ff1681565b60075481565b600061184e670de0b6b3a7640000600454611a6a90919063ffffffff16565b905090565b60008061185e610d71565b90506000600454116118745760009150506118a2565b600060065482039050600061189961188a61146c565b836119e490919063ffffffff16565b90508093505050505b90565b6000670de0b6b3a76400006118c383856119e490919063ffffffff16565b816118ca57fe5b04905092915050565b60008282111561194b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b6000808284019050838110156119da576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000808314156119f75760009050611a64565b6000828402905082848281611a0857fe5b0414611a5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611b316021913960400191505060405180910390fd5b809150505b92915050565b6000808211611ae1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b6000828481611aec57fe5b0490508091505092915050565b6000611b2882611b1a670de0b6b3a7640000866119e490919063ffffffff16565b611a6a90919063ffffffff16565b90509291505056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220c0f842b06e7dbbaaf8121ec704af3383d8ee7a6318e421d9dd7b287c7af08e3264736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x3 SSTORE PUSH1 0x0 PUSH1 0x4 SSTORE PUSH1 0x0 PUSH1 0x5 SSTORE PUSH1 0x0 PUSH1 0x6 SSTORE PUSH2 0x3E8 PUSH1 0x7 SSTORE PUSH3 0x93A80 PUSH1 0x8 SSTORE PUSH1 0x0 PUSH1 0x9 SSTORE PUSH1 0x0 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x12 PUSH1 0xB SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1D0F CODESIZE SUB DUP1 PUSH2 0x1D0F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x123 PUSH2 0x171 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x179 JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1B87 DUP1 PUSH2 0x188 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x936B6CEC GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xDE0FF7C5 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE6FA445D GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE6FA445D EQ PUSH2 0x47F JUMPI DUP1 PUSH4 0xE941FA78 EQ PUSH2 0x49F JUMPI DUP1 PUSH4 0xF6153CCD EQ PUSH2 0x4BD JUMPI DUP1 PUSH4 0xFC3E532B EQ PUSH2 0x4DB JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0xDE0FF7C5 EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0xDF10B4E6 EQ PUSH2 0x457 JUMPI DUP1 PUSH4 0xE3161DDD EQ PUSH2 0x475 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x936B6CEC EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0xB8A3B366 EQ PUSH2 0x3C1 JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0xD201114A EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0xD2890A01 EQ PUSH2 0x41B JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x557ED1BA GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x557ED1BA EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0x6ABFD183 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x6E5B9634 EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x77926869 EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0x81AD5718 EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x341 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x497DE4A EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x1959A002 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x1A39D8EF EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x3A98EF39 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x47F1AAE7 EQ PUSH2 0x27B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x180 PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x219 PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x605 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x265 PUSH2 0xC39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x283 PUSH2 0xC3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH2 0xD71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BF PUSH2 0xD79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DD PUSH2 0xD7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FB PUSH2 0xEA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF68 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x349 PUSH2 0xFFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37D PUSH2 0x1024 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1147 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C9 PUSH2 0x146C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E7 PUSH2 0x1588 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x405 PUSH2 0x158E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x423 PUSH2 0x162F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x441 PUSH2 0x1635 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45F PUSH2 0x1642 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47D PUSH2 0x1648 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x487 PUSH2 0x1816 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A7 PUSH2 0x1829 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C5 PUSH2 0x182F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E3 PUSH2 0x1853 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x597 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 POP DUP7 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 GT PUSH2 0x6BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F7468696E6720746F20776974686472617700000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 ADD SLOAD DUP3 GT ISZERO PUSH2 0x738 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x576974686472617720616D6F756E7420657863656564732062616C616E636500 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x740 PUSH2 0x1648 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77E DUP3 PUSH1 0x4 ADD SLOAD PUSH2 0x770 DUP5 PUSH1 0x3 ADD SLOAD PUSH2 0x762 DUP7 PUSH1 0x5 ADD SLOAD PUSH1 0x3 SLOAD PUSH2 0x18A5 JUMP JUMPDEST PUSH2 0x18D3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x195C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7AB DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x79D DUP7 DUP6 PUSH2 0x19E4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A6A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7DC DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x7CE DUP8 DUP8 PUSH1 0x5 ADD SLOAD PUSH2 0x19E4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A6A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x7F5 DUP6 DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x18D3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x812 DUP6 PUSH1 0x4 SLOAD PUSH2 0x18D3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x5 SLOAD LT ISZERO PUSH2 0x890 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x576974686472617720616D6F756E7420657863656564732062616C616E636500 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8A5 DUP3 PUSH1 0x5 SLOAD PUSH2 0x18D3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0x8BE DUP3 DUP5 PUSH2 0x18D3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x8D9 DUP2 DUP4 PUSH2 0x195C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x8F4 PUSH1 0x8 SLOAD DUP6 PUSH1 0x1 ADD SLOAD PUSH2 0x195C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x8FC PUSH2 0xD71 JUMP JUMPDEST LT ISZERO PUSH2 0xAC1 JUMPI PUSH1 0x0 PUSH2 0x92C PUSH2 0x2710 PUSH2 0x91E PUSH1 0x64 DUP7 PUSH2 0x19E4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A6A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x941 DUP2 DUP5 PUSH2 0x18D3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA0A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42966C68 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xABB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB66 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP PUSH2 0xBA5 DUP2 DUP6 PUSH1 0x5 ADD SLOAD PUSH2 0x18D3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP5 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0xBD3 JUMPI PUSH2 0xBCA DUP5 PUSH1 0x5 ADD SLOAD PUSH1 0x3 SLOAD PUSH2 0x18A5 JUMP JUMPDEST DUP5 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP JUMPDEST TIMESTAMP DUP5 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP4 DUP8 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0xC9A JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xD6E JUMP JUMPDEST PUSH2 0xD6A DUP2 PUSH1 0x5 ADD SLOAD PUSH2 0xD5C DUP4 PUSH1 0x4 ADD SLOAD PUSH2 0xD4E DUP6 PUSH1 0x3 ADD SLOAD PUSH2 0xD40 DUP8 PUSH1 0x5 ADD SLOAD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6E5B9634 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD14 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x18A5 JUMP JUMPDEST PUSH2 0x18D3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x195C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x195C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE9F PUSH2 0xE8E ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFC3E532B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDE1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF6153CCD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE62 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1AF9 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x195C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 SLOAD EQ ISZERO PUSH2 0xEB9 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xF65 JUMP JUMPDEST PUSH2 0xF62 PUSH1 0x4 SLOAD PUSH2 0xF54 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6E5B9634 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF1C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x4 SLOAD PUSH2 0x19E4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A6A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xFFB JUMPI DUP1 ISZERO PUSH2 0xFD7 JUMPI PUSH2 0xFCC PUSH2 0xD71 JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH2 0xFE0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 DUP2 SWAP1 SSTORE POP JUMPDEST DUP1 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x107F JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x1144 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x110F DUP3 PUSH1 0x5 ADD SLOAD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6E5B9634 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10E3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x18A5 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x3 ADD SLOAD DUP2 GT ISZERO PUSH2 0x113D JUMPI PUSH2 0x1134 DUP3 PUSH1 0x3 ADD SLOAD DUP3 PUSH2 0x18D3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x1144 JUMP JUMPDEST PUSH1 0x0 SWAP3 POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x11BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F7468696E6720746F206465706F7369740000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11C5 PUSH2 0x1648 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x5 ADD SLOAD GT ISZERO PUSH2 0x1264 JUMPI PUSH1 0x0 PUSH2 0x123D DUP3 PUSH1 0x3 ADD SLOAD PUSH2 0x122F DUP5 PUSH1 0x5 ADD SLOAD PUSH1 0x3 SLOAD PUSH2 0x18A5 JUMP JUMPDEST PUSH2 0x18D3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1256 DUP2 DUP4 PUSH1 0x4 ADD SLOAD PUSH2 0x195C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP POP PUSH2 0x126F JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x131E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1332 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1348 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP PUSH1 0x0 PUSH2 0x1376 PUSH2 0x1367 PUSH2 0x1635 JUMP JUMPDEST DUP5 PUSH2 0x19E4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x138F DUP2 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x195C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x13AC DUP2 PUSH1 0x4 SLOAD PUSH2 0x195C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0x13C9 DUP4 DUP4 PUSH1 0x5 ADD SLOAD PUSH2 0x195C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x13E1 DUP3 PUSH1 0x5 ADD SLOAD PUSH1 0x3 SLOAD PUSH2 0x18A5 JUMP JUMPDEST DUP3 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x13F1 PUSH2 0xD71 JUMP JUMPDEST DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1401 PUSH2 0xD71 JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x36AF321EC8D3C75236829C5317AFFD40DDB308863A1236D2D277A4025CCCEE1E DUP5 DUP4 TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x15180 SWAP1 POP PUSH1 0x0 PUSH2 0x147F PUSH2 0xD71 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 ISZERO ISZERO PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x14B7 JUMPI PUSH6 0xAE9F7BCC000 SWAP1 POP DUP1 SWAP4 POP POP POP POP PUSH2 0x1585 JUMP JUMPDEST PUSH2 0x12C PUSH1 0x9 SLOAD ADD DUP3 LT ISZERO PUSH2 0x14FF JUMPI PUSH1 0x0 PUSH3 0x2AB980 SWAP1 POP PUSH2 0x14F7 DUP5 PUSH2 0x14E9 PUSH1 0xB SLOAD PUSH1 0xA EXP DUP5 PUSH2 0x19E4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A6A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP PUSH2 0x157E JUMP JUMPDEST PUSH2 0x258 PUSH1 0x9 SLOAD ADD DUP3 LT ISZERO PUSH2 0x1547 JUMPI PUSH1 0x0 PUSH3 0x155CC0 SWAP1 POP PUSH2 0x153F DUP5 PUSH2 0x1531 PUSH1 0xB SLOAD PUSH1 0xA EXP DUP5 PUSH2 0x19E4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A6A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP PUSH2 0x157D JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1DDBC SWAP1 POP PUSH2 0x1579 DUP5 PUSH2 0x156B PUSH1 0xB SLOAD PUSH1 0xA EXP DUP5 PUSH2 0x19E4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A6A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP JUMPDEST JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x162A PUSH2 0x159B PUSH2 0x4F9 JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFC3E532B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x160B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x195C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD PUSH1 0xA EXP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1652 PUSH2 0xD71 JUMP JUMPDEST SWAP1 POP PUSH1 0x6 SLOAD DUP2 GT PUSH2 0x1663 JUMPI POP PUSH2 0x1814 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD GT PUSH2 0x167A JUMPI DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP PUSH2 0x1814 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD TIMESTAMP SUB SWAP1 POP PUSH1 0x0 PUSH2 0x169F PUSH2 0x1690 PUSH2 0x146C JUMP JUMPDEST DUP4 PUSH2 0x19E4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0x16BD DUP2 PUSH1 0x5 SLOAD PUSH2 0x195C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0x1761 PUSH2 0x1750 DUP3 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF6153CCD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1710 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1724 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x173A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1AF9 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x195C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 ADDRESS DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x17F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x180C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMPDEST JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x184E PUSH8 0xDE0B6B3A7640000 PUSH1 0x4 SLOAD PUSH2 0x1A6A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x185E PUSH2 0xD71 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x4 SLOAD GT PUSH2 0x1874 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x18A2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD DUP3 SUB SWAP1 POP PUSH1 0x0 PUSH2 0x1899 PUSH2 0x188A PUSH2 0x146C JUMP JUMPDEST DUP4 PUSH2 0x19E4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x18C3 DUP4 DUP6 PUSH2 0x19E4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x18CA JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x194B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x19DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x19F7 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1A64 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x1A08 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1A5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B31 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x1AE1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP2 PUSH2 0x1AEC JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B28 DUP3 PUSH2 0x1B1A PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x19E4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A6A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID MSTORE8 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77A26469706673582212 KECCAK256 0xC0 0xF8 TIMESTAMP 0xB0 PUSH15 0x7DBBAAF8121EC704AF3383D8EE7A63 XOR 0xE4 0x21 0xD9 0xDD PUSH28 0x287C7AF08E3264736F6C634300060C00330000000000000000000000 ",
							"sourceMap": "718:8525:0:-:0;;;1290:1;1261:30;;1327:1;1298:30;;1364:1;1335:30;;1404:1;1372:33;;1441:4;1412:33;;1487:6;1452:41;;1611:1;1577:35;;1647:5;1619:33;;;;;;;;;;;;;;;;;;;;1678:2;1659:21;;853:190;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;932:6;924:5;;:14;;;;;;;;;;;;;;;;;;957:10;949:5;;:18;;;;;;;;;;;;;;;;;;995:9;:7;;;:9;;:::i;:::-;978:14;:26;;;;1026:9;1015:8;;:20;;;;;;;;;;;;;;;;;;853:190;;718:8525;;7671:78;7711:7;7738:3;7731:10;;7671:78;:::o;718:8525::-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101735760003560e01c8063936b6cec116100de578063de0ff7c511610097578063e6fa445d11610071578063e6fa445d1461047f578063e941fa781461049f578063f6153ccd146104bd578063fc3e532b146104db57610173565b8063de0ff7c514610439578063df10b4e614610457578063e3161ddd1461047557610173565b8063936b6cec14610375578063b6b55f2514610393578063b8a3b366146103c1578063c8f33c91146103df578063d201114a146103fd578063d2890a011461041b57610173565b8063557ed1ba11610130578063557ed1ba146102995780636abfd183146102b75780636e5b9634146102d557806377926869146102f357806381ad5718146103115780638da5cb5b1461034157610173565b80630497de4a146101785780631959a002146101965780631a39d8ef146102115780632e1a7d4d1461022f5780633a98ef391461025d57806347f1aae71461027b575b600080fd5b6101806104f9565b6040518082815260200191505060405180910390f35b6101d8600480360360208110156101ac57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105c3565b60405180878152602001868152602001858152602001848152602001838152602001828152602001965050505050505060405180910390f35b6102196105ff565b6040518082815260200191505060405180910390f35b61025b6004803603602081101561024557600080fd5b8101908080359060200190929190505050610605565b005b610265610c39565b6040518082815260200191505060405180910390f35b610283610c3f565b6040518082815260200191505060405180910390f35b6102a1610d71565b6040518082815260200191505060405180910390f35b6102bf610d79565b6040518082815260200191505060405180910390f35b6102dd610d7f565b6040518082815260200191505060405180910390f35b6102fb610ea4565b6040518082815260200191505060405180910390f35b61033f6004803603602081101561032757600080fd5b81019080803515159060200190929190505050610f68565b005b610349610ffe565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61037d611024565b6040518082815260200191505060405180910390f35b6103bf600480360360208110156103a957600080fd5b8101908080359060200190929190505050611147565b005b6103c961146c565b6040518082815260200191505060405180910390f35b6103e7611588565b6040518082815260200191505060405180910390f35b61040561158e565b6040518082815260200191505060405180910390f35b61042361162f565b6040518082815260200191505060405180910390f35b610441611635565b6040518082815260200191505060405180910390f35b61045f611642565b6040518082815260200191505060405180910390f35b61047d611648565b005b610487611816565b60405180821515815260200191505060405180910390f35b6104a7611829565b6040518082815260200191505060405180910390f35b6104c561182f565b6040518082815260200191505060405180910390f35b6104e3611853565b6040518082815260200191505060405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561058357600080fd5b505afa158015610597573d6000803e3d6000fd5b505050506040513d60208110156105ad57600080fd5b8101908080519060200190929190505050905090565b600c6020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154908060050154905086565b60055481565b6000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600082116106be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f4e6f7468696e6720746f2077697468647261770000000000000000000000000081525060200191505060405180910390fd5b8060000154821115610738576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f576974686472617720616d6f756e7420657863656564732062616c616e63650081525060200191505060405180910390fd5b610740611648565b600061077e8260040154610770846003015461076286600501546003546118a5565b6118d390919063ffffffff16565b61195c90919063ffffffff16565b905060006107ab836000015461079d86856119e490919063ffffffff16565b611a6a90919063ffffffff16565b905060006107dc84600001546107ce8787600501546119e490919063ffffffff16565b611a6a90919063ffffffff16565b90506107f58585600001546118d390919063ffffffff16565b8460000181905550610812856004546118d390919063ffffffff16565b600481905550816005541015610890576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f576974686472617720616d6f756e7420657863656564732062616c616e63650081525060200191505060405180910390fd5b6108a5826005546118d390919063ffffffff16565b6005819055506108be82846118d390919063ffffffff16565b84600401819055506108d9818361195c90919063ffffffff16565b91506108f4600854856001015461195c90919063ffffffff16565b6108fc610d71565b1015610ac157600061092c61271061091e6064866119e490919063ffffffff16565b611a6a90919063ffffffff16565b905061094181846118d390919063ffffffff16565b925060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156109f657600080fd5b505af1158015610a0a573d6000803e3d6000fd5b505050506040513d6020811015610a2057600080fd5b810190808051906020019092919050505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015610aa757600080fd5b505af1158015610abb573d6000803e3d6000fd5b50505050505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610b5257600080fd5b505af1158015610b66573d6000803e3d6000fd5b505050506040513d6020811015610b7c57600080fd5b810190808051906020019092919050505050610ba58185600501546118d390919063ffffffff16565b8460050181905550600084600001541115610bd357610bca84600501546003546118a5565b84600301819055505b4284600201819055503373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5688387604051808381526020018281526020019250505060405180910390a25050505050565b60045481565b600080600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081600001541415610c9a576000915050610d6e565b610d6a8160050154610d5c8360040154610d4e8560030154610d4087600501543073ffffffffffffffffffffffffffffffffffffffff16636e5b96346040518163ffffffff1660e01b815260040160206040518083038186803b158015610d0057600080fd5b505afa158015610d14573d6000803e3d6000fd5b505050506040513d6020811015610d2a57600080fd5b81019080805190602001909291905050506118a5565b6118d390919063ffffffff16565b61195c90919063ffffffff16565b61195c90919063ffffffff16565b9150505b90565b600042905090565b60095481565b6000610e9f610e8e3073ffffffffffffffffffffffffffffffffffffffff1663fc3e532b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610dcd57600080fd5b505afa158015610de1573d6000803e3d6000fd5b505050506040513d6020811015610df757600080fd5b81019080805190602001909291905050503073ffffffffffffffffffffffffffffffffffffffff1663f6153ccd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e4e57600080fd5b505afa158015610e62573d6000803e3d6000fd5b505050506040513d6020811015610e7857600080fd5b8101908080519060200190929190505050611af9565b60035461195c90919063ffffffff16565b905090565b6000806004541415610eb95760009050610f65565b610f62600454610f543073ffffffffffffffffffffffffffffffffffffffff16636e5b96346040518163ffffffff1660e01b815260040160206040518083038186803b158015610f0857600080fd5b505afa158015610f1c573d6000803e3d6000fd5b505050506040513d6020811015610f3257600080fd5b81019080805190602001909291905050506004546119e490919063ffffffff16565b611a6a90919063ffffffff16565b90505b90565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610ffb578015610fd757610fcc610d71565b600981905550610fe0565b60006009819055505b80600a60006101000a81548160ff0219169083151502179055505b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160000154141561107f576000915050611144565b600061110f82600501543073ffffffffffffffffffffffffffffffffffffffff16636e5b96346040518163ffffffff1660e01b815260040160206040518083038186803b1580156110cf57600080fd5b505afa1580156110e3573d6000803e3d6000fd5b505050506040513d60208110156110f957600080fd5b81019080805190602001909291905050506118a5565b9050816003015481111561113d576111348260030154826118d390919063ffffffff16565b92505050611144565b6000925050505b90565b600081116111bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4e6f7468696e6720746f206465706f736974000000000000000000000000000081525060200191505060405180910390fd5b6111c5611648565b6000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160050154111561126457600061123d826003015461122f84600501546003546118a5565b6118d390919063ffffffff16565b905061125681836004015461195c90919063ffffffff16565b82600401819055505061126f565b600081600401819055505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561131e57600080fd5b505af1158015611332573d6000803e3d6000fd5b505050506040513d602081101561134857600080fd5b8101908080519060200190929190505050506000611376611367611635565b846119e490919063ffffffff16565b905061138f81836000015461195c90919063ffffffff16565b82600001819055506113ac8160045461195c90919063ffffffff16565b6004819055506113c983836005015461195c90919063ffffffff16565b82600501819055506113e182600501546003546118a5565b82600301819055506113f1610d71565b8260020181905550611401610d71565b82600101819055503373ffffffffffffffffffffffffffffffffffffffff167f36af321ec8d3c75236829c5317affd40ddb308863a1236d2d277a4025cccee1e84834260405180848152602001838152602001828152602001935050505060405180910390a2505050565b600080620151809050600061147f610d71565b905060006001905060001515600a60009054906101000a900460ff16151514156114b757650ae9f7bcc0009050809350505050611585565b61012c600954018210156114ff576000622ab98090506114f7846114e9600b54600a0a846119e490919063ffffffff16565b611a6a90919063ffffffff16565b91505061157e565b6102586009540182101561154757600062155cc0905061153f84611531600b54600a0a846119e490919063ffffffff16565b611a6a90919063ffffffff16565b91505061157d565b60006201ddbc90506115798461156b600b54600a0a846119e490919063ffffffff16565b611a6a90919063ffffffff16565b9150505b5b8093505050505b90565b60065481565b600061162a61159b6104f9565b3073ffffffffffffffffffffffffffffffffffffffff1663fc3e532b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156115e157600080fd5b505afa1580156115f5573d6000803e3d6000fd5b505050506040513d602081101561160b57600080fd5b810190808051906020019092919050505061195c90919063ffffffff16565b905090565b60035481565b6000600b54600a0a905090565b60085481565b6000611652610d71565b905060065481116116635750611814565b60006004541161167a578060068190555050611814565b600060065442039050600061169f61169061146c565b836119e490919063ffffffff16565b9050826006819055506116bd8160055461195c90919063ffffffff16565b600581905550611761611750823073ffffffffffffffffffffffffffffffffffffffff1663f6153ccd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561171057600080fd5b505afa158015611724573d6000803e3d6000fd5b505050506040513d602081101561173a57600080fd5b8101908080519060200190929190505050611af9565b60035461195c90919063ffffffff16565b60038190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1930836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1580156117f857600080fd5b505af115801561180c573d6000803e3d6000fd5b505050505050505b565b600a60009054906101000a900460ff1681565b60075481565b600061184e670de0b6b3a7640000600454611a6a90919063ffffffff16565b905090565b60008061185e610d71565b90506000600454116118745760009150506118a2565b600060065482039050600061189961188a61146c565b836119e490919063ffffffff16565b90508093505050505b90565b6000670de0b6b3a76400006118c383856119e490919063ffffffff16565b816118ca57fe5b04905092915050565b60008282111561194b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b6000808284019050838110156119da576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000808314156119f75760009050611a64565b6000828402905082848281611a0857fe5b0414611a5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611b316021913960400191505060405180910390fd5b809150505b92915050565b6000808211611ae1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b6000828481611aec57fe5b0490508091505092915050565b6000611b2882611b1a670de0b6b3a7640000866119e490919063ffffffff16565b611a6a90919063ffffffff16565b90509291505056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220c0f842b06e7dbbaaf8121ec704af3383d8ee7a6318e421d9dd7b287c7af08e3264736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x936B6CEC GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xDE0FF7C5 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE6FA445D GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE6FA445D EQ PUSH2 0x47F JUMPI DUP1 PUSH4 0xE941FA78 EQ PUSH2 0x49F JUMPI DUP1 PUSH4 0xF6153CCD EQ PUSH2 0x4BD JUMPI DUP1 PUSH4 0xFC3E532B EQ PUSH2 0x4DB JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0xDE0FF7C5 EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0xDF10B4E6 EQ PUSH2 0x457 JUMPI DUP1 PUSH4 0xE3161DDD EQ PUSH2 0x475 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x936B6CEC EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0xB8A3B366 EQ PUSH2 0x3C1 JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x3DF JUMPI DUP1 PUSH4 0xD201114A EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0xD2890A01 EQ PUSH2 0x41B JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x557ED1BA GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x557ED1BA EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0x6ABFD183 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x6E5B9634 EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x77926869 EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0x81AD5718 EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x341 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x497DE4A EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x1959A002 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x1A39D8EF EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x3A98EF39 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x47F1AAE7 EQ PUSH2 0x27B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x180 PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x219 PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x605 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x265 PUSH2 0xC39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x283 PUSH2 0xC3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A1 PUSH2 0xD71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BF PUSH2 0xD79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DD PUSH2 0xD7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FB PUSH2 0xEA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF68 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x349 PUSH2 0xFFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37D PUSH2 0x1024 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1147 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C9 PUSH2 0x146C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E7 PUSH2 0x1588 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x405 PUSH2 0x158E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x423 PUSH2 0x162F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x441 PUSH2 0x1635 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45F PUSH2 0x1642 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47D PUSH2 0x1648 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x487 PUSH2 0x1816 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A7 PUSH2 0x1829 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C5 PUSH2 0x182F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E3 PUSH2 0x1853 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x597 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 POP DUP7 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 GT PUSH2 0x6BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F7468696E6720746F20776974686472617700000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 ADD SLOAD DUP3 GT ISZERO PUSH2 0x738 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x576974686472617720616D6F756E7420657863656564732062616C616E636500 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x740 PUSH2 0x1648 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77E DUP3 PUSH1 0x4 ADD SLOAD PUSH2 0x770 DUP5 PUSH1 0x3 ADD SLOAD PUSH2 0x762 DUP7 PUSH1 0x5 ADD SLOAD PUSH1 0x3 SLOAD PUSH2 0x18A5 JUMP JUMPDEST PUSH2 0x18D3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x195C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7AB DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x79D DUP7 DUP6 PUSH2 0x19E4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A6A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7DC DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x7CE DUP8 DUP8 PUSH1 0x5 ADD SLOAD PUSH2 0x19E4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A6A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x7F5 DUP6 DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x18D3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x812 DUP6 PUSH1 0x4 SLOAD PUSH2 0x18D3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x5 SLOAD LT ISZERO PUSH2 0x890 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x576974686472617720616D6F756E7420657863656564732062616C616E636500 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8A5 DUP3 PUSH1 0x5 SLOAD PUSH2 0x18D3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0x8BE DUP3 DUP5 PUSH2 0x18D3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x8D9 DUP2 DUP4 PUSH2 0x195C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x8F4 PUSH1 0x8 SLOAD DUP6 PUSH1 0x1 ADD SLOAD PUSH2 0x195C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x8FC PUSH2 0xD71 JUMP JUMPDEST LT ISZERO PUSH2 0xAC1 JUMPI PUSH1 0x0 PUSH2 0x92C PUSH2 0x2710 PUSH2 0x91E PUSH1 0x64 DUP7 PUSH2 0x19E4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A6A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x941 DUP2 DUP5 PUSH2 0x18D3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA0A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42966C68 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xABB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB66 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP PUSH2 0xBA5 DUP2 DUP6 PUSH1 0x5 ADD SLOAD PUSH2 0x18D3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP5 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0xBD3 JUMPI PUSH2 0xBCA DUP5 PUSH1 0x5 ADD SLOAD PUSH1 0x3 SLOAD PUSH2 0x18A5 JUMP JUMPDEST DUP5 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP JUMPDEST TIMESTAMP DUP5 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP4 DUP8 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0xC9A JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xD6E JUMP JUMPDEST PUSH2 0xD6A DUP2 PUSH1 0x5 ADD SLOAD PUSH2 0xD5C DUP4 PUSH1 0x4 ADD SLOAD PUSH2 0xD4E DUP6 PUSH1 0x3 ADD SLOAD PUSH2 0xD40 DUP8 PUSH1 0x5 ADD SLOAD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6E5B9634 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD14 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x18A5 JUMP JUMPDEST PUSH2 0x18D3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x195C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x195C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE9F PUSH2 0xE8E ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFC3E532B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDE1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF6153CCD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE62 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1AF9 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x195C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 SLOAD EQ ISZERO PUSH2 0xEB9 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xF65 JUMP JUMPDEST PUSH2 0xF62 PUSH1 0x4 SLOAD PUSH2 0xF54 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6E5B9634 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF1C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x4 SLOAD PUSH2 0x19E4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A6A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xFFB JUMPI DUP1 ISZERO PUSH2 0xFD7 JUMPI PUSH2 0xFCC PUSH2 0xD71 JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH2 0xFE0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 DUP2 SWAP1 SSTORE POP JUMPDEST DUP1 PUSH1 0xA PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x107F JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x1144 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x110F DUP3 PUSH1 0x5 ADD SLOAD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6E5B9634 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10E3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x18A5 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x3 ADD SLOAD DUP2 GT ISZERO PUSH2 0x113D JUMPI PUSH2 0x1134 DUP3 PUSH1 0x3 ADD SLOAD DUP3 PUSH2 0x18D3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x1144 JUMP JUMPDEST PUSH1 0x0 SWAP3 POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x11BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F7468696E6720746F206465706F7369740000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11C5 PUSH2 0x1648 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x5 ADD SLOAD GT ISZERO PUSH2 0x1264 JUMPI PUSH1 0x0 PUSH2 0x123D DUP3 PUSH1 0x3 ADD SLOAD PUSH2 0x122F DUP5 PUSH1 0x5 ADD SLOAD PUSH1 0x3 SLOAD PUSH2 0x18A5 JUMP JUMPDEST PUSH2 0x18D3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1256 DUP2 DUP4 PUSH1 0x4 ADD SLOAD PUSH2 0x195C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP POP PUSH2 0x126F JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x131E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1332 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1348 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP PUSH1 0x0 PUSH2 0x1376 PUSH2 0x1367 PUSH2 0x1635 JUMP JUMPDEST DUP5 PUSH2 0x19E4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x138F DUP2 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x195C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x13AC DUP2 PUSH1 0x4 SLOAD PUSH2 0x195C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0x13C9 DUP4 DUP4 PUSH1 0x5 ADD SLOAD PUSH2 0x195C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x13E1 DUP3 PUSH1 0x5 ADD SLOAD PUSH1 0x3 SLOAD PUSH2 0x18A5 JUMP JUMPDEST DUP3 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x13F1 PUSH2 0xD71 JUMP JUMPDEST DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1401 PUSH2 0xD71 JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x36AF321EC8D3C75236829C5317AFFD40DDB308863A1236D2D277A4025CCCEE1E DUP5 DUP4 TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x15180 SWAP1 POP PUSH1 0x0 PUSH2 0x147F PUSH2 0xD71 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 ISZERO ISZERO PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x14B7 JUMPI PUSH6 0xAE9F7BCC000 SWAP1 POP DUP1 SWAP4 POP POP POP POP PUSH2 0x1585 JUMP JUMPDEST PUSH2 0x12C PUSH1 0x9 SLOAD ADD DUP3 LT ISZERO PUSH2 0x14FF JUMPI PUSH1 0x0 PUSH3 0x2AB980 SWAP1 POP PUSH2 0x14F7 DUP5 PUSH2 0x14E9 PUSH1 0xB SLOAD PUSH1 0xA EXP DUP5 PUSH2 0x19E4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A6A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP PUSH2 0x157E JUMP JUMPDEST PUSH2 0x258 PUSH1 0x9 SLOAD ADD DUP3 LT ISZERO PUSH2 0x1547 JUMPI PUSH1 0x0 PUSH3 0x155CC0 SWAP1 POP PUSH2 0x153F DUP5 PUSH2 0x1531 PUSH1 0xB SLOAD PUSH1 0xA EXP DUP5 PUSH2 0x19E4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A6A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP PUSH2 0x157D JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1DDBC SWAP1 POP PUSH2 0x1579 DUP5 PUSH2 0x156B PUSH1 0xB SLOAD PUSH1 0xA EXP DUP5 PUSH2 0x19E4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A6A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP JUMPDEST JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x162A PUSH2 0x159B PUSH2 0x4F9 JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFC3E532B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x160B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x195C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB SLOAD PUSH1 0xA EXP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1652 PUSH2 0xD71 JUMP JUMPDEST SWAP1 POP PUSH1 0x6 SLOAD DUP2 GT PUSH2 0x1663 JUMPI POP PUSH2 0x1814 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD GT PUSH2 0x167A JUMPI DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP PUSH2 0x1814 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD TIMESTAMP SUB SWAP1 POP PUSH1 0x0 PUSH2 0x169F PUSH2 0x1690 PUSH2 0x146C JUMP JUMPDEST DUP4 PUSH2 0x19E4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0x16BD DUP2 PUSH1 0x5 SLOAD PUSH2 0x195C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0x1761 PUSH2 0x1750 DUP3 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF6153CCD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1710 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1724 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x173A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1AF9 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x195C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 ADDRESS DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x17F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x180C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMPDEST JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x184E PUSH8 0xDE0B6B3A7640000 PUSH1 0x4 SLOAD PUSH2 0x1A6A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x185E PUSH2 0xD71 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x4 SLOAD GT PUSH2 0x1874 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x18A2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD DUP3 SUB SWAP1 POP PUSH1 0x0 PUSH2 0x1899 PUSH2 0x188A PUSH2 0x146C JUMP JUMPDEST DUP4 PUSH2 0x19E4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x18C3 DUP4 DUP6 PUSH2 0x19E4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x18CA JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x194B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x19DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x19F7 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1A64 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x1A08 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1A5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B31 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x1AE1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP2 PUSH2 0x1AEC JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B28 DUP3 PUSH2 0x1B1A PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x19E4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A6A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID MSTORE8 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77A26469706673582212 KECCAK256 0xC0 0xF8 TIMESTAMP 0xB0 PUSH15 0x7DBBAAF8121EC704AF3383D8EE7A63 XOR 0xE4 0x21 0xD9 0xDD PUSH28 0x287C7AF08E3264736F6C634300060C00330000000000000000000000 ",
							"sourceMap": "718:8525:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7757:115;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2056:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1335:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3564:1834;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1298:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7121:336;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7671:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1577:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6600:159;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7465:171;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8958:282;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;824:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;6767:346;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2334:1222;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8019:931;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1372:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6353:129;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1261:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7880:97;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1452:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5406:617;;;:::i;:::-;;1619:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1412;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6490:102;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6031:314;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7757:115;7807:7;7834:5;;;;;;;;;;;:15;;;7858:4;7834:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7827:37;;7757:115;:::o;2056:44::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1335:30::-;;;;:::o;3564:1834::-;3617:21;3641:8;:20;3650:10;3641:20;;;;;;;;;;;;;;;3617:44;;3690:1;3680:7;:11;3672:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3745:4;:11;;;3734:7;:22;;3726:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3805:12;:10;:12::i;:::-;3860:23;3886:103;3976:4;:12;;;3886:71;3941:4;:15;;;3886:36;3897:4;:11;;;3910;;3886:10;:36::i;:::-;:54;;:71;;;;:::i;:::-;:89;;:103;;;;:::i;:::-;3860:129;;4041:22;4066:45;4099:4;:11;;;4066:28;4086:7;4066:15;:19;;:28;;;;:::i;:::-;:32;;:45;;;;:::i;:::-;4041:70;;4163:18;4184:41;4213:4;:11;;;4184:24;4200:7;4184:4;:11;;;:15;;:24;;;;:::i;:::-;:28;;:41;;;;:::i;:::-;4163:62;;4252:24;4268:7;4252:4;:11;;;:15;;:24;;;;:::i;:::-;4238:4;:11;;:38;;;;4301:24;4317:7;4301:11;;:15;;:24;;;;:::i;:::-;4287:11;:38;;;;4375:14;4360:11;;:29;;4338:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4506:31;4522:14;4506:11;;:15;;:31;;;;:::i;:::-;4492:11;:45;;;;4589:35;4609:14;4589:15;:19;;:35;;;;:::i;:::-;4574:4;:12;;:50;;;;4684:30;4703:10;4684:14;:18;;:30;;;;:::i;:::-;4667:47;;4743:45;4770:17;;4743:4;:22;;;:26;;:45;;;;:::i;:::-;4731:9;:7;:9::i;:::-;:57;4727:339;;;4805:26;4834:34;4862:5;4834:23;4853:3;4834:14;:18;;:23;;;;:::i;:::-;:27;;:34;;;;:::i;:::-;4805:63;;4900:38;4919:18;4900:14;:18;;:38;;;;:::i;:::-;4883:55;;4953:5;;;;;;;;;;:14;;;4976:8;;;;;;;;;;;4987:18;4953:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5021:8;;;;;;;;;;;:13;;;5035:18;5021:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4727:339;;5078:5;;;;;;;;;;:14;;;5093:10;5105:14;5078:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5145:27;5161:10;5145:4;:11;;;:15;;:27;;;;:::i;:::-;5131:4;:11;;:41;;;;5203:1;5189:4;:11;;;:15;5185:88;;;5237:36;5248:4;:11;;;5261;;5237:10;:36::i;:::-;5219:4;:15;;:54;;;;5185:88;5312:15;5286:4;:23;;:41;;;;5354:10;5345:45;;;5366:14;5382:7;5345:45;;;;;;;;;;;;;;;;;;;;;;;;3564:1834;;;;;:::o;1298:30::-;;;;:::o;7121:336::-;7161:7;7181:21;7205:8;:20;7214:10;7205:20;;;;;;;;;;;;;;;7181:44;;7255:1;7240:4;:11;;;:16;7236:30;;;7265:1;7258:8;;;;;7236:30;7297:152;7437:4;:11;;;7297:117;7401:4;:12;;;7297:81;7362:4;:15;;;7297:42;7308:4;:11;;;7321:4;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7297:10;:42::i;:::-;:64;;:81;;;;:::i;:::-;:103;;:117;;;;:::i;:::-;:139;;:152;;;;:::i;:::-;7277:172;;;7121:336;;:::o;7671:78::-;7711:7;7738:3;7731:10;;7671:78;:::o;1577:35::-;;;;:::o;6600:159::-;6645:7;6685:66;6701:49;6710:4;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6730:4;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6701:8;:49::i;:::-;6685:11;;:15;;:66;;;;:::i;:::-;6665:86;;6600:159;:::o;7465:171::-;7509:7;7548:1;7533:11;;:16;7529:30;;;7558:1;7551:8;;;;7529:30;7577:51;7616:11;;7577:34;7593:4;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7577:11;;:15;;:34;;;;:::i;:::-;:38;;:51;;;;:::i;:::-;7570:58;;7465:171;;:::o;8958:282::-;9031:5;;;;;;;;;;;9017:19;;:10;:19;;;9013:220;;;9057:4;9053:134;;;9101:9;:7;:9::i;:::-;9082:16;:28;;;;9053:134;;;9170:1;9151:16;:20;;;;9053:134;9217:4;9201:13;;:20;;;;;;;;;;;;;;;;;;9013:220;8958:282;:::o;824:20::-;;;;;;;;;;;;;:::o;6767:346::-;6810:7;6830:21;6854:8;:20;6863:10;6854:20;;;;;;;;;;;;;;;6830:44;;6904:1;6889:4;:11;;;:16;6885:57;;;6929:1;6922:8;;;;;6885:57;6954:11;6968:42;6979:4;:11;;;6992:4;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6968:10;:42::i;:::-;6954:56;;7033:4;:15;;;7027:3;:21;7023:82;;;7057:24;7065:4;:15;;;7057:3;:7;;:24;;;;:::i;:::-;7050:31;;;;;;7023:82;7104:1;7097:8;;;;6767:346;;:::o;2334:1222::-;2404:1;2394:7;:11;2386:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2441:12;:10;:12::i;:::-;2464:21;2488:8;:20;2497:10;2488:20;;;;;;;;;;;;;;;2464:44;;2539:1;2525:4;:11;;;:15;2521:287;;;2557:15;2575:89;2634:4;:15;;;2575:36;2586:4;:11;;;2599;;2575:10;:36::i;:::-;:40;;:89;;;;:::i;:::-;2557:107;;2749:25;2766:7;2749:4;:12;;;:16;;:25;;;;:::i;:::-;2734:4;:12;;:40;;;;2521:287;;;;2807:1;2792:4;:12;;:16;;;;2521:287;2821:5;;;;;;;;;;:18;;;2840:10;2860:4;2867:7;2821:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2888:21;2912:23;2924:10;:8;:10::i;:::-;2912:7;:11;;:23;;;;:::i;:::-;2888:47;;3176:30;3192:13;3176:4;:11;;;:15;;:30;;;;:::i;:::-;3162:4;:11;;:44;;;;3231:30;3247:13;3231:11;;:15;;:30;;;;:::i;:::-;3217:11;:44;;;;3288:24;3304:7;3288:4;:11;;;:15;;:24;;;;:::i;:::-;3274:4;:11;;:38;;;;3341:36;3352:4;:11;;;3365;;3341:10;:36::i;:::-;3323:4;:15;;:54;;;;3416:9;:7;:9::i;:::-;3390:4;:23;;:35;;;;3461:9;:7;:9::i;:::-;3436:4;:22;;:34;;;;3496:10;3488:60;;;3508:7;3517:13;3532:15;3488:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2334:1222;;;:::o;8019:931::-;8072:7;8092:11;8106:9;8092:23;;8126:15;8144:9;:7;:9::i;:::-;8126:27;;8164:12;8179:1;8164:16;;8214:5;8197:22;;:13;;;;;;;;;;;:22;;;8193:192;;;8284:14;8277:21;;8369:4;8362:11;;;;;;;8193:192;8461:6;8442:16;;:25;8431:7;:37;8427:494;;;8485:15;8503:7;8485:25;;8532:45;8573:3;8532:36;8557:8;;8545:2;:21;8532:7;:11;;:36;;;;:::i;:::-;:40;;:45;;;;:::i;:::-;8525:52;;8427:494;;;;8668:7;8649:16;;:26;8638:7;:38;8634:287;;;8693:15;8711:7;8693:25;;8740:45;8781:3;8740:36;8765:8;;8753:2;:21;8740:7;:11;;:36;;;;:::i;:::-;:40;;:45;;;;:::i;:::-;8733:52;;8634:287;;;;8818:15;8836:6;8818:24;;8864:45;8905:3;8864:36;8889:8;;8877:2;:21;8864:7;:11;;:36;;;;:::i;:::-;:40;;:45;;;;:::i;:::-;8857:52;;8634:287;;8427:494;8938:4;8931:11;;;;;8019:931;;:::o;1372:33::-;;;;:::o;6353:129::-;6404:7;6431:43;6454:19;:17;:19::i;:::-;6431:4;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:22;;:43;;;;:::i;:::-;6424:50;;6353:129;:::o;1261:30::-;;;;:::o;7880:97::-;7921:7;7960:8;;7948:2;:21;7941:28;;7880:97;:::o;1452:41::-;;;;:::o;5406:617::-;5446:15;5464:9;:7;:9::i;:::-;5446:27;;5499:14;;5488:7;:25;5484:64;;5530:7;;;5484:64;5579:1;5564:11;;:16;5560:94;;5614:7;5597:14;:24;;;;5636:7;;;5560:94;5666:18;5693:14;;5687:3;:20;5666:41;;5718:14;5735:38;5750:22;:20;:22::i;:::-;5735:10;:14;;:38;;;;:::i;:::-;5718:55;;5801:7;5784:14;:24;;;;5833:23;5849:6;5833:11;;:15;;:23;;;;:::i;:::-;5819:11;:37;;;;5881:54;5897:37;5906:6;5914:4;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5897:8;:37::i;:::-;5881:11;;:15;;:54;;;;:::i;:::-;5867:11;:68;;;;5982:5;;;;;;;;;;:10;;;6001:4;6008:6;5982:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5406:617;;;;:::o;1619:33::-;;;;;;;;;;;;;:::o;1412:::-;;;;:::o;6490:102::-;6537:7;6564:20;1712:6;6564:11;;:15;;:20;;;;:::i;:::-;6557:27;;6490:102;:::o;6031:314::-;6077:7;6097:15;6115:9;:7;:9::i;:::-;6097:27;;6154:1;6139:11;;:16;6135:57;;6179:1;6172:8;;;;;6135:57;6202:18;6233:14;;6223:7;:24;6202:45;;6258:14;6275:38;6290:22;:20;:22::i;:::-;6275:10;:14;;:38;;;;:::i;:::-;6258:55;;6331:6;6324:13;;;;;6031:314;;:::o;1892:156::-;1989:7;1712:6;2021:13;2032:1;2021:6;:10;;:13;;;;:::i;:::-;:19;;;;;;2014:26;;1892:156;;;;:::o;773:184:5:-;831:7;864:1;859;:6;;851:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;911:9;927:1;923;:5;911:17;;948:1;941:8;;;773:184;;;;:::o;317:181::-;375:7;395:9;411:1;407;:5;395:17;;436:1;431;:6;;423:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;489:1;482:8;;;317:181;;;;:::o;1208:470::-;1266:7;1515:1;1510;:6;1506:47;;;1540:1;1533:8;;;;1506:47;1565:9;1581:1;1577;:5;1565:17;;1610:1;1605;1601;:5;;;;;;:10;1593:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1669:1;1662:8;;;1208:470;;;;;:::o;2146:333::-;2204:7;2303:1;2299;:5;2291:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2346:9;2362:1;2358;:5;;;;;;2346:17;;2470:1;2463:8;;;2146:333;;;;:::o;1727:157:0:-;1822:7;1854:22;1874:1;1854:15;1712:6;1854;:10;;:15;;;;:::i;:::-;:19;;:22;;;;:::i;:::-;1847:29;;1727:157;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1409400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"accPerShare()": "1138",
								"computePer()": "infinite",
								"deposit(uint256)": "infinite",
								"getDepositBalance()": "infinite",
								"getEther()": "2671",
								"getStakingCoinPerSec()": "infinite",
								"getTime()": "235",
								"lastUpdateTime()": "1094",
								"myBenefits()": "infinite",
								"myValue()": "infinite",
								"owner()": "1180",
								"pendingCoin()": "infinite",
								"setStakingSwitch(bool)": "42164",
								"sharesPrice()": "infinite",
								"stakingStartTime()": "1050",
								"stakingSwitch()": "1091",
								"totalAmount()": "1073",
								"totalDeposit()": "infinite",
								"totalShares()": "1117",
								"totalStakingAmount()": "infinite",
								"updatePool()": "infinite",
								"userInfo(address)": "5389",
								"withdraw(uint256)": "infinite",
								"withdrawFee()": "1071",
								"withdrawFeePeriod()": "1072"
							},
							"internal": {
								"decimalMul(uint256,uint256)": "infinite",
								"divFloor(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 718,
									"end": 9243,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 718,
									"end": 9243,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 718,
									"end": 9243,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1290,
									"end": 1291,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1261,
									"end": 1291,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1261,
									"end": 1291,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1327,
									"end": 1328,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1298,
									"end": 1328,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1298,
									"end": 1328,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1364,
									"end": 1365,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1335,
									"end": 1365,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1335,
									"end": 1365,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1404,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1372,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1372,
									"end": 1405,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1441,
									"end": 1445,
									"name": "PUSH",
									"source": 0,
									"value": "3E8"
								},
								{
									"begin": 1412,
									"end": 1445,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1412,
									"end": 1445,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1487,
									"end": 1493,
									"name": "PUSH",
									"source": 0,
									"value": "93A80"
								},
								{
									"begin": 1452,
									"end": 1493,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1452,
									"end": 1493,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1611,
									"end": 1612,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1577,
									"end": 1612,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1577,
									"end": 1612,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1647,
									"end": 1652,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1619,
									"end": 1652,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 1619,
									"end": 1652,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1619,
									"end": 1652,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1619,
									"end": 1652,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1652,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1652,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1652,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1652,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 1619,
									"end": 1652,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1652,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1652,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1652,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1652,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1652,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1652,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1652,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1652,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1652,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1652,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1619,
									"end": 1652,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1678,
									"end": 1680,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1659,
									"end": 1680,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 1659,
									"end": 1680,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 924,
									"end": 929,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 924,
									"end": 929,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 924,
									"end": 938,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 924,
									"end": 938,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 924,
									"end": 938,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 924,
									"end": 938,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 924,
									"end": 938,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 924,
									"end": 938,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 924,
									"end": 938,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 924,
									"end": 938,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 924,
									"end": 938,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 924,
									"end": 938,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 924,
									"end": 938,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 924,
									"end": 938,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 924,
									"end": 938,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 924,
									"end": 938,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 924,
									"end": 938,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 924,
									"end": 938,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 924,
									"end": 938,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 924,
									"end": 938,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 957,
									"end": 967,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 949,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 949,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 949,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 949,
									"end": 967,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 949,
									"end": 967,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 949,
									"end": 967,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 949,
									"end": 967,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 949,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 949,
									"end": 967,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 949,
									"end": 967,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 949,
									"end": 967,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 949,
									"end": 967,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 949,
									"end": 967,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 949,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 949,
									"end": 967,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 949,
									"end": 967,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 949,
									"end": 967,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 949,
									"end": 967,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 949,
									"end": 967,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 949,
									"end": 967,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 995,
									"end": 1004,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 995,
									"end": 1002,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 995,
									"end": 1002,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 995,
									"end": 1002,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 995,
									"end": 1004,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 995,
									"end": 1004,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 995,
									"end": 1004,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 995,
									"end": 1004,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 995,
									"end": 1004,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 978,
									"end": 992,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 978,
									"end": 1004,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 978,
									"end": 1004,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 978,
									"end": 1004,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 978,
									"end": 1004,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1026,
									"end": 1035,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1015,
									"end": 1023,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1015,
									"end": 1023,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1015,
									"end": 1035,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1015,
									"end": 1035,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1015,
									"end": 1035,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1015,
									"end": 1035,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1015,
									"end": 1035,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1015,
									"end": 1035,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1015,
									"end": 1035,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1015,
									"end": 1035,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1015,
									"end": 1035,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1015,
									"end": 1035,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1015,
									"end": 1035,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1015,
									"end": 1035,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1015,
									"end": 1035,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1015,
									"end": 1035,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1015,
									"end": 1035,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1015,
									"end": 1035,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1015,
									"end": 1035,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1015,
									"end": 1035,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 853,
									"end": 1043,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 718,
									"end": 9243,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 718,
									"end": 9243,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7671,
									"end": 7749,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 7671,
									"end": 7749,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7711,
									"end": 7718,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7738,
									"end": 7741,
									"name": "TIMESTAMP",
									"source": 0
								},
								{
									"begin": 7731,
									"end": 7741,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7731,
									"end": 7741,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7671,
									"end": 7749,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7671,
									"end": 7749,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 718,
									"end": 9243,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 718,
									"end": 9243,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 718,
									"end": 9243,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 718,
									"end": 9243,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 718,
									"end": 9243,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 718,
									"end": 9243,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 718,
									"end": 9243,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 718,
									"end": 9243,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 718,
									"end": 9243,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c0f842b06e7dbbaaf8121ec704af3383d8ee7a6318e421d9dd7b287c7af08e3264736f6c634300060c0033",
									".code": [
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH",
											"source": 0,
											"value": "936B6CEC"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH",
											"source": 0,
											"value": "DE0FF7C5"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH",
											"source": 0,
											"value": "E6FA445D"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH",
											"source": 0,
											"value": "E6FA445D"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH",
											"source": 0,
											"value": "E941FA78"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH",
											"source": 0,
											"value": "F6153CCD"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH",
											"source": 0,
											"value": "FC3E532B"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH",
											"source": 0,
											"value": "DE0FF7C5"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH",
											"source": 0,
											"value": "DF10B4E6"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH",
											"source": 0,
											"value": "E3161DDD"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH",
											"source": 0,
											"value": "936B6CEC"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH",
											"source": 0,
											"value": "B6B55F25"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH",
											"source": 0,
											"value": "B8A3B366"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH",
											"source": 0,
											"value": "C8F33C91"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH",
											"source": 0,
											"value": "D201114A"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH",
											"source": 0,
											"value": "D2890A01"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH",
											"source": 0,
											"value": "557ED1BA"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH",
											"source": 0,
											"value": "557ED1BA"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH",
											"source": 0,
											"value": "6ABFD183"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH",
											"source": 0,
											"value": "6E5B9634"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH",
											"source": 0,
											"value": "77926869"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH",
											"source": 0,
											"value": "81AD5718"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH",
											"source": 0,
											"value": "497DE4A"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH",
											"source": 0,
											"value": "1959A002"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH",
											"source": 0,
											"value": "1A39D8EF"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH",
											"source": 0,
											"value": "2E1A7D4D"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH",
											"source": 0,
											"value": "3A98EF39"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH",
											"source": 0,
											"value": "47F1AAE7"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 9243,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7872,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7757,
											"end": 7872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 7757,
											"end": 7872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 7757,
											"end": 7872,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7757,
											"end": 7872,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 7757,
											"end": 7872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7872,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7757,
											"end": 7872,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7872,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7872,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7872,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7872,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7757,
											"end": 7872,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7872,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7872,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7872,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7872,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7757,
											"end": 7872,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7872,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7872,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7872,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1365,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1335,
											"end": 1365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1335,
											"end": 1365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1335,
											"end": 1365,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1335,
											"end": 1365,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1335,
											"end": 1365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1335,
											"end": 1365,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1365,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1365,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1335,
											"end": 1365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1335,
											"end": 1365,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1365,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1365,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 5398,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3564,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3564,
											"end": 5398,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3564,
											"end": 5398,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 5398,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 5398,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 5398,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3564,
											"end": 5398,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 5398,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 5398,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3564,
											"end": 5398,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 5398,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3564,
											"end": 5398,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 5398,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 5398,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3564,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 5398,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 5398,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 5398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 5398,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 5398,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 5398,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 5398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 5398,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3564,
											"end": 5398,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 5398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 5398,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 5398,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 5398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 5398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 5398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 5398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3564,
											"end": 5398,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3564,
											"end": 5398,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3564,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 5398,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1298,
											"end": 1328,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1298,
											"end": 1328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1298,
											"end": 1328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1298,
											"end": 1328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1298,
											"end": 1328,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1298,
											"end": 1328,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1298,
											"end": 1328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1298,
											"end": 1328,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1298,
											"end": 1328,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1298,
											"end": 1328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1298,
											"end": 1328,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1298,
											"end": 1328,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1298,
											"end": 1328,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1298,
											"end": 1328,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1298,
											"end": 1328,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1298,
											"end": 1328,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1298,
											"end": 1328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1298,
											"end": 1328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1298,
											"end": 1328,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1298,
											"end": 1328,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1298,
											"end": 1328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1298,
											"end": 1328,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1298,
											"end": 1328,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1298,
											"end": 1328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1298,
											"end": 1328,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7121,
											"end": 7457,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7121,
											"end": 7457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7121,
											"end": 7457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 7121,
											"end": 7457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 7121,
											"end": 7457,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7121,
											"end": 7457,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 7121,
											"end": 7457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7121,
											"end": 7457,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7121,
											"end": 7457,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7121,
											"end": 7457,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7121,
											"end": 7457,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7121,
											"end": 7457,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7121,
											"end": 7457,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7121,
											"end": 7457,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7121,
											"end": 7457,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7121,
											"end": 7457,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7121,
											"end": 7457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7121,
											"end": 7457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7121,
											"end": 7457,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7121,
											"end": 7457,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7121,
											"end": 7457,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7121,
											"end": 7457,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7121,
											"end": 7457,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7121,
											"end": 7457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7121,
											"end": 7457,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7749,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7671,
											"end": 7749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 7671,
											"end": 7749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 7671,
											"end": 7749,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7671,
											"end": 7749,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 7671,
											"end": 7749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7749,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7671,
											"end": 7749,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7749,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7749,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7671,
											"end": 7749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7749,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7749,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7671,
											"end": 7749,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7749,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7749,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7749,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1612,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1577,
											"end": 1612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1577,
											"end": 1612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1577,
											"end": 1612,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1577,
											"end": 1612,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1577,
											"end": 1612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1577,
											"end": 1612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1612,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1612,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1577,
											"end": 1612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1612,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1612,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1577,
											"end": 1612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1612,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1612,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6600,
											"end": 6759,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6600,
											"end": 6759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6600,
											"end": 6759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 6600,
											"end": 6759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 6600,
											"end": 6759,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6600,
											"end": 6759,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 6600,
											"end": 6759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6600,
											"end": 6759,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6600,
											"end": 6759,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6600,
											"end": 6759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6600,
											"end": 6759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6600,
											"end": 6759,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6600,
											"end": 6759,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6600,
											"end": 6759,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6600,
											"end": 6759,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6600,
											"end": 6759,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6600,
											"end": 6759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6600,
											"end": 6759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6600,
											"end": 6759,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6600,
											"end": 6759,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6600,
											"end": 6759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6600,
											"end": 6759,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6600,
											"end": 6759,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6600,
											"end": 6759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6600,
											"end": 6759,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7465,
											"end": 7636,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 7465,
											"end": 7636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7465,
											"end": 7636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 7465,
											"end": 7636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 7465,
											"end": 7636,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7465,
											"end": 7636,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 7465,
											"end": 7636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7465,
											"end": 7636,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7465,
											"end": 7636,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7465,
											"end": 7636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7465,
											"end": 7636,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7465,
											"end": 7636,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7465,
											"end": 7636,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7465,
											"end": 7636,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7465,
											"end": 7636,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7465,
											"end": 7636,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7465,
											"end": 7636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7465,
											"end": 7636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7465,
											"end": 7636,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7465,
											"end": 7636,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7465,
											"end": 7636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7465,
											"end": 7636,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7465,
											"end": 7636,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7465,
											"end": 7636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7465,
											"end": 7636,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8958,
											"end": 9240,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 8958,
											"end": 9240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8958,
											"end": 9240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 8958,
											"end": 9240,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8958,
											"end": 9240,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8958,
											"end": 9240,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8958,
											"end": 9240,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8958,
											"end": 9240,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8958,
											"end": 9240,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8958,
											"end": 9240,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8958,
											"end": 9240,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8958,
											"end": 9240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 8958,
											"end": 9240,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8958,
											"end": 9240,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8958,
											"end": 9240,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8958,
											"end": 9240,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8958,
											"end": 9240,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 8958,
											"end": 9240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8958,
											"end": 9240,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8958,
											"end": 9240,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8958,
											"end": 9240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8958,
											"end": 9240,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8958,
											"end": 9240,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8958,
											"end": 9240,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 8958,
											"end": 9240,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8958,
											"end": 9240,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8958,
											"end": 9240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8958,
											"end": 9240,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8958,
											"end": 9240,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8958,
											"end": 9240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8958,
											"end": 9240,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8958,
											"end": 9240,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8958,
											"end": 9240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8958,
											"end": 9240,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8958,
											"end": 9240,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8958,
											"end": 9240,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8958,
											"end": 9240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 8958,
											"end": 9240,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8958,
											"end": 9240,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 8958,
											"end": 9240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8958,
											"end": 9240,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 824,
											"end": 844,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 824,
											"end": 844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 824,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 824,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 824,
											"end": 844,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 824,
											"end": 844,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 824,
											"end": 844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 824,
											"end": 844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 824,
											"end": 844,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 824,
											"end": 844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 824,
											"end": 844,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 824,
											"end": 844,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 824,
											"end": 844,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 824,
											"end": 844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 824,
											"end": 844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 824,
											"end": 844,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 824,
											"end": 844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 824,
											"end": 844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 824,
											"end": 844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 824,
											"end": 844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 824,
											"end": 844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 824,
											"end": 844,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 824,
											"end": 844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 824,
											"end": 844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 824,
											"end": 844,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 824,
											"end": 844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 824,
											"end": 844,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 7113,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6767,
											"end": 7113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 7113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 6767,
											"end": 7113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6767,
											"end": 7113,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6767,
											"end": 7113,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 6767,
											"end": 7113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 7113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6767,
											"end": 7113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 7113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 7113,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 7113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 7113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 7113,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6767,
											"end": 7113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 7113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 7113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 7113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 7113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6767,
											"end": 7113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 7113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 7113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 7113,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 7113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 7113,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 3556,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2334,
											"end": 3556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2334,
											"end": 3556,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2334,
											"end": 3556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 3556,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 3556,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 3556,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2334,
											"end": 3556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 3556,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 3556,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2334,
											"end": 3556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 3556,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2334,
											"end": 3556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 3556,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 3556,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2334,
											"end": 3556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 3556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 3556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 3556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 3556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 3556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 3556,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 3556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 3556,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2334,
											"end": 3556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 3556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 3556,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 3556,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 3556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 3556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 3556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 3556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2334,
											"end": 3556,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2334,
											"end": 3556,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2334,
											"end": 3556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 3556,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8950,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 8019,
											"end": 8950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 8019,
											"end": 8950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 8019,
											"end": 8950,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8019,
											"end": 8950,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 8019,
											"end": 8950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8950,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8019,
											"end": 8950,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8950,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8950,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8950,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8019,
											"end": 8950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8950,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8950,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8019,
											"end": 8950,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8950,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8950,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8950,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1372,
											"end": 1405,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1372,
											"end": 1405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1372,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1372,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1372,
											"end": 1405,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1372,
											"end": 1405,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1372,
											"end": 1405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1372,
											"end": 1405,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1372,
											"end": 1405,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1372,
											"end": 1405,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1372,
											"end": 1405,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1372,
											"end": 1405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1372,
											"end": 1405,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1372,
											"end": 1405,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1372,
											"end": 1405,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1372,
											"end": 1405,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1372,
											"end": 1405,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1372,
											"end": 1405,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1372,
											"end": 1405,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1372,
											"end": 1405,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1372,
											"end": 1405,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1372,
											"end": 1405,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1372,
											"end": 1405,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1372,
											"end": 1405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1372,
											"end": 1405,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6353,
											"end": 6482,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 6353,
											"end": 6482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6353,
											"end": 6482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 6353,
											"end": 6482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 6353,
											"end": 6482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6353,
											"end": 6482,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 6353,
											"end": 6482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6353,
											"end": 6482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6353,
											"end": 6482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6353,
											"end": 6482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6353,
											"end": 6482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6353,
											"end": 6482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6353,
											"end": 6482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6353,
											"end": 6482,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6353,
											"end": 6482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6353,
											"end": 6482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6353,
											"end": 6482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6353,
											"end": 6482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6353,
											"end": 6482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6353,
											"end": 6482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6353,
											"end": 6482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6353,
											"end": 6482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6353,
											"end": 6482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6353,
											"end": 6482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6353,
											"end": 6482,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1291,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1261,
											"end": 1291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1261,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1261,
											"end": 1291,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1261,
											"end": 1291,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1261,
											"end": 1291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1291,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1261,
											"end": 1291,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1291,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1291,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1291,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1291,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1291,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1261,
											"end": 1291,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1291,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1291,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1291,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1291,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1261,
											"end": 1291,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1291,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1291,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1291,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1291,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7880,
											"end": 7977,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 7880,
											"end": 7977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7880,
											"end": 7977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 7880,
											"end": 7977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 7880,
											"end": 7977,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7880,
											"end": 7977,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 7880,
											"end": 7977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7880,
											"end": 7977,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7880,
											"end": 7977,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7880,
											"end": 7977,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7880,
											"end": 7977,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7880,
											"end": 7977,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7880,
											"end": 7977,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7880,
											"end": 7977,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7880,
											"end": 7977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7880,
											"end": 7977,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7880,
											"end": 7977,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7880,
											"end": 7977,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7880,
											"end": 7977,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7880,
											"end": 7977,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7880,
											"end": 7977,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7880,
											"end": 7977,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7880,
											"end": 7977,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7880,
											"end": 7977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7880,
											"end": 7977,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1493,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1452,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1452,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1452,
											"end": 1493,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1452,
											"end": 1493,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1452,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1493,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1452,
											"end": 1493,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1493,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1493,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1493,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1452,
											"end": 1493,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1493,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1493,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1452,
											"end": 1493,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1493,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1493,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1493,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5406,
											"end": 6023,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 5406,
											"end": 6023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5406,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 5406,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 5406,
											"end": 6023,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5406,
											"end": 6023,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 5406,
											"end": 6023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5406,
											"end": 6023,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1652,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1619,
											"end": 1652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1619,
											"end": 1652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1619,
											"end": 1652,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1619,
											"end": 1652,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1619,
											"end": 1652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1652,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1652,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1652,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1652,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1652,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1652,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1652,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1619,
											"end": 1652,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1652,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1652,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1652,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1652,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1652,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1652,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1412,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1412,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1412,
											"end": 1445,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1412,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1412,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1445,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1445,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1445,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1445,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1445,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1445,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1445,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1445,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1445,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1445,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1445,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1445,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6490,
											"end": 6592,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 6490,
											"end": 6592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6490,
											"end": 6592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 6490,
											"end": 6592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 6490,
											"end": 6592,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6490,
											"end": 6592,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 6490,
											"end": 6592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6490,
											"end": 6592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6490,
											"end": 6592,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6490,
											"end": 6592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6490,
											"end": 6592,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6490,
											"end": 6592,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6490,
											"end": 6592,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6490,
											"end": 6592,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6490,
											"end": 6592,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6490,
											"end": 6592,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6490,
											"end": 6592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6490,
											"end": 6592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6490,
											"end": 6592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6490,
											"end": 6592,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6490,
											"end": 6592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6490,
											"end": 6592,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6490,
											"end": 6592,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6490,
											"end": 6592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6490,
											"end": 6592,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6345,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 6031,
											"end": 6345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 6031,
											"end": 6345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 6031,
											"end": 6345,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6031,
											"end": 6345,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 6031,
											"end": 6345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6345,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6031,
											"end": 6345,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6345,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6345,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6345,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6345,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6031,
											"end": 6345,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6345,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6345,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6031,
											"end": 6345,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6345,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6345,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6345,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7872,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 7757,
											"end": 7872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7807,
											"end": 7814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7834,
											"end": 7839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7839,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7834,
											"end": 7839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7839,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7839,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7834,
											"end": 7839,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7839,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7839,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7834,
											"end": 7839,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7849,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7834,
											"end": 7849,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7849,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 7858,
											"end": 7862,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7864,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7827,
											"end": 7864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7827,
											"end": 7864,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7872,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2056,
											"end": 2100,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1335,
											"end": 1365,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1335,
											"end": 1365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1365,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1335,
											"end": 1365,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1335,
											"end": 1365,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3564,
											"end": 5398,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3564,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3638,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3641,
											"end": 3649,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 3641,
											"end": 3661,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3660,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3661,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3641,
											"end": 3661,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3661,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3641,
											"end": 3661,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3661,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3661,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3641,
											"end": 3661,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3661,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3661,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3641,
											"end": 3661,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3661,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3641,
											"end": 3661,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3617,
											"end": 3661,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3690,
											"end": 3691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3680,
											"end": 3687,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3691,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3672,
											"end": 3715,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3715,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3672,
											"end": 3715,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3715,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3672,
											"end": 3715,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3715,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3715,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3672,
											"end": 3715,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3715,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3672,
											"end": 3715,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3715,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3715,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3715,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3715,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3715,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3715,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3672,
											"end": 3715,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3715,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3715,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3672,
											"end": 3715,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3715,
											"name": "PUSH",
											"source": 0,
											"value": "4E6F7468696E6720746F20776974686472617700000000000000000000000000"
										},
										{
											"begin": 3672,
											"end": 3715,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3715,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3715,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3715,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3672,
											"end": 3715,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3715,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3715,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3715,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3715,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3672,
											"end": 3715,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3715,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3715,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3715,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3672,
											"end": 3715,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3672,
											"end": 3715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3756,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3745,
											"end": 3756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3756,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3734,
											"end": 3741,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3726,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3726,
											"end": 3792,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3726,
											"end": 3792,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3726,
											"end": 3792,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3726,
											"end": 3792,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3726,
											"end": 3792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3726,
											"end": 3792,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3726,
											"end": 3792,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3726,
											"end": 3792,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3726,
											"end": 3792,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3726,
											"end": 3792,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3726,
											"end": 3792,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3726,
											"end": 3792,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3726,
											"end": 3792,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3726,
											"end": 3792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3726,
											"end": 3792,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3726,
											"end": 3792,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3726,
											"end": 3792,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3726,
											"end": 3792,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3726,
											"end": 3792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3726,
											"end": 3792,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3726,
											"end": 3792,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3726,
											"end": 3792,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3726,
											"end": 3792,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3726,
											"end": 3792,
											"name": "PUSH",
											"source": 0,
											"value": "576974686472617720616D6F756E7420657863656564732062616C616E636500"
										},
										{
											"begin": 3726,
											"end": 3792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3726,
											"end": 3792,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3726,
											"end": 3792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3726,
											"end": 3792,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3726,
											"end": 3792,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3726,
											"end": 3792,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3726,
											"end": 3792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3726,
											"end": 3792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3726,
											"end": 3792,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3726,
											"end": 3792,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3726,
											"end": 3792,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3726,
											"end": 3792,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3726,
											"end": 3792,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3726,
											"end": 3792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3726,
											"end": 3792,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3726,
											"end": 3792,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 3726,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3805,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3805,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3805,
											"end": 3817,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3805,
											"end": 3817,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 3805,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3860,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3886,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3976,
											"end": 3980,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 3988,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3976,
											"end": 3988,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3976,
											"end": 3988,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3886,
											"end": 3957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3941,
											"end": 3945,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3956,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3941,
											"end": 3956,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3956,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3886,
											"end": 3922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3897,
											"end": 3901,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3897,
											"end": 3908,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3897,
											"end": 3908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3897,
											"end": 3908,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3910,
											"end": 3921,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3910,
											"end": 3921,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3886,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3886,
											"end": 3922,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3886,
											"end": 3922,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 3886,
											"end": 3922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3886,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3886,
											"end": 3940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3886,
											"end": 3957,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3886,
											"end": 3957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3886,
											"end": 3957,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3886,
											"end": 3957,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3886,
											"end": 3957,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3886,
											"end": 3957,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3886,
											"end": 3957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3886,
											"end": 3975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3886,
											"end": 3975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3886,
											"end": 3989,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3886,
											"end": 3989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3886,
											"end": 3989,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3886,
											"end": 3989,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3886,
											"end": 3989,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3886,
											"end": 3989,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 3886,
											"end": 3989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3860,
											"end": 3989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3860,
											"end": 3989,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4041,
											"end": 4063,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4066,
											"end": 4111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 4099,
											"end": 4103,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4099,
											"end": 4110,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4099,
											"end": 4110,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4099,
											"end": 4110,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4066,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 4086,
											"end": 4093,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4066,
											"end": 4081,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4066,
											"end": 4085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4066,
											"end": 4085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4066,
											"end": 4094,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4066,
											"end": 4094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4066,
											"end": 4094,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4066,
											"end": 4094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4066,
											"end": 4094,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4066,
											"end": 4094,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 4066,
											"end": 4094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4066,
											"end": 4098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4066,
											"end": 4098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4066,
											"end": 4111,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4066,
											"end": 4111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4066,
											"end": 4111,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4066,
											"end": 4111,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4066,
											"end": 4111,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4066,
											"end": 4111,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 4066,
											"end": 4111,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4041,
											"end": 4111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4041,
											"end": 4111,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4163,
											"end": 4181,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4184,
											"end": 4225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 4213,
											"end": 4217,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4213,
											"end": 4224,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4213,
											"end": 4224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4213,
											"end": 4224,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4184,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 4200,
											"end": 4207,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4184,
											"end": 4188,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4184,
											"end": 4195,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4184,
											"end": 4195,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4184,
											"end": 4195,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4184,
											"end": 4199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4184,
											"end": 4199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4184,
											"end": 4208,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4184,
											"end": 4208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4184,
											"end": 4208,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4184,
											"end": 4208,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4184,
											"end": 4208,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4184,
											"end": 4208,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 4184,
											"end": 4208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4184,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4184,
											"end": 4212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4184,
											"end": 4225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4184,
											"end": 4225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4184,
											"end": 4225,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4184,
											"end": 4225,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4184,
											"end": 4225,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4184,
											"end": 4225,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 4184,
											"end": 4225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4163,
											"end": 4225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4163,
											"end": 4225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 4268,
											"end": 4275,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4256,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4252,
											"end": 4263,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4263,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4252,
											"end": 4267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4276,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4276,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4252,
											"end": 4276,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4276,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4252,
											"end": 4276,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 4252,
											"end": 4276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4238,
											"end": 4242,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4238,
											"end": 4249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4238,
											"end": 4249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4238,
											"end": 4276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4238,
											"end": 4276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4238,
											"end": 4276,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4238,
											"end": 4276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4301,
											"end": 4325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4317,
											"end": 4324,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4301,
											"end": 4312,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4301,
											"end": 4312,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4301,
											"end": 4316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4301,
											"end": 4316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4301,
											"end": 4325,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4301,
											"end": 4325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4301,
											"end": 4325,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4301,
											"end": 4325,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4301,
											"end": 4325,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4301,
											"end": 4325,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 4301,
											"end": 4325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4298,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4287,
											"end": 4325,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4325,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4287,
											"end": 4325,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4375,
											"end": 4389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4360,
											"end": 4371,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4360,
											"end": 4371,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4360,
											"end": 4389,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4360,
											"end": 4389,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 4338,
											"end": 4448,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4448,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4338,
											"end": 4448,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4448,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4338,
											"end": 4448,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4448,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4448,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4338,
											"end": 4448,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4448,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4448,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4448,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4338,
											"end": 4448,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4448,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4448,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4448,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4448,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4448,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4448,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4338,
											"end": 4448,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4448,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4448,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4338,
											"end": 4448,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4448,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4448,
											"name": "PUSH",
											"source": 0,
											"value": "576974686472617720616D6F756E7420657863656564732062616C616E636500"
										},
										{
											"begin": 4338,
											"end": 4448,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4448,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4448,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4448,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4338,
											"end": 4448,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4448,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4448,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4448,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4448,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4338,
											"end": 4448,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4448,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4448,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4448,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4448,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4338,
											"end": 4448,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 4338,
											"end": 4448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4506,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4522,
											"end": 4536,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4506,
											"end": 4517,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4506,
											"end": 4517,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4506,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4506,
											"end": 4521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4506,
											"end": 4537,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4506,
											"end": 4537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4506,
											"end": 4537,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4506,
											"end": 4537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4506,
											"end": 4537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4506,
											"end": 4537,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 4506,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4492,
											"end": 4503,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4492,
											"end": 4537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4492,
											"end": 4537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4492,
											"end": 4537,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4492,
											"end": 4537,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 4609,
											"end": 4623,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4604,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4589,
											"end": 4608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4624,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4624,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4589,
											"end": 4624,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4589,
											"end": 4624,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4589,
											"end": 4624,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 4589,
											"end": 4624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4574,
											"end": 4578,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4574,
											"end": 4586,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4574,
											"end": 4586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4574,
											"end": 4624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4574,
											"end": 4624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4574,
											"end": 4624,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4574,
											"end": 4624,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4684,
											"end": 4714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 4703,
											"end": 4713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4684,
											"end": 4698,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4684,
											"end": 4702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4684,
											"end": 4702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4684,
											"end": 4714,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4684,
											"end": 4714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4684,
											"end": 4714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4684,
											"end": 4714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4684,
											"end": 4714,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4684,
											"end": 4714,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 4684,
											"end": 4714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4667,
											"end": 4714,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4667,
											"end": 4714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4743,
											"end": 4788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4743,
											"end": 4747,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4743,
											"end": 4765,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4743,
											"end": 4765,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4743,
											"end": 4765,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4743,
											"end": 4769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4743,
											"end": 4769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4743,
											"end": 4788,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4743,
											"end": 4788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4743,
											"end": 4788,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4743,
											"end": 4788,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4743,
											"end": 4788,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4743,
											"end": 4788,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 4743,
											"end": 4788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4731,
											"end": 4740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4731,
											"end": 4740,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4731,
											"end": 4740,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 4731,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4731,
											"end": 4788,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4727,
											"end": 5066,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4727,
											"end": 5066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4727,
											"end": 5066,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4834,
											"end": 4868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 4862,
											"end": 4867,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 4834,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 4853,
											"end": 4856,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4834,
											"end": 4848,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4834,
											"end": 4852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4857,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4857,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4834,
											"end": 4857,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4857,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4834,
											"end": 4857,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 4834,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4834,
											"end": 4861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4868,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4868,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4834,
											"end": 4868,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4834,
											"end": 4868,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4834,
											"end": 4868,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 4834,
											"end": 4868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4805,
											"end": 4868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4900,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 4919,
											"end": 4937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4900,
											"end": 4914,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4900,
											"end": 4918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4900,
											"end": 4918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4900,
											"end": 4938,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4900,
											"end": 4938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4900,
											"end": 4938,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4900,
											"end": 4938,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4900,
											"end": 4938,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4900,
											"end": 4938,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 4900,
											"end": 4938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4883,
											"end": 4938,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4883,
											"end": 4938,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 4958,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4953,
											"end": 4958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 4958,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 4958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 4958,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4953,
											"end": 4958,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 4958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 4958,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 4958,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4953,
											"end": 4958,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 4967,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4953,
											"end": 4967,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 4967,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 4976,
											"end": 4984,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4976,
											"end": 4984,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4976,
											"end": 4984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 4984,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 4984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 4984,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4976,
											"end": 4984,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 4984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 4984,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4976,
											"end": 4984,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4976,
											"end": 4984,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4987,
											"end": 5005,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4953,
											"end": 5006,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5029,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5021,
											"end": 5029,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5021,
											"end": 5029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5029,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5029,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5021,
											"end": 5029,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5029,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5029,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5021,
											"end": 5029,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5034,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5021,
											"end": 5034,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5034,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 5035,
											"end": 5053,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5021,
											"end": 5054,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4727,
											"end": 5066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4727,
											"end": 5066,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4727,
											"end": 5066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5078,
											"end": 5083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5083,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5083,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5078,
											"end": 5083,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5083,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5083,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5078,
											"end": 5083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5078,
											"end": 5092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5092,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 5093,
											"end": 5103,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5105,
											"end": 5119,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5078,
											"end": 5120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5145,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 5161,
											"end": 5171,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5145,
											"end": 5149,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5145,
											"end": 5156,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5145,
											"end": 5156,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5145,
											"end": 5156,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5145,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 5145,
											"end": 5160,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5145,
											"end": 5172,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5145,
											"end": 5172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5145,
											"end": 5172,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5145,
											"end": 5172,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5145,
											"end": 5172,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5145,
											"end": 5172,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 5145,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5135,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5142,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5131,
											"end": 5142,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5172,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5172,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5172,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5203,
											"end": 5204,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5189,
											"end": 5193,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5189,
											"end": 5200,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5189,
											"end": 5200,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5189,
											"end": 5200,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5189,
											"end": 5204,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5185,
											"end": 5273,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5185,
											"end": 5273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 5185,
											"end": 5273,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5237,
											"end": 5273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 5248,
											"end": 5252,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5248,
											"end": 5259,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5248,
											"end": 5259,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5248,
											"end": 5259,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5261,
											"end": 5272,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5261,
											"end": 5272,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5237,
											"end": 5247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 5237,
											"end": 5273,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5237,
											"end": 5273,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 5237,
											"end": 5273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5219,
											"end": 5223,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5219,
											"end": 5234,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5219,
											"end": 5234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5219,
											"end": 5273,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5219,
											"end": 5273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5219,
											"end": 5273,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5219,
											"end": 5273,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5185,
											"end": 5273,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 5185,
											"end": 5273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5312,
											"end": 5327,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 5286,
											"end": 5290,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5286,
											"end": 5309,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5286,
											"end": 5309,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5286,
											"end": 5327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5286,
											"end": 5327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5286,
											"end": 5327,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5286,
											"end": 5327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5364,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5345,
											"end": 5390,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5345,
											"end": 5390,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5345,
											"end": 5390,
											"name": "PUSH",
											"source": 0,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 5366,
											"end": 5380,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5382,
											"end": 5389,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5345,
											"end": 5390,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5345,
											"end": 5390,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5345,
											"end": 5390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5345,
											"end": 5390,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5345,
											"end": 5390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5345,
											"end": 5390,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5345,
											"end": 5390,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5345,
											"end": 5390,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5345,
											"end": 5390,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5345,
											"end": 5390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5345,
											"end": 5390,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5345,
											"end": 5390,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5345,
											"end": 5390,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5345,
											"end": 5390,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5345,
											"end": 5390,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5345,
											"end": 5390,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5345,
											"end": 5390,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5345,
											"end": 5390,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5345,
											"end": 5390,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5345,
											"end": 5390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5345,
											"end": 5390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5345,
											"end": 5390,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5345,
											"end": 5390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5345,
											"end": 5390,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 5398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 5398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 5398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 5398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 5398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 5398,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1298,
											"end": 1328,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1298,
											"end": 1328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1298,
											"end": 1328,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1298,
											"end": 1328,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1298,
											"end": 1328,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1298,
											"end": 1328,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7121,
											"end": 7457,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 7121,
											"end": 7457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7161,
											"end": 7168,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7181,
											"end": 7202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7205,
											"end": 7213,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 7205,
											"end": 7225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7214,
											"end": 7224,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7205,
											"end": 7225,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7205,
											"end": 7225,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7205,
											"end": 7225,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7205,
											"end": 7225,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7205,
											"end": 7225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7205,
											"end": 7225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7205,
											"end": 7225,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7205,
											"end": 7225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7205,
											"end": 7225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7205,
											"end": 7225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7205,
											"end": 7225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7205,
											"end": 7225,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7205,
											"end": 7225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7205,
											"end": 7225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7205,
											"end": 7225,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7181,
											"end": 7225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7181,
											"end": 7225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7255,
											"end": 7256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7240,
											"end": 7244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7240,
											"end": 7251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7240,
											"end": 7251,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7240,
											"end": 7251,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7240,
											"end": 7256,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7236,
											"end": 7266,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7236,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 7236,
											"end": 7266,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7265,
											"end": 7266,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7258,
											"end": 7266,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7258,
											"end": 7266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7258,
											"end": 7266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7258,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 7258,
											"end": 7266,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7236,
											"end": 7266,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 7236,
											"end": 7266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 7437,
											"end": 7441,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7437,
											"end": 7448,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7437,
											"end": 7448,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7437,
											"end": 7448,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 7401,
											"end": 7405,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7401,
											"end": 7413,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7401,
											"end": 7413,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7401,
											"end": 7413,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 7362,
											"end": 7366,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7362,
											"end": 7377,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7362,
											"end": 7377,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7362,
											"end": 7377,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 7308,
											"end": 7312,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7308,
											"end": 7319,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7308,
											"end": 7319,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7308,
											"end": 7319,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7325,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7336,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7321,
											"end": 7336,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7336,
											"name": "PUSH",
											"source": 0,
											"value": "6E5B9634"
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7321,
											"end": 7338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 7297,
											"end": 7339,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7297,
											"end": 7339,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 7297,
											"end": 7339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 7297,
											"end": 7361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7378,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7378,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7297,
											"end": 7378,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7378,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7297,
											"end": 7378,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 7297,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7297,
											"end": 7400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7414,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7414,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7297,
											"end": 7414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7414,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7297,
											"end": 7414,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 7297,
											"end": 7414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7297,
											"end": 7436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7449,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7297,
											"end": 7449,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7297,
											"end": 7449,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7297,
											"end": 7449,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 7297,
											"end": 7449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7277,
											"end": 7449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7277,
											"end": 7449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7277,
											"end": 7449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7121,
											"end": 7457,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 7121,
											"end": 7457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7121,
											"end": 7457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7121,
											"end": 7457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7671,
											"end": 7749,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 7671,
											"end": 7749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7711,
											"end": 7718,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7738,
											"end": 7741,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 7731,
											"end": 7741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7731,
											"end": 7741,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7671,
											"end": 7749,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1577,
											"end": 1612,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1577,
											"end": 1612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1612,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1577,
											"end": 1612,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1577,
											"end": 1612,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6600,
											"end": 6759,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 6600,
											"end": 6759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6645,
											"end": 6652,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6685,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 6701,
											"end": 6750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 6710,
											"end": 6714,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6726,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6710,
											"end": 6726,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6726,
											"name": "PUSH",
											"source": 0,
											"value": "FC3E532B"
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6734,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6747,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6730,
											"end": 6747,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6747,
											"name": "PUSH",
											"source": 0,
											"value": "F6153CCD"
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6701,
											"end": 6709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 6701,
											"end": 6750,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6701,
											"end": 6750,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 6701,
											"end": 6750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6685,
											"end": 6696,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6685,
											"end": 6696,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6685,
											"end": 6700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6685,
											"end": 6700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6685,
											"end": 6751,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6685,
											"end": 6751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6685,
											"end": 6751,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6685,
											"end": 6751,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6685,
											"end": 6751,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6685,
											"end": 6751,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 6685,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 6751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6665,
											"end": 6751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6600,
											"end": 6759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6600,
											"end": 6759,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7465,
											"end": 7636,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 7465,
											"end": 7636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7509,
											"end": 7516,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7548,
											"end": 7549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7533,
											"end": 7544,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7533,
											"end": 7544,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7533,
											"end": 7549,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7559,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 7529,
											"end": 7559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7558,
											"end": 7559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7551,
											"end": 7559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7551,
											"end": 7559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7551,
											"end": 7559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 7551,
											"end": 7559,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7529,
											"end": 7559,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 7529,
											"end": 7559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7577,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 7616,
											"end": 7627,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7616,
											"end": 7627,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7577,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 7593,
											"end": 7597,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7608,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7593,
											"end": 7608,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7608,
											"name": "PUSH",
											"source": 0,
											"value": "6E5B9634"
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7577,
											"end": 7588,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7577,
											"end": 7588,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7577,
											"end": 7592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 7577,
											"end": 7592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7577,
											"end": 7611,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7577,
											"end": 7611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7577,
											"end": 7611,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7577,
											"end": 7611,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7577,
											"end": 7611,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7577,
											"end": 7611,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 7577,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7577,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 7577,
											"end": 7615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7577,
											"end": 7628,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7577,
											"end": 7628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7577,
											"end": 7628,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7577,
											"end": 7628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7577,
											"end": 7628,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7577,
											"end": 7628,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 7577,
											"end": 7628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7570,
											"end": 7628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7570,
											"end": 7628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7465,
											"end": 7636,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 7465,
											"end": 7636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7465,
											"end": 7636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7465,
											"end": 7636,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8958,
											"end": 9240,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 8958,
											"end": 9240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9031,
											"end": 9036,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9031,
											"end": 9036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9031,
											"end": 9036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9031,
											"end": 9036,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9031,
											"end": 9036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9031,
											"end": 9036,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9031,
											"end": 9036,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9031,
											"end": 9036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9031,
											"end": 9036,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9031,
											"end": 9036,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9031,
											"end": 9036,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9036,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9017,
											"end": 9036,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9027,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9036,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9017,
											"end": 9036,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9017,
											"end": 9036,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9013,
											"end": 9233,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9013,
											"end": 9233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 9013,
											"end": 9233,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9057,
											"end": 9061,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9053,
											"end": 9187,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9053,
											"end": 9187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 9053,
											"end": 9187,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9101,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 9101,
											"end": 9108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 9101,
											"end": 9110,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9101,
											"end": 9110,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 9101,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9082,
											"end": 9098,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9082,
											"end": 9110,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9082,
											"end": 9110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9082,
											"end": 9110,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9082,
											"end": 9110,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9053,
											"end": 9187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 9053,
											"end": 9187,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9053,
											"end": 9187,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 9053,
											"end": 9187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9170,
											"end": 9171,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9151,
											"end": 9167,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9151,
											"end": 9171,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9151,
											"end": 9171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9151,
											"end": 9171,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9151,
											"end": 9171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9053,
											"end": 9187,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 9053,
											"end": 9187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9217,
											"end": 9221,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9214,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 9201,
											"end": 9214,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9201,
											"end": 9221,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9201,
											"end": 9221,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9221,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9221,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 9201,
											"end": 9221,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9221,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9221,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9221,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9221,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9221,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9221,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9221,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9221,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9013,
											"end": 9233,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 9013,
											"end": 9233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8958,
											"end": 9240,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8958,
											"end": 9240,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 824,
											"end": 844,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 824,
											"end": 844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 824,
											"end": 844,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 824,
											"end": 844,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 824,
											"end": 844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 824,
											"end": 844,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 824,
											"end": 844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 824,
											"end": 844,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 824,
											"end": 844,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 824,
											"end": 844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 824,
											"end": 844,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 824,
											"end": 844,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 824,
											"end": 844,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 824,
											"end": 844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 824,
											"end": 844,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6767,
											"end": 7113,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6767,
											"end": 7113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6810,
											"end": 6817,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6830,
											"end": 6851,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6854,
											"end": 6862,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 6854,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6863,
											"end": 6873,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6854,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6854,
											"end": 6874,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6854,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6854,
											"end": 6874,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6854,
											"end": 6874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6854,
											"end": 6874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6854,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6854,
											"end": 6874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6854,
											"end": 6874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6854,
											"end": 6874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6854,
											"end": 6874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6854,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6854,
											"end": 6874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6854,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6854,
											"end": 6874,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6830,
											"end": 6874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6830,
											"end": 6874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6904,
											"end": 6905,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6889,
											"end": 6893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6889,
											"end": 6900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6889,
											"end": 6900,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6889,
											"end": 6900,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6889,
											"end": 6905,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6885,
											"end": 6942,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6885,
											"end": 6942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 6885,
											"end": 6942,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6929,
											"end": 6930,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6922,
											"end": 6930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 6922,
											"end": 6930,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6885,
											"end": 6942,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 6885,
											"end": 6942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6968,
											"end": 7010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 6979,
											"end": 6983,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6979,
											"end": 6990,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6979,
											"end": 6990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6979,
											"end": 6990,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 6996,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7007,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6992,
											"end": 7007,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7007,
											"name": "PUSH",
											"source": 0,
											"value": "6E5B9634"
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6968,
											"end": 6978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6968,
											"end": 7010,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6968,
											"end": 7010,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 6968,
											"end": 7010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 7010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 7010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7033,
											"end": 7037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7033,
											"end": 7048,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7033,
											"end": 7048,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7033,
											"end": 7048,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7027,
											"end": 7030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7027,
											"end": 7048,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7023,
											"end": 7105,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7023,
											"end": 7105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 7023,
											"end": 7105,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7057,
											"end": 7081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 7065,
											"end": 7069,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7065,
											"end": 7080,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7065,
											"end": 7080,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7065,
											"end": 7080,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7057,
											"end": 7060,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7057,
											"end": 7064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 7057,
											"end": 7064,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7057,
											"end": 7081,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7057,
											"end": 7081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7057,
											"end": 7081,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7057,
											"end": 7081,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7057,
											"end": 7081,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7057,
											"end": 7081,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 7057,
											"end": 7081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7050,
											"end": 7081,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7050,
											"end": 7081,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7050,
											"end": 7081,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7050,
											"end": 7081,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7050,
											"end": 7081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 7050,
											"end": 7081,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7023,
											"end": 7105,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 7023,
											"end": 7105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7104,
											"end": 7105,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7097,
											"end": 7105,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7097,
											"end": 7105,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7097,
											"end": 7105,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7097,
											"end": 7105,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 7113,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 6767,
											"end": 7113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 7113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6767,
											"end": 7113,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2334,
											"end": 3556,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2334,
											"end": 3556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2404,
											"end": 2405,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2394,
											"end": 2401,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2394,
											"end": 2405,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2386,
											"end": 2428,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2428,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2386,
											"end": 2428,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2428,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2386,
											"end": 2428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2428,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2428,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2386,
											"end": 2428,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2428,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2386,
											"end": 2428,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2428,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2428,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2428,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2428,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2428,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2386,
											"end": 2428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2428,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2428,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2386,
											"end": 2428,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2428,
											"name": "PUSH",
											"source": 0,
											"value": "4E6F7468696E6720746F206465706F7369740000000000000000000000000000"
										},
										{
											"begin": 2386,
											"end": 2428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2428,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2428,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2386,
											"end": 2428,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2428,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2428,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2386,
											"end": 2428,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2428,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2428,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2428,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2386,
											"end": 2428,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2386,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2441,
											"end": 2451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2485,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2488,
											"end": 2496,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 2488,
											"end": 2508,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2497,
											"end": 2507,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2508,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2488,
											"end": 2508,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2508,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2488,
											"end": 2508,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2508,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2488,
											"end": 2508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2508,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2488,
											"end": 2508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2488,
											"end": 2508,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2488,
											"end": 2508,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2508,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2539,
											"end": 2540,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2536,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2525,
											"end": 2536,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2536,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2540,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2521,
											"end": 2808,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2521,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2521,
											"end": 2808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2572,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2575,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2634,
											"end": 2638,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2634,
											"end": 2649,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2634,
											"end": 2649,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2634,
											"end": 2649,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2575,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 2586,
											"end": 2590,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 2597,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2586,
											"end": 2597,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 2597,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2599,
											"end": 2610,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2599,
											"end": 2610,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2575,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2575,
											"end": 2611,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2575,
											"end": 2611,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 2575,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2575,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2575,
											"end": 2615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2575,
											"end": 2664,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2575,
											"end": 2664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2575,
											"end": 2664,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2575,
											"end": 2664,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2575,
											"end": 2664,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2575,
											"end": 2664,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2575,
											"end": 2664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 2766,
											"end": 2773,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2753,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2761,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2749,
											"end": 2761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2761,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2749,
											"end": 2765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2774,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2774,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2749,
											"end": 2774,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2774,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2749,
											"end": 2774,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 2749,
											"end": 2774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2734,
											"end": 2738,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2734,
											"end": 2746,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2734,
											"end": 2746,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2734,
											"end": 2774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2734,
											"end": 2774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2734,
											"end": 2774,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2734,
											"end": 2774,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2521,
											"end": 2808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2521,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 2521,
											"end": 2808,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2521,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2521,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2807,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2792,
											"end": 2796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2792,
											"end": 2804,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2792,
											"end": 2804,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2792,
											"end": 2808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2792,
											"end": 2808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2792,
											"end": 2808,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2792,
											"end": 2808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2521,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 2521,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2821,
											"end": 2826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2826,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2826,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2821,
											"end": 2826,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2826,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2826,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2821,
											"end": 2826,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2839,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2821,
											"end": 2839,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2839,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 2840,
											"end": 2850,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2860,
											"end": 2864,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2867,
											"end": 2874,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2821,
											"end": 2875,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2888,
											"end": 2909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2912,
											"end": 2935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 2924,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2924,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2924,
											"end": 2934,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2924,
											"end": 2934,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2924,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 2919,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2912,
											"end": 2923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 2935,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 2935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2912,
											"end": 2935,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 2935,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2912,
											"end": 2935,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 2912,
											"end": 2935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2888,
											"end": 2935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2888,
											"end": 2935,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 3192,
											"end": 3205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3180,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3176,
											"end": 3187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3187,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3176,
											"end": 3191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3206,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3206,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3176,
											"end": 3206,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3206,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3176,
											"end": 3206,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 3176,
											"end": 3206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3162,
											"end": 3166,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3162,
											"end": 3173,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3162,
											"end": 3173,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3162,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3162,
											"end": 3206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3162,
											"end": 3206,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3162,
											"end": 3206,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 3247,
											"end": 3260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3242,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3231,
											"end": 3242,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3231,
											"end": 3246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3261,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3261,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3231,
											"end": 3261,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3231,
											"end": 3261,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3231,
											"end": 3261,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 3231,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3217,
											"end": 3228,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3217,
											"end": 3261,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3217,
											"end": 3261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3217,
											"end": 3261,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3217,
											"end": 3261,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3288,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 3304,
											"end": 3311,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3288,
											"end": 3292,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3288,
											"end": 3299,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3288,
											"end": 3299,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3288,
											"end": 3299,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3288,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3288,
											"end": 3303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3288,
											"end": 3312,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3288,
											"end": 3312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3288,
											"end": 3312,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3288,
											"end": 3312,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3288,
											"end": 3312,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3288,
											"end": 3312,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 3288,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3274,
											"end": 3278,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3274,
											"end": 3285,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3274,
											"end": 3285,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3274,
											"end": 3312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3274,
											"end": 3312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3274,
											"end": 3312,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3274,
											"end": 3312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3341,
											"end": 3377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 3352,
											"end": 3356,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3352,
											"end": 3363,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3352,
											"end": 3363,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3352,
											"end": 3363,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3376,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3365,
											"end": 3376,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3341,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 3341,
											"end": 3377,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3341,
											"end": 3377,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 3341,
											"end": 3377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3323,
											"end": 3327,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3323,
											"end": 3338,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3323,
											"end": 3338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3323,
											"end": 3377,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3323,
											"end": 3377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3323,
											"end": 3377,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3323,
											"end": 3377,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3416,
											"end": 3425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 3416,
											"end": 3423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3416,
											"end": 3425,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3416,
											"end": 3425,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 3416,
											"end": 3425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3390,
											"end": 3394,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3390,
											"end": 3413,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3390,
											"end": 3413,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3390,
											"end": 3425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3390,
											"end": 3425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3390,
											"end": 3425,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3390,
											"end": 3425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3461,
											"end": 3470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 3461,
											"end": 3468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3461,
											"end": 3470,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3461,
											"end": 3470,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 3461,
											"end": 3470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3436,
											"end": 3440,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3436,
											"end": 3458,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3436,
											"end": 3458,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3436,
											"end": 3470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3436,
											"end": 3470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3436,
											"end": 3470,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3436,
											"end": 3470,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3506,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3548,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3488,
											"end": 3548,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3548,
											"name": "PUSH",
											"source": 0,
											"value": "36AF321EC8D3C75236829C5317AFFD40DDB308863A1236D2D277A4025CCCEE1E"
										},
										{
											"begin": 3508,
											"end": 3515,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3517,
											"end": 3530,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3532,
											"end": 3547,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3488,
											"end": 3548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3548,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3548,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3548,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3488,
											"end": 3548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3548,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3548,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3488,
											"end": 3548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3548,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3548,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3488,
											"end": 3548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3548,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3548,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3548,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3548,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3548,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3488,
											"end": 3548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3548,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3548,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3548,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3488,
											"end": 3548,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 3556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 3556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 3556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 3556,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8019,
											"end": 8950,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 8019,
											"end": 8950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8072,
											"end": 8079,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8092,
											"end": 8103,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8106,
											"end": 8115,
											"name": "PUSH",
											"source": 0,
											"value": "15180"
										},
										{
											"begin": 8092,
											"end": 8115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8092,
											"end": 8115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8126,
											"end": 8141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8144,
											"end": 8153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 8144,
											"end": 8151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 8144,
											"end": 8153,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8144,
											"end": 8153,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 8144,
											"end": 8153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8126,
											"end": 8153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8126,
											"end": 8153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8164,
											"end": 8176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8179,
											"end": 8180,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8164,
											"end": 8180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8164,
											"end": 8180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8214,
											"end": 8219,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8197,
											"end": 8219,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8197,
											"end": 8219,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8197,
											"end": 8210,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 8197,
											"end": 8210,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8197,
											"end": 8210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8197,
											"end": 8210,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8197,
											"end": 8210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8197,
											"end": 8210,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8197,
											"end": 8210,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8197,
											"end": 8210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8197,
											"end": 8210,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8197,
											"end": 8210,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8197,
											"end": 8210,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8197,
											"end": 8219,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8197,
											"end": 8219,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8197,
											"end": 8219,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8193,
											"end": 8385,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8193,
											"end": 8385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 8193,
											"end": 8385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8284,
											"end": 8298,
											"name": "PUSH",
											"source": 0,
											"value": "AE9F7BCC000"
										},
										{
											"begin": 8277,
											"end": 8298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8277,
											"end": 8298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8369,
											"end": 8373,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8362,
											"end": 8373,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8362,
											"end": 8373,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8362,
											"end": 8373,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8362,
											"end": 8373,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8362,
											"end": 8373,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8362,
											"end": 8373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 8362,
											"end": 8373,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8193,
											"end": 8385,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 8193,
											"end": 8385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8461,
											"end": 8467,
											"name": "PUSH",
											"source": 0,
											"value": "12C"
										},
										{
											"begin": 8442,
											"end": 8458,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8442,
											"end": 8458,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8431,
											"end": 8438,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8431,
											"end": 8468,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8427,
											"end": 8921,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8427,
											"end": 8921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 8427,
											"end": 8921,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8485,
											"end": 8500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8503,
											"end": 8510,
											"name": "PUSH",
											"source": 0,
											"value": "2AB980"
										},
										{
											"begin": 8485,
											"end": 8510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8485,
											"end": 8510,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 8573,
											"end": 8576,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 8557,
											"end": 8565,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 8557,
											"end": 8565,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8545,
											"end": 8547,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 8545,
											"end": 8566,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8539,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 8532,
											"end": 8543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8568,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8568,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8532,
											"end": 8568,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8568,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8532,
											"end": 8568,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 8532,
											"end": 8568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 8532,
											"end": 8572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8577,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8577,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8532,
											"end": 8577,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8532,
											"end": 8577,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8532,
											"end": 8577,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 8532,
											"end": 8577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8525,
											"end": 8577,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8525,
											"end": 8577,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8427,
											"end": 8921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8427,
											"end": 8921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 8427,
											"end": 8921,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8427,
											"end": 8921,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 8427,
											"end": 8921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8668,
											"end": 8675,
											"name": "PUSH",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 8649,
											"end": 8665,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8649,
											"end": 8665,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8649,
											"end": 8675,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8638,
											"end": 8645,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8638,
											"end": 8676,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8634,
											"end": 8921,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8634,
											"end": 8921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 8634,
											"end": 8921,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8693,
											"end": 8708,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8711,
											"end": 8718,
											"name": "PUSH",
											"source": 0,
											"value": "155CC0"
										},
										{
											"begin": 8693,
											"end": 8718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8693,
											"end": 8718,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8740,
											"end": 8785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 8781,
											"end": 8784,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8740,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 8765,
											"end": 8773,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 8765,
											"end": 8773,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8753,
											"end": 8755,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 8753,
											"end": 8774,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8740,
											"end": 8747,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8740,
											"end": 8751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 8740,
											"end": 8751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8740,
											"end": 8776,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8740,
											"end": 8776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8740,
											"end": 8776,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8740,
											"end": 8776,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8740,
											"end": 8776,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8740,
											"end": 8776,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 8740,
											"end": 8776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8740,
											"end": 8780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 8740,
											"end": 8780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8740,
											"end": 8785,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8740,
											"end": 8785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8740,
											"end": 8785,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8740,
											"end": 8785,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8740,
											"end": 8785,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8740,
											"end": 8785,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 8740,
											"end": 8785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8733,
											"end": 8785,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8733,
											"end": 8785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8634,
											"end": 8921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8634,
											"end": 8921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 8634,
											"end": 8921,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8634,
											"end": 8921,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 8634,
											"end": 8921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8818,
											"end": 8833,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8836,
											"end": 8842,
											"name": "PUSH",
											"source": 0,
											"value": "1DDBC"
										},
										{
											"begin": 8818,
											"end": 8842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8818,
											"end": 8842,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8864,
											"end": 8909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 8905,
											"end": 8908,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8864,
											"end": 8900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 8889,
											"end": 8897,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 8889,
											"end": 8897,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8877,
											"end": 8879,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 8877,
											"end": 8898,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8864,
											"end": 8871,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8864,
											"end": 8875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 8864,
											"end": 8875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8864,
											"end": 8900,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8864,
											"end": 8900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8864,
											"end": 8900,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8864,
											"end": 8900,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8864,
											"end": 8900,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8864,
											"end": 8900,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 8864,
											"end": 8900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8864,
											"end": 8904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 8864,
											"end": 8904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8864,
											"end": 8909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8864,
											"end": 8909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8864,
											"end": 8909,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8864,
											"end": 8909,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8864,
											"end": 8909,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8864,
											"end": 8909,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 8864,
											"end": 8909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8857,
											"end": 8909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8857,
											"end": 8909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8634,
											"end": 8921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8634,
											"end": 8921,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 8634,
											"end": 8921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8427,
											"end": 8921,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 8427,
											"end": 8921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 8942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 8942,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 8942,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 8942,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 8942,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 8942,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8950,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 8019,
											"end": 8950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8019,
											"end": 8950,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1372,
											"end": 1405,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1372,
											"end": 1405,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1372,
											"end": 1405,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1372,
											"end": 1405,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1372,
											"end": 1405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1372,
											"end": 1405,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6353,
											"end": 6482,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 6353,
											"end": 6482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6404,
											"end": 6411,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 6454,
											"end": 6473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 6454,
											"end": 6471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 6454,
											"end": 6473,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6454,
											"end": 6473,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 6454,
											"end": 6473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6447,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6431,
											"end": 6447,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6447,
											"name": "PUSH",
											"source": 0,
											"value": "FC3E532B"
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6431,
											"end": 6453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 6431,
											"end": 6474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6353,
											"end": 6482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6353,
											"end": 6482,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1261,
											"end": 1291,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1261,
											"end": 1291,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1291,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1261,
											"end": 1291,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1291,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1291,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7880,
											"end": 7977,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 7880,
											"end": 7977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7921,
											"end": 7928,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7960,
											"end": 7968,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 7960,
											"end": 7968,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7950,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 7948,
											"end": 7969,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7941,
											"end": 7969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7941,
											"end": 7969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7880,
											"end": 7977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7880,
											"end": 7977,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1452,
											"end": 1493,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1452,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1493,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1452,
											"end": 1493,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1452,
											"end": 1493,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5406,
											"end": 6023,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 5406,
											"end": 6023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5446,
											"end": 5461,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5464,
											"end": 5473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 5464,
											"end": 5471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 5464,
											"end": 5473,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5464,
											"end": 5473,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 5464,
											"end": 5473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5446,
											"end": 5473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5446,
											"end": 5473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5499,
											"end": 5513,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5499,
											"end": 5513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5488,
											"end": 5495,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5488,
											"end": 5513,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5484,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 5484,
											"end": 5548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5530,
											"end": 5537,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5530,
											"end": 5537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 5530,
											"end": 5537,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5484,
											"end": 5548,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 5484,
											"end": 5548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5579,
											"end": 5580,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5564,
											"end": 5575,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5564,
											"end": 5575,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5564,
											"end": 5580,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 5560,
											"end": 5654,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5614,
											"end": 5621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5597,
											"end": 5611,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5597,
											"end": 5621,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5597,
											"end": 5621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5597,
											"end": 5621,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5597,
											"end": 5621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5636,
											"end": 5643,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5636,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 5636,
											"end": 5643,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5560,
											"end": 5654,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 5560,
											"end": 5654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5666,
											"end": 5684,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5693,
											"end": 5707,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5693,
											"end": 5707,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5687,
											"end": 5690,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 5687,
											"end": 5707,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5666,
											"end": 5707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5666,
											"end": 5707,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5718,
											"end": 5732,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5735,
											"end": 5773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 5750,
											"end": 5772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 5750,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5750,
											"end": 5772,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5750,
											"end": 5772,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 5750,
											"end": 5772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5735,
											"end": 5745,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5735,
											"end": 5749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 5735,
											"end": 5749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5735,
											"end": 5773,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5735,
											"end": 5773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5735,
											"end": 5773,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5735,
											"end": 5773,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5735,
											"end": 5773,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5735,
											"end": 5773,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 5735,
											"end": 5773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5718,
											"end": 5773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5718,
											"end": 5773,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5801,
											"end": 5808,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5784,
											"end": 5798,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5784,
											"end": 5808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5784,
											"end": 5808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5784,
											"end": 5808,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5784,
											"end": 5808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5833,
											"end": 5856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 5849,
											"end": 5855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5833,
											"end": 5844,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5833,
											"end": 5844,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5833,
											"end": 5848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5833,
											"end": 5848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5833,
											"end": 5856,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5833,
											"end": 5856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5833,
											"end": 5856,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5833,
											"end": 5856,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5833,
											"end": 5856,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5833,
											"end": 5856,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 5833,
											"end": 5856,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5830,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5819,
											"end": 5856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5856,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5856,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 5935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 5897,
											"end": 5934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 5906,
											"end": 5912,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5918,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5931,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5914,
											"end": 5931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5931,
											"name": "PUSH",
											"source": 0,
											"value": "F6153CCD"
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5914,
											"end": 5933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5897,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 5897,
											"end": 5934,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5897,
											"end": 5934,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 5897,
											"end": 5934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 5892,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5881,
											"end": 5892,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 5896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5881,
											"end": 5896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 5935,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 5935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 5935,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5881,
											"end": 5935,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 5935,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5881,
											"end": 5935,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 5881,
											"end": 5935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5867,
											"end": 5878,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5867,
											"end": 5935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5867,
											"end": 5935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5867,
											"end": 5935,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5867,
											"end": 5935,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 5987,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5982,
											"end": 5987,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 5987,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 5987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 5987,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5982,
											"end": 5987,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 5987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 5987,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 5987,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5982,
											"end": 5987,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 5992,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5982,
											"end": 5992,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 5992,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 6001,
											"end": 6005,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 6008,
											"end": 6014,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5406,
											"end": 6023,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5406,
											"end": 6023,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5406,
											"end": 6023,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5406,
											"end": 6023,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 5406,
											"end": 6023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5406,
											"end": 6023,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1619,
											"end": 1652,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1619,
											"end": 1652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1652,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1619,
											"end": 1652,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1619,
											"end": 1652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1652,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1652,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1619,
											"end": 1652,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1652,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1652,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1619,
											"end": 1652,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1652,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1412,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1412,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1412,
											"end": 1445,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1445,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1445,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6490,
											"end": 6592,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 6490,
											"end": 6592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6537,
											"end": 6544,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6564,
											"end": 6584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 1712,
											"end": 1718,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 6564,
											"end": 6575,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6564,
											"end": 6575,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6564,
											"end": 6579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 6564,
											"end": 6579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6564,
											"end": 6584,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6564,
											"end": 6584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6564,
											"end": 6584,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6564,
											"end": 6584,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6564,
											"end": 6584,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6564,
											"end": 6584,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 6564,
											"end": 6584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6557,
											"end": 6584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6557,
											"end": 6584,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6490,
											"end": 6592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6490,
											"end": 6592,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6031,
											"end": 6345,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 6031,
											"end": 6345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6077,
											"end": 6084,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6112,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6115,
											"end": 6124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 6115,
											"end": 6122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 6115,
											"end": 6124,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6115,
											"end": 6124,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 6115,
											"end": 6124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6097,
											"end": 6124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6097,
											"end": 6124,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6154,
											"end": 6155,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6139,
											"end": 6150,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6139,
											"end": 6150,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6139,
											"end": 6155,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6135,
											"end": 6192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 6135,
											"end": 6192,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6180,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6172,
											"end": 6180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6172,
											"end": 6180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6172,
											"end": 6180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6172,
											"end": 6180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 6172,
											"end": 6180,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6135,
											"end": 6192,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 6135,
											"end": 6192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6202,
											"end": 6220,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6247,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6233,
											"end": 6247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6223,
											"end": 6230,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6223,
											"end": 6247,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6202,
											"end": 6247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6202,
											"end": 6247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6258,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6275,
											"end": 6313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 6290,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 6290,
											"end": 6310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6290,
											"end": 6312,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6290,
											"end": 6312,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 6290,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6275,
											"end": 6285,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6275,
											"end": 6289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 6275,
											"end": 6289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6275,
											"end": 6313,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6275,
											"end": 6313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6275,
											"end": 6313,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6275,
											"end": 6313,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6275,
											"end": 6313,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6275,
											"end": 6313,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 6275,
											"end": 6313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6258,
											"end": 6313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6258,
											"end": 6313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6324,
											"end": 6337,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6324,
											"end": 6337,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6324,
											"end": 6337,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6324,
											"end": 6337,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6324,
											"end": 6337,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6345,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 6031,
											"end": 6345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6031,
											"end": 6345,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1892,
											"end": 2048,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1892,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1989,
											"end": 1996,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1718,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2021,
											"end": 2034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 2032,
											"end": 2033,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2027,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2021,
											"end": 2031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2034,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2034,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2021,
											"end": 2034,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2034,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2021,
											"end": 2034,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 2021,
											"end": 2034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2040,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 2021,
											"end": 2040,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2040,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2040,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 2021,
											"end": 2040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2021,
											"end": 2040,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2014,
											"end": 2040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2014,
											"end": 2040,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2048,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2048,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2048,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 773,
											"end": 957,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 773,
											"end": 957,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 831,
											"end": 838,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 864,
											"end": 865,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 859,
											"end": 860,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 859,
											"end": 865,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 859,
											"end": 865,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "1E"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 911,
											"end": 920,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 927,
											"end": 928,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 923,
											"end": 924,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 923,
											"end": 928,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 911,
											"end": 928,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 911,
											"end": 928,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 948,
											"end": 949,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 941,
											"end": 949,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 941,
											"end": 949,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 941,
											"end": 949,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 773,
											"end": 957,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 773,
											"end": 957,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 773,
											"end": 957,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 773,
											"end": 957,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 773,
											"end": 957,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 317,
											"end": 498,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 317,
											"end": 498,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 375,
											"end": 382,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 395,
											"end": 404,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 407,
											"end": 408,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 407,
											"end": 412,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 395,
											"end": 412,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 395,
											"end": 412,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 436,
											"end": 437,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 431,
											"end": 432,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 431,
											"end": 437,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 431,
											"end": 437,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "1B"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 489,
											"end": 490,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 482,
											"end": 490,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 482,
											"end": 490,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 482,
											"end": 490,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 317,
											"end": 498,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 317,
											"end": 498,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 317,
											"end": 498,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 317,
											"end": 498,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 317,
											"end": 498,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1208,
											"end": 1678,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1208,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1266,
											"end": 1273,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1515,
											"end": 1516,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1510,
											"end": 1511,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1510,
											"end": 1516,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1506,
											"end": 1553,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1506,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 1506,
											"end": 1553,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1541,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1541,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 1533,
											"end": 1541,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1506,
											"end": 1553,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 1506,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1574,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1581,
											"end": 1582,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1577,
											"end": 1578,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1577,
											"end": 1582,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1582,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1582,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1610,
											"end": 1611,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1606,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1602,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1606,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1606,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 1601,
											"end": 1606,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1606,
											"name": "INVALID",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1606,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 1601,
											"end": 1606,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1606,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1611,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "PUSH data",
											"source": 5,
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1669,
											"end": 1670,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1662,
											"end": 1670,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1662,
											"end": 1670,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1662,
											"end": 1670,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1208,
											"end": 1678,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 1208,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1208,
											"end": 1678,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1208,
											"end": 1678,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1208,
											"end": 1678,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1208,
											"end": 1678,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1208,
											"end": 1678,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2146,
											"end": 2479,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 2146,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2211,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2303,
											"end": 2304,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2300,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2304,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "PUSH",
											"source": 5,
											"value": "1A"
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 2355,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2363,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2358,
											"end": 2359,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2358,
											"end": 2363,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2358,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 2358,
											"end": 2363,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2358,
											"end": 2363,
											"name": "INVALID",
											"source": 5
										},
										{
											"begin": 2358,
											"end": 2363,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 2358,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2358,
											"end": 2363,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 2363,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 2363,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2470,
											"end": 2471,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2463,
											"end": 2471,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2463,
											"end": 2471,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2463,
											"end": 2471,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2146,
											"end": 2479,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2146,
											"end": 2479,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2146,
											"end": 2479,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2146,
											"end": 2479,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2146,
											"end": 2479,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1727,
											"end": 1884,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1727,
											"end": 1884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1822,
											"end": 1829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1854,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1874,
											"end": 1875,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1854,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 1712,
											"end": 1718,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1854,
											"end": 1860,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1854,
											"end": 1864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1854,
											"end": 1864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1854,
											"end": 1869,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1854,
											"end": 1869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1854,
											"end": 1869,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1854,
											"end": 1869,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1854,
											"end": 1869,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1854,
											"end": 1869,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 1854,
											"end": 1869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1854,
											"end": 1873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1854,
											"end": 1873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1854,
											"end": 1876,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1854,
											"end": 1876,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1854,
											"end": 1876,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1854,
											"end": 1876,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1854,
											"end": 1876,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1854,
											"end": 1876,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1854,
											"end": 1876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1876,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1876,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1884,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1884,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1884,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1884,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1884,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									],
									".data": {
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77"
									}
								}
							}
						},
						"methodIdentifiers": {
							"accPerShare()": "d2890a01",
							"computePer()": "6e5b9634",
							"deposit(uint256)": "b6b55f25",
							"getDepositBalance()": "0497de4a",
							"getEther()": "de0ff7c5",
							"getStakingCoinPerSec()": "b8a3b366",
							"getTime()": "557ed1ba",
							"lastUpdateTime()": "c8f33c91",
							"myBenefits()": "936b6cec",
							"myValue()": "47f1aae7",
							"owner()": "8da5cb5b",
							"pendingCoin()": "fc3e532b",
							"setStakingSwitch(bool)": "81ad5718",
							"sharesPrice()": "77926869",
							"stakingStartTime()": "6abfd183",
							"stakingSwitch()": "e6fa445d",
							"totalAmount()": "1a39d8ef",
							"totalDeposit()": "f6153ccd",
							"totalShares()": "3a98ef39",
							"totalStakingAmount()": "d201114a",
							"updatePool()": "e3161ddd",
							"userInfo(address)": "1959a002",
							"withdraw(uint256)": "2e1a7d4d",
							"withdrawFee()": "e941fa78",
							"withdrawFeePeriod()": "df10b4e6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IPokerToken\",\"name\":\"_poker\",\"type\":\"address\"},{\"internalType\":\"contract IBurnCoin\",\"name\":\"_burncoin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastDepositedTime\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"accPerShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"computePer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDepositBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEther\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakingCoinPerSec\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"myBenefits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"myValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingCoin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"flag\",\"type\":\"bool\"}],\"name\":\"setStakingSwitch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sharesPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingSwitch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStakingAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastDepositedTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUserActionTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFeePeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Staking/Staking.sol\":\"Staking\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Staking/Staking.sol\":{\"keccak256\":\"0x069b9f42444cbe927fcae269b07d2479e3cd57e943252efa2ff01c18a0ce543f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d29e37f1c2157422a71845ca7deea9044fa2d5372f9bbeac92b591503b32747b\",\"dweb:/ipfs/QmS4qDq7LmJX1JBfT7A3Ba4bPmEdtAzR1rDoFmAXMNWKCe\"]},\"_lib/Context.sol\":{\"keccak256\":\"0x77ec8b534124690b04754bc03aaa982479b91b9f7508bed54455c161e93a02e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf08de24c3951531b87b85a75157d4b26ddcb8952452672f9da9f63c06982e9f\",\"dweb:/ipfs/QmaUzytpjpYHNTXw3Hy4cdKmNoU5PWpyMZBhorK69pk8sA\"]},\"_lib/ERC20.sol\":{\"keccak256\":\"0x2ce16e09e444519aec6a0e1f355325dfe2af844ea539ae8f8a7d53a2daf6d844\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb89e49b22ff4dd4d67fe590e95ce997d8a5a83db5ca8a246086dd4a56f01a72\",\"dweb:/ipfs/QmfZbMN1MNau96zL4xS1EtA9gVyNRWPwZCWwGVVeNG8uNF\"]},\"_lib/IERC20.sol\":{\"keccak256\":\"0x943e16fe1fdaa84c7329da3fa5aab8ce507ff7b6776a3925e97ffc0beef9692a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7727696ef766547aaa34152d06a443c5c8924fa363f47e51335d0e3d619c194\",\"dweb:/ipfs/QmRYgfYhpyjHaQjSJMG5fDdDGbQA9eXCGhuSRnwGfoSyCD\"]},\"_lib/Ownable.sol\":{\"keccak256\":\"0x9bb16a0785f0f888e4b470311e02af5bb72f0663d7be20eb7a60902e29e35406\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://014bf309648c0793be70899bc260d7094e17de223ed8eaebae9327643623cf93\",\"dweb:/ipfs/QmR4LhypLf6CVNvqxgDDAJ4E9E5h3wqV6RT8g7jERZdVLT\"]},\"_lib/SafeMath.sol\":{\"keccak256\":\"0xe1bb41b0568cdd4364bb5fcba4fd6065df59c3ea8147e040fb9c978bc3a89af5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e4192a8253ea1f04e97ac1ac3df25dc77719696b0bee70b3af1a4a56edcb5b\",\"dweb:/ipfs/QmaQ4TkRxpXxjtKKewy2oAgJXFbdqSwacBUMrNaSgZ72jt\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"_lib/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"_lib/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"_lib/Context.sol\":{\"keccak256\":\"0x77ec8b534124690b04754bc03aaa982479b91b9f7508bed54455c161e93a02e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf08de24c3951531b87b85a75157d4b26ddcb8952452672f9da9f63c06982e9f\",\"dweb:/ipfs/QmaUzytpjpYHNTXw3Hy4cdKmNoU5PWpyMZBhorK69pk8sA\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"_lib/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								},
								{
									"internalType": "uint8",
									"name": "_decimals",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "_supply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `_spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {_name} and {_symbol}, {_decimals} To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `_to` cannot be the zero address. - the caller must have a balance of at least `_amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `_from` and `_to` cannot be the zero address. - `_from` must have a balance of at least `_amount`. - the caller must have allowance for `_from`'s tokens of at least `_amount`."
							}
						},
						"stateVariables": {
							"decimals": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name": {
								"details": "Returns the name of the token."
							},
							"symbol": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"_lib/ERC20.sol\":139:7117  contract ERC20 is IERC20, Context {\r... */\n  mstore(0x40, 0x80)\n    /* \"_lib/ERC20.sol\":1552:1909  constructor(\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x80\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  dup4\n  dup3\n  add\n  swap2\n  pop\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  dup3\n  mload\n  dup7\n  0x01\n  dup3\n  mul\n  dup4\n  add\n  gt\n  0x0100000000\n  dup3\n  gt\n  or\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  dup1\n  dup4\n  mstore\n  0x20\n  dup4\n  add\n  swap3\n  pop\n  pop\n  pop\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_6:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_8\n  jumpi\n  dup1\n  dup3\n  add\n  mload\n  dup2\n  dup5\n  add\n  mstore\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  jump(tag_6)\ntag_8:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_10\n  jumpi\n  0x00\n  dup1\n  revert\ntag_10:\n  dup4\n  dup3\n  add\n  swap2\n  pop\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  0x00\n  dup1\n  revert\ntag_11:\n  dup3\n  mload\n  dup7\n  0x01\n  dup3\n  mul\n  dup4\n  add\n  gt\n  0x0100000000\n  dup3\n  gt\n  or\n  iszero\n  tag_12\n  jumpi\n  0x00\n  dup1\n  revert\ntag_12:\n  dup1\n  dup4\n  mstore\n  0x20\n  dup4\n  add\n  swap3\n  pop\n  pop\n  pop\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_13:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_15\n  jumpi\n  dup1\n  dup3\n  add\n  mload\n  dup2\n  dup5\n  add\n  mstore\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  jump(tag_13)\ntag_15:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"_lib/ERC20.sol\":1710:1715  _name */\n  dup4\n    /* \"_lib/ERC20.sol\":1703:1707  name */\n  0x03\n    /* \"_lib/ERC20.sol\":1703:1715  name = _name */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_19\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n    /* \"_lib/ERC20.sol\":1735:1742  _symbol */\n  dup3\n    /* \"_lib/ERC20.sol\":1726:1732  symbol */\n  0x04\n    /* \"_lib/ERC20.sol\":1726:1742  symbol = _symbol */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_21\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_21:\n  pop\n    /* \"_lib/ERC20.sol\":1764:1773  _decimals */\n  dup2\n    /* \"_lib/ERC20.sol\":1753:1761  decimals */\n  0x05\n  0x00\n    /* \"_lib/ERC20.sol\":1753:1773  decimals = _decimals */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"_lib/ERC20.sol\":1816:1825  _decimals */\n  dup2\n    /* \"_lib/ERC20.sol\":1808:1826  uint256(_decimals) */\n  0xff\n  and\n    /* \"_lib/ERC20.sol\":1804:1806  10 */\n  0x0a\n    /* \"_lib/ERC20.sol\":1804:1826  10**uint256(_decimals) */\n  exp\n    /* \"_lib/ERC20.sol\":1794:1801  _supply */\n  dup2\n    /* \"_lib/ERC20.sol\":1794:1826  _supply * 10**uint256(_decimals) */\n  mul\n    /* \"_lib/ERC20.sol\":1784:1826  _supply = _supply * 10**uint256(_decimals) */\n  swap1\n  pop\n    /* \"_lib/ERC20.sol\":1852:1859  _supply */\n  dup1\n    /* \"_lib/ERC20.sol\":1837:1849  _totalSupply */\n  0x02\n    /* \"_lib/ERC20.sol\":1837:1859  _totalSupply = _supply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"_lib/ERC20.sol\":1894:1901  _supply */\n  dup1\n    /* \"_lib/ERC20.sol\":1870:1879  _balances */\n  0x00\n    /* \"_lib/ERC20.sol\":1870:1891  _balances[msg.sender] */\n  dup1\n    /* \"_lib/ERC20.sol\":1880:1890  msg.sender */\n  caller\n    /* \"_lib/ERC20.sol\":1870:1891  _balances[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"_lib/ERC20.sol\":1870:1901  _balances[msg.sender] = _supply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"_lib/ERC20.sol\":1552:1909  constructor(\r... */\n  pop\n  pop\n  pop\n  pop\n    /* \"_lib/ERC20.sol\":139:7117  contract ERC20 is IERC20, Context {\r... */\n  jump(tag_22)\ntag_20:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_24\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_23)\ntag_24:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_23\n  jumpi\n  swap2\n  dup3\n  add\ntag_25:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_26\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_25)\ntag_26:\ntag_23:\n  pop\n  swap1\n  pop\n  tag_27\n  swap2\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n  pop\n  swap1\n  jump\t// out\ntag_28:\ntag_29:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_30\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_29)\ntag_30:\n  pop\n  swap1\n  jump\t// out\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"_lib/ERC20.sol\":139:7117  contract ERC20 is IERC20, Context {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x313ce567\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"_lib/ERC20.sol\":445:463  string public name */\n    tag_3:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_15:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_17\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_15)\n    tag_17:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_18\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_18:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_lib/ERC20.sol\":3099:3298  function approve(address _spender, uint256 _amount)\r... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_21\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_lib/ERC20.sol\":1974:2076  function totalSupply() external view override returns (uint256) {\r... */\n    tag_5:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_lib/ERC20.sol\":3771:4175  function transferFrom(\r... */\n    tag_6:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_26\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_lib/ERC20.sol\":1242:1263  uint8 public decimals */\n    tag_7:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_lib/ERC20.sol\":2139:2299  function balanceOf(address _owner)\r... */\n    tag_8:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_31\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_lib/ERC20.sol\":583:603  string public symbol */\n    tag_9:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_34:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_36\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_34)\n    tag_36:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_37\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_37:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_lib/ERC20.sol\":2507:2698  function transfer(address _to, uint256 _amount)\r... */\n    tag_10:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_lib/ERC20.sol\":2761:2951  function allowance(address _owner, address _spender)\r... */\n    tag_11:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_43\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_lib/ERC20.sol\":445:463  string public name */\n    tag_14:\n      0x03\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_44\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_45\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_44)\n    tag_45:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_46:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_46\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_44:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"_lib/ERC20.sol\":3099:3298  function approve(address _spender, uint256 _amount)\r... */\n    tag_21:\n        /* \"_lib/ERC20.sol\":3205:3209  bool */\n      0x00\n        /* \"_lib/ERC20.sol\":3227:3268  _approve(_msgSender(), _spender, _amount) */\n      tag_48\n        /* \"_lib/ERC20.sol\":3236:3248  _msgSender() */\n      tag_49\n        /* \"_lib/ERC20.sol\":3236:3246  _msgSender */\n      tag_50\n        /* \"_lib/ERC20.sol\":3236:3248  _msgSender() */\n      jump\t// in\n    tag_49:\n        /* \"_lib/ERC20.sol\":3250:3258  _spender */\n      dup5\n        /* \"_lib/ERC20.sol\":3260:3267  _amount */\n      dup5\n        /* \"_lib/ERC20.sol\":3227:3235  _approve */\n      tag_51\n        /* \"_lib/ERC20.sol\":3227:3268  _approve(_msgSender(), _spender, _amount) */\n      jump\t// in\n    tag_48:\n        /* \"_lib/ERC20.sol\":3286:3290  true */\n      0x01\n        /* \"_lib/ERC20.sol\":3279:3290  return true */\n      swap1\n      pop\n        /* \"_lib/ERC20.sol\":3099:3298  function approve(address _spender, uint256 _amount)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"_lib/ERC20.sol\":1974:2076  function totalSupply() external view override returns (uint256) {\r... */\n    tag_23:\n        /* \"_lib/ERC20.sol\":2029:2036  uint256 */\n      0x00\n        /* \"_lib/ERC20.sol\":2056:2068  _totalSupply */\n      sload(0x02)\n        /* \"_lib/ERC20.sol\":2049:2068  return _totalSupply */\n      swap1\n      pop\n        /* \"_lib/ERC20.sol\":1974:2076  function totalSupply() external view override returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"_lib/ERC20.sol\":3771:4175  function transferFrom(\r... */\n    tag_26:\n        /* \"_lib/ERC20.sol\":3899:3903  bool */\n      0x00\n        /* \"_lib/ERC20.sol\":3941:3942  0 */\n      dup1\n        /* \"_lib/ERC20.sol\":3924:3943  _from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":3924:3929  _from */\n      dup5\n        /* \"_lib/ERC20.sol\":3924:3943  _from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"_lib/ERC20.sol\":3924:3964  _from != address(0) && _to != address(0) */\n      dup1\n      iszero\n      tag_54\n      jumpi\n      pop\n        /* \"_lib/ERC20.sol\":3962:3963  0 */\n      0x00\n        /* \"_lib/ERC20.sol\":3947:3964  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":3947:3950  _to */\n      dup4\n        /* \"_lib/ERC20.sol\":3947:3964  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"_lib/ERC20.sol\":3924:3964  _from != address(0) && _to != address(0) */\n    tag_54:\n        /* \"_lib/ERC20.sol\":3916:3965  require(_from != address(0) && _to != address(0)) */\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n        /* \"_lib/ERC20.sol\":3978:4104  _approve(\r... */\n      tag_56\n        /* \"_lib/ERC20.sol\":4001:4006  _from */\n      dup5\n        /* \"_lib/ERC20.sol\":4021:4033  _msgSender() */\n      tag_57\n        /* \"_lib/ERC20.sol\":4021:4031  _msgSender */\n      tag_50\n        /* \"_lib/ERC20.sol\":4021:4033  _msgSender() */\n      jump\t// in\n    tag_57:\n        /* \"_lib/ERC20.sol\":4048:4093  _allowances[_from][_msgSender()].sub(_amount) */\n      tag_58\n        /* \"_lib/ERC20.sol\":4085:4092  _amount */\n      dup6\n        /* \"_lib/ERC20.sol\":4048:4059  _allowances */\n      0x01\n        /* \"_lib/ERC20.sol\":4048:4066  _allowances[_from] */\n      0x00\n        /* \"_lib/ERC20.sol\":4060:4065  _from */\n      dup11\n        /* \"_lib/ERC20.sol\":4048:4066  _allowances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"_lib/ERC20.sol\":4048:4080  _allowances[_from][_msgSender()] */\n      0x00\n        /* \"_lib/ERC20.sol\":4067:4079  _msgSender() */\n      tag_59\n        /* \"_lib/ERC20.sol\":4067:4077  _msgSender */\n      tag_50\n        /* \"_lib/ERC20.sol\":4067:4079  _msgSender() */\n      jump\t// in\n    tag_59:\n        /* \"_lib/ERC20.sol\":4048:4080  _allowances[_from][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"_lib/ERC20.sol\":4048:4084  _allowances[_from][_msgSender()].sub */\n      tag_60\n      swap1\n        /* \"_lib/ERC20.sol\":4048:4093  _allowances[_from][_msgSender()].sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_58:\n        /* \"_lib/ERC20.sol\":3978:3986  _approve */\n      tag_51\n        /* \"_lib/ERC20.sol\":3978:4104  _approve(\r... */\n      jump\t// in\n    tag_56:\n        /* \"_lib/ERC20.sol\":4115:4145  _transfer(_from, _to, _amount) */\n      tag_61\n        /* \"_lib/ERC20.sol\":4125:4130  _from */\n      dup5\n        /* \"_lib/ERC20.sol\":4132:4135  _to */\n      dup5\n        /* \"_lib/ERC20.sol\":4137:4144  _amount */\n      dup5\n        /* \"_lib/ERC20.sol\":4115:4124  _transfer */\n      tag_62\n        /* \"_lib/ERC20.sol\":4115:4145  _transfer(_from, _to, _amount) */\n      jump\t// in\n    tag_61:\n        /* \"_lib/ERC20.sol\":4163:4167  true */\n      0x01\n        /* \"_lib/ERC20.sol\":4156:4167  return true */\n      swap1\n      pop\n        /* \"_lib/ERC20.sol\":3771:4175  function transferFrom(\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"_lib/ERC20.sol\":1242:1263  uint8 public decimals */\n    tag_28:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"_lib/ERC20.sol\":2139:2299  function balanceOf(address _owner)\r... */\n    tag_31:\n        /* \"_lib/ERC20.sol\":2242:2249  uint256 */\n      0x00\n        /* \"_lib/ERC20.sol\":2274:2283  _balances */\n      dup1\n        /* \"_lib/ERC20.sol\":2274:2291  _balances[_owner] */\n      0x00\n        /* \"_lib/ERC20.sol\":2284:2290  _owner */\n      dup4\n        /* \"_lib/ERC20.sol\":2274:2291  _balances[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"_lib/ERC20.sol\":2267:2291  return _balances[_owner] */\n      swap1\n      pop\n        /* \"_lib/ERC20.sol\":2139:2299  function balanceOf(address _owner)\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"_lib/ERC20.sol\":583:603  string public symbol */\n    tag_33:\n      0x04\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_64\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_65\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_64)\n    tag_65:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_66:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_66\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_64:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"_lib/ERC20.sol\":2507:2698  function transfer(address _to, uint256 _amount)\r... */\n    tag_40:\n        /* \"_lib/ERC20.sol\":2609:2613  bool */\n      0x00\n        /* \"_lib/ERC20.sol\":2631:2668  _transfer(_msgSender(), _to, _amount) */\n      tag_68\n        /* \"_lib/ERC20.sol\":2641:2653  _msgSender() */\n      tag_69\n        /* \"_lib/ERC20.sol\":2641:2651  _msgSender */\n      tag_50\n        /* \"_lib/ERC20.sol\":2641:2653  _msgSender() */\n      jump\t// in\n    tag_69:\n        /* \"_lib/ERC20.sol\":2655:2658  _to */\n      dup5\n        /* \"_lib/ERC20.sol\":2660:2667  _amount */\n      dup5\n        /* \"_lib/ERC20.sol\":2631:2640  _transfer */\n      tag_62\n        /* \"_lib/ERC20.sol\":2631:2668  _transfer(_msgSender(), _to, _amount) */\n      jump\t// in\n    tag_68:\n        /* \"_lib/ERC20.sol\":2686:2690  true */\n      0x01\n        /* \"_lib/ERC20.sol\":2679:2690  return true */\n      swap1\n      pop\n        /* \"_lib/ERC20.sol\":2507:2698  function transfer(address _to, uint256 _amount)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"_lib/ERC20.sol\":2761:2951  function allowance(address _owner, address _spender)\r... */\n    tag_43:\n        /* \"_lib/ERC20.sol\":2882:2889  uint256 */\n      0x00\n        /* \"_lib/ERC20.sol\":2914:2925  _allowances */\n      0x01\n        /* \"_lib/ERC20.sol\":2914:2933  _allowances[_owner] */\n      0x00\n        /* \"_lib/ERC20.sol\":2926:2932  _owner */\n      dup5\n        /* \"_lib/ERC20.sol\":2914:2933  _allowances[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"_lib/ERC20.sol\":2914:2943  _allowances[_owner][_spender] */\n      0x00\n        /* \"_lib/ERC20.sol\":2934:2942  _spender */\n      dup4\n        /* \"_lib/ERC20.sol\":2914:2943  _allowances[_owner][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"_lib/ERC20.sol\":2907:2943  return _allowances[_owner][_spender] */\n      swap1\n      pop\n        /* \"_lib/ERC20.sol\":2761:2951  function allowance(address _owner, address _spender)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"_lib/Context.sol\":605:711  function _msgSender() internal view virtual returns (address payable) {\r... */\n    tag_50:\n        /* \"_lib/Context.sol\":658:673  address payable */\n      0x00\n        /* \"_lib/Context.sol\":693:703  msg.sender */\n      caller\n        /* \"_lib/Context.sol\":686:703  return msg.sender */\n      swap1\n      pop\n        /* \"_lib/Context.sol\":605:711  function _msgSender() internal view virtual returns (address payable) {\r... */\n      swap1\n      jump\t// out\n        /* \"_lib/ERC20.sol\":5546:5885  function _approve(\r... */\n    tag_51:\n        /* \"_lib/ERC20.sol\":5695:5696  0 */\n      0x00\n        /* \"_lib/ERC20.sol\":5677:5697  _owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":5677:5683  _owner */\n      dup4\n        /* \"_lib/ERC20.sol\":5677:5697  _owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"_lib/ERC20.sol\":5669:5716  require(_owner != address(0), \"approve from 0\") */\n      tag_73\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x617070726f76652066726f6d2030000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_73:\n        /* \"_lib/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"_lib/ERC20.sol\":5735:5757  _spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":5735:5743  _spender */\n      dup3\n        /* \"_lib/ERC20.sol\":5735:5757  _spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"_lib/ERC20.sol\":5727:5774  require(_spender != address(0), \"approve to 0\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x617070726f766520746f20300000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_74:\n        /* \"_lib/ERC20.sol\":5819:5826  _amount */\n      dup1\n        /* \"_lib/ERC20.sol\":5787:5798  _allowances */\n      0x01\n        /* \"_lib/ERC20.sol\":5787:5806  _allowances[_owner] */\n      0x00\n        /* \"_lib/ERC20.sol\":5799:5805  _owner */\n      dup6\n        /* \"_lib/ERC20.sol\":5787:5806  _allowances[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"_lib/ERC20.sol\":5787:5816  _allowances[_owner][_spender] */\n      0x00\n        /* \"_lib/ERC20.sol\":5807:5815  _spender */\n      dup5\n        /* \"_lib/ERC20.sol\":5787:5816  _allowances[_owner][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"_lib/ERC20.sol\":5787:5826  _allowances[_owner][_spender] = _amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"_lib/ERC20.sol\":5859:5867  _spender */\n      dup2\n        /* \"_lib/ERC20.sol\":5842:5877  Approval(_owner, _spender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":5851:5857  _owner */\n      dup4\n        /* \"_lib/ERC20.sol\":5842:5877  Approval(_owner, _spender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"_lib/ERC20.sol\":5869:5876  _amount */\n      dup4\n        /* \"_lib/ERC20.sol\":5842:5877  Approval(_owner, _spender, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"_lib/ERC20.sol\":5546:5885  function _approve(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"_lib/SafeMath.sol\":773:957  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_60:\n        /* \"_lib/SafeMath.sol\":831:838  uint256 */\n      0x00\n        /* \"_lib/SafeMath.sol\":864:865  a */\n      dup3\n        /* \"_lib/SafeMath.sol\":859:860  b */\n      dup3\n        /* \"_lib/SafeMath.sol\":859:865  b <= a */\n      gt\n      iszero\n        /* \"_lib/SafeMath.sol\":851:900  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_76\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_76:\n        /* \"_lib/SafeMath.sol\":911:920  uint256 c */\n      0x00\n        /* \"_lib/SafeMath.sol\":927:928  b */\n      dup3\n        /* \"_lib/SafeMath.sol\":923:924  a */\n      dup5\n        /* \"_lib/SafeMath.sol\":923:928  a - b */\n      sub\n        /* \"_lib/SafeMath.sol\":911:928  uint256 c = a - b */\n      swap1\n      pop\n        /* \"_lib/SafeMath.sol\":948:949  c */\n      dup1\n        /* \"_lib/SafeMath.sol\":941:949  return c */\n      swap2\n      pop\n      pop\n        /* \"_lib/SafeMath.sol\":773:957  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"_lib/ERC20.sol\":4652:5104  function _transfer(\r... */\n    tag_62:\n        /* \"_lib/ERC20.sol\":4795:4796  0 */\n      0x00\n        /* \"_lib/ERC20.sol\":4778:4797  _from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":4778:4783  _from */\n      dup4\n        /* \"_lib/ERC20.sol\":4778:4797  _from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"_lib/ERC20.sol\":4770:4817  require(_from != address(0), \"transfer from 0\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x7472616e736665722066726f6d20300000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_78:\n        /* \"_lib/ERC20.sol\":4851:4852  0 */\n      0x00\n        /* \"_lib/ERC20.sol\":4836:4853  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":4836:4839  _to */\n      dup3\n        /* \"_lib/ERC20.sol\":4836:4853  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"_lib/ERC20.sol\":4828:4871  require(_to != address(0), \"transfer to 0\") */\n      tag_79\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x7472616e7366657220746f203000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_79:\n        /* \"_lib/ERC20.sol\":4905:4911  0xdead */\n      0xdead\n        /* \"_lib/ERC20.sol\":4890:4912  _to != address(0xdead) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":4890:4893  _to */\n      dup3\n        /* \"_lib/ERC20.sol\":4890:4912  _to != address(0xdead) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"_lib/ERC20.sol\":4882:4935  require(_to != address(0xdead), \"transfer to 0xdead\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x7472616e7366657220746f203078646561640000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"_lib/ERC20.sol\":4967:4996  _balances[_from].sub(_amount) */\n      tag_81\n        /* \"_lib/ERC20.sol\":4988:4995  _amount */\n      dup2\n        /* \"_lib/ERC20.sol\":4967:4976  _balances */\n      0x00\n        /* \"_lib/ERC20.sol\":4967:4983  _balances[_from] */\n      dup1\n        /* \"_lib/ERC20.sol\":4977:4982  _from */\n      dup7\n        /* \"_lib/ERC20.sol\":4967:4983  _balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"_lib/ERC20.sol\":4967:4987  _balances[_from].sub */\n      tag_60\n      swap1\n        /* \"_lib/ERC20.sol\":4967:4996  _balances[_from].sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_81:\n        /* \"_lib/ERC20.sol\":4948:4957  _balances */\n      0x00\n        /* \"_lib/ERC20.sol\":4948:4964  _balances[_from] */\n      dup1\n        /* \"_lib/ERC20.sol\":4958:4963  _from */\n      dup6\n        /* \"_lib/ERC20.sol\":4948:4964  _balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"_lib/ERC20.sol\":4948:4996  _balances[_from] = _balances[_from].sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"_lib/ERC20.sol\":5024:5051  _balances[_to].add(_amount) */\n      tag_82\n        /* \"_lib/ERC20.sol\":5043:5050  _amount */\n      dup2\n        /* \"_lib/ERC20.sol\":5024:5033  _balances */\n      0x00\n        /* \"_lib/ERC20.sol\":5024:5038  _balances[_to] */\n      dup1\n        /* \"_lib/ERC20.sol\":5034:5037  _to */\n      dup6\n        /* \"_lib/ERC20.sol\":5024:5038  _balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"_lib/ERC20.sol\":5024:5042  _balances[_to].add */\n      tag_83\n      swap1\n        /* \"_lib/ERC20.sol\":5024:5051  _balances[_to].add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_82:\n        /* \"_lib/ERC20.sol\":5007:5016  _balances */\n      0x00\n        /* \"_lib/ERC20.sol\":5007:5021  _balances[_to] */\n      dup1\n        /* \"_lib/ERC20.sol\":5017:5020  _to */\n      dup5\n        /* \"_lib/ERC20.sol\":5007:5021  _balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"_lib/ERC20.sol\":5007:5051  _balances[_to] = _balances[_to].add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"_lib/ERC20.sol\":5083:5086  _to */\n      dup2\n        /* \"_lib/ERC20.sol\":5067:5096  Transfer(_from, _to, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":5076:5081  _from */\n      dup4\n        /* \"_lib/ERC20.sol\":5067:5096  Transfer(_from, _to, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"_lib/ERC20.sol\":5088:5095  _amount */\n      dup4\n        /* \"_lib/ERC20.sol\":5067:5096  Transfer(_from, _to, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"_lib/ERC20.sol\":4652:5104  function _transfer(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"_lib/SafeMath.sol\":317:498  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_83:\n        /* \"_lib/SafeMath.sol\":375:382  uint256 */\n      0x00\n        /* \"_lib/SafeMath.sol\":395:404  uint256 c */\n      dup1\n        /* \"_lib/SafeMath.sol\":411:412  b */\n      dup3\n        /* \"_lib/SafeMath.sol\":407:408  a */\n      dup5\n        /* \"_lib/SafeMath.sol\":407:412  a + b */\n      add\n        /* \"_lib/SafeMath.sol\":395:412  uint256 c = a + b */\n      swap1\n      pop\n        /* \"_lib/SafeMath.sol\":436:437  a */\n      dup4\n        /* \"_lib/SafeMath.sol\":431:432  c */\n      dup2\n        /* \"_lib/SafeMath.sol\":431:437  c >= a */\n      lt\n      iszero\n        /* \"_lib/SafeMath.sol\":423:469  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_85\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_85:\n        /* \"_lib/SafeMath.sol\":489:490  c */\n      dup1\n        /* \"_lib/SafeMath.sol\":482:490  return c */\n      swap2\n      pop\n      pop\n        /* \"_lib/SafeMath.sol\":317:498  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122003d781075401c8c4954bd0a10f8369a9b582ebb7db4d2913f03ed832ff9613ef64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620011b6380380620011b6833981810160405260808110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660018202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019080838360005b83811015620000c3578082015181840152602081019050620000a6565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011557600080fd5b838201915060208201858111156200012c57600080fd5b82518660018202830111640100000000821117156200014a57600080fd5b8083526020830192505050908051906020019080838360005b838110156200018057808201518184015260208101905062000163565b50505050905090810190601f168015620001ae5780820380516001836020036101000a031916815260200191505b5060405260200180519060200190929190805190602001909291905050508360039080519060200190620001e492919062000278565b508260049080519060200190620001fd92919062000278565b5081600560006101000a81548160ff021916908360ff1602179055508160ff16600a0a8102905080600281905550806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050506200031e565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002bb57805160ff1916838001178555620002ec565b82800160010185558215620002ec579182015b82811115620002eb578251825591602001919060010190620002ce565b5b509050620002fb9190620002ff565b5090565b5b808211156200031a57600081600090555060010162000300565b5090565b610e88806200032e6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461022157806370a082311461024257806395d89b411461029a578063a9059cbb1461031d578063dd62ed3e1461038157610093565b806306fdde0314610098578063095ea7b31461011b57806318160ddd1461017f57806323b872dd1461019d575b600080fd5b6100a06103f9565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100e05780820151818401526020810190506100c5565b50505050905090810190601f16801561010d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101676004803603604081101561013157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610497565b60405180821515815260200191505060405180910390f35b6101876104b5565b6040518082815260200191505060405180910390f35b610209600480360360608110156101b357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506104bf565b60405180821515815260200191505060405180910390f35b6102296105f0565b604051808260ff16815260200191505060405180910390f35b6102846004803603602081101561025857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610603565b6040518082815260200191505060405180910390f35b6102a261064b565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102e25780820151818401526020810190506102c7565b50505050905090810190601f16801561030f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103696004803603604081101561033357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106e9565b60405180821515815260200191505060405180910390f35b6103e36004803603604081101561039757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610707565b6040518082815260200191505060405180910390f35b60038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561048f5780601f106104645761010080835404028352916020019161048f565b820191906000526020600020905b81548152906001019060200180831161047257829003601f168201915b505050505081565b60006104ab6104a461078e565b8484610796565b6001905092915050565b6000600254905090565b60008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415801561052a5750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b61053357600080fd5b6105da8461053f61078e565b6105d585600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061058c61078e565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546109c790919063ffffffff16565b610796565b6105e5848484610a50565b600190509392505050565b600560009054906101000a900460ff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106e15780601f106106b6576101008083540402835291602001916106e1565b820191906000526020600020905b8154815290600101906020018083116106c457829003601f168201915b505050505081565b60006106fd6106f661078e565b8484610a50565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610839576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f617070726f76652066726f6d203000000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f617070726f766520746f2030000000000000000000000000000000000000000081525060200191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600082821115610a3f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610af3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f7472616e736665722066726f6d2030000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b96576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f7472616e7366657220746f20300000000000000000000000000000000000000081525060200191505060405180910390fd5b61dead73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c3a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f7472616e7366657220746f20307864656164000000000000000000000000000081525060200191505060405180910390fd5b610c8b816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546109c790919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d1e816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610dca90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600080828401905083811015610e48576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fea264697066735822122003d781075401c8c4954bd0a10f8369a9b582ebb7db4d2913f03ed832ff9613ef64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x11B6 CODESIZE SUB DUP1 PUSH3 0x11B6 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x80 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xC3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xA6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xF1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x180 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x163 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x1AE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP4 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1E4 SWAP3 SWAP2 SWAP1 PUSH3 0x278 JUMP JUMPDEST POP DUP3 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1FD SWAP3 SWAP2 SWAP1 PUSH3 0x278 JUMP JUMPDEST POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0xFF AND PUSH1 0xA EXP DUP2 MUL SWAP1 POP DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP POP PUSH3 0x31E JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x2BB JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2EC JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2EC JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2EB JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2CE JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x2FB SWAP2 SWAP1 PUSH3 0x2FF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x31A JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x300 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0xE88 DUP1 PUSH3 0x32E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x381 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x10D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x167 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x497 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x229 PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x284 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x603 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH2 0x64B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2C7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x30F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x369 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x707 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x48F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x464 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x48F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x472 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AB PUSH2 0x4A4 PUSH2 0x78E JUMP JUMPDEST DUP5 DUP5 PUSH2 0x796 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x52A JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x533 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5DA DUP5 PUSH2 0x53F PUSH2 0x78E JUMP JUMPDEST PUSH2 0x5D5 DUP6 PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x58C PUSH2 0x78E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x9C7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x796 JUMP JUMPDEST PUSH2 0x5E5 DUP5 DUP5 DUP5 PUSH2 0xA50 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x6E1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6B6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6E1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6C4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FD PUSH2 0x6F6 PUSH2 0x78E JUMP JUMPDEST DUP5 DUP5 PUSH2 0xA50 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x839 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x617070726F76652066726F6D2030000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x617070726F766520746F20300000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xA3F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAF3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E736665722066726F6D20300000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB96 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E7366657220746F203000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDEAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC3A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E7366657220746F203078646561640000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC8B DUP2 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x9C7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xD1E DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xDCA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xE48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB 0xD7 DUP2 SMOD SLOAD ADD 0xC8 0xC4 SWAP6 0x4B 0xD0 LOG1 0xF DUP4 PUSH10 0xA9B582EBB7DB4D2913F0 RETURNDATACOPY 0xD8 ORIGIN SELFDESTRUCT SWAP7 SGT 0xEF PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "139:6978:2:-:0;;;1552:357;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1710:5;1703:4;:12;;;;;;;;;;;;:::i;:::-;;1735:7;1726:6;:16;;;;;;;;;;;;:::i;:::-;;1764:9;1753:8;;:20;;;;;;;;;;;;;;;;;;1816:9;1808:18;;1804:2;:22;1794:7;:32;1784:42;;1852:7;1837:12;:22;;;;1894:7;1870:9;:21;1880:10;1870:21;;;;;;;;;;;;;;;:31;;;;1552:357;;;;139:6978;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461022157806370a082311461024257806395d89b411461029a578063a9059cbb1461031d578063dd62ed3e1461038157610093565b806306fdde0314610098578063095ea7b31461011b57806318160ddd1461017f57806323b872dd1461019d575b600080fd5b6100a06103f9565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100e05780820151818401526020810190506100c5565b50505050905090810190601f16801561010d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101676004803603604081101561013157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610497565b60405180821515815260200191505060405180910390f35b6101876104b5565b6040518082815260200191505060405180910390f35b610209600480360360608110156101b357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506104bf565b60405180821515815260200191505060405180910390f35b6102296105f0565b604051808260ff16815260200191505060405180910390f35b6102846004803603602081101561025857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610603565b6040518082815260200191505060405180910390f35b6102a261064b565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102e25780820151818401526020810190506102c7565b50505050905090810190601f16801561030f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103696004803603604081101561033357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106e9565b60405180821515815260200191505060405180910390f35b6103e36004803603604081101561039757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610707565b6040518082815260200191505060405180910390f35b60038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561048f5780601f106104645761010080835404028352916020019161048f565b820191906000526020600020905b81548152906001019060200180831161047257829003601f168201915b505050505081565b60006104ab6104a461078e565b8484610796565b6001905092915050565b6000600254905090565b60008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415801561052a5750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b61053357600080fd5b6105da8461053f61078e565b6105d585600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061058c61078e565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546109c790919063ffffffff16565b610796565b6105e5848484610a50565b600190509392505050565b600560009054906101000a900460ff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106e15780601f106106b6576101008083540402835291602001916106e1565b820191906000526020600020905b8154815290600101906020018083116106c457829003601f168201915b505050505081565b60006106fd6106f661078e565b8484610a50565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610839576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f617070726f76652066726f6d203000000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f617070726f766520746f2030000000000000000000000000000000000000000081525060200191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600082821115610a3f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610af3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f7472616e736665722066726f6d2030000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b96576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f7472616e7366657220746f20300000000000000000000000000000000000000081525060200191505060405180910390fd5b61dead73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c3a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f7472616e7366657220746f20307864656164000000000000000000000000000081525060200191505060405180910390fd5b610c8b816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546109c790919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d1e816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610dca90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600080828401905083811015610e48576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fea264697066735822122003d781075401c8c4954bd0a10f8369a9b582ebb7db4d2913f03ed832ff9613ef64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x381 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x10D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x167 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x497 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x229 PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x284 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x603 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH2 0x64B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2C7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x30F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x369 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x707 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x48F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x464 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x48F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x472 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AB PUSH2 0x4A4 PUSH2 0x78E JUMP JUMPDEST DUP5 DUP5 PUSH2 0x796 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x52A JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x533 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5DA DUP5 PUSH2 0x53F PUSH2 0x78E JUMP JUMPDEST PUSH2 0x5D5 DUP6 PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x58C PUSH2 0x78E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x9C7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x796 JUMP JUMPDEST PUSH2 0x5E5 DUP5 DUP5 DUP5 PUSH2 0xA50 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x6E1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6B6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6E1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6C4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FD PUSH2 0x6F6 PUSH2 0x78E JUMP JUMPDEST DUP5 DUP5 PUSH2 0xA50 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x839 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x617070726F76652066726F6D2030000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x617070726F766520746F20300000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xA3F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAF3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E736665722066726F6D20300000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB96 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E7366657220746F203000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDEAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC3A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E7366657220746F203078646561640000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC8B DUP2 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x9C7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xD1E DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xDCA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xE48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB 0xD7 DUP2 SMOD SLOAD ADD 0xC8 0xC4 SWAP6 0x4B 0xD0 LOG1 0xF DUP4 PUSH10 0xA9B582EBB7DB4D2913F0 RETURNDATACOPY 0xD8 ORIGIN SELFDESTRUCT SWAP7 SGT 0xEF PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "139:6978:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;445:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3099:199;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1974:102;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3771:404;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1242:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2139:160;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;583:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2507:191;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2761:190;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;445:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3099:199::-;3205:4;3227:41;3236:12;:10;:12::i;:::-;3250:8;3260:7;3227:8;:41::i;:::-;3286:4;3279:11;;3099:199;;;;:::o;1974:102::-;2029:7;2056:12;;2049:19;;1974:102;:::o;3771:404::-;3899:4;3941:1;3924:19;;:5;:19;;;;:40;;;;;3962:1;3947:17;;:3;:17;;;;3924:40;3916:49;;;;;;3978:126;4001:5;4021:12;:10;:12::i;:::-;4048:45;4085:7;4048:11;:18;4060:5;4048:18;;;;;;;;;;;;;;;:32;4067:12;:10;:12::i;:::-;4048:32;;;;;;;;;;;;;;;;:36;;:45;;;;:::i;:::-;3978:8;:126::i;:::-;4115:30;4125:5;4132:3;4137:7;4115:9;:30::i;:::-;4163:4;4156:11;;3771:404;;;;;:::o;1242:21::-;;;;;;;;;;;;;:::o;2139:160::-;2242:7;2274:9;:17;2284:6;2274:17;;;;;;;;;;;;;;;;2267:24;;2139:160;;;:::o;583:20::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2507:191::-;2609:4;2631:37;2641:12;:10;:12::i;:::-;2655:3;2660:7;2631:9;:37::i;:::-;2686:4;2679:11;;2507:191;;;;:::o;2761:190::-;2882:7;2914:11;:19;2926:6;2914:19;;;;;;;;;;;;;;;:29;2934:8;2914:29;;;;;;;;;;;;;;;;2907:36;;2761:190;;;;:::o;605:106:1:-;658:15;693:10;686:17;;605:106;:::o;5546:339:2:-;5695:1;5677:20;;:6;:20;;;;5669:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5755:1;5735:22;;:8;:22;;;;5727:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5819:7;5787:11;:19;5799:6;5787:19;;;;;;;;;;;;;;;:29;5807:8;5787:29;;;;;;;;;;;;;;;:39;;;;5859:8;5842:35;;5851:6;5842:35;;;5869:7;5842:35;;;;;;;;;;;;;;;;;;5546:339;;;:::o;773:184:5:-;831:7;864:1;859;:6;;851:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;911:9;927:1;923;:5;911:17;;948:1;941:8;;;773:184;;;;:::o;4652:452:2:-;4795:1;4778:19;;:5;:19;;;;4770:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4851:1;4836:17;;:3;:17;;;;4828:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4905:6;4890:22;;:3;:22;;;;4882:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4967:29;4988:7;4967:9;:16;4977:5;4967:16;;;;;;;;;;;;;;;;:20;;:29;;;;:::i;:::-;4948:9;:16;4958:5;4948:16;;;;;;;;;;;;;;;:48;;;;5024:27;5043:7;5024:9;:14;5034:3;5024:14;;;;;;;;;;;;;;;;:18;;:27;;;;:::i;:::-;5007:9;:14;5017:3;5007:14;;;;;;;;;;;;;;;:44;;;;5083:3;5067:29;;5076:5;5067:29;;;5088:7;5067:29;;;;;;;;;;;;;;;;;;4652:452;;;:::o;317:181:5:-;375:7;395:9;411:1;407;:5;395:17;;436:1;431;:6;;423:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;489:1;482:8;;;317:181;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "744000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1409",
								"approve(address,uint256)": "22536",
								"balanceOf(address)": "1218",
								"decimals()": "1047",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1058",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "100000000"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "100000000"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "100000000"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "100000000"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1710,
									"end": 1715,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1707,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1735,
									"end": 1742,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1726,
									"end": 1732,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1764,
									"end": 1773,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1761,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1753,
									"end": 1761,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1816,
									"end": 1825,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1808,
									"end": 1826,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 1808,
									"end": 1826,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1804,
									"end": 1806,
									"name": "PUSH",
									"source": 2,
									"value": "A"
								},
								{
									"begin": 1804,
									"end": 1826,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1794,
									"end": 1801,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1794,
									"end": 1826,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1784,
									"end": 1826,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1784,
									"end": 1826,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1852,
									"end": 1859,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1837,
									"end": 1849,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1837,
									"end": 1859,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1837,
									"end": 1859,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1837,
									"end": 1859,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1837,
									"end": 1859,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1894,
									"end": 1901,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1879,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1880,
									"end": 1890,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1901,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1901,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1901,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1901,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122003d781075401c8c4954bd0a10f8369a9b582ebb7db4d2913f03ed832ff9613ef64736f6c634300060c0033",
									".code": [
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "95D89B41"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "6FDDE03"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3205,
											"end": 3209,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3227,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3236,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3236,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3236,
											"end": 3248,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3236,
											"end": 3248,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3236,
											"end": 3248,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3250,
											"end": 3258,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3260,
											"end": 3267,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3227,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3227,
											"end": 3268,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3227,
											"end": 3268,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3227,
											"end": 3268,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3286,
											"end": 3290,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3279,
											"end": 3290,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3279,
											"end": 3290,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2068,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2056,
											"end": 2068,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2049,
											"end": 2068,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2049,
											"end": 2068,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3899,
											"end": 3903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3942,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3943,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3924,
											"end": 3943,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3929,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3943,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3924,
											"end": 3943,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3943,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3943,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3964,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3964,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3964,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3924,
											"end": 3964,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3962,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3947,
											"end": 3964,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3947,
											"end": 3964,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3947,
											"end": 3950,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3947,
											"end": 3964,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3947,
											"end": 3964,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3947,
											"end": 3964,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3947,
											"end": 3964,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3964,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3924,
											"end": 3964,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3916,
											"end": 3965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3916,
											"end": 3965,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3916,
											"end": 3965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3916,
											"end": 3965,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3916,
											"end": 3965,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3916,
											"end": 3965,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3916,
											"end": 3965,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3978,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4001,
											"end": 4006,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4021,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4021,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4021,
											"end": 4033,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4021,
											"end": 4033,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4021,
											"end": 4033,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4085,
											"end": 4092,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4059,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4060,
											"end": 4065,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4067,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4067,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4067,
											"end": 4079,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4067,
											"end": 4079,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4067,
											"end": 4079,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4048,
											"end": 4084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3978,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3978,
											"end": 4104,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3978,
											"end": 4104,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3978,
											"end": 4104,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4115,
											"end": 4145,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4125,
											"end": 4130,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4132,
											"end": 4135,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4137,
											"end": 4144,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4115,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 4115,
											"end": 4145,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4115,
											"end": 4145,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4115,
											"end": 4145,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4167,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4156,
											"end": 4167,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4156,
											"end": 4167,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2290,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2267,
											"end": 2291,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2267,
											"end": 2291,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2609,
											"end": 2613,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2631,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2641,
											"end": 2653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2641,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2641,
											"end": 2653,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2641,
											"end": 2653,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2641,
											"end": 2653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2658,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2660,
											"end": 2667,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2631,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2631,
											"end": 2668,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2631,
											"end": 2668,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2631,
											"end": 2668,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2686,
											"end": 2690,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2679,
											"end": 2690,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2679,
											"end": 2690,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2882,
											"end": 2889,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2914,
											"end": 2925,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2932,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2934,
											"end": 2942,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2907,
											"end": 2943,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2907,
											"end": 2943,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 605,
											"end": 711,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 605,
											"end": 711,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 658,
											"end": 673,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 693,
											"end": 703,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 686,
											"end": 703,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 686,
											"end": 703,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 605,
											"end": 711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 605,
											"end": 711,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5546,
											"end": 5885,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 5546,
											"end": 5885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5696,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5677,
											"end": 5697,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5677,
											"end": 5697,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5683,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5697,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5677,
											"end": 5697,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5697,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5697,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH",
											"source": 2,
											"value": "E"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH",
											"source": 2,
											"value": "617070726F76652066726F6D2030000000000000000000000000000000000000"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5735,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5735,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5743,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5735,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5757,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5757,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH",
											"source": 2,
											"value": "617070726F766520746F20300000000000000000000000000000000000000000"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5819,
											"end": 5826,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5798,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5805,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5815,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5826,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5826,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5826,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5826,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5859,
											"end": 5867,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5851,
											"end": 5857,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 5869,
											"end": 5876,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 5546,
											"end": 5885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5546,
											"end": 5885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5546,
											"end": 5885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5546,
											"end": 5885,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 773,
											"end": 957,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 773,
											"end": 957,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 831,
											"end": 838,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 864,
											"end": 865,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 859,
											"end": 860,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 859,
											"end": 865,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 859,
											"end": 865,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "1E"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 911,
											"end": 920,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 927,
											"end": 928,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 923,
											"end": 924,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 923,
											"end": 928,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 911,
											"end": 928,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 911,
											"end": 928,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 948,
											"end": 949,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 941,
											"end": 949,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 941,
											"end": 949,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 941,
											"end": 949,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 773,
											"end": 957,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 773,
											"end": 957,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 773,
											"end": 957,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 773,
											"end": 957,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 773,
											"end": 957,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4652,
											"end": 5104,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 4652,
											"end": 5104,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4795,
											"end": 4796,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4778,
											"end": 4797,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4778,
											"end": 4797,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4778,
											"end": 4783,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4778,
											"end": 4797,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4778,
											"end": 4797,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4778,
											"end": 4797,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4778,
											"end": 4797,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH",
											"source": 2,
											"value": "F"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH",
											"source": 2,
											"value": "7472616E736665722066726F6D20300000000000000000000000000000000000"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4851,
											"end": 4852,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4836,
											"end": 4853,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4836,
											"end": 4853,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4836,
											"end": 4839,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4836,
											"end": 4853,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4836,
											"end": 4853,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4836,
											"end": 4853,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4836,
											"end": 4853,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH",
											"source": 2,
											"value": "D"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH",
											"source": 2,
											"value": "7472616E7366657220746F203000000000000000000000000000000000000000"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4905,
											"end": 4911,
											"name": "PUSH",
											"source": 2,
											"value": "DEAD"
										},
										{
											"begin": 4890,
											"end": 4912,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4890,
											"end": 4912,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4890,
											"end": 4893,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4890,
											"end": 4912,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4890,
											"end": 4912,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4890,
											"end": 4912,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4890,
											"end": 4912,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH",
											"source": 2,
											"value": "7472616E7366657220746F203078646561640000000000000000000000000000"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4988,
											"end": 4995,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4976,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4977,
											"end": 4982,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4967,
											"end": 4987,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4996,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4967,
											"end": 4996,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4996,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4967,
											"end": 4996,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4967,
											"end": 4996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4957,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4958,
											"end": 4963,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4996,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4996,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 5043,
											"end": 5050,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5034,
											"end": 5037,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5042,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 5024,
											"end": 5042,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5051,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5051,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5051,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5024,
											"end": 5051,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5051,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5024,
											"end": 5051,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 5024,
											"end": 5051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5016,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5017,
											"end": 5020,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5051,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5051,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5051,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5051,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5083,
											"end": 5086,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5081,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 5088,
											"end": 5095,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 4652,
											"end": 5104,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4652,
											"end": 5104,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4652,
											"end": 5104,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4652,
											"end": 5104,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 317,
											"end": 498,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 317,
											"end": 498,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 375,
											"end": 382,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 395,
											"end": 404,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 407,
											"end": 408,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 407,
											"end": 412,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 395,
											"end": 412,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 395,
											"end": 412,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 436,
											"end": 437,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 431,
											"end": 432,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 431,
											"end": 437,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 431,
											"end": 437,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "1B"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 489,
											"end": 490,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 482,
											"end": 490,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 482,
											"end": 490,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 482,
											"end": 490,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 317,
											"end": 498,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 317,
											"end": 498,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 317,
											"end": 498,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 317,
											"end": 498,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 317,
											"end": 498,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_supply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `_spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {_name} and {_symbol}, {_decimals} To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `_to` cannot be the zero address. - the caller must have a balance of at least `_amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `_from` and `_to` cannot be the zero address. - `_from` must have a balance of at least `_amount`. - the caller must have allowance for `_from`'s tokens of at least `_amount`.\"}},\"stateVariables\":{\"decimals\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name\":{\"details\":\"Returns the name of the token.\"},\"symbol\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"_lib/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"_lib/Context.sol\":{\"keccak256\":\"0x77ec8b534124690b04754bc03aaa982479b91b9f7508bed54455c161e93a02e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf08de24c3951531b87b85a75157d4b26ddcb8952452672f9da9f63c06982e9f\",\"dweb:/ipfs/QmaUzytpjpYHNTXw3Hy4cdKmNoU5PWpyMZBhorK69pk8sA\"]},\"_lib/ERC20.sol\":{\"keccak256\":\"0x2ce16e09e444519aec6a0e1f355325dfe2af844ea539ae8f8a7d53a2daf6d844\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb89e49b22ff4dd4d67fe590e95ce997d8a5a83db5ca8a246086dd4a56f01a72\",\"dweb:/ipfs/QmfZbMN1MNau96zL4xS1EtA9gVyNRWPwZCWwGVVeNG8uNF\"]},\"_lib/IERC20.sol\":{\"keccak256\":\"0x943e16fe1fdaa84c7329da3fa5aab8ce507ff7b6776a3925e97ffc0beef9692a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7727696ef766547aaa34152d06a443c5c8924fa363f47e51335d0e3d619c194\",\"dweb:/ipfs/QmRYgfYhpyjHaQjSJMG5fDdDGbQA9eXCGhuSRnwGfoSyCD\"]},\"_lib/SafeMath.sol\":{\"keccak256\":\"0xe1bb41b0568cdd4364bb5fcba4fd6065df59c3ea8147e040fb9c978bc3a89af5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e4192a8253ea1f04e97ac1ac3df25dc77719696b0bee70b3af1a4a56edcb5b\",\"dweb:/ipfs/QmaQ4TkRxpXxjtKKewy2oAgJXFbdqSwacBUMrNaSgZ72jt\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"_lib/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP. From https://github.com/OpenZeppelin/openzeppelin-contracts",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP. From https://github.com/OpenZeppelin/openzeppelin-contracts\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"_lib/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"_lib/IERC20.sol\":{\"keccak256\":\"0x943e16fe1fdaa84c7329da3fa5aab8ce507ff7b6776a3925e97ffc0beef9692a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7727696ef766547aaa34152d06a443c5c8924fa363f47e51335d0e3d619c194\",\"dweb:/ipfs/QmRYgfYhpyjHaQjSJMG5fDdDGbQA9eXCGhuSRnwGfoSyCD\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"_lib/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"_lib/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"_lib/Context.sol\":{\"keccak256\":\"0x77ec8b534124690b04754bc03aaa982479b91b9f7508bed54455c161e93a02e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf08de24c3951531b87b85a75157d4b26ddcb8952452672f9da9f63c06982e9f\",\"dweb:/ipfs/QmaUzytpjpYHNTXw3Hy4cdKmNoU5PWpyMZBhorK69pk8sA\"]},\"_lib/Ownable.sol\":{\"keccak256\":\"0x9bb16a0785f0f888e4b470311e02af5bb72f0663d7be20eb7a60902e29e35406\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://014bf309648c0793be70899bc260d7094e17de223ed8eaebae9327643623cf93\",\"dweb:/ipfs/QmR4LhypLf6CVNvqxgDDAJ4E9E5h3wqV6RT8g7jERZdVLT\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"_lib/SafeMath.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"_lib/SafeMath.sol\":4604:5299  library Math {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"_lib/SafeMath.sol\":4604:5299  library Math {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206e04663ba7d4d7996cc8dbe663d4baffa3d9e7d95afee582dd0a49334044b9fb64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206e04663ba7d4d7996cc8dbe663d4baffa3d9e7d95afee582dd0a49334044b9fb64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x4663BA7D4D7996CC8DBE663D4BAFF LOG3 0xD9 0xE7 0xD9 GAS INVALID 0xE5 DUP3 0xDD EXP 0x49 CALLER BLOCKHASH DIFFICULTY 0xB9 0xFB PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "4604:695:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206e04663ba7d4d7996cc8dbe663d4baffa3d9e7d95afee582dd0a49334044b9fb64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x4663BA7D4D7996CC8DBE663D4BAFF LOG3 0xD9 0xE7 0xD9 GAS INVALID 0xE5 DUP3 0xDD EXP 0x49 CALLER BLOCKHASH DIFFICULTY 0xB9 0xFB PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "4604:695:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4604,
									"end": 5299,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "INVALID",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206e04663ba7d4d7996cc8dbe663d4baffa3d9e7d95afee582dd0a49334044b9fb64736f6c634300060c0033",
									".code": [
										{
											"begin": 4604,
											"end": 5299,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 4604,
											"end": 5299,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 4604,
											"end": 5299,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4604,
											"end": 5299,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4604,
											"end": 5299,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4604,
											"end": 5299,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4604,
											"end": 5299,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4604,
											"end": 5299,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4604,
											"end": 5299,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"_lib/SafeMath.sol\":\"Math\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"_lib/SafeMath.sol\":{\"keccak256\":\"0xe1bb41b0568cdd4364bb5fcba4fd6065df59c3ea8147e040fb9c978bc3a89af5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e4192a8253ea1f04e97ac1ac3df25dc77719696b0bee70b3af1a4a56edcb5b\",\"dweb:/ipfs/QmaQ4TkRxpXxjtKKewy2oAgJXFbdqSwacBUMrNaSgZ72jt\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"_lib/SafeMath.sol\":62:3091  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"_lib/SafeMath.sol\":62:3091  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122068b375269c1d6f3484f11227346ae9d0b15e0fea769d778896867163d1544b3e64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122068b375269c1d6f3484f11227346ae9d0b15e0fea769d778896867163d1544b3e64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0xB375269C1D6F3484F1 SLT 0x27 CALLVALUE PUSH11 0xE9D0B15E0FEA769D778896 DUP7 PUSH18 0x63D1544B3E64736F6C634300060C00330000 ",
							"sourceMap": "62:3029:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122068b375269c1d6f3484f11227346ae9d0b15e0fea769d778896867163d1544b3e64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0xB375269C1D6F3484F1 SLT 0x27 CALLVALUE PUSH11 0xE9D0B15E0FEA769D778896 DUP7 PUSH18 0x63D1544B3E64736F6C634300060C00330000 ",
							"sourceMap": "62:3029:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 62,
									"end": 3091,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "INVALID",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122068b375269c1d6f3484f11227346ae9d0b15e0fea769d778896867163d1544b3e64736f6c634300060c0033",
									".code": [
										{
											"begin": 62,
											"end": 3091,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 62,
											"end": 3091,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 62,
											"end": 3091,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 62,
											"end": 3091,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 62,
											"end": 3091,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 62,
											"end": 3091,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 62,
											"end": 3091,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 62,
											"end": 3091,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 62,
											"end": 3091,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"_lib/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"_lib/SafeMath.sol\":{\"keccak256\":\"0xe1bb41b0568cdd4364bb5fcba4fd6065df59c3ea8147e040fb9c978bc3a89af5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e4192a8253ea1f04e97ac1ac3df25dc77719696b0bee70b3af1a4a56edcb5b\",\"dweb:/ipfs/QmaQ4TkRxpXxjtKKewy2oAgJXFbdqSwacBUMrNaSgZ72jt\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMathExt": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"_lib/SafeMath.sol\":3095:4600  library SafeMathExt {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"_lib/SafeMath.sol\":3095:4600  library SafeMathExt {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a626b76c907f888293c32fb457a49bf6f694e941ef3e36c80569f4fce9e6ce4e64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a626b76c907f888293c32fb457a49bf6f694e941ef3e36c80569f4fce9e6ce4e64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 0x26 0xB7 PUSH13 0x907F888293C32FB457A49BF6F6 SWAP5 0xE9 COINBASE 0xEF RETURNDATACOPY CALLDATASIZE 0xC8 SDIV PUSH10 0xF4FCE9E6CE4E64736F6C PUSH4 0x4300060C STOP CALLER ",
							"sourceMap": "3095:1505:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a626b76c907f888293c32fb457a49bf6f694e941ef3e36c80569f4fce9e6ce4e64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 0x26 0xB7 PUSH13 0x907F888293C32FB457A49BF6F6 SWAP5 0xE9 COINBASE 0xEF RETURNDATACOPY CALLDATASIZE 0xC8 SDIV PUSH10 0xF4FCE9E6CE4E64736F6C PUSH4 0x4300060C STOP CALLER ",
							"sourceMap": "3095:1505:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add128(uint128,uint128)": "infinite",
								"add64(uint64,uint64)": "infinite",
								"safe128(uint256)": "infinite",
								"safe16(uint256)": "infinite",
								"safe32(uint256)": "infinite",
								"safe64(uint256)": "infinite",
								"sub128(uint128,uint128)": "infinite",
								"sub64(uint64,uint64)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3095,
									"end": 4600,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "INVALID",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a626b76c907f888293c32fb457a49bf6f694e941ef3e36c80569f4fce9e6ce4e64736f6c634300060c0033",
									".code": [
										{
											"begin": 3095,
											"end": 4600,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 4600,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 4600,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 4600,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3095,
											"end": 4600,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3095,
											"end": 4600,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 4600,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 4600,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 4600,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"_lib/SafeMath.sol\":\"SafeMathExt\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"_lib/SafeMath.sol\":{\"keccak256\":\"0xe1bb41b0568cdd4364bb5fcba4fd6065df59c3ea8147e040fb9c978bc3a89af5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e4192a8253ea1f04e97ac1ac3df25dc77719696b0bee70b3af1a4a56edcb5b\",\"dweb:/ipfs/QmaQ4TkRxpXxjtKKewy2oAgJXFbdqSwacBUMrNaSgZ72jt\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Staking/Staking.sol": {
				"ast": {
					"absolutePath": "Staking/Staking.sol",
					"exportedSymbols": {
						"IBurnCoin": [
							55
						],
						"IPokerToken": [
							49
						],
						"Staking": [
							971
						]
					},
					"id": 972,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:0"
						},
						{
							"absolutePath": "_lib/SafeMath.sol",
							"file": "../_lib/SafeMath.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 972,
							"sourceUnit": 1974,
							"src": "62:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "_lib/ERC20.sol",
							"file": "../_lib/ERC20.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 972,
							"sourceUnit": 1429,
							"src": "94:27:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "_lib/Ownable.sol",
							"file": "../_lib/Ownable.sol",
							"id": 4,
							"nodeType": "ImportDirective",
							"scope": 972,
							"sourceUnit": 1583,
							"src": "123:29:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 49,
							"linearizedBaseContracts": [
								49
							],
							"name": "IPokerToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "18160ddd",
									"id": 9,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "205:2:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 9,
												"src": "231:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "231:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "230:9:0"
									},
									"scope": 49,
									"src": "185:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "70a08231",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 16,
												"src": "267:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "267:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "266:16:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 16,
												"src": "306:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "306:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "305:9:0"
									},
									"scope": 49,
									"src": "248:67:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "a9059cbb",
									"id": 25,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 25,
												"src": "341:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "341:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 25,
												"src": "354:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 19,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "354:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "340:30:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 25,
												"src": "389:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 22,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "389:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "388:6:0"
									},
									"scope": 49,
									"src": "323:72:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "23b872dd",
									"id": 36,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 36,
												"src": "435:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 36,
												"src": "459:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "459:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 36,
												"src": "481:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "481:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "424:79:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 36,
												"src": "522:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 33,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "522:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "521:6:0"
									},
									"scope": 49,
									"src": "403:125:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "40c10f19",
									"id": 43,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 43,
												"src": "550:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "550:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 43,
												"src": "563:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "563:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "549:30:0"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "588:0:0"
									},
									"scope": 49,
									"src": "536:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "42966c68",
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 48,
												"src": "611:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "610:17:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "636:0:0"
									},
									"scope": 49,
									"src": "597:40:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 972,
							"src": "156:484:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 55,
							"linearizedBaseContracts": [
								55
							],
							"name": "IBurnCoin",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "42966c68",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 54,
												"src": "685:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "684:17:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "710:0:0"
									},
									"scope": 55,
									"src": "671:40:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 972,
							"src": "644:70:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 971,
							"linearizedBaseContracts": [
								971
							],
							"name": "Staking",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 58,
									"libraryName": {
										"contractScope": null,
										"id": 56,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1720,
										"src": "748:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1720",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "742:27:0",
									"typeName": {
										"id": 57,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "761:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 60,
									"mutability": "mutable",
									"name": "poker",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 971,
									"src": "775:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IPokerToken_$49",
										"typeString": "contract IPokerToken"
									},
									"typeName": {
										"contractScope": null,
										"id": 59,
										"name": "IPokerToken",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 49,
										"src": "775:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPokerToken_$49",
											"typeString": "contract IPokerToken"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 62,
									"mutability": "mutable",
									"name": "burnCoin",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 971,
									"src": "799:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IBurnCoin_$55",
										"typeString": "contract IBurnCoin"
									},
									"typeName": {
										"contractScope": null,
										"id": 61,
										"name": "IBurnCoin",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 55,
										"src": "799:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBurnCoin_$55",
											"typeString": "contract IBurnCoin"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 64,
									"mutability": "mutable",
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 971,
									"src": "824:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 63,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "824:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "913:130:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 71,
														"name": "poker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "924:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPokerToken_$49",
															"typeString": "contract IPokerToken"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 72,
														"name": "_poker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 66,
														"src": "932:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPokerToken_$49",
															"typeString": "contract IPokerToken"
														}
													},
													"src": "924:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPokerToken_$49",
														"typeString": "contract IPokerToken"
													}
												},
												"id": 74,
												"nodeType": "ExpressionStatement",
												"src": "924:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 75,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 64,
														"src": "949:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 76,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "957:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 77,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "957:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "949:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "949:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 80,
														"name": "lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "978:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 81,
															"name": "getTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "995:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 82,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "995:9:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "978:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "978:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 85,
														"name": "burnCoin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 62,
														"src": "1015:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBurnCoin_$55",
															"typeString": "contract IBurnCoin"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 86,
														"name": "_burncoin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "1026:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBurnCoin_$55",
															"typeString": "contract IBurnCoin"
														}
													},
													"src": "1015:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBurnCoin_$55",
														"typeString": "contract IBurnCoin"
													}
												},
												"id": 88,
												"nodeType": "ExpressionStatement",
												"src": "1015:20:0"
											}
										]
									},
									"documentation": null,
									"id": 90,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "_poker",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 90,
												"src": "865:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IPokerToken_$49",
													"typeString": "contract IPokerToken"
												},
												"typeName": {
													"contractScope": null,
													"id": 65,
													"name": "IPokerToken",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 49,
													"src": "865:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPokerToken_$49",
														"typeString": "contract IPokerToken"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "_burncoin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 90,
												"src": "885:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBurnCoin_$55",
													"typeString": "contract IBurnCoin"
												},
												"typeName": {
													"contractScope": null,
													"id": 67,
													"name": "IBurnCoin",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 55,
													"src": "885:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBurnCoin_$55",
														"typeString": "contract IBurnCoin"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "864:41:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "913:0:0"
									},
									"scope": 971,
									"src": "853:190:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"canonicalName": "Staking.UserInfo",
									"id": 103,
									"members": [
										{
											"constant": false,
											"id": 92,
											"mutability": "mutable",
											"name": "shares",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 103,
											"src": "1078:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 91,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1078:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 94,
											"mutability": "mutable",
											"name": "lastDepositedTime",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 103,
											"src": "1103:25:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 93,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1103:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 96,
											"mutability": "mutable",
											"name": "lastUserActionTime",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 103,
											"src": "1139:26:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 95,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1139:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 98,
											"mutability": "mutable",
											"name": "rewardDebt",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 103,
											"src": "1176:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 97,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1176:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 100,
											"mutability": "mutable",
											"name": "rewards",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 103,
											"src": "1205:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 99,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1205:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 102,
											"mutability": "mutable",
											"name": "amount",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 103,
											"src": "1231:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 101,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1231:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nodeType": "StructDefinition",
									"scope": 971,
									"src": "1051:202:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d2890a01",
									"id": 106,
									"mutability": "mutable",
									"name": "accPerShare",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 971,
									"src": "1261:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 104,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1261:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 105,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1290:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3a98ef39",
									"id": 109,
									"mutability": "mutable",
									"name": "totalShares",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 971,
									"src": "1298:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 107,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1298:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 108,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1327:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1a39d8ef",
									"id": 112,
									"mutability": "mutable",
									"name": "totalAmount",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 971,
									"src": "1335:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 110,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 111,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1364:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c8f33c91",
									"id": 115,
									"mutability": "mutable",
									"name": "lastUpdateTime",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 971,
									"src": "1372:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 113,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1372:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 114,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1404:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e941fa78",
									"id": 118,
									"mutability": "mutable",
									"name": "withdrawFee",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 971,
									"src": "1412:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 116,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1412:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31303030",
										"id": 117,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1441:4:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "df10b4e6",
									"id": 121,
									"mutability": "mutable",
									"name": "withdrawFeePeriod",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 971,
									"src": "1452:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 119,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1452:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "37",
										"id": 120,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1487:6:0",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_604800_by_1",
											"typeString": "int_const 604800"
										},
										"value": "7"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6abfd183",
									"id": 124,
									"mutability": "mutable",
									"name": "stakingStartTime",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 971,
									"src": "1577:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 122,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1577:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 123,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1611:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e6fa445d",
									"id": 127,
									"mutability": "mutable",
									"name": "stakingSwitch",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 971,
									"src": "1619:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 125,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1619:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "66616c7365",
										"id": 126,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1647:5:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 130,
									"mutability": "mutable",
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 971,
									"src": "1659:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 128,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1659:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3138",
										"id": 129,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1678:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 135,
									"mutability": "constant",
									"name": "ONE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 971,
									"src": "1689:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 131,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1689:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"id": 134,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "3130",
											"id": 132,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1712:2:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "3138",
											"id": 133,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1716:2:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18_by_1",
												"typeString": "int_const 18"
											},
											"value": "18"
										},
										"src": "1712:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "1836:48:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 149,
															"name": "d",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "1874:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 146,
																	"name": "ONE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 135,
																	"src": "1865:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 144,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 137,
																	"src": "1854:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1671,
																"src": "1854:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1854:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1697,
														"src": "1854:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1854:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 143,
												"id": 151,
												"nodeType": "Return",
												"src": "1847:29:0"
											}
										]
									},
									"documentation": null,
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "divFloor",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 153,
												"src": "1745:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1745:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "d",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 153,
												"src": "1761:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1761:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1744:27:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 153,
												"src": "1822:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1821:9:0"
									},
									"scope": 971,
									"src": "1727:157:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "2003:45:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 164,
																"name": "d",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 157,
																"src": "2032:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 162,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 155,
																"src": "2021:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1671,
															"src": "2021:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 165,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2021:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 166,
														"name": "ONE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 135,
														"src": "2037:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2021:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 161,
												"id": 168,
												"nodeType": "Return",
												"src": "2014:26:0"
											}
										]
									},
									"documentation": null,
									"id": 170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimalMul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 170,
												"src": "1912:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1912:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "d",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 170,
												"src": "1928:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1928:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1911:27:0"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 170,
												"src": "1989:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1989:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1988:9:0"
									},
									"scope": 971,
									"src": "1892:156:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "1959a002",
									"id": 174,
									"mutability": "mutable",
									"name": "userInfo",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 971,
									"src": "2056:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$103_storage_$",
										"typeString": "mapping(address => struct Staking.UserInfo)"
									},
									"typeName": {
										"id": 173,
										"keyType": {
											"id": 171,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2064:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2056:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$103_storage_$",
											"typeString": "mapping(address => struct Staking.UserInfo)"
										},
										"valueType": {
											"contractScope": null,
											"id": 172,
											"name": "UserInfo",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 103,
											"src": "2075:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
												"typeString": "struct Staking.UserInfo"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 184,
									"name": "Deposit",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 184,
												"src": "2133:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2133:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 178,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 184,
												"src": "2166:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2166:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"indexed": false,
												"mutability": "mutable",
												"name": "shares",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 184,
												"src": "2191:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2191:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"indexed": false,
												"mutability": "mutable",
												"name": "lastDepositedTime",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 184,
												"src": "2216:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2216:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2122:126:0"
									},
									"src": "2109:140:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 192,
									"name": "Withdraw",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 192,
												"src": "2270:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2270:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 192,
												"src": "2294:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2294:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"indexed": false,
												"mutability": "mutable",
												"name": "shares",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 192,
												"src": "2310:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2310:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2269:56:0"
									},
									"src": "2255:71:0"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "2375:1181:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 198,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 194,
																"src": "2394:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 199,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2404:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2394:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e6f7468696e6720746f206465706f736974",
															"id": 201,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2407:20:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0286ebca00a5e4a573432e60f4227ca76955fded88c2ddaafd3b02077af17470",
																"typeString": "literal_string \"Nothing to deposit\""
															},
															"value": "Nothing to deposit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0286ebca00a5e4a573432e60f4227ca76955fded88c2ddaafd3b02077af17470",
																"typeString": "literal_string \"Nothing to deposit\""
															}
														],
														"id": 197,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2386:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2386:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 203,
												"nodeType": "ExpressionStatement",
												"src": "2386:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 204,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 608,
														"src": "2441:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2441:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 206,
												"nodeType": "ExpressionStatement",
												"src": "2441:12:0"
											},
											{
												"assignments": [
													208
												],
												"declarations": [
													{
														"constant": false,
														"id": 208,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 328,
														"src": "2464:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
															"typeString": "struct Staking.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 207,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 103,
															"src": "2464:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																"typeString": "struct Staking.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 213,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 209,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "2488:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$103_storage_$",
															"typeString": "mapping(address => struct Staking.UserInfo storage ref)"
														}
													},
													"id": 212,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 210,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "2497:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2497:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2488:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$103_storage",
														"typeString": "struct Staking.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2464:44:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 214,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "2525:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																"typeString": "struct Staking.UserInfo storage pointer"
															}
														},
														"id": 215,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 102,
														"src": "2525:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 216,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2539:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2525:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"expression": {
														"argumentTypes": null,
														"id": 245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 241,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 208,
																"src": "2792:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																	"typeString": "struct Staking.UserInfo storage pointer"
																}
															},
															"id": 243,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"memberName": "rewards",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 100,
															"src": "2792:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2807:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2792:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 246,
													"nodeType": "ExpressionStatement",
													"src": "2792:16:0"
												},
												"id": 247,
												"nodeType": "IfStatement",
												"src": "2521:287:0",
												"trueBody": {
													"id": 240,
													"nodeType": "Block",
													"src": "2542:244:0",
													"statements": [
														{
															"assignments": [
																219
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 219,
																	"mutability": "mutable",
																	"name": "pending",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 240,
																	"src": "2557:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 218,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2557:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 229,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 226,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 208,
																			"src": "2634:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																				"typeString": "struct Staking.UserInfo storage pointer"
																			}
																		},
																		"id": 227,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardDebt",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 98,
																		"src": "2634:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 221,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 208,
																					"src": "2586:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																						"typeString": "struct Staking.UserInfo storage pointer"
																					}
																				},
																				"id": 222,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "amount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 102,
																				"src": "2586:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"id": 223,
																				"name": "accPerShare",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 106,
																				"src": "2599:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 220,
																			"name": "decimalMul",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 170,
																			"src": "2575:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 224,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2575:36:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1636,
																	"src": "2575:40:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2575:89:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2557:107:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 230,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 208,
																		"src": "2734:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																			"typeString": "struct Staking.UserInfo storage pointer"
																		}
																	},
																	"id": 232,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "rewards",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 100,
																	"src": "2734:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 236,
																			"name": "pending",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 219,
																			"src": "2766:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 233,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 208,
																				"src": "2749:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																					"typeString": "struct Staking.UserInfo storage pointer"
																				}
																			},
																			"id": 234,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "rewards",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 100,
																			"src": "2749:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1610,
																		"src": "2749:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 237,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2749:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2734:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 239,
															"nodeType": "ExpressionStatement",
															"src": "2734:40:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 251,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "2840:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2840:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 255,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "2860:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Staking_$971",
																		"typeString": "contract Staking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Staking_$971",
																		"typeString": "contract Staking"
																	}
																],
																"id": 254,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2852:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 253,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2852:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2852:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 257,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "2867:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 248,
															"name": "poker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 60,
															"src": "2821:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPokerToken_$49",
																"typeString": "contract IPokerToken"
															}
														},
														"id": 250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 36,
														"src": "2821:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2821:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 259,
												"nodeType": "ExpressionStatement",
												"src": "2821:54:0"
											},
											{
												"assignments": [
													261
												],
												"declarations": [
													{
														"constant": false,
														"id": 261,
														"mutability": "mutable",
														"name": "currentShares",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 328,
														"src": "2888:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 260,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2888:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 267,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 264,
																"name": "getEther",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 826,
																"src": "2924:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2924:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 262,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "2912:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1671,
														"src": "2912:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2912:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2888:47:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 268,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "3162:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																"typeString": "struct Staking.UserInfo storage pointer"
															}
														},
														"id": 270,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "shares",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 92,
														"src": "3162:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 274,
																"name": "currentShares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 261,
																"src": "3192:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 271,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 208,
																	"src": "3176:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																		"typeString": "struct Staking.UserInfo storage pointer"
																	}
																},
																"id": 272,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "shares",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 92,
																"src": "3176:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1610,
															"src": "3176:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3176:30:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3162:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "3162:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 278,
														"name": "totalShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 109,
														"src": "3217:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 281,
																"name": "currentShares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 261,
																"src": "3247:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 279,
																"name": "totalShares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "3231:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1610,
															"src": "3231:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 282,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3231:30:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3217:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 284,
												"nodeType": "ExpressionStatement",
												"src": "3217:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 285,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "3274:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																"typeString": "struct Staking.UserInfo storage pointer"
															}
														},
														"id": 287,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 102,
														"src": "3274:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 291,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 194,
																"src": "3304:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 288,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 208,
																	"src": "3288:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																		"typeString": "struct Staking.UserInfo storage pointer"
																	}
																},
																"id": 289,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 102,
																"src": "3288:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1610,
															"src": "3288:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 292,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3288:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3274:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 294,
												"nodeType": "ExpressionStatement",
												"src": "3274:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 295,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "3323:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																"typeString": "struct Staking.UserInfo storage pointer"
															}
														},
														"id": 297,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 98,
														"src": "3323:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 299,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 208,
																	"src": "3352:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																		"typeString": "struct Staking.UserInfo storage pointer"
																	}
																},
																"id": 300,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 102,
																"src": "3352:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 301,
																"name": "accPerShare",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 106,
																"src": "3365:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 298,
															"name": "decimalMul",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "3341:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3341:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3323:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "3323:54:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 305,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "3390:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																"typeString": "struct Staking.UserInfo storage pointer"
															}
														},
														"id": 307,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastUserActionTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 96,
														"src": "3390:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 308,
															"name": "getTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "3416:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3416:9:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3390:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 311,
												"nodeType": "ExpressionStatement",
												"src": "3390:35:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 312,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "3436:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																"typeString": "struct Staking.UserInfo storage pointer"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastDepositedTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 94,
														"src": "3436:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 315,
															"name": "getTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "3461:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3461:9:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3436:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 318,
												"nodeType": "ExpressionStatement",
												"src": "3436:34:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 320,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "3496:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3496:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 322,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "3508:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 323,
															"name": "currentShares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "3517:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 324,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "3532:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3532:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "3488:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3488:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 327,
												"nodeType": "EmitStatement",
												"src": "3483:65:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "b6b55f25",
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 329,
												"src": "2351:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2351:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2350:17:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:0"
									},
									"scope": 971,
									"src": "2334:1222:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 535,
										"nodeType": "Block",
										"src": "3606:1792:0",
										"statements": [
											{
												"assignments": [
													335
												],
												"declarations": [
													{
														"constant": false,
														"id": 335,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 535,
														"src": "3617:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
															"typeString": "struct Staking.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 334,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 103,
															"src": "3617:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																"typeString": "struct Staking.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 340,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 336,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "3641:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$103_storage_$",
															"typeString": "mapping(address => struct Staking.UserInfo storage ref)"
														}
													},
													"id": 339,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 337,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "3650:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 338,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3650:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3641:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$103_storage",
														"typeString": "struct Staking.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3617:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 342,
																"name": "_shares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 331,
																"src": "3680:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 343,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3690:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3680:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e6f7468696e6720746f207769746864726177",
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3693:21:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394",
																"typeString": "literal_string \"Nothing to withdraw\""
															},
															"value": "Nothing to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394",
																"typeString": "literal_string \"Nothing to withdraw\""
															}
														],
														"id": 341,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3672:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3672:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "3672:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 349,
																"name": "_shares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 331,
																"src": "3734:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 350,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "3745:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																		"typeString": "struct Staking.UserInfo storage pointer"
																	}
																},
																"id": 351,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "shares",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 92,
																"src": "3745:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3734:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "576974686472617720616d6f756e7420657863656564732062616c616e6365",
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3758:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4c501aa39f818920bdbabc4e74fb2842a64ecd00cde0a748633014f4258571f4",
																"typeString": "literal_string \"Withdraw amount exceeds balance\""
															},
															"value": "Withdraw amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4c501aa39f818920bdbabc4e74fb2842a64ecd00cde0a748633014f4258571f4",
																"typeString": "literal_string \"Withdraw amount exceeds balance\""
															}
														],
														"id": 348,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3726:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3726:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "3726:66:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 356,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 608,
														"src": "3805:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3805:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 358,
												"nodeType": "ExpressionStatement",
												"src": "3805:12:0"
											},
											{
												"assignments": [
													360
												],
												"declarations": [
													{
														"constant": false,
														"id": 360,
														"mutability": "mutable",
														"name": "userTotalAmount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 535,
														"src": "3860:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 359,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3860:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 374,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 371,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 335,
																"src": "3976:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																	"typeString": "struct Staking.UserInfo storage pointer"
																}
															},
															"id": 372,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewards",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 100,
															"src": "3976:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 367,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 335,
																		"src": "3941:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																			"typeString": "struct Staking.UserInfo storage pointer"
																		}
																	},
																	"id": 368,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "rewardDebt",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 98,
																	"src": "3941:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 362,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 335,
																				"src": "3897:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																					"typeString": "struct Staking.UserInfo storage pointer"
																				}
																			},
																			"id": 363,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 102,
																			"src": "3897:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 364,
																			"name": "accPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 106,
																			"src": "3910:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 361,
																		"name": "decimalMul",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 170,
																		"src": "3886:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3886:36:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1636,
																"src": "3886:54:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3886:71:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1610,
														"src": "3886:89:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3886:103:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3860:129:0"
											},
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "withdrawAmount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 535,
														"src": "4041:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 375,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4041:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 385,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 382,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 335,
																"src": "4099:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																	"typeString": "struct Staking.UserInfo storage pointer"
																}
															},
															"id": 383,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "shares",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 92,
															"src": "4099:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 379,
																	"name": "_shares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "4086:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 377,
																	"name": "userTotalAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 360,
																	"src": "4066:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1671,
																"src": "4066:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4066:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 381,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1697,
														"src": "4066:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4066:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4041:70:0"
											},
											{
												"assignments": [
													387
												],
												"declarations": [
													{
														"constant": false,
														"id": 387,
														"mutability": "mutable",
														"name": "userAmount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 535,
														"src": "4163:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 386,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4163:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 397,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 394,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 335,
																"src": "4213:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																	"typeString": "struct Staking.UserInfo storage pointer"
																}
															},
															"id": 395,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "shares",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 92,
															"src": "4213:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 391,
																	"name": "_shares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "4200:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 388,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 335,
																		"src": "4184:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																			"typeString": "struct Staking.UserInfo storage pointer"
																		}
																	},
																	"id": 389,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 102,
																	"src": "4184:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1671,
																"src": "4184:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4184:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1697,
														"src": "4184:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4184:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4163:62:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 398,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "4238:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																"typeString": "struct Staking.UserInfo storage pointer"
															}
														},
														"id": 400,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "shares",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 92,
														"src": "4238:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 404,
																"name": "_shares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 331,
																"src": "4268:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 401,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "4252:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																		"typeString": "struct Staking.UserInfo storage pointer"
																	}
																},
																"id": 402,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "shares",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 92,
																"src": "4252:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1636,
															"src": "4252:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 405,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4252:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4238:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 407,
												"nodeType": "ExpressionStatement",
												"src": "4238:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 408,
														"name": "totalShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 109,
														"src": "4287:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 411,
																"name": "_shares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 331,
																"src": "4317:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 409,
																"name": "totalShares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 109,
																"src": "4301:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1636,
															"src": "4301:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 412,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4301:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4287:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 414,
												"nodeType": "ExpressionStatement",
												"src": "4287:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 416,
																"name": "totalAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 112,
																"src": "4360:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 417,
																"name": "withdrawAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 376,
																"src": "4375:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4360:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "576974686472617720616d6f756e7420657863656564732062616c616e6365",
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4404:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4c501aa39f818920bdbabc4e74fb2842a64ecd00cde0a748633014f4258571f4",
																"typeString": "literal_string \"Withdraw amount exceeds balance\""
															},
															"value": "Withdraw amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4c501aa39f818920bdbabc4e74fb2842a64ecd00cde0a748633014f4258571f4",
																"typeString": "literal_string \"Withdraw amount exceeds balance\""
															}
														],
														"id": 415,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4338:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4338:110:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 421,
												"nodeType": "ExpressionStatement",
												"src": "4338:110:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 422,
														"name": "totalAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 112,
														"src": "4492:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 425,
																"name": "withdrawAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 376,
																"src": "4522:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 423,
																"name": "totalAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 112,
																"src": "4506:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1636,
															"src": "4506:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4506:31:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4492:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "4492:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 429,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "4574:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																"typeString": "struct Staking.UserInfo storage pointer"
															}
														},
														"id": 431,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewards",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 100,
														"src": "4574:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 434,
																"name": "withdrawAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 376,
																"src": "4609:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 432,
																"name": "userTotalAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 360,
																"src": "4589:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1636,
															"src": "4589:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4589:35:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4574:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "4574:50:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 438,
														"name": "withdrawAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "4667:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 441,
																"name": "userAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 387,
																"src": "4703:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 439,
																"name": "withdrawAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 376,
																"src": "4684:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1610,
															"src": "4684:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4684:30:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4667:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "4667:47:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 445,
															"name": "getTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "4731:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 446,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4731:9:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 450,
																"name": "withdrawFeePeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "4770:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 447,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "4743:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																		"typeString": "struct Staking.UserInfo storage pointer"
																	}
																},
																"id": 448,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "lastDepositedTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 94,
																"src": "4743:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1610,
															"src": "4743:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 451,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4743:45:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4731:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 487,
												"nodeType": "IfStatement",
												"src": "4727:339:0",
												"trueBody": {
													"id": 486,
													"nodeType": "Block",
													"src": "4790:276:0",
													"statements": [
														{
															"assignments": [
																454
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 454,
																	"mutability": "mutable",
																	"name": "currentWithdrawFee",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 486,
																	"src": "4805:26:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 453,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4805:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 462,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "3130303030",
																		"id": 460,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4862:5:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		},
																		"value": "10000"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "313030",
																				"id": 457,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4853:3:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 455,
																				"name": "withdrawAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 376,
																				"src": "4834:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 456,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1671,
																			"src": "4834:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 458,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4834:23:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1697,
																	"src": "4834:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4834:34:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4805:63:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 463,
																	"name": "withdrawAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 376,
																	"src": "4883:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 466,
																			"name": "currentWithdrawFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 454,
																			"src": "4919:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 464,
																			"name": "withdrawAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 376,
																			"src": "4900:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1636,
																		"src": "4900:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 467,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4900:38:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4883:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 469,
															"nodeType": "ExpressionStatement",
															"src": "4883:55:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 475,
																				"name": "burnCoin",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 62,
																				"src": "4976:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBurnCoin_$55",
																					"typeString": "contract IBurnCoin"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IBurnCoin_$55",
																					"typeString": "contract IBurnCoin"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4968:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4968:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4968:17:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 477,
																		"name": "currentWithdrawFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 454,
																		"src": "4987:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 470,
																		"name": "poker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 60,
																		"src": "4953:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IPokerToken_$49",
																			"typeString": "contract IPokerToken"
																		}
																	},
																	"id": 472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 25,
																	"src": "4953:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 478,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4953:53:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 479,
															"nodeType": "ExpressionStatement",
															"src": "4953:53:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 483,
																		"name": "currentWithdrawFee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 454,
																		"src": "5035:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 480,
																		"name": "burnCoin",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 62,
																		"src": "5021:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBurnCoin_$55",
																			"typeString": "contract IBurnCoin"
																		}
																	},
																	"id": 482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "burn",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 54,
																	"src": "5021:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) external"
																	}
																},
																"id": 484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5021:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 485,
															"nodeType": "ExpressionStatement",
															"src": "5021:33:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 491,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "5093:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5093:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 493,
															"name": "withdrawAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "5105:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 488,
															"name": "poker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 60,
															"src": "5078:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPokerToken_$49",
																"typeString": "contract IPokerToken"
															}
														},
														"id": 490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 25,
														"src": "5078:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5078:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "5078:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 496,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "5131:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																"typeString": "struct Staking.UserInfo storage pointer"
															}
														},
														"id": 498,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 102,
														"src": "5131:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 502,
																"name": "userAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 387,
																"src": "5161:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 499,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "5145:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																		"typeString": "struct Staking.UserInfo storage pointer"
																	}
																},
																"id": 500,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 102,
																"src": "5145:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1636,
															"src": "5145:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5145:27:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5131:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 505,
												"nodeType": "ExpressionStatement",
												"src": "5131:41:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 506,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "5189:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																"typeString": "struct Staking.UserInfo storage pointer"
															}
														},
														"id": 507,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "shares",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 92,
														"src": "5189:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5203:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5189:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 520,
												"nodeType": "IfStatement",
												"src": "5185:88:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 518,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 510,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 335,
																"src": "5219:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																	"typeString": "struct Staking.UserInfo storage pointer"
																}
															},
															"id": 512,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 98,
															"src": "5219:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 514,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 335,
																		"src": "5248:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																			"typeString": "struct Staking.UserInfo storage pointer"
																		}
																	},
																	"id": 515,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 102,
																	"src": "5248:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 516,
																	"name": "accPerShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "5261:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 513,
																"name": "decimalMul",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 170,
																"src": "5237:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5237:36:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5219:54:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 519,
													"nodeType": "ExpressionStatement",
													"src": "5219:54:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 521,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "5286:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																"typeString": "struct Staking.UserInfo storage pointer"
															}
														},
														"id": 523,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastUserActionTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 96,
														"src": "5286:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 524,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "5312:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 525,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "5312:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5286:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5286:41:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 529,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "5354:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5354:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 531,
															"name": "withdrawAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "5366:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 532,
															"name": "_shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "5382:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 528,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "5345:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5345:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 534,
												"nodeType": "EmitStatement",
												"src": "5340:50:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "2e1a7d4d",
									"id": 536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "_shares",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 536,
												"src": "3582:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3582:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3581:17:0"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3606:0:0"
									},
									"scope": 971,
									"src": "3564:1834:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "5435:588:0",
										"statements": [
											{
												"assignments": [
													540
												],
												"declarations": [
													{
														"constant": false,
														"id": 540,
														"mutability": "mutable",
														"name": "curTime",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 607,
														"src": "5446:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 539,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5446:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 543,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 541,
														"name": "getTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "5464:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5464:9:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5446:27:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 544,
														"name": "curTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 540,
														"src": "5488:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 545,
														"name": "lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "5499:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5488:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 549,
												"nodeType": "IfStatement",
												"src": "5484:64:0",
												"trueBody": {
													"id": 548,
													"nodeType": "Block",
													"src": "5515:33:0",
													"statements": [
														{
															"expression": null,
															"functionReturnParameters": 538,
															"id": 547,
															"nodeType": "Return",
															"src": "5530:7:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 550,
														"name": "totalShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 109,
														"src": "5564:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 551,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5579:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5564:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 559,
												"nodeType": "IfStatement",
												"src": "5560:94:0",
												"trueBody": {
													"id": 558,
													"nodeType": "Block",
													"src": "5582:72:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 553,
																	"name": "lastUpdateTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 115,
																	"src": "5597:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 554,
																	"name": "curTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 540,
																	"src": "5614:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5597:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 556,
															"nodeType": "ExpressionStatement",
															"src": "5597:24:0"
														},
														{
															"expression": null,
															"functionReturnParameters": 538,
															"id": 557,
															"nodeType": "Return",
															"src": "5636:7:0"
														}
													]
												}
											},
											{
												"assignments": [
													561
												],
												"declarations": [
													{
														"constant": false,
														"id": 561,
														"mutability": "mutable",
														"name": "multiplier",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 607,
														"src": "5666:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 560,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5666:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 565,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 562,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -17,
														"src": "5687:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 563,
														"name": "lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "5693:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5687:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5666:41:0"
											},
											{
												"assignments": [
													567
												],
												"declarations": [
													{
														"constant": false,
														"id": 567,
														"mutability": "mutable",
														"name": "reward",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 607,
														"src": "5718:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 566,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5718:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 573,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 570,
																"name": "getStakingCoinPerSec",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 941,
																"src": "5750:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5750:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 568,
															"name": "multiplier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "5735:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1671,
														"src": "5735:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5735:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5718:55:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 574,
														"name": "lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "5784:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 575,
														"name": "curTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 540,
														"src": "5801:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5784:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 577,
												"nodeType": "ExpressionStatement",
												"src": "5784:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 578,
														"name": "totalAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 112,
														"src": "5819:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 581,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "5849:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 579,
																"name": "totalAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 112,
																"src": "5833:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1610,
															"src": "5833:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5833:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5819:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 584,
												"nodeType": "ExpressionStatement",
												"src": "5819:37:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 585,
														"name": "accPerShare",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "5867:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 589,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 567,
																		"src": "5906:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"argumentTypes": null,
																				"id": 590,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "5914:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Staking_$971",
																					"typeString": "contract Staking"
																				}
																			},
																			"id": 591,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "totalDeposit",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 667,
																			"src": "5914:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																				"typeString": "function () view external returns (uint256)"
																			}
																		},
																		"id": 592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5914:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 588,
																	"name": "divFloor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 153,
																	"src": "5897:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5897:37:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 586,
																"name": "accPerShare",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 106,
																"src": "5881:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1610,
															"src": "5881:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5881:54:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5867:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 596,
												"nodeType": "ExpressionStatement",
												"src": "5867:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 602,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "6001:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Staking_$971",
																		"typeString": "contract Staking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Staking_$971",
																		"typeString": "contract Staking"
																	}
																],
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5993:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 600,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5993:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5993:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 604,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "6008:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 597,
															"name": "poker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 60,
															"src": "5982:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPokerToken_$49",
																"typeString": "contract IPokerToken"
															}
														},
														"id": 599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 43,
														"src": "5982:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5982:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 606,
												"nodeType": "ExpressionStatement",
												"src": "5982:33:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "e3161ddd",
									"id": 608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updatePool",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5425:2:0"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5435:0:0"
									},
									"scope": 971,
									"src": "5406:617:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 641,
										"nodeType": "Block",
										"src": "6086:259:0",
										"statements": [
											{
												"assignments": [
													614
												],
												"declarations": [
													{
														"constant": false,
														"id": 614,
														"mutability": "mutable",
														"name": "curTime",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 641,
														"src": "6097:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 613,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6097:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 617,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 615,
														"name": "getTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "6115:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6115:9:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6097:27:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 618,
														"name": "totalShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 109,
														"src": "6139:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 619,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6154:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6139:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 624,
												"nodeType": "IfStatement",
												"src": "6135:57:0",
												"trueBody": {
													"id": 623,
													"nodeType": "Block",
													"src": "6157:35:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 621,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6179:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 612,
															"id": 622,
															"nodeType": "Return",
															"src": "6172:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													626
												],
												"declarations": [
													{
														"constant": false,
														"id": 626,
														"mutability": "mutable",
														"name": "multiplier",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 641,
														"src": "6202:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 625,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6202:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 630,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 627,
														"name": "curTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 614,
														"src": "6223:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 628,
														"name": "lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "6233:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6223:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6202:45:0"
											},
											{
												"assignments": [
													632
												],
												"declarations": [
													{
														"constant": false,
														"id": 632,
														"mutability": "mutable",
														"name": "reward",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 641,
														"src": "6258:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 631,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6258:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 638,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 635,
																"name": "getStakingCoinPerSec",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 941,
																"src": "6290:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6290:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 633,
															"name": "multiplier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "6275:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 634,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1671,
														"src": "6275:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6275:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6258:55:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 639,
													"name": "reward",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 632,
													"src": "6331:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 612,
												"id": 640,
												"nodeType": "Return",
												"src": "6324:13:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "fc3e532b",
									"id": 642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingCoin",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6051:2:0"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 642,
												"src": "6077:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6077:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6076:9:0"
									},
									"scope": 971,
									"src": "6031:314:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 655,
										"nodeType": "Block",
										"src": "6413:69:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 651,
																"name": "getDepositBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 813,
																"src": "6454:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6454:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"argumentTypes": null,
																	"id": 647,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "6431:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Staking_$971",
																		"typeString": "contract Staking"
																	}
																},
																"id": 648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "pendingCoin",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 642,
																"src": "6431:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6431:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 650,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1610,
														"src": "6431:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6431:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 646,
												"id": 654,
												"nodeType": "Return",
												"src": "6424:50:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "d201114a",
									"id": 656,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalStakingAmount",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6380:2:0"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 656,
												"src": "6404:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6404:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6403:9:0"
									},
									"scope": 971,
									"src": "6353:129:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 666,
										"nodeType": "Block",
										"src": "6546:46:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 663,
															"name": "ONE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 135,
															"src": "6580:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 661,
															"name": "totalShares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 109,
															"src": "6564:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 662,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1697,
														"src": "6564:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6564:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 660,
												"id": 665,
												"nodeType": "Return",
												"src": "6557:27:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "f6153ccd",
									"id": 667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalDeposit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6511:2:0"
									},
									"returnParameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 667,
												"src": "6537:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6537:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6536:9:0"
									},
									"scope": 971,
									"src": "6490:102:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 684,
										"nodeType": "Block",
										"src": "6654:105:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"argumentTypes": null,
																			"id": 675,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "6710:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Staking_$971",
																				"typeString": "contract Staking"
																			}
																		},
																		"id": 676,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "pendingCoin",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 642,
																		"src": "6710:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																			"typeString": "function () view external returns (uint256)"
																		}
																	},
																	"id": 677,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6710:18:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"argumentTypes": null,
																			"id": 678,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "6730:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Staking_$971",
																				"typeString": "contract Staking"
																			}
																		},
																		"id": 679,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "totalDeposit",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 667,
																		"src": "6730:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																			"typeString": "function () view external returns (uint256)"
																		}
																	},
																	"id": 680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6730:19:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 674,
																"name": "divFloor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 153,
																"src": "6701:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6701:49:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 672,
															"name": "accPerShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 106,
															"src": "6685:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 673,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1610,
														"src": "6685:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6685:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 671,
												"id": 683,
												"nodeType": "Return",
												"src": "6665:86:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "6e5b9634",
									"id": 685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "computePer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6619:2:0"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 685,
												"src": "6645:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6645:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6644:9:0"
									},
									"scope": 971,
									"src": "6600:159:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 728,
										"nodeType": "Block",
										"src": "6819:294:0",
										"statements": [
											{
												"assignments": [
													691
												],
												"declarations": [
													{
														"constant": false,
														"id": 691,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 728,
														"src": "6830:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
															"typeString": "struct Staking.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 690,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 103,
															"src": "6830:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																"typeString": "struct Staking.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 696,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 692,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "6854:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$103_storage_$",
															"typeString": "mapping(address => struct Staking.UserInfo storage ref)"
														}
													},
													"id": 695,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 693,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "6863:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 694,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6863:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6854:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$103_storage",
														"typeString": "struct Staking.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6830:44:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 697,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "6889:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																"typeString": "struct Staking.UserInfo storage pointer"
															}
														},
														"id": 698,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "shares",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 92,
														"src": "6889:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 699,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6904:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6889:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 704,
												"nodeType": "IfStatement",
												"src": "6885:57:0",
												"trueBody": {
													"id": 703,
													"nodeType": "Block",
													"src": "6907:35:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 701,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6929:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 689,
															"id": 702,
															"nodeType": "Return",
															"src": "6922:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													706
												],
												"declarations": [
													{
														"constant": false,
														"id": 706,
														"mutability": "mutable",
														"name": "ben",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 728,
														"src": "6954:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 705,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6954:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 714,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 708,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 691,
																"src": "6979:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																	"typeString": "struct Staking.UserInfo storage pointer"
																}
															},
															"id": 709,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 102,
															"src": "6979:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"argumentTypes": null,
																	"id": 710,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "6992:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Staking_$971",
																		"typeString": "contract Staking"
																	}
																},
																"id": 711,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "computePer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 685,
																"src": "6992:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6992:17:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 707,
														"name": "decimalMul",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 170,
														"src": "6968:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6968:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6954:56:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 715,
														"name": "ben",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 706,
														"src": "7027:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 716,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "7033:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																"typeString": "struct Staking.UserInfo storage pointer"
															}
														},
														"id": 717,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 98,
														"src": "7033:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7027:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 725,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7104:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 689,
													"id": 726,
													"nodeType": "Return",
													"src": "7097:8:0"
												},
												"id": 727,
												"nodeType": "IfStatement",
												"src": "7023:82:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 721,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 691,
																	"src": "7065:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																		"typeString": "struct Staking.UserInfo storage pointer"
																	}
																},
																"id": 722,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "rewardDebt",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 98,
																"src": "7065:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 719,
																"name": "ben",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 706,
																"src": "7057:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1636,
															"src": "7057:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 723,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7057:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"functionReturnParameters": 689,
													"id": 724,
													"nodeType": "Return",
													"src": "7050:31:0"
												}
											}
										]
									},
									"documentation": null,
									"functionSelector": "936b6cec",
									"id": 729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "myBenefits",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6786:2:0"
									},
									"returnParameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 729,
												"src": "6810:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6810:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6809:9:0"
									},
									"scope": 971,
									"src": "6767:346:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 768,
										"nodeType": "Block",
										"src": "7170:287:0",
										"statements": [
											{
												"assignments": [
													735
												],
												"declarations": [
													{
														"constant": false,
														"id": 735,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 768,
														"src": "7181:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
															"typeString": "struct Staking.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 734,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 103,
															"src": "7181:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																"typeString": "struct Staking.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 740,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 736,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "7205:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$103_storage_$",
															"typeString": "mapping(address => struct Staking.UserInfo storage ref)"
														}
													},
													"id": 739,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 737,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "7214:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 738,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "7214:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7205:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$103_storage",
														"typeString": "struct Staking.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7181:44:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 741,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "7240:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																"typeString": "struct Staking.UserInfo storage pointer"
															}
														},
														"id": 742,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "shares",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 92,
														"src": "7240:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 743,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7255:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7240:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 747,
												"nodeType": "IfStatement",
												"src": "7236:30:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 745,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7265:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 733,
													"id": 746,
													"nodeType": "Return",
													"src": "7258:8:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 764,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 735,
																"src": "7437:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																	"typeString": "struct Staking.UserInfo storage pointer"
																}
															},
															"id": 765,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 102,
															"src": "7437:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 760,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 735,
																		"src": "7401:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																			"typeString": "struct Staking.UserInfo storage pointer"
																		}
																	},
																	"id": 761,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "rewards",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 100,
																	"src": "7401:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 756,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 735,
																				"src": "7362:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																					"typeString": "struct Staking.UserInfo storage pointer"
																				}
																			},
																			"id": 757,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "rewardDebt",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 98,
																			"src": "7362:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 749,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 735,
																						"src": "7308:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$103_storage_ptr",
																							"typeString": "struct Staking.UserInfo storage pointer"
																						}
																					},
																					"id": 750,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 102,
																					"src": "7308:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"expression": {
																							"argumentTypes": null,
																							"id": 751,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -28,
																							"src": "7321:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_Staking_$971",
																								"typeString": "contract Staking"
																							}
																						},
																						"id": 752,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "computePer",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 685,
																						"src": "7321:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																							"typeString": "function () view external returns (uint256)"
																						}
																					},
																					"id": 753,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7321:17:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 748,
																				"name": "decimalMul",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 170,
																				"src": "7297:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7297:42:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 755,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1636,
																		"src": "7297:64:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7297:81:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1610,
																"src": "7297:103:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7297:117:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1610,
														"src": "7297:139:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7297:152:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 733,
												"id": 767,
												"nodeType": "Return",
												"src": "7277:172:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "47f1aae7",
									"id": 769,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "myValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7137:2:0"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 769,
												"src": "7161:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7161:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7160:9:0"
									},
									"scope": 971,
									"src": "7121:336:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "7518:118:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 774,
														"name": "totalShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 109,
														"src": "7533:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 775,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7548:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7533:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 779,
												"nodeType": "IfStatement",
												"src": "7529:30:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 777,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7558:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 773,
													"id": 778,
													"nodeType": "Return",
													"src": "7551:8:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 787,
															"name": "totalShares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 109,
															"src": "7616:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"argumentTypes": null,
																			"id": 782,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "7593:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Staking_$971",
																				"typeString": "contract Staking"
																			}
																		},
																		"id": 783,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "computePer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 685,
																		"src": "7593:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																			"typeString": "function () view external returns (uint256)"
																		}
																	},
																	"id": 784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7593:17:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 780,
																	"name": "totalShares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 109,
																	"src": "7577:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1671,
																"src": "7577:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7577:34:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 786,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1697,
														"src": "7577:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7577:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 773,
												"id": 789,
												"nodeType": "Return",
												"src": "7570:58:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "77926869",
									"id": 791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sharesPrice",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7485:2:0"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 791,
												"src": "7509:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7509:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7508:9:0"
									},
									"scope": 971,
									"src": "7465:171:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 798,
										"nodeType": "Block",
										"src": "7720:29:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 796,
													"name": "now",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -17,
													"src": "7738:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 795,
												"id": 797,
												"nodeType": "Return",
												"src": "7731:10:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "557ed1ba",
									"id": 799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTime",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7687:2:0"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 799,
												"src": "7711:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7711:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7710:9:0"
									},
									"scope": 971,
									"src": "7671:78:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 812,
										"nodeType": "Block",
										"src": "7816:56:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 808,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "7858:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Staking_$971",
																		"typeString": "contract Staking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Staking_$971",
																		"typeString": "contract Staking"
																	}
																],
																"id": 807,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7850:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 806,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7850:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7850:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 804,
															"name": "poker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 60,
															"src": "7834:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPokerToken_$49",
																"typeString": "contract IPokerToken"
															}
														},
														"id": 805,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "7834:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7834:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 803,
												"id": 811,
												"nodeType": "Return",
												"src": "7827:37:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "0497de4a",
									"id": 813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDepositBalance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7783:2:0"
									},
									"returnParameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 813,
												"src": "7807:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7807:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7806:9:0"
									},
									"scope": 971,
									"src": "7757:115:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "7930:47:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "3130",
														"id": 818,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7948:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 821,
																"name": "decimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 130,
																"src": "7960:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7952:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 819,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7952:7:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 822,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7952:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7948:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 817,
												"id": 824,
												"nodeType": "Return",
												"src": "7941:28:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "de0ff7c5",
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getEther",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7897:2:0"
									},
									"returnParameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 826,
												"src": "7921:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7921:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7920:9:0"
									},
									"scope": 971,
									"src": "7880:97:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 940,
										"nodeType": "Block",
										"src": "8081:869:0",
										"statements": [
											{
												"assignments": [
													832
												],
												"declarations": [
													{
														"constant": false,
														"id": 832,
														"mutability": "mutable",
														"name": "sec",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 940,
														"src": "8092:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 831,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 836,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_rational_86400_by_1",
														"typeString": "int_const 86400"
													},
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "3234",
														"id": 833,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8106:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_24_by_1",
															"typeString": "int_const 24"
														},
														"value": "24"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "33363030",
														"id": 834,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8111:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3600_by_1",
															"typeString": "int_const 3600"
														},
														"value": "3600"
													},
													"src": "8106:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_86400_by_1",
														"typeString": "int_const 86400"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8092:23:0"
											},
											{
												"assignments": [
													838
												],
												"declarations": [
													{
														"constant": false,
														"id": 838,
														"mutability": "mutable",
														"name": "curTime",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 940,
														"src": "8126:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 837,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8126:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 841,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 839,
														"name": "getTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "8144:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8144:9:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8126:27:0"
											},
											{
												"assignments": [
													843
												],
												"declarations": [
													{
														"constant": false,
														"id": 843,
														"mutability": "mutable",
														"name": "coin",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 940,
														"src": "8164:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 842,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8164:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 845,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "31",
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8179:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8164:16:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 846,
														"name": "stakingSwitch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "8197:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 847,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8214:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "8197:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 856,
												"nodeType": "IfStatement",
												"src": "8193:192:0",
												"trueBody": {
													"id": 855,
													"nodeType": "Block",
													"src": "8221:164:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 849,
																	"name": "coin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 843,
																	"src": "8277:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "3132303030303030303030303030",
																	"id": 850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8284:14:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_12000000000000_by_1",
																		"typeString": "int_const 12000000000000"
																	},
																	"value": "12000000000000"
																},
																"src": "8277:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 852,
															"nodeType": "ExpressionStatement",
															"src": "8277:21:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 853,
																"name": "coin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 843,
																"src": "8369:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 830,
															"id": 854,
															"nodeType": "Return",
															"src": "8362:11:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 857,
														"name": "curTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "8431:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 858,
																	"name": "stakingStartTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "8442:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_rational_300_by_1",
																		"typeString": "int_const 300"
																	},
																	"id": 861,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"hexValue": "3630",
																		"id": 859,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8461:2:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_60_by_1",
																			"typeString": "int_const 60"
																		},
																		"value": "60"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "35",
																		"id": 860,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8466:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_5_by_1",
																			"typeString": "int_const 5"
																		},
																		"value": "5"
																	},
																	"src": "8461:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_300_by_1",
																		"typeString": "int_const 300"
																	}
																},
																"src": "8442:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 863,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8441:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8431:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 893,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 886,
															"name": "curTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 838,
															"src": "8638:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 887,
																		"name": "stakingStartTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 124,
																		"src": "8649:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_rational_600_by_1",
																			"typeString": "int_const 600"
																		},
																		"id": 890,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"hexValue": "3630",
																			"id": 888,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8668:2:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_60_by_1",
																				"typeString": "int_const 60"
																			},
																			"value": "60"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "3130",
																			"id": 889,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8673:2:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "8668:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_600_by_1",
																			"typeString": "int_const 600"
																		}
																	},
																	"src": "8649:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 892,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8648:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8638:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 935,
														"nodeType": "Block",
														"src": "8803:118:0",
														"statements": [
															{
																"assignments": [
																	916
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 916,
																		"mutability": "mutable",
																		"name": "maxCoin",
																		"nodeType": "VariableDeclaration",
																		"overrides": null,
																		"scope": 935,
																		"src": "8818:15:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 915,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8818:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"value": null,
																		"visibility": "internal"
																	}
																],
																"id": 918,
																"initialValue": {
																	"argumentTypes": null,
																	"hexValue": "313232333030",
																	"id": 917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8836:6:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_122300_by_1",
																		"typeString": "int_const 122300"
																	},
																	"value": "122300"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "8818:24:0"
															},
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 919,
																		"name": "coin",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 843,
																		"src": "8857:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 931,
																				"name": "sec",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 832,
																				"src": "8905:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"components": [
																							{
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 927,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"argumentTypes": null,
																									"hexValue": "3130",
																									"id": 922,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "8877:2:0",
																									"subdenomination": null,
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "**",
																								"rightExpression": {
																									"argumentTypes": null,
																									"arguments": [
																										{
																											"argumentTypes": null,
																											"id": 925,
																											"name": "decimals",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 130,
																											"src": "8889:8:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"id": 924,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"nodeType": "ElementaryTypeNameExpression",
																										"src": "8881:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_uint256_$",
																											"typeString": "type(uint256)"
																										},
																										"typeName": {
																											"id": 923,
																											"name": "uint256",
																											"nodeType": "ElementaryTypeName",
																											"src": "8881:7:0",
																											"typeDescriptions": {
																												"typeIdentifier": null,
																												"typeString": null
																											}
																										}
																									},
																									"id": 926,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "typeConversion",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "8881:17:0",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "8877:21:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 928,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "8876:23:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 920,
																						"name": "maxCoin",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 916,
																						"src": "8864:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 921,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1671,
																					"src": "8864:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 929,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8864:36:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 930,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1697,
																			"src": "8864:40:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 932,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8864:45:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8857:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 934,
																"nodeType": "ExpressionStatement",
																"src": "8857:52:0"
															}
														]
													},
													"id": 936,
													"nodeType": "IfStatement",
													"src": "8634:287:0",
													"trueBody": {
														"id": 914,
														"nodeType": "Block",
														"src": "8678:119:0",
														"statements": [
															{
																"assignments": [
																	895
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 895,
																		"mutability": "mutable",
																		"name": "maxCoin",
																		"nodeType": "VariableDeclaration",
																		"overrides": null,
																		"scope": 914,
																		"src": "8693:15:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 894,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8693:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"value": null,
																		"visibility": "internal"
																	}
																],
																"id": 897,
																"initialValue": {
																	"argumentTypes": null,
																	"hexValue": "31343030303030",
																	"id": 896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8711:7:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1400000_by_1",
																		"typeString": "int_const 1400000"
																	},
																	"value": "1400000"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "8693:25:0"
															},
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 898,
																		"name": "coin",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 843,
																		"src": "8733:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 910,
																				"name": "sec",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 832,
																				"src": "8781:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"components": [
																							{
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 906,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"argumentTypes": null,
																									"hexValue": "3130",
																									"id": 901,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "8753:2:0",
																									"subdenomination": null,
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "**",
																								"rightExpression": {
																									"argumentTypes": null,
																									"arguments": [
																										{
																											"argumentTypes": null,
																											"id": 904,
																											"name": "decimals",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 130,
																											"src": "8765:8:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"id": 903,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"nodeType": "ElementaryTypeNameExpression",
																										"src": "8757:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_uint256_$",
																											"typeString": "type(uint256)"
																										},
																										"typeName": {
																											"id": 902,
																											"name": "uint256",
																											"nodeType": "ElementaryTypeName",
																											"src": "8757:7:0",
																											"typeDescriptions": {
																												"typeIdentifier": null,
																												"typeString": null
																											}
																										}
																									},
																									"id": 905,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "typeConversion",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "8757:17:0",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "8753:21:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 907,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "8752:23:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 899,
																						"name": "maxCoin",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 895,
																						"src": "8740:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 900,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1671,
																					"src": "8740:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 908,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8740:36:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 909,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1697,
																			"src": "8740:40:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 911,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8740:45:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8733:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 913,
																"nodeType": "ExpressionStatement",
																"src": "8733:52:0"
															}
														]
													}
												},
												"id": 937,
												"nodeType": "IfStatement",
												"src": "8427:494:0",
												"trueBody": {
													"id": 885,
													"nodeType": "Block",
													"src": "8470:119:0",
													"statements": [
														{
															"assignments": [
																866
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 866,
																	"mutability": "mutable",
																	"name": "maxCoin",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 885,
																	"src": "8485:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 865,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8485:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 868,
															"initialValue": {
																"argumentTypes": null,
																"hexValue": "32383030303030",
																"id": 867,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8503:7:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2800000_by_1",
																	"typeString": "int_const 2800000"
																},
																"value": "2800000"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8485:25:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 883,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 869,
																	"name": "coin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 843,
																	"src": "8525:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 881,
																			"name": "sec",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 832,
																			"src": "8573:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"components": [
																						{
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 877,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"hexValue": "3130",
																								"id": 872,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "8545:2:0",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_10_by_1",
																									"typeString": "int_const 10"
																								},
																								"value": "10"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "**",
																							"rightExpression": {
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"id": 875,
																										"name": "decimals",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 130,
																										"src": "8557:8:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"id": 874,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "8549:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 873,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "8549:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": null,
																											"typeString": null
																										}
																									}
																								},
																								"id": 876,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "8549:17:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "8545:21:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 878,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "8544:23:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 870,
																					"name": "maxCoin",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 866,
																					"src": "8532:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 871,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1671,
																				"src": "8532:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 879,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8532:36:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1697,
																		"src": "8532:40:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 882,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8532:45:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8525:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 884,
															"nodeType": "ExpressionStatement",
															"src": "8525:52:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 938,
													"name": "coin",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 843,
													"src": "8938:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 830,
												"id": 939,
												"nodeType": "Return",
												"src": "8931:11:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "b8a3b366",
									"id": 941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakingCoinPerSec",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8048:2:0"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 941,
												"src": "8072:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8072:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8071:9:0"
									},
									"scope": 971,
									"src": "8019:931:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 969,
										"nodeType": "Block",
										"src": "9002:238:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 946,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "9017:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 947,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "9017:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 948,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 64,
														"src": "9031:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9017:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 968,
												"nodeType": "IfStatement",
												"src": "9013:220:0",
												"trueBody": {
													"id": 967,
													"nodeType": "Block",
													"src": "9038:195:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"id": 950,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 943,
																"src": "9057:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 961,
																"nodeType": "Block",
																"src": "9132:55:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 959,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 957,
																				"name": "stakingStartTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 124,
																				"src": "9151:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 958,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9170:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "9151:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 960,
																		"nodeType": "ExpressionStatement",
																		"src": "9151:20:0"
																	}
																]
															},
															"id": 962,
															"nodeType": "IfStatement",
															"src": "9053:134:0",
															"trueBody": {
																"id": 956,
																"nodeType": "Block",
																"src": "9063:63:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 954,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 951,
																				"name": "stakingStartTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 124,
																				"src": "9082:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 952,
																					"name": "getTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 799,
																					"src": "9101:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																						"typeString": "function () view returns (uint256)"
																					}
																				},
																				"id": 953,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9101:9:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9082:28:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 955,
																		"nodeType": "ExpressionStatement",
																		"src": "9082:28:0"
																	}
																]
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 965,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 963,
																	"name": "stakingSwitch",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 127,
																	"src": "9201:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 964,
																	"name": "flag",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 943,
																	"src": "9217:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "9201:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 966,
															"nodeType": "ExpressionStatement",
															"src": "9201:20:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"functionSelector": "81ad5718",
									"id": 970,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setStakingSwitch",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "flag",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 970,
												"src": "8984:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 942,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8984:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8983:11:0"
									},
									"returnParameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9002:0:0"
									},
									"scope": 971,
									"src": "8958:282:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 972,
							"src": "718:8525:0"
						}
					],
					"src": "35:9210:0"
				},
				"id": 0
			},
			"_lib/Context.sol": {
				"ast": {
					"absolutePath": "_lib/Context.sol",
					"exportedSymbols": {
						"Context": [
							994
						]
					},
					"id": 995,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 973,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 994,
							"linearizedBaseContracts": [
								994
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 981,
										"nodeType": "Block",
										"src": "675:36:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 978,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "693:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "693:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 977,
												"id": 980,
												"nodeType": "Return",
												"src": "686:17:1"
											}
										]
									},
									"documentation": null,
									"id": 982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "624:2:1"
									},
									"returnParameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 982,
												"src": "658:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "657:17:1"
									},
									"scope": 994,
									"src": "605:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 992,
										"nodeType": "Block",
										"src": "784:168:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 987,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "795:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$994",
														"typeString": "contract Context"
													}
												},
												"id": 988,
												"nodeType": "ExpressionStatement",
												"src": "795:4:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 989,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "936:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "936:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 986,
												"id": 991,
												"nodeType": "Return",
												"src": "929:15:1"
											}
										]
									},
									"documentation": null,
									"id": 993,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "736:2:1"
									},
									"returnParameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 993,
												"src": "770:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 984,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "770:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "769:14:1"
									},
									"scope": 994,
									"src": "719:233:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 995,
							"src": "572:383:1"
						}
					],
					"src": "35:920:1"
				},
				"id": 1
			},
			"_lib/ERC20.sol": {
				"ast": {
					"absolutePath": "_lib/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							1428
						]
					},
					"id": 1429,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 996,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:2"
						},
						{
							"absolutePath": "_lib/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 997,
							"nodeType": "ImportDirective",
							"scope": 1429,
							"sourceUnit": 1974,
							"src": "62:24:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "_lib/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 998,
							"nodeType": "ImportDirective",
							"scope": 1429,
							"sourceUnit": 1507,
							"src": "88:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "_lib/Context.sol",
							"file": "./Context.sol",
							"id": 999,
							"nodeType": "ImportDirective",
							"scope": 1429,
							"sourceUnit": 995,
							"src": "112:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1000,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1506,
										"src": "157:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1506",
											"typeString": "contract IERC20"
										}
									},
									"id": 1001,
									"nodeType": "InheritanceSpecifier",
									"src": "157:6:2"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1002,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 994,
										"src": "165:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$994",
											"typeString": "contract Context"
										}
									},
									"id": 1003,
									"nodeType": "InheritanceSpecifier",
									"src": "165:7:2"
								}
							],
							"contractDependencies": [
								994,
								1506
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1428,
							"linearizedBaseContracts": [
								1428,
								994,
								1506
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1006,
									"libraryName": {
										"contractScope": null,
										"id": 1004,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1720,
										"src": "186:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1720",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "180:27:2",
									"typeName": {
										"id": 1005,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "199:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 1010,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1428,
									"src": "215:46:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1009,
										"keyType": {
											"id": 1007,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "223:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "215:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1008,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "234:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1016,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1428,
									"src": "268:68:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1015,
										"keyType": {
											"id": 1011,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "276:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "268:47:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 1014,
											"keyType": {
												"id": 1012,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "295:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "287:27:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 1013,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "306:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1018,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1428,
									"src": "345:29:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1017,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "345:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1019,
										"nodeType": "StructuredDocumentation",
										"src": "383:56:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1021,
									"mutability": "mutable",
									"name": "name",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1428,
									"src": "445:18:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1020,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "445:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1022,
										"nodeType": "StructuredDocumentation",
										"src": "472:105:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 1024,
									"mutability": "mutable",
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1428,
									"src": "583:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1023,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "583:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1025,
										"nodeType": "StructuredDocumentation",
										"src": "612:624:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 1027,
									"mutability": "mutable",
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1428,
									"src": "1242:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1026,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1242:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1073,
										"nodeType": "Block",
										"src": "1692:217:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1039,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1021,
														"src": "1703:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1040,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1030,
														"src": "1710:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1703:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1042,
												"nodeType": "ExpressionStatement",
												"src": "1703:12:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1043,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1024,
														"src": "1726:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1044,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "1735:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1726:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1046,
												"nodeType": "ExpressionStatement",
												"src": "1726:16:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1047,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1027,
														"src": "1753:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1048,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1034,
														"src": "1764:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1753:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1050,
												"nodeType": "ExpressionStatement",
												"src": "1753:20:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1051,
														"name": "_supply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1036,
														"src": "1784:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1059,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1052,
															"name": "_supply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "1794:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "3130",
																"id": 1053,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1804:2:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1056,
																		"name": "_decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1034,
																		"src": "1816:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 1055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1808:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1054,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1808:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1808:18:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1804:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1794:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1784:42:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1061,
												"nodeType": "ExpressionStatement",
												"src": "1784:42:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1062,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "1837:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1063,
														"name": "_supply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1036,
														"src": "1852:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1837:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1065,
												"nodeType": "ExpressionStatement",
												"src": "1837:22:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1066,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "1870:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1069,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1067,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "1880:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1880:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1870:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1070,
														"name": "_supply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1036,
														"src": "1894:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1870:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1072,
												"nodeType": "ExpressionStatement",
												"src": "1870:31:2"
											}
										]
									},
									"documentation": {
										"id": 1028,
										"nodeType": "StructuredDocumentation",
										"src": "1272:274:2",
										"text": " @dev Sets the values for {_name} and {_symbol}, {_decimals}\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."
									},
									"id": 1074,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "_name",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1074,
												"src": "1574:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1029,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1574:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "_symbol",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1074,
												"src": "1604:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1031,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1604:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "_decimals",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1074,
												"src": "1636:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1033,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1636:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "_supply",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1074,
												"src": "1662:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1662:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1563:121:2"
									},
									"returnParameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1692:0:2"
									},
									"scope": 1428,
									"src": "1552:357:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1437
									],
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "2038:38:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1081,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1018,
													"src": "2056:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1080,
												"id": 1082,
												"nodeType": "Return",
												"src": "2049:19:2"
											}
										]
									},
									"documentation": {
										"id": 1075,
										"nodeType": "StructuredDocumentation",
										"src": "1917:51:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1077,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2011:8:2"
									},
									"parameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1994:2:2"
									},
									"returnParameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1084,
												"src": "2029:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2029:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2028:9:2"
									},
									"scope": 1428,
									"src": "1974:102:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1445
									],
									"body": {
										"id": 1097,
										"nodeType": "Block",
										"src": "2256:43:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1093,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "2274:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1095,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1094,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1087,
														"src": "2284:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2274:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1092,
												"id": 1096,
												"nodeType": "Return",
												"src": "2267:24:2"
											}
										]
									},
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "2084:49:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 1098,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1089,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2215:8:2"
									},
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1098,
												"src": "2158:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2158:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2157:16:2"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1098,
												"src": "2242:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2242:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2241:9:2"
									},
									"scope": 1428,
									"src": "2139:160:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1455
									],
									"body": {
										"id": 1118,
										"nodeType": "Block",
										"src": "2620:78:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1110,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 982,
																"src": "2641:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2641:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1112,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "2655:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1113,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "2660:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1109,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1280,
														"src": "2631:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2631:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1115,
												"nodeType": "ExpressionStatement",
												"src": "2631:37:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2686:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1108,
												"id": 1117,
												"nodeType": "Return",
												"src": "2679:11:2"
											}
										]
									},
									"documentation": {
										"id": 1099,
										"nodeType": "StructuredDocumentation",
										"src": "2307:194:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `_to` cannot be the zero address.\n - the caller must have a balance of at least `_amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 1119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1105,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2582:8:2"
									},
									"parameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1119,
												"src": "2525:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2525:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1119,
												"src": "2538:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2538:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2524:30:2"
									},
									"returnParameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1119,
												"src": "2609:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2609:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2608:6:2"
									},
									"scope": 1428,
									"src": "2507:191:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1465
									],
									"body": {
										"id": 1136,
										"nodeType": "Block",
										"src": "2896:55:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1130,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "2914:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1132,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1131,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1122,
															"src": "2926:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2914:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1134,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1133,
														"name": "_spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1124,
														"src": "2934:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2914:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1129,
												"id": 1135,
												"nodeType": "Return",
												"src": "2907:36:2"
											}
										]
									},
									"documentation": {
										"id": 1120,
										"nodeType": "StructuredDocumentation",
										"src": "2706:49:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 1137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1126,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2855:8:2"
									},
									"parameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1137,
												"src": "2780:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2780:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1137,
												"src": "2796:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2796:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2779:34:2"
									},
									"returnParameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1137,
												"src": "2882:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2881:9:2"
									},
									"scope": 1428,
									"src": "2761:190:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1475
									],
									"body": {
										"id": 1157,
										"nodeType": "Block",
										"src": "3216:82:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1149,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 982,
																"src": "3236:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3236:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1151,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1140,
															"src": "3250:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1152,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1142,
															"src": "3260:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1148,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1325,
														"src": "3227:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3227:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1154,
												"nodeType": "ExpressionStatement",
												"src": "3227:41:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3286:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1147,
												"id": 1156,
												"nodeType": "Return",
												"src": "3279:11:2"
											}
										]
									},
									"documentation": {
										"id": 1138,
										"nodeType": "StructuredDocumentation",
										"src": "2959:134:2",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `_spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 1158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1144,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3178:8:2"
									},
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1158,
												"src": "3116:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3116:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1158,
												"src": "3134:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3134:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3115:35:2"
									},
									"returnParameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1158,
												"src": "3205:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1145,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3205:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3204:6:2"
									},
									"scope": 1428,
									"src": "3099:199:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1487
									],
									"body": {
										"id": 1210,
										"nodeType": "Block",
										"src": "3905:270:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1172,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1161,
																	"src": "3924:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1175,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3941:1:2",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1174,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3933:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1173,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3933:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3933:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "3924:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1178,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1163,
																	"src": "3947:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3962:1:2",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1180,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3954:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1179,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3954:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3954:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "3947:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3924:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1171,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3916:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3916:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1186,
												"nodeType": "ExpressionStatement",
												"src": "3916:49:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1188,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "4001:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1189,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 982,
																"src": "4021:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4021:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1198,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1165,
																	"src": "4085:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1191,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1016,
																			"src": "4048:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1193,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1192,
																			"name": "_from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1161,
																			"src": "4060:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4048:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1196,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1194,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 982,
																			"src": "4067:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 1195,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4067:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4048:32:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1636,
																"src": "4048:36:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4048:45:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1187,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1325,
														"src": "3978:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3978:126:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1201,
												"nodeType": "ExpressionStatement",
												"src": "3978:126:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1203,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "4125:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1204,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "4132:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1205,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "4137:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1202,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1280,
														"src": "4115:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4115:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1207,
												"nodeType": "ExpressionStatement",
												"src": "4115:30:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4163:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1170,
												"id": 1209,
												"nodeType": "Return",
												"src": "4156:11:2"
											}
										]
									},
									"documentation": {
										"id": 1159,
										"nodeType": "StructuredDocumentation",
										"src": "3306:459:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `_from` and `_to` cannot be the zero address.\n - `_from` must have a balance of at least `_amount`.\n - the caller must have allowance for `_from`'s tokens of at least\n `_amount`."
									},
									"functionSelector": "23b872dd",
									"id": 1211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1167,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3881:8:2"
									},
									"parameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1211,
												"src": "3803:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3803:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1211,
												"src": "3827:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3827:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1211,
												"src": "3849:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3792:79:2"
									},
									"returnParameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1211,
												"src": "3899:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1168,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3899:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3898:6:2"
									},
									"scope": 1428,
									"src": "3771:404:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1279,
										"nodeType": "Block",
										"src": "4759:345:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1222,
																"name": "_from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1214,
																"src": "4778:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4795:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4787:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1223,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4787:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1226,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4787:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "4778:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "7472616e736665722066726f6d2030",
															"id": 1228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4799:17:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_088211d17706da49ecdf58f6ac409477cc9130fd43883e0443984cdf77b1dbc9",
																"typeString": "literal_string \"transfer from 0\""
															},
															"value": "transfer from 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_088211d17706da49ecdf58f6ac409477cc9130fd43883e0443984cdf77b1dbc9",
																"typeString": "literal_string \"transfer from 0\""
															}
														],
														"id": 1221,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4770:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4770:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1230,
												"nodeType": "ExpressionStatement",
												"src": "4770:47:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1232,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1216,
																"src": "4836:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1235,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4851:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4843:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1233,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4843:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1236,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4843:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "4836:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "7472616e7366657220746f2030",
															"id": 1238,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4855:15:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01bc61e3f4d850e3eb22a5a0ac43476dcc54e69adac1202623178f29549b4b44",
																"typeString": "literal_string \"transfer to 0\""
															},
															"value": "transfer to 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01bc61e3f4d850e3eb22a5a0ac43476dcc54e69adac1202623178f29549b4b44",
																"typeString": "literal_string \"transfer to 0\""
															}
														],
														"id": 1231,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4828:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4828:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1240,
												"nodeType": "ExpressionStatement",
												"src": "4828:43:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1242,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1216,
																"src": "4890:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "307864656164",
																		"id": 1245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4905:6:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_57005_by_1",
																			"typeString": "int_const 57005"
																		},
																		"value": "0xdead"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_57005_by_1",
																			"typeString": "int_const 57005"
																		}
																	],
																	"id": 1244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4897:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1243,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4897:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1246,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4897:15:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "4890:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "7472616e7366657220746f20307864656164",
															"id": 1248,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4914:20:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0f76b0e999ef8392e30c214f6024bd49c272969cba01c2b93095d2fe0bf18da5",
																"typeString": "literal_string \"transfer to 0xdead\""
															},
															"value": "transfer to 0xdead"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0f76b0e999ef8392e30c214f6024bd49c272969cba01c2b93095d2fe0bf18da5",
																"typeString": "literal_string \"transfer to 0xdead\""
															}
														],
														"id": 1241,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4882:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4882:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1250,
												"nodeType": "ExpressionStatement",
												"src": "4882:53:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1251,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "4948:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1253,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1252,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1214,
															"src": "4958:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4948:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1258,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1218,
																"src": "4988:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1254,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1010,
																	"src": "4967:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1256,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1255,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1214,
																	"src": "4977:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4967:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1636,
															"src": "4967:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4967:29:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4948:48:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1261,
												"nodeType": "ExpressionStatement",
												"src": "4948:48:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1262,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "5007:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1264,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1263,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1216,
															"src": "5017:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5007:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1269,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1218,
																"src": "5043:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1265,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1010,
																	"src": "5024:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1267,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1266,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1216,
																	"src": "5034:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5024:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1610,
															"src": "5024:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5024:27:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5007:44:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1272,
												"nodeType": "ExpressionStatement",
												"src": "5007:44:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1274,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1214,
															"src": "5076:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1275,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1216,
															"src": "5083:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1276,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "5088:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1273,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1496,
														"src": "5067:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5067:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1278,
												"nodeType": "EmitStatement",
												"src": "5062:34:2"
											}
										]
									},
									"documentation": {
										"id": 1212,
										"nodeType": "StructuredDocumentation",
										"src": "4183:463:2",
										"text": " @dev Moves tokens `_amount` from `_from` to `_to`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `_from` cannot be the zero address.\n - `_to` cannot be the zero address.\n - `_from` must have a balance of at least `_amount`."
									},
									"id": 1280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1280,
												"src": "4681:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4681:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1280,
												"src": "4705:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4705:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1280,
												"src": "4727:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4727:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4670:79:2"
									},
									"returnParameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4759:0:2"
									},
									"scope": 1428,
									"src": "4652:452:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1324,
										"nodeType": "Block",
										"src": "5658:227:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1291,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1283,
																"src": "5677:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5695:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5687:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1292,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5687:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1295,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5687:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "5677:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "617070726f76652066726f6d2030",
															"id": 1297,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5699:16:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7be6a29a82c9e54f3748332e2433ff641b96e589a0c2b257be32ecb8594857aa",
																"typeString": "literal_string \"approve from 0\""
															},
															"value": "approve from 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7be6a29a82c9e54f3748332e2433ff641b96e589a0c2b257be32ecb8594857aa",
																"typeString": "literal_string \"approve from 0\""
															}
														],
														"id": 1290,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5669:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5669:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1299,
												"nodeType": "ExpressionStatement",
												"src": "5669:47:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1301,
																"name": "_spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1285,
																"src": "5735:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5755:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5747:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1302,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5747:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1305,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5747:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "5735:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "617070726f766520746f2030",
															"id": 1307,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:14:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9735ec0b566eec43aef8e55c8869448c5c3b0e1f23c26343eec9ec39a891c8b4",
																"typeString": "literal_string \"approve to 0\""
															},
															"value": "approve to 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9735ec0b566eec43aef8e55c8869448c5c3b0e1f23c26343eec9ec39a891c8b4",
																"typeString": "literal_string \"approve to 0\""
															}
														],
														"id": 1300,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5727:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5727:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1309,
												"nodeType": "ExpressionStatement",
												"src": "5727:47:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1310,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1016,
																"src": "5787:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1313,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1311,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1283,
																"src": "5799:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5787:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1314,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1312,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1285,
															"src": "5807:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5787:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1315,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1287,
														"src": "5819:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5787:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1317,
												"nodeType": "ExpressionStatement",
												"src": "5787:39:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1319,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "5851:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1320,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1285,
															"src": "5859:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1321,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1287,
															"src": "5869:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1318,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1505,
														"src": "5842:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5842:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1323,
												"nodeType": "EmitStatement",
												"src": "5837:40:2"
											}
										]
									},
									"documentation": {
										"id": 1281,
										"nodeType": "StructuredDocumentation",
										"src": "5112:428:2",
										"text": " @dev Sets `amount` as the allowance of `_spender` over the `_owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `_owner` cannot be the zero address.\n - `_spender` cannot be the zero address."
									},
									"id": 1325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1325,
												"src": "5574:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5574:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1325,
												"src": "5599:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5599:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1325,
												"src": "5626:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5626:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5563:85:2"
									},
									"returnParameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5658:0:2"
									},
									"scope": 1428,
									"src": "5546:339:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1370,
										"nodeType": "Block",
										"src": "6218:216:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1334,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1328,
																"src": "6237:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6252:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6244:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1335,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6244:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1338,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6244:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6237:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6d696e7420746f2030",
															"id": 1340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6256:11:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_341351e35cc1cea7d00a25dee4c4c0513a1d39ea1954597cbb7cb19fe6a8a930",
																"typeString": "literal_string \"mint to 0\""
															},
															"value": "mint to 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_341351e35cc1cea7d00a25dee4c4c0513a1d39ea1954597cbb7cb19fe6a8a930",
																"typeString": "literal_string \"mint to 0\""
															}
														],
														"id": 1333,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6229:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6229:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1342,
												"nodeType": "ExpressionStatement",
												"src": "6229:39:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1343,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "6281:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1346,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1330,
																"src": "6313:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1344,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1018,
																"src": "6296:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1610,
															"src": "6296:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1347,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6296:25:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6281:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1349,
												"nodeType": "ExpressionStatement",
												"src": "6281:40:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1350,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "6332:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1352,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1351,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1328,
															"src": "6342:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6332:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1357,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1330,
																"src": "6368:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1353,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1010,
																	"src": "6349:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1355,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1354,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1328,
																	"src": "6359:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6349:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1610,
															"src": "6349:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1358,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6349:27:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6332:44:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1360,
												"nodeType": "ExpressionStatement",
												"src": "6332:44:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6409:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1363,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6401:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1362,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6401:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1365,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6401:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1366,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1328,
															"src": "6413:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1367,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1330,
															"src": "6418:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1361,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1496,
														"src": "6392:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6392:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1369,
												"nodeType": "EmitStatement",
												"src": "6387:39:2"
											}
										]
									},
									"documentation": {
										"id": 1326,
										"nodeType": "StructuredDocumentation",
										"src": "5893:265:2",
										"text": "@dev Creates `_amount` tokens and assigns them to `_to`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `to` cannot be the zero address."
									},
									"id": 1371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1371,
												"src": "6179:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6179:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1371,
												"src": "6192:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6192:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6178:30:2"
									},
									"returnParameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6218:0:2"
									},
									"scope": 1428,
									"src": "6164:270:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1426,
										"nodeType": "Block",
										"src": "6819:295:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1380,
																"name": "_from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1374,
																"src": "6838:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1383,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6855:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6847:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1381,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6847:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1384,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6847:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6838:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6275726e2066726f6d2030",
															"id": 1386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6859:13:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_787b4790c0cc1d5398d1165119b3cd89324d059eed4a4e3b5563167482dac8b9",
																"typeString": "literal_string \"burn from 0\""
															},
															"value": "burn from 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_787b4790c0cc1d5398d1165119b3cd89324d059eed4a4e3b5563167482dac8b9",
																"typeString": "literal_string \"burn from 0\""
															}
														],
														"id": 1379,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6830:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6830:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1388,
												"nodeType": "ExpressionStatement",
												"src": "6830:43:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1390,
																"name": "_from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1374,
																"src": "6892:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "307864656164",
																		"id": 1393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6909:6:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_57005_by_1",
																			"typeString": "int_const 57005"
																		},
																		"value": "0xdead"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_57005_by_1",
																			"typeString": "int_const 57005"
																		}
																	],
																	"id": 1392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6901:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1391,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6901:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6901:15:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6892:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6275726e2066726f6d20307864656164",
															"id": 1396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6918:18:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6b25ae7242490c676be63d6d4b6e88a8900efbe5296fb7f67d86b6a7c21cf04a",
																"typeString": "literal_string \"burn from 0xdead\""
															},
															"value": "burn from 0xdead"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6b25ae7242490c676be63d6d4b6e88a8900efbe5296fb7f67d86b6a7c21cf04a",
																"typeString": "literal_string \"burn from 0xdead\""
															}
														],
														"id": 1389,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6884:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6884:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1398,
												"nodeType": "ExpressionStatement",
												"src": "6884:53:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1399,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "6950:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1401,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1400,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "6960:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6950:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1406,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1376,
																"src": "6990:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1402,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1010,
																	"src": "6969:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1404,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1403,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1374,
																	"src": "6979:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6969:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1636,
															"src": "6969:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1407,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6969:29:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6950:48:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1409,
												"nodeType": "ExpressionStatement",
												"src": "6950:48:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1410,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "7009:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1413,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1376,
																"src": "7041:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1411,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1018,
																"src": "7024:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1636,
															"src": "7024:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1414,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7024:25:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7009:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1416,
												"nodeType": "ExpressionStatement",
												"src": "7009:40:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1418,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "7074:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "307864656164",
																	"id": 1421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7089:6:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_57005_by_1",
																		"typeString": "int_const 57005"
																	},
																	"value": "0xdead"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_57005_by_1",
																		"typeString": "int_const 57005"
																	}
																],
																"id": 1420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7081:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1419,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7081:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7081:15:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1423,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1376,
															"src": "7098:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1417,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1496,
														"src": "7065:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7065:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1425,
												"nodeType": "EmitStatement",
												"src": "7060:46:2"
											}
										]
									},
									"documentation": {
										"id": 1372,
										"nodeType": "StructuredDocumentation",
										"src": "6442:315:2",
										"text": " @dev Destroys `_amount` tokens from `_from`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `_from` cannot be the zero address.\n - `_from` must have at least `_amount` tokens."
									},
									"id": 1427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1427,
												"src": "6778:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6778:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1427,
												"src": "6793:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6793:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6777:32:2"
									},
									"returnParameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6819:0:2"
									},
									"scope": 1428,
									"src": "6763:351:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1429,
							"src": "139:6978:2"
						}
					],
					"src": "35:7084:2"
				},
				"id": 2
			},
			"_lib/IERC20.sol": {
				"ast": {
					"absolutePath": "_lib/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1506
						]
					},
					"id": 1507,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1430,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1431,
								"nodeType": "StructuredDocumentation",
								"src": "62:136:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP.\n From https://github.com/OpenZeppelin/openzeppelin-contracts"
							},
							"fullyImplemented": false,
							"id": 1506,
							"linearizedBaseContracts": [
								1506
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 1432,
										"nodeType": "StructuredDocumentation",
										"src": "222:64:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1437,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "310:2:3"
									},
									"returnParameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1437,
												"src": "336:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "336:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "335:9:3"
									},
									"scope": 1506,
									"src": "290:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1438,
										"nodeType": "StructuredDocumentation",
										"src": "351:70:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1445,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1445,
												"src": "444:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "444:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "443:17:3"
									},
									"returnParameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1445,
												"src": "484:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "484:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "483:9:3"
									},
									"scope": 1506,
									"src": "425:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1446,
										"nodeType": "StructuredDocumentation",
										"src": "499:203:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1455,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1455,
												"src": "724:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "724:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1455,
												"src": "743:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "743:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "723:35:3"
									},
									"returnParameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1455,
												"src": "777:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1452,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "777:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "776:6:3"
									},
									"scope": 1506,
									"src": "706:77:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1456,
										"nodeType": "StructuredDocumentation",
										"src": "789:258:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1465,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1465,
												"src": "1070:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1070:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1465,
												"src": "1085:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1085:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1069:32:3"
									},
									"returnParameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1465,
												"src": "1125:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1124:9:3"
									},
									"scope": 1506,
									"src": "1051:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1466,
										"nodeType": "StructuredDocumentation",
										"src": "1140:629:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1475,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1475,
												"src": "1790:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1790:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1475,
												"src": "1807:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1807:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1789:33:3"
									},
									"returnParameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1475,
												"src": "1841:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1472,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1841:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1840:6:3"
									},
									"scope": 1506,
									"src": "1773:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1476,
										"nodeType": "StructuredDocumentation",
										"src": "1853:288:3",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1487,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1487,
												"src": "2173:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2173:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1487,
												"src": "2194:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2194:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1487,
												"src": "2218:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2218:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2166:71:3"
									},
									"returnParameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1487,
												"src": "2256:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1484,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2256:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2255:6:3"
									},
									"scope": 1506,
									"src": "2145:117:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1488,
										"nodeType": "StructuredDocumentation",
										"src": "2268:153:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 1496,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1496,
												"src": "2440:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1492,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1496,
												"src": "2462:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2462:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1494,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1496,
												"src": "2482:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2482:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2439:57:3"
									},
									"src": "2425:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1497,
										"nodeType": "StructuredDocumentation",
										"src": "2503:145:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 1505,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1499,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1505,
												"src": "2667:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1501,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1505,
												"src": "2690:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2690:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1503,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1505,
												"src": "2715:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2715:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2666:63:3"
									},
									"src": "2652:78:3"
								}
							],
							"scope": 1507,
							"src": "200:2533:3"
						}
					],
					"src": "35:2702:3"
				},
				"id": 3
			},
			"_lib/Ownable.sol": {
				"ast": {
					"absolutePath": "_lib/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							1582
						]
					},
					"id": 1583,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1508,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:4"
						},
						{
							"absolutePath": "_lib/Context.sol",
							"file": "./Context.sol",
							"id": 1509,
							"nodeType": "ImportDirective",
							"scope": 1583,
							"sourceUnit": 995,
							"src": "62:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1510,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 994,
										"src": "118:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$994",
											"typeString": "contract Context"
										}
									},
									"id": 1511,
									"nodeType": "InheritanceSpecifier",
									"src": "118:7:4"
								}
							],
							"contractDependencies": [
								994
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1582,
							"linearizedBaseContracts": [
								1582,
								994
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1513,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1582,
									"src": "133:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1512,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "133:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1519,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1515,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1519,
												"src": "191:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "191:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1517,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1519,
												"src": "222:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "190:57:4"
									},
									"src": "164:84:4"
								},
								{
									"body": {
										"id": 1536,
										"nodeType": "Block",
										"src": "378:96:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1523,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1513,
														"src": "389:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1524,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "398:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																"typeString": "function () view returns (address payable)"
															}
														},
														"id": 1525,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "398:12:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "389:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1527,
												"nodeType": "ExpressionStatement",
												"src": "389:21:4"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "455:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1530,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "447:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1529,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "447:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1532,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "447:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1533,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "459:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1528,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1519,
														"src": "426:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "426:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1535,
												"nodeType": "EmitStatement",
												"src": "421:45:4"
											}
										]
									},
									"documentation": {
										"id": 1520,
										"nodeType": "StructuredDocumentation",
										"src": "256:93:4",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 1537,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "366:2:4"
									},
									"returnParameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "378:0:4"
									},
									"scope": 1582,
									"src": "355:119:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1545,
										"nodeType": "Block",
										"src": "602:32:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1543,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1513,
													"src": "620:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1542,
												"id": 1544,
												"nodeType": "Return",
												"src": "613:13:4"
											}
										]
									},
									"documentation": {
										"id": 1538,
										"nodeType": "StructuredDocumentation",
										"src": "482:67:4",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "569:2:4"
									},
									"returnParameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1546,
												"src": "593:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "593:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "592:9:4"
									},
									"scope": 1582,
									"src": "555:79:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1558,
										"nodeType": "Block",
										"src": "748:75:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1550,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 982,
																	"src": "767:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 1551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "767:12:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1552,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1513,
																"src": "783:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "767:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6e6f74206f776e6572",
															"id": 1554,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "791:11:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
																"typeString": "literal_string \"not owner\""
															},
															"value": "not owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
																"typeString": "literal_string \"not owner\""
															}
														],
														"id": 1549,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "759:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "759:44:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1556,
												"nodeType": "ExpressionStatement",
												"src": "759:44:4"
											},
											{
												"id": 1557,
												"nodeType": "PlaceholderStatement",
												"src": "814:1:4"
											}
										]
									},
									"documentation": {
										"id": 1547,
										"nodeType": "StructuredDocumentation",
										"src": "642:79:4",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1559,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "745:2:4"
									},
									"src": "727:96:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1580,
										"nodeType": "Block",
										"src": "880:117:4",
										"statements": [
											{
												"assignments": [
													1565
												],
												"declarations": [
													{
														"constant": false,
														"id": 1565,
														"mutability": "mutable",
														"name": "flag",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1580,
														"src": "891:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1564,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "891:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1570,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1566,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "903:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																"typeString": "function () view returns (address payable)"
															}
														},
														"id": 1567,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "903:12:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1568,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1513,
														"src": "919:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "903:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "891:34:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1572,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1565,
																"src": "944:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 1573,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "950:4:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "944:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6e6f74206f776e6572",
															"id": 1575,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "955:11:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
																"typeString": "literal_string \"not owner\""
															},
															"value": "not owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
																"typeString": "literal_string \"not owner\""
															}
														],
														"id": 1571,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "936:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1577,
												"nodeType": "ExpressionStatement",
												"src": "936:31:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1578,
													"name": "flag",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1565,
													"src": "985:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1563,
												"id": 1579,
												"nodeType": "Return",
												"src": "978:11:4"
											}
										]
									},
									"documentation": null,
									"functionSelector": "8f32d59b",
									"id": 1581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOwner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "851:2:4"
									},
									"returnParameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1581,
												"src": "875:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1561,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "875:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "874:6:4"
									},
									"scope": 1582,
									"src": "835:162:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1583,
							"src": "89:913:4"
						}
					],
					"src": "35:969:4"
				},
				"id": 4
			},
			"_lib/SafeMath.sol": {
				"ast": {
					"absolutePath": "_lib/SafeMath.sol",
					"exportedSymbols": {
						"Math": [
							1973
						],
						"SafeMath": [
							1720
						],
						"SafeMathExt": [
							1901
						]
					},
					"id": 1974,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1584,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1720,
							"linearizedBaseContracts": [
								1720
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1609,
										"nodeType": "Block",
										"src": "384:114:5",
										"statements": [
											{
												"assignments": [
													1595
												],
												"declarations": [
													{
														"constant": false,
														"id": 1595,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1609,
														"src": "395:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1594,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "395:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1599,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1596,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1587,
														"src": "407:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1597,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1589,
														"src": "411:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "407:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "395:17:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1601,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1595,
																"src": "431:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1602,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1587,
																"src": "436:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "431:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 1604,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "439:29:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 1600,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "423:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "423:46:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1606,
												"nodeType": "ExpressionStatement",
												"src": "423:46:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1607,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1595,
													"src": "489:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1593,
												"id": 1608,
												"nodeType": "Return",
												"src": "482:8:5"
											}
										]
									},
									"documentation": {
										"id": 1585,
										"nodeType": "StructuredDocumentation",
										"src": "86:225:5",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1610,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1610,
												"src": "330:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "330:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1610,
												"src": "341:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "341:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "329:22:5"
									},
									"returnParameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1610,
												"src": "375:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "375:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "374:9:5"
									},
									"scope": 1720,
									"src": "317:181:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1635,
										"nodeType": "Block",
										"src": "840:117:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1621,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1615,
																"src": "859:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1622,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1613,
																"src": "864:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "859:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 1624,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "867:32:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 1620,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "851:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "851:49:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1626,
												"nodeType": "ExpressionStatement",
												"src": "851:49:5"
											},
											{
												"assignments": [
													1628
												],
												"declarations": [
													{
														"constant": false,
														"id": 1628,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1635,
														"src": "911:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1627,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "911:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1632,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1629,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1613,
														"src": "923:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1630,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1615,
														"src": "927:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "923:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "911:17:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1633,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1628,
													"src": "948:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1619,
												"id": 1634,
												"nodeType": "Return",
												"src": "941:8:5"
											}
										]
									},
									"documentation": {
										"id": 1611,
										"nodeType": "StructuredDocumentation",
										"src": "506:261:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1613,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1636,
												"src": "786:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "786:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1636,
												"src": "797:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "785:22:5"
									},
									"returnParameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1636,
												"src": "831:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "830:9:5"
									},
									"scope": 1720,
									"src": "773:184:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1670,
										"nodeType": "Block",
										"src": "1275:403:5",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1646,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1639,
														"src": "1510:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1647,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1515:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1510:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1652,
												"nodeType": "IfStatement",
												"src": "1506:47:5",
												"trueBody": {
													"id": 1651,
													"nodeType": "Block",
													"src": "1518:35:5",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1649,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1540:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1645,
															"id": 1650,
															"nodeType": "Return",
															"src": "1533:8:5"
														}
													]
												}
											},
											{
												"assignments": [
													1654
												],
												"declarations": [
													{
														"constant": false,
														"id": 1654,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1670,
														"src": "1565:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1653,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1565:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1658,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1655,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1639,
														"src": "1577:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1656,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1641,
														"src": "1581:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1577:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1565:17:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1660,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1654,
																	"src": "1601:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1661,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1639,
																	"src": "1605:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1601:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1663,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1641,
																"src": "1610:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 1665,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1613:35:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 1659,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1593:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1593:56:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1667,
												"nodeType": "ExpressionStatement",
												"src": "1593:56:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1668,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1654,
													"src": "1669:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1645,
												"id": 1669,
												"nodeType": "Return",
												"src": "1662:8:5"
											}
										]
									},
									"documentation": {
										"id": 1637,
										"nodeType": "StructuredDocumentation",
										"src": "965:237:5",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1671,
												"src": "1221:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1671,
												"src": "1232:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1232:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1220:22:5"
									},
									"returnParameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1671,
												"src": "1266:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1266:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1265:9:5"
									},
									"scope": 1720,
									"src": "1208:470:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1696,
										"nodeType": "Block",
										"src": "2213:266:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1682,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1676,
																"src": "2299:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1683,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2303:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2299:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 1685,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2306:28:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 1681,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2291:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2291:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1687,
												"nodeType": "ExpressionStatement",
												"src": "2291:44:5"
											},
											{
												"assignments": [
													1689
												],
												"declarations": [
													{
														"constant": false,
														"id": 1689,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1696,
														"src": "2346:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1688,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2346:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1693,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1690,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1674,
														"src": "2358:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1691,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1676,
														"src": "2362:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2358:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2346:17:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1694,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1689,
													"src": "2470:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1680,
												"id": 1695,
												"nodeType": "Return",
												"src": "2463:8:5"
											}
										]
									},
									"documentation": {
										"id": 1672,
										"nodeType": "StructuredDocumentation",
										"src": "1686:454:5",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1697,
												"src": "2159:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2159:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1697,
												"src": "2170:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2170:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2158:22:5"
									},
									"returnParameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1697,
												"src": "2204:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2204:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2203:9:5"
									},
									"scope": 1720,
									"src": "2146:333:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1718,
										"nodeType": "Block",
										"src": "3003:85:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1708,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1702,
																"src": "3022:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1709,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3027:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3022:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 1711,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3030:26:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 1707,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3014:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3014:43:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1713,
												"nodeType": "ExpressionStatement",
												"src": "3014:43:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1714,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1700,
														"src": "3075:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1715,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1702,
														"src": "3079:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3075:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1706,
												"id": 1717,
												"nodeType": "Return",
												"src": "3068:12:5"
											}
										]
									},
									"documentation": {
										"id": 1698,
										"nodeType": "StructuredDocumentation",
										"src": "2487:443:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1719,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1719,
												"src": "2949:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2949:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1719,
												"src": "2960:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2960:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2948:22:5"
									},
									"returnParameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1719,
												"src": "2994:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2994:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2993:9:5"
									},
									"scope": 1720,
									"src": "2936:152:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1974,
							"src": "62:3029:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1901,
							"linearizedBaseContracts": [
								1901
							],
							"name": "SafeMathExt",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1744,
										"nodeType": "Block",
										"src": "3192:113:5",
										"statements": [
											{
												"assignments": [
													1730
												],
												"declarations": [
													{
														"constant": false,
														"id": 1730,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1744,
														"src": "3203:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 1729,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "3203:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1734,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 1733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1731,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1722,
														"src": "3215:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1732,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1724,
														"src": "3219:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "3215:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3203:17:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															"id": 1738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1736,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1730,
																"src": "3239:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1737,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1722,
																"src": "3244:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "3239:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "75696e743132383a206164646974696f6e206f766572666c6f77",
															"id": 1739,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3247:28:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c99ac7713d922e549dbfa2ca1a444e3009e7b3e2c0457def1559be2bff104a96",
																"typeString": "literal_string \"uint128: addition overflow\""
															},
															"value": "uint128: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c99ac7713d922e549dbfa2ca1a444e3009e7b3e2c0457def1559be2bff104a96",
																"typeString": "literal_string \"uint128: addition overflow\""
															}
														],
														"id": 1735,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3231:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3231:45:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1741,
												"nodeType": "ExpressionStatement",
												"src": "3231:45:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1742,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1730,
													"src": "3296:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 1728,
												"id": 1743,
												"nodeType": "Return",
												"src": "3289:8:5"
											}
										]
									},
									"documentation": null,
									"id": 1745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add128",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1745,
												"src": "3138:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1721,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3138:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1745,
												"src": "3149:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1723,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3149:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3137:22:5"
									},
									"returnParameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1745,
												"src": "3183:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1726,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3183:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3182:9:5"
									},
									"scope": 1901,
									"src": "3122:183:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1769,
										"nodeType": "Block",
										"src": "3383:116:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															"id": 1757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1755,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1749,
																"src": "3402:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1756,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1747,
																"src": "3407:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "3402:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "75696e743132383a207375627472616374696f6e206f766572666c6f77",
															"id": 1758,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3410:31:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_214bf26b84263a08b229ee18f74895fde1be3a33320f210ca0af7e474e7eca45",
																"typeString": "literal_string \"uint128: subtraction overflow\""
															},
															"value": "uint128: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_214bf26b84263a08b229ee18f74895fde1be3a33320f210ca0af7e474e7eca45",
																"typeString": "literal_string \"uint128: subtraction overflow\""
															}
														],
														"id": 1754,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3394:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:48:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1760,
												"nodeType": "ExpressionStatement",
												"src": "3394:48:5"
											},
											{
												"assignments": [
													1762
												],
												"declarations": [
													{
														"constant": false,
														"id": 1762,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1769,
														"src": "3453:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 1761,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "3453:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1766,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 1765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1763,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1747,
														"src": "3465:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1764,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1749,
														"src": "3469:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "3465:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3453:17:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1767,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1762,
													"src": "3490:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 1753,
												"id": 1768,
												"nodeType": "Return",
												"src": "3483:8:5"
											}
										]
									},
									"documentation": null,
									"id": 1770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub128",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1770,
												"src": "3329:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1746,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3329:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1770,
												"src": "3340:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1748,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3328:22:5"
									},
									"returnParameters": {
										"id": 1753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1770,
												"src": "3374:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1751,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3374:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3373:9:5"
									},
									"scope": 1901,
									"src": "3313:186:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1794,
										"nodeType": "Block",
										"src": "3573:111:5",
										"statements": [
											{
												"assignments": [
													1780
												],
												"declarations": [
													{
														"constant": false,
														"id": 1780,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1794,
														"src": "3584:8:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 1779,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "3584:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1784,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 1783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1781,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1772,
														"src": "3595:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1782,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1774,
														"src": "3599:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "3595:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3584:16:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"id": 1788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1786,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1780,
																"src": "3619:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1787,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1772,
																"src": "3624:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "3619:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "75696e7436343a206164646974696f6e206f766572666c6f77",
															"id": 1789,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3627:27:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7675c39f44124aa9788d16e91930c0fa6aa81eb57a5f5d1f222c20d9527e3d87",
																"typeString": "literal_string \"uint64: addition overflow\""
															},
															"value": "uint64: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7675c39f44124aa9788d16e91930c0fa6aa81eb57a5f5d1f222c20d9527e3d87",
																"typeString": "literal_string \"uint64: addition overflow\""
															}
														],
														"id": 1785,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3611:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3611:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1791,
												"nodeType": "ExpressionStatement",
												"src": "3611:44:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1792,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1780,
													"src": "3675:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 1778,
												"id": 1793,
												"nodeType": "Return",
												"src": "3668:8:5"
											}
										]
									},
									"documentation": null,
									"id": 1795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add64",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1795,
												"src": "3522:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1771,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3522:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1795,
												"src": "3532:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1773,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3532:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3521:20:5"
									},
									"returnParameters": {
										"id": 1778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1795,
												"src": "3565:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1776,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3565:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3564:8:5"
									},
									"scope": 1901,
									"src": "3507:177:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1819,
										"nodeType": "Block",
										"src": "3758:114:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"id": 1807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1805,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1799,
																"src": "3777:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1806,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1797,
																"src": "3782:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "3777:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "75696e7436343a207375627472616374696f6e206f766572666c6f77",
															"id": 1808,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3785:30:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_79791704ba5ccf52eae5c0e67d393b26febf6f2799eb0d958daaee578ba9781f",
																"typeString": "literal_string \"uint64: subtraction overflow\""
															},
															"value": "uint64: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_79791704ba5ccf52eae5c0e67d393b26febf6f2799eb0d958daaee578ba9781f",
																"typeString": "literal_string \"uint64: subtraction overflow\""
															}
														],
														"id": 1804,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3769:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3769:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1810,
												"nodeType": "ExpressionStatement",
												"src": "3769:47:5"
											},
											{
												"assignments": [
													1812
												],
												"declarations": [
													{
														"constant": false,
														"id": 1812,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1819,
														"src": "3827:8:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 1811,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "3827:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1816,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 1815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1813,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1797,
														"src": "3838:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1814,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1799,
														"src": "3842:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "3838:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3827:16:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1817,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1812,
													"src": "3863:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 1803,
												"id": 1818,
												"nodeType": "Return",
												"src": "3856:8:5"
											}
										]
									},
									"documentation": null,
									"id": 1820,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub64",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1797,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1820,
												"src": "3707:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1796,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3707:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1799,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1820,
												"src": "3717:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1798,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3717:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3706:20:5"
									},
									"returnParameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1820,
												"src": "3750:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1801,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3750:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3749:8:5"
									},
									"scope": 1901,
									"src": "3692:180:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1839,
										"nodeType": "Block",
										"src": "3940:161:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1828,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1822,
																"src": "3973:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "307830313030303030303030303030303030303030303030303030303030303030303030",
																"id": 1829,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3977:36:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																	"typeString": "int_const 3402...(31 digits omitted)...1456"
																},
																"value": "0x0100000000000000000000000000000000"
															},
															"src": "3973:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "75696e743132383a206e756d626572206f766572666c6f77",
															"id": 1831,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4028:26:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a55ac4ef8ccd14ae33c9df525bfff93daf1b2199312485325ac861b80b5a6c04",
																"typeString": "literal_string \"uint128: number overflow\""
															},
															"value": "uint128: number overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a55ac4ef8ccd14ae33c9df525bfff93daf1b2199312485325ac861b80b5a6c04",
																"typeString": "literal_string \"uint128: number overflow\""
															}
														],
														"id": 1827,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3951:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3951:114:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1833,
												"nodeType": "ExpressionStatement",
												"src": "3951:114:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1836,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1822,
															"src": "4091:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1835,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4083:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint128_$",
															"typeString": "type(uint128)"
														},
														"typeName": {
															"id": 1834,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "4083:7:5",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4083:10:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 1826,
												"id": 1838,
												"nodeType": "Return",
												"src": "4076:17:5"
											}
										]
									},
									"documentation": null,
									"id": 1840,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe128",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1840,
												"src": "3897:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3897:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3896:11:5"
									},
									"returnParameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1840,
												"src": "3931:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1824,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3931:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3930:9:5"
									},
									"scope": 1901,
									"src": "3880:221:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1859,
										"nodeType": "Block",
										"src": "4167:106:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1848,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1842,
																"src": "4186:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3078303130303030303030303030303030303030",
																"id": 1849,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4190:20:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18446744073709551616_by_1",
																	"typeString": "int_const 18446744073709551616"
																},
																"value": "0x010000000000000000"
															},
															"src": "4186:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "75696e7436343a206e756d626572206f766572666c6f77",
															"id": 1851,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4212:25:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_71a394c299de6cc8d998535a4904909b3af23ceccb6c6935d76929de286c9460",
																"typeString": "literal_string \"uint64: number overflow\""
															},
															"value": "uint64: number overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_71a394c299de6cc8d998535a4904909b3af23ceccb6c6935d76929de286c9460",
																"typeString": "literal_string \"uint64: number overflow\""
															}
														],
														"id": 1847,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4178:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4178:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1853,
												"nodeType": "ExpressionStatement",
												"src": "4178:60:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1856,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1842,
															"src": "4263:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1855,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4256:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 1854,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4256:6:5",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4256:9:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 1846,
												"id": 1858,
												"nodeType": "Return",
												"src": "4249:16:5"
											}
										]
									},
									"documentation": null,
									"id": 1860,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe64",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1860,
												"src": "4125:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4125:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4124:11:5"
									},
									"returnParameters": {
										"id": 1846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1845,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1860,
												"src": "4159:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1844,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4159:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4158:8:5"
									},
									"scope": 1901,
									"src": "4109:164:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1879,
										"nodeType": "Block",
										"src": "4339:98:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1868,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1862,
																"src": "4358:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "307830313030303030303030",
																"id": 1869,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4362:12:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																},
																"value": "0x0100000000"
															},
															"src": "4358:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "75696e7433323a206e756d626572206f766572666c6f77",
															"id": 1871,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4376:25:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b896ab161d2704c243b43595cba333aac88f946cbf2b30e564ab729c121cac8",
																"typeString": "literal_string \"uint32: number overflow\""
															},
															"value": "uint32: number overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b896ab161d2704c243b43595cba333aac88f946cbf2b30e564ab729c121cac8",
																"typeString": "literal_string \"uint32: number overflow\""
															}
														],
														"id": 1867,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4350:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4350:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1873,
												"nodeType": "ExpressionStatement",
												"src": "4350:52:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1876,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1862,
															"src": "4427:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1875,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4420:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": {
															"id": 1874,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "4420:6:5",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:9:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 1866,
												"id": 1878,
												"nodeType": "Return",
												"src": "4413:16:5"
											}
										]
									},
									"documentation": null,
									"id": 1880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe32",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1862,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1880,
												"src": "4297:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4297:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4296:11:5"
									},
									"returnParameters": {
										"id": 1866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1880,
												"src": "4331:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1864,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4331:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4330:8:5"
									},
									"scope": 1901,
									"src": "4281:156:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1899,
										"nodeType": "Block",
										"src": "4503:94:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1888,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1882,
																"src": "4522:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3078303130303030",
																"id": 1889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4526:8:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_65536_by_1",
																	"typeString": "int_const 65536"
																},
																"value": "0x010000"
															},
															"src": "4522:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "75696e7433323a206e756d626572206f766572666c6f77",
															"id": 1891,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4536:25:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b896ab161d2704c243b43595cba333aac88f946cbf2b30e564ab729c121cac8",
																"typeString": "literal_string \"uint32: number overflow\""
															},
															"value": "uint32: number overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b896ab161d2704c243b43595cba333aac88f946cbf2b30e564ab729c121cac8",
																"typeString": "literal_string \"uint32: number overflow\""
															}
														],
														"id": 1887,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4514:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4514:48:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1893,
												"nodeType": "ExpressionStatement",
												"src": "4514:48:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1896,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1882,
															"src": "4587:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1895,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4580:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint16_$",
															"typeString": "type(uint16)"
														},
														"typeName": {
															"id": 1894,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "4580:6:5",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4580:9:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 1886,
												"id": 1898,
												"nodeType": "Return",
												"src": "4573:16:5"
											}
										]
									},
									"documentation": null,
									"id": 1900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe16",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1900,
												"src": "4461:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4461:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4460:11:5"
									},
									"returnParameters": {
										"id": 1886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1885,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1900,
												"src": "4495:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1884,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4495:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4494:8:5"
									},
									"scope": 1901,
									"src": "4445:152:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1974,
							"src": "3095:1505:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1973,
							"linearizedBaseContracts": [
								1973
							],
							"name": "Math",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1918,
										"nodeType": "Block",
										"src": "4758:40:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1913,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1911,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1904,
															"src": "4776:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1912,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1906,
															"src": "4781:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4776:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"id": 1915,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1906,
														"src": "4789:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4776:14:5",
													"trueExpression": {
														"argumentTypes": null,
														"id": 1914,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1904,
														"src": "4785:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1910,
												"id": 1917,
												"nodeType": "Return",
												"src": "4769:21:5"
											}
										]
									},
									"documentation": {
										"id": 1902,
										"nodeType": "StructuredDocumentation",
										"src": "4624:61:5",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1919,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1904,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1919,
												"src": "4704:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4704:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1906,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1919,
												"src": "4715:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4715:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4703:22:5"
									},
									"returnParameters": {
										"id": 1910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1909,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1919,
												"src": "4749:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4749:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4748:9:5"
									},
									"scope": 1973,
									"src": "4691:107:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1936,
										"nodeType": "Block",
										"src": "4941:39:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1931,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1929,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1922,
															"src": "4959:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1930,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1924,
															"src": "4963:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4959:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"id": 1933,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1924,
														"src": "4971:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4959:13:5",
													"trueExpression": {
														"argumentTypes": null,
														"id": 1932,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1922,
														"src": "4967:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1928,
												"id": 1935,
												"nodeType": "Return",
												"src": "4952:20:5"
											}
										]
									},
									"documentation": {
										"id": 1920,
										"nodeType": "StructuredDocumentation",
										"src": "4806:62:5",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1937,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1937,
												"src": "4887:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1924,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1937,
												"src": "4898:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4898:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4886:22:5"
									},
									"returnParameters": {
										"id": 1928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1927,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1937,
												"src": "4932:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4932:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4931:9:5"
									},
									"scope": 1973,
									"src": "4874:106:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1971,
										"nodeType": "Block",
										"src": "5170:126:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1955,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1947,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1940,
																		"src": "5244:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 1948,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5248:1:5",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "5244:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1950,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5243:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1953,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1951,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1942,
																		"src": "5254:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 1952,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5258:1:5",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "5254:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1954,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5253:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5243:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1967,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1964,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1958,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 1956,
																							"name": "a",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1940,
																							"src": "5266:1:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "%",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "32",
																							"id": 1957,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "5270:1:5",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2_by_1",
																								"typeString": "int_const 2"
																							},
																							"value": "2"
																						},
																						"src": "5266:5:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1959,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5265:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1962,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 1960,
																							"name": "b",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1942,
																							"src": "5276:1:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "%",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "32",
																							"id": 1961,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "5280:1:5",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2_by_1",
																								"typeString": "int_const 2"
																							},
																							"value": "2"
																						},
																						"src": "5276:5:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1963,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5275:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5265:17:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1965,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5264:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 1966,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5286:1:5",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "5264:23:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1968,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5263:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5243:45:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1946,
												"id": 1970,
												"nodeType": "Return",
												"src": "5236:52:5"
											}
										]
									},
									"documentation": {
										"id": 1938,
										"nodeType": "StructuredDocumentation",
										"src": "4988:105:5",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1940,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1972,
												"src": "5116:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1972,
												"src": "5127:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5127:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5115:22:5"
									},
									"returnParameters": {
										"id": 1946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1945,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1972,
												"src": "5161:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5161:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5160:9:5"
									},
									"scope": 1973,
									"src": "5099:197:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1974,
							"src": "4604:695:5"
						}
					],
					"src": "35:5266:5"
				},
				"id": 5
			}
		}
	}
}