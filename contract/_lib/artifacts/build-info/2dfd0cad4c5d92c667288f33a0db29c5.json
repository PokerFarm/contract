{
	"id": "2dfd0cad4c5d92c667288f33a0db29c5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"_lib/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.6;\r\n\r\nimport \"./SafeMath.sol\";\r\nimport \"./IERC20.sol\";\r\nimport \"./Context.sol\";\r\n\r\ncontract ERC20 is IERC20, Context {\r\n    using SafeMath for uint256;\r\n\r\n    mapping(address => uint256) internal _balances;\r\n    mapping(address => mapping(address => uint256)) internal _allowances;\r\n\r\n    uint256 internal _totalSupply;\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    string public name;\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    string public symbol;\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\r\n     * called.\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    uint8 public decimals;\r\n\r\n    /**\r\n     * @dev Sets the values for {_name} and {_symbol}, {_decimals}\r\n     *\r\n     * To select a different value for {decimals}, use {_setupDecimals}.\r\n     *\r\n     * All three of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor(\r\n        string memory _name,\r\n        string memory _symbol,\r\n        uint8 _decimals,\r\n        uint256 _supply\r\n    ) public {\r\n        name = _name;\r\n        symbol = _symbol;\r\n        decimals = _decimals;\r\n        _supply = _supply * 10**uint256(_decimals);\r\n        _totalSupply = _supply;\r\n        _balances[msg.sender] = _supply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() external view override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address _owner)\r\n        external\r\n        view\r\n        override\r\n        returns (uint256)\r\n    {\r\n        return _balances[_owner];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `_to` cannot be the zero address.\r\n     * - the caller must have a balance of at least `_amount`.\r\n     */\r\n    function transfer(address _to, uint256 _amount)\r\n        external\r\n        override\r\n        returns (bool)\r\n    {\r\n        _transfer(_msgSender(), _to, _amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address _owner, address _spender)\r\n        external\r\n        view\r\n        override\r\n        returns (uint256)\r\n    {\r\n        return _allowances[_owner][_spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `_spender` cannot be the zero address.\r\n     */\r\n    function approve(address _spender, uint256 _amount)\r\n        external\r\n        override\r\n        returns (bool)\r\n    {\r\n        _approve(_msgSender(), _spender, _amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {ERC20}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `_from` and `_to` cannot be the zero address.\r\n     * - `_from` must have a balance of at least `_amount`.\r\n     * - the caller must have allowance for `_from`'s tokens of at least\r\n     * `_amount`.\r\n     */\r\n    function transferFrom(\r\n        address _from,\r\n        address _to,\r\n        uint256 _amount\r\n    ) external override returns (bool) {\r\n        require(_from != address(0) && _to != address(0));\r\n\r\n        _approve(\r\n            _from,\r\n            _msgSender(),\r\n            _allowances[_from][_msgSender()].sub(_amount)\r\n        );\r\n        _transfer(_from, _to, _amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves tokens `_amount` from `_from` to `_to`.\r\n     *\r\n     * This is internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `_from` cannot be the zero address.\r\n     * - `_to` cannot be the zero address.\r\n     * - `_from` must have a balance of at least `_amount`.\r\n     */\r\n    function _transfer(\r\n        address _from,\r\n        address _to,\r\n        uint256 _amount\r\n    ) internal {\r\n        require(_from != address(0), \"transfer from 0\");\r\n        require(_to != address(0), \"transfer to 0\");\r\n        require(_to != address(0xdead), \"transfer to 0xdead\");\r\n\r\n        _balances[_from] = _balances[_from].sub(_amount);\r\n        _balances[_to] = _balances[_to].add(_amount);\r\n        emit Transfer(_from, _to, _amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `_spender` over the `_owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `_owner` cannot be the zero address.\r\n     * - `_spender` cannot be the zero address.\r\n     */\r\n    function _approve(\r\n        address _owner,\r\n        address _spender,\r\n        uint256 _amount\r\n    ) internal {\r\n        require(_owner != address(0), \"approve from 0\");\r\n        require(_spender != address(0), \"approve to 0\");\r\n\r\n        _allowances[_owner][_spender] = _amount;\r\n        emit Approval(_owner, _spender, _amount);\r\n    }\r\n\r\n    /** @dev Creates `_amount` tokens and assigns them to `_to`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     */\r\n    function _mint(address _to, uint256 _amount) internal {\r\n        require(_to != address(0), \"mint to 0\");\r\n\r\n        _totalSupply = _totalSupply.add(_amount);\r\n        _balances[_to] = _balances[_to].add(_amount);\r\n        emit Transfer(address(0), _to, _amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `_amount` tokens from `_from`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `_from` cannot be the zero address.\r\n     * - `_from` must have at least `_amount` tokens.\r\n     */\r\n    function _burn(address _from, uint256 _amount) internal {\r\n        require(_from != address(0), \"burn from 0\");\r\n        require(_from != address(0xdead), \"burn from 0xdead\");\r\n\r\n        _balances[_from] = _balances[_from].sub(_amount);\r\n        _totalSupply = _totalSupply.sub(_amount);\r\n        emit Transfer(_from, address(0xdead), _amount);\r\n    }\r\n}\r\n"
			},
			"_lib/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.6;\r\n\r\n/*\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with GSN meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address payable) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes memory) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}"
			},
			"_lib/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.6;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n * From https://github.com/OpenZeppelin/openzeppelin-contracts\r\n */\r\ninterface IERC20 {\r\n  /**\r\n   * @dev Returns the amount of tokens in existence.\r\n   */\r\n  function totalSupply() external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Returns the amount of tokens owned by `account`.\r\n   */\r\n  function balanceOf(address account) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n  function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Returns the remaining number of tokens that `spender` will be\r\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n   * zero by default.\r\n   *\r\n   * This value changes when {approve} or {transferFrom} are called.\r\n   */\r\n  function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n   * that someone may use both the old and the new allowance by unfortunate\r\n   * transaction ordering. One possible solution to mitigate this race\r\n   * condition is to first reduce the spender's allowance to 0 and set the\r\n   * desired value afterwards:\r\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n   *\r\n   * Emits an {Approval} event.\r\n   */\r\n  function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n   * allowance mechanism. `amount` is then deducted from the caller's\r\n   * allowance.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n  function transferFrom(\r\n    address sender,\r\n    address recipient,\r\n    uint256 amount\r\n  ) external returns (bool);\r\n\r\n  /**\r\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n   * another (`to`).\r\n   *\r\n   * Note that `value` may be zero.\r\n   */\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n  /**\r\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n   * a call to {approve}. `value` is the new allowance.\r\n   */\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n"
			},
			"_lib/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.6;\r\n\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a, \"SafeMath: subtraction overflow\");\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Solidity only automatically asserts when dividing by 0\r\n        require(b > 0, \"SafeMath: division by zero\");\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b != 0, \"SafeMath: modulo by zero\");\r\n        return a % b;\r\n    }\r\n}\r\n\r\nlibrary SafeMathExt {\r\n    function add128(uint128 a, uint128 b) internal pure returns (uint128) {\r\n        uint128 c = a + b;\r\n        require(c >= a, \"uint128: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    function sub128(uint128 a, uint128 b) internal pure returns (uint128) {\r\n        require(b <= a, \"uint128: subtraction overflow\");\r\n        uint128 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    function add64(uint64 a, uint64 b) internal pure returns (uint64) {\r\n        uint64 c = a + b;\r\n        require(c >= a, \"uint64: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    function sub64(uint64 a, uint64 b) internal pure returns (uint64) {\r\n        require(b <= a, \"uint64: subtraction overflow\");\r\n        uint64 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    function safe128(uint256 a) internal pure returns (uint128) {\r\n        require(\r\n            a < 0x0100000000000000000000000000000000,\r\n            \"uint128: number overflow\"\r\n        );\r\n        return uint128(a);\r\n    }\r\n\r\n    function safe64(uint256 a) internal pure returns (uint64) {\r\n        require(a < 0x010000000000000000, \"uint64: number overflow\");\r\n        return uint64(a);\r\n    }\r\n\r\n    function safe32(uint256 a) internal pure returns (uint32) {\r\n        require(a < 0x0100000000, \"uint32: number overflow\");\r\n        return uint32(a);\r\n    }\r\n\r\n    function safe16(uint256 a) internal pure returns (uint16) {\r\n        require(a < 0x010000, \"uint32: number overflow\");\r\n        return uint16(a);\r\n    }\r\n}\r\n\r\nlibrary Math {\r\n    /**\r\n     * @dev Returns the largest of two numbers.\r\n     */\r\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a >= b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two numbers.\r\n     */\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two numbers. The result is rounded towards\r\n     * zero.\r\n     */\r\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // (a + b) / 2 can overflow, so we distribute\r\n        return (a / 2) + (b / 2) + (((a % 2) + (b % 2)) / 2);\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"_lib/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"_lib/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"_lib/Context.sol\":{\"keccak256\":\"0x77ec8b534124690b04754bc03aaa982479b91b9f7508bed54455c161e93a02e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf08de24c3951531b87b85a75157d4b26ddcb8952452672f9da9f63c06982e9f\",\"dweb:/ipfs/QmaUzytpjpYHNTXw3Hy4cdKmNoU5PWpyMZBhorK69pk8sA\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"_lib/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								},
								{
									"internalType": "uint8",
									"name": "_decimals",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "_supply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `_spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {_name} and {_symbol}, {_decimals} To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `_to` cannot be the zero address. - the caller must have a balance of at least `_amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `_from` and `_to` cannot be the zero address. - `_from` must have a balance of at least `_amount`. - the caller must have allowance for `_from`'s tokens of at least `_amount`."
							}
						},
						"stateVariables": {
							"decimals": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name": {
								"details": "Returns the name of the token."
							},
							"symbol": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"_lib/ERC20.sol\":139:7117  contract ERC20 is IERC20, Context {\r... */\n  mstore(0x40, 0x80)\n    /* \"_lib/ERC20.sol\":1552:1909  constructor(\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x80\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  dup4\n  dup3\n  add\n  swap2\n  pop\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  dup3\n  mload\n  dup7\n  0x01\n  dup3\n  mul\n  dup4\n  add\n  gt\n  0x0100000000\n  dup3\n  gt\n  or\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  dup1\n  dup4\n  mstore\n  0x20\n  dup4\n  add\n  swap3\n  pop\n  pop\n  pop\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_6:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_8\n  jumpi\n  dup1\n  dup3\n  add\n  mload\n  dup2\n  dup5\n  add\n  mstore\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  jump(tag_6)\ntag_8:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_10\n  jumpi\n  0x00\n  dup1\n  revert\ntag_10:\n  dup4\n  dup3\n  add\n  swap2\n  pop\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  0x00\n  dup1\n  revert\ntag_11:\n  dup3\n  mload\n  dup7\n  0x01\n  dup3\n  mul\n  dup4\n  add\n  gt\n  0x0100000000\n  dup3\n  gt\n  or\n  iszero\n  tag_12\n  jumpi\n  0x00\n  dup1\n  revert\ntag_12:\n  dup1\n  dup4\n  mstore\n  0x20\n  dup4\n  add\n  swap3\n  pop\n  pop\n  pop\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_13:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_15\n  jumpi\n  dup1\n  dup3\n  add\n  mload\n  dup2\n  dup5\n  add\n  mstore\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  jump(tag_13)\ntag_15:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"_lib/ERC20.sol\":1710:1715  _name */\n  dup4\n    /* \"_lib/ERC20.sol\":1703:1707  name */\n  0x03\n    /* \"_lib/ERC20.sol\":1703:1715  name = _name */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_19\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n    /* \"_lib/ERC20.sol\":1735:1742  _symbol */\n  dup3\n    /* \"_lib/ERC20.sol\":1726:1732  symbol */\n  0x04\n    /* \"_lib/ERC20.sol\":1726:1742  symbol = _symbol */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_21\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_21:\n  pop\n    /* \"_lib/ERC20.sol\":1764:1773  _decimals */\n  dup2\n    /* \"_lib/ERC20.sol\":1753:1761  decimals */\n  0x05\n  0x00\n    /* \"_lib/ERC20.sol\":1753:1773  decimals = _decimals */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"_lib/ERC20.sol\":1816:1825  _decimals */\n  dup2\n    /* \"_lib/ERC20.sol\":1808:1826  uint256(_decimals) */\n  0xff\n  and\n    /* \"_lib/ERC20.sol\":1804:1806  10 */\n  0x0a\n    /* \"_lib/ERC20.sol\":1804:1826  10**uint256(_decimals) */\n  exp\n    /* \"_lib/ERC20.sol\":1794:1801  _supply */\n  dup2\n    /* \"_lib/ERC20.sol\":1794:1826  _supply * 10**uint256(_decimals) */\n  mul\n    /* \"_lib/ERC20.sol\":1784:1826  _supply = _supply * 10**uint256(_decimals) */\n  swap1\n  pop\n    /* \"_lib/ERC20.sol\":1852:1859  _supply */\n  dup1\n    /* \"_lib/ERC20.sol\":1837:1849  _totalSupply */\n  0x02\n    /* \"_lib/ERC20.sol\":1837:1859  _totalSupply = _supply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"_lib/ERC20.sol\":1894:1901  _supply */\n  dup1\n    /* \"_lib/ERC20.sol\":1870:1879  _balances */\n  0x00\n    /* \"_lib/ERC20.sol\":1870:1891  _balances[msg.sender] */\n  dup1\n    /* \"_lib/ERC20.sol\":1880:1890  msg.sender */\n  caller\n    /* \"_lib/ERC20.sol\":1870:1891  _balances[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"_lib/ERC20.sol\":1870:1901  _balances[msg.sender] = _supply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"_lib/ERC20.sol\":1552:1909  constructor(\r... */\n  pop\n  pop\n  pop\n  pop\n    /* \"_lib/ERC20.sol\":139:7117  contract ERC20 is IERC20, Context {\r... */\n  jump(tag_22)\ntag_20:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_24\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_23)\ntag_24:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_23\n  jumpi\n  swap2\n  dup3\n  add\ntag_25:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_26\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_25)\ntag_26:\ntag_23:\n  pop\n  swap1\n  pop\n  tag_27\n  swap2\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n  pop\n  swap1\n  jump\t// out\ntag_28:\ntag_29:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_30\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_29)\ntag_30:\n  pop\n  swap1\n  jump\t// out\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"_lib/ERC20.sol\":139:7117  contract ERC20 is IERC20, Context {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x313ce567\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"_lib/ERC20.sol\":445:463  string public name */\n    tag_3:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_15:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_17\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_15)\n    tag_17:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_18\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_18:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_lib/ERC20.sol\":3099:3298  function approve(address _spender, uint256 _amount)\r... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_21\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_lib/ERC20.sol\":1974:2076  function totalSupply() external view override returns (uint256) {\r... */\n    tag_5:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_lib/ERC20.sol\":3771:4175  function transferFrom(\r... */\n    tag_6:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_26\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_lib/ERC20.sol\":1242:1263  uint8 public decimals */\n    tag_7:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_lib/ERC20.sol\":2139:2299  function balanceOf(address _owner)\r... */\n    tag_8:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_31\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_lib/ERC20.sol\":583:603  string public symbol */\n    tag_9:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_34:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_36\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_34)\n    tag_36:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_37\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_37:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_lib/ERC20.sol\":2507:2698  function transfer(address _to, uint256 _amount)\r... */\n    tag_10:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_lib/ERC20.sol\":2761:2951  function allowance(address _owner, address _spender)\r... */\n    tag_11:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_43\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_lib/ERC20.sol\":445:463  string public name */\n    tag_14:\n      0x03\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_44\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_45\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_44)\n    tag_45:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_46:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_46\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_44:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"_lib/ERC20.sol\":3099:3298  function approve(address _spender, uint256 _amount)\r... */\n    tag_21:\n        /* \"_lib/ERC20.sol\":3205:3209  bool */\n      0x00\n        /* \"_lib/ERC20.sol\":3227:3268  _approve(_msgSender(), _spender, _amount) */\n      tag_48\n        /* \"_lib/ERC20.sol\":3236:3248  _msgSender() */\n      tag_49\n        /* \"_lib/ERC20.sol\":3236:3246  _msgSender */\n      tag_50\n        /* \"_lib/ERC20.sol\":3236:3248  _msgSender() */\n      jump\t// in\n    tag_49:\n        /* \"_lib/ERC20.sol\":3250:3258  _spender */\n      dup5\n        /* \"_lib/ERC20.sol\":3260:3267  _amount */\n      dup5\n        /* \"_lib/ERC20.sol\":3227:3235  _approve */\n      tag_51\n        /* \"_lib/ERC20.sol\":3227:3268  _approve(_msgSender(), _spender, _amount) */\n      jump\t// in\n    tag_48:\n        /* \"_lib/ERC20.sol\":3286:3290  true */\n      0x01\n        /* \"_lib/ERC20.sol\":3279:3290  return true */\n      swap1\n      pop\n        /* \"_lib/ERC20.sol\":3099:3298  function approve(address _spender, uint256 _amount)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"_lib/ERC20.sol\":1974:2076  function totalSupply() external view override returns (uint256) {\r... */\n    tag_23:\n        /* \"_lib/ERC20.sol\":2029:2036  uint256 */\n      0x00\n        /* \"_lib/ERC20.sol\":2056:2068  _totalSupply */\n      sload(0x02)\n        /* \"_lib/ERC20.sol\":2049:2068  return _totalSupply */\n      swap1\n      pop\n        /* \"_lib/ERC20.sol\":1974:2076  function totalSupply() external view override returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"_lib/ERC20.sol\":3771:4175  function transferFrom(\r... */\n    tag_26:\n        /* \"_lib/ERC20.sol\":3899:3903  bool */\n      0x00\n        /* \"_lib/ERC20.sol\":3941:3942  0 */\n      dup1\n        /* \"_lib/ERC20.sol\":3924:3943  _from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":3924:3929  _from */\n      dup5\n        /* \"_lib/ERC20.sol\":3924:3943  _from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"_lib/ERC20.sol\":3924:3964  _from != address(0) && _to != address(0) */\n      dup1\n      iszero\n      tag_54\n      jumpi\n      pop\n        /* \"_lib/ERC20.sol\":3962:3963  0 */\n      0x00\n        /* \"_lib/ERC20.sol\":3947:3964  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":3947:3950  _to */\n      dup4\n        /* \"_lib/ERC20.sol\":3947:3964  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"_lib/ERC20.sol\":3924:3964  _from != address(0) && _to != address(0) */\n    tag_54:\n        /* \"_lib/ERC20.sol\":3916:3965  require(_from != address(0) && _to != address(0)) */\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n        /* \"_lib/ERC20.sol\":3978:4104  _approve(\r... */\n      tag_56\n        /* \"_lib/ERC20.sol\":4001:4006  _from */\n      dup5\n        /* \"_lib/ERC20.sol\":4021:4033  _msgSender() */\n      tag_57\n        /* \"_lib/ERC20.sol\":4021:4031  _msgSender */\n      tag_50\n        /* \"_lib/ERC20.sol\":4021:4033  _msgSender() */\n      jump\t// in\n    tag_57:\n        /* \"_lib/ERC20.sol\":4048:4093  _allowances[_from][_msgSender()].sub(_amount) */\n      tag_58\n        /* \"_lib/ERC20.sol\":4085:4092  _amount */\n      dup6\n        /* \"_lib/ERC20.sol\":4048:4059  _allowances */\n      0x01\n        /* \"_lib/ERC20.sol\":4048:4066  _allowances[_from] */\n      0x00\n        /* \"_lib/ERC20.sol\":4060:4065  _from */\n      dup11\n        /* \"_lib/ERC20.sol\":4048:4066  _allowances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"_lib/ERC20.sol\":4048:4080  _allowances[_from][_msgSender()] */\n      0x00\n        /* \"_lib/ERC20.sol\":4067:4079  _msgSender() */\n      tag_59\n        /* \"_lib/ERC20.sol\":4067:4077  _msgSender */\n      tag_50\n        /* \"_lib/ERC20.sol\":4067:4079  _msgSender() */\n      jump\t// in\n    tag_59:\n        /* \"_lib/ERC20.sol\":4048:4080  _allowances[_from][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"_lib/ERC20.sol\":4048:4084  _allowances[_from][_msgSender()].sub */\n      tag_60\n      swap1\n        /* \"_lib/ERC20.sol\":4048:4093  _allowances[_from][_msgSender()].sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_58:\n        /* \"_lib/ERC20.sol\":3978:3986  _approve */\n      tag_51\n        /* \"_lib/ERC20.sol\":3978:4104  _approve(\r... */\n      jump\t// in\n    tag_56:\n        /* \"_lib/ERC20.sol\":4115:4145  _transfer(_from, _to, _amount) */\n      tag_61\n        /* \"_lib/ERC20.sol\":4125:4130  _from */\n      dup5\n        /* \"_lib/ERC20.sol\":4132:4135  _to */\n      dup5\n        /* \"_lib/ERC20.sol\":4137:4144  _amount */\n      dup5\n        /* \"_lib/ERC20.sol\":4115:4124  _transfer */\n      tag_62\n        /* \"_lib/ERC20.sol\":4115:4145  _transfer(_from, _to, _amount) */\n      jump\t// in\n    tag_61:\n        /* \"_lib/ERC20.sol\":4163:4167  true */\n      0x01\n        /* \"_lib/ERC20.sol\":4156:4167  return true */\n      swap1\n      pop\n        /* \"_lib/ERC20.sol\":3771:4175  function transferFrom(\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"_lib/ERC20.sol\":1242:1263  uint8 public decimals */\n    tag_28:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"_lib/ERC20.sol\":2139:2299  function balanceOf(address _owner)\r... */\n    tag_31:\n        /* \"_lib/ERC20.sol\":2242:2249  uint256 */\n      0x00\n        /* \"_lib/ERC20.sol\":2274:2283  _balances */\n      dup1\n        /* \"_lib/ERC20.sol\":2274:2291  _balances[_owner] */\n      0x00\n        /* \"_lib/ERC20.sol\":2284:2290  _owner */\n      dup4\n        /* \"_lib/ERC20.sol\":2274:2291  _balances[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"_lib/ERC20.sol\":2267:2291  return _balances[_owner] */\n      swap1\n      pop\n        /* \"_lib/ERC20.sol\":2139:2299  function balanceOf(address _owner)\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"_lib/ERC20.sol\":583:603  string public symbol */\n    tag_33:\n      0x04\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_64\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_65\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_64)\n    tag_65:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_66:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_66\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_64:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"_lib/ERC20.sol\":2507:2698  function transfer(address _to, uint256 _amount)\r... */\n    tag_40:\n        /* \"_lib/ERC20.sol\":2609:2613  bool */\n      0x00\n        /* \"_lib/ERC20.sol\":2631:2668  _transfer(_msgSender(), _to, _amount) */\n      tag_68\n        /* \"_lib/ERC20.sol\":2641:2653  _msgSender() */\n      tag_69\n        /* \"_lib/ERC20.sol\":2641:2651  _msgSender */\n      tag_50\n        /* \"_lib/ERC20.sol\":2641:2653  _msgSender() */\n      jump\t// in\n    tag_69:\n        /* \"_lib/ERC20.sol\":2655:2658  _to */\n      dup5\n        /* \"_lib/ERC20.sol\":2660:2667  _amount */\n      dup5\n        /* \"_lib/ERC20.sol\":2631:2640  _transfer */\n      tag_62\n        /* \"_lib/ERC20.sol\":2631:2668  _transfer(_msgSender(), _to, _amount) */\n      jump\t// in\n    tag_68:\n        /* \"_lib/ERC20.sol\":2686:2690  true */\n      0x01\n        /* \"_lib/ERC20.sol\":2679:2690  return true */\n      swap1\n      pop\n        /* \"_lib/ERC20.sol\":2507:2698  function transfer(address _to, uint256 _amount)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"_lib/ERC20.sol\":2761:2951  function allowance(address _owner, address _spender)\r... */\n    tag_43:\n        /* \"_lib/ERC20.sol\":2882:2889  uint256 */\n      0x00\n        /* \"_lib/ERC20.sol\":2914:2925  _allowances */\n      0x01\n        /* \"_lib/ERC20.sol\":2914:2933  _allowances[_owner] */\n      0x00\n        /* \"_lib/ERC20.sol\":2926:2932  _owner */\n      dup5\n        /* \"_lib/ERC20.sol\":2914:2933  _allowances[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"_lib/ERC20.sol\":2914:2943  _allowances[_owner][_spender] */\n      0x00\n        /* \"_lib/ERC20.sol\":2934:2942  _spender */\n      dup4\n        /* \"_lib/ERC20.sol\":2914:2943  _allowances[_owner][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"_lib/ERC20.sol\":2907:2943  return _allowances[_owner][_spender] */\n      swap1\n      pop\n        /* \"_lib/ERC20.sol\":2761:2951  function allowance(address _owner, address _spender)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"_lib/Context.sol\":605:711  function _msgSender() internal view virtual returns (address payable) {\r... */\n    tag_50:\n        /* \"_lib/Context.sol\":658:673  address payable */\n      0x00\n        /* \"_lib/Context.sol\":693:703  msg.sender */\n      caller\n        /* \"_lib/Context.sol\":686:703  return msg.sender */\n      swap1\n      pop\n        /* \"_lib/Context.sol\":605:711  function _msgSender() internal view virtual returns (address payable) {\r... */\n      swap1\n      jump\t// out\n        /* \"_lib/ERC20.sol\":5546:5885  function _approve(\r... */\n    tag_51:\n        /* \"_lib/ERC20.sol\":5695:5696  0 */\n      0x00\n        /* \"_lib/ERC20.sol\":5677:5697  _owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":5677:5683  _owner */\n      dup4\n        /* \"_lib/ERC20.sol\":5677:5697  _owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"_lib/ERC20.sol\":5669:5716  require(_owner != address(0), \"approve from 0\") */\n      tag_73\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x617070726f76652066726f6d2030000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_73:\n        /* \"_lib/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"_lib/ERC20.sol\":5735:5757  _spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":5735:5743  _spender */\n      dup3\n        /* \"_lib/ERC20.sol\":5735:5757  _spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"_lib/ERC20.sol\":5727:5774  require(_spender != address(0), \"approve to 0\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x617070726f766520746f20300000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_74:\n        /* \"_lib/ERC20.sol\":5819:5826  _amount */\n      dup1\n        /* \"_lib/ERC20.sol\":5787:5798  _allowances */\n      0x01\n        /* \"_lib/ERC20.sol\":5787:5806  _allowances[_owner] */\n      0x00\n        /* \"_lib/ERC20.sol\":5799:5805  _owner */\n      dup6\n        /* \"_lib/ERC20.sol\":5787:5806  _allowances[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"_lib/ERC20.sol\":5787:5816  _allowances[_owner][_spender] */\n      0x00\n        /* \"_lib/ERC20.sol\":5807:5815  _spender */\n      dup5\n        /* \"_lib/ERC20.sol\":5787:5816  _allowances[_owner][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"_lib/ERC20.sol\":5787:5826  _allowances[_owner][_spender] = _amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"_lib/ERC20.sol\":5859:5867  _spender */\n      dup2\n        /* \"_lib/ERC20.sol\":5842:5877  Approval(_owner, _spender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":5851:5857  _owner */\n      dup4\n        /* \"_lib/ERC20.sol\":5842:5877  Approval(_owner, _spender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"_lib/ERC20.sol\":5869:5876  _amount */\n      dup4\n        /* \"_lib/ERC20.sol\":5842:5877  Approval(_owner, _spender, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"_lib/ERC20.sol\":5546:5885  function _approve(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"_lib/SafeMath.sol\":773:957  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_60:\n        /* \"_lib/SafeMath.sol\":831:838  uint256 */\n      0x00\n        /* \"_lib/SafeMath.sol\":864:865  a */\n      dup3\n        /* \"_lib/SafeMath.sol\":859:860  b */\n      dup3\n        /* \"_lib/SafeMath.sol\":859:865  b <= a */\n      gt\n      iszero\n        /* \"_lib/SafeMath.sol\":851:900  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_76\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_76:\n        /* \"_lib/SafeMath.sol\":911:920  uint256 c */\n      0x00\n        /* \"_lib/SafeMath.sol\":927:928  b */\n      dup3\n        /* \"_lib/SafeMath.sol\":923:924  a */\n      dup5\n        /* \"_lib/SafeMath.sol\":923:928  a - b */\n      sub\n        /* \"_lib/SafeMath.sol\":911:928  uint256 c = a - b */\n      swap1\n      pop\n        /* \"_lib/SafeMath.sol\":948:949  c */\n      dup1\n        /* \"_lib/SafeMath.sol\":941:949  return c */\n      swap2\n      pop\n      pop\n        /* \"_lib/SafeMath.sol\":773:957  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"_lib/ERC20.sol\":4652:5104  function _transfer(\r... */\n    tag_62:\n        /* \"_lib/ERC20.sol\":4795:4796  0 */\n      0x00\n        /* \"_lib/ERC20.sol\":4778:4797  _from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":4778:4783  _from */\n      dup4\n        /* \"_lib/ERC20.sol\":4778:4797  _from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"_lib/ERC20.sol\":4770:4817  require(_from != address(0), \"transfer from 0\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x7472616e736665722066726f6d20300000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_78:\n        /* \"_lib/ERC20.sol\":4851:4852  0 */\n      0x00\n        /* \"_lib/ERC20.sol\":4836:4853  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":4836:4839  _to */\n      dup3\n        /* \"_lib/ERC20.sol\":4836:4853  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"_lib/ERC20.sol\":4828:4871  require(_to != address(0), \"transfer to 0\") */\n      tag_79\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x7472616e7366657220746f203000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_79:\n        /* \"_lib/ERC20.sol\":4905:4911  0xdead */\n      0xdead\n        /* \"_lib/ERC20.sol\":4890:4912  _to != address(0xdead) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":4890:4893  _to */\n      dup3\n        /* \"_lib/ERC20.sol\":4890:4912  _to != address(0xdead) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"_lib/ERC20.sol\":4882:4935  require(_to != address(0xdead), \"transfer to 0xdead\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x7472616e7366657220746f203078646561640000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"_lib/ERC20.sol\":4967:4996  _balances[_from].sub(_amount) */\n      tag_81\n        /* \"_lib/ERC20.sol\":4988:4995  _amount */\n      dup2\n        /* \"_lib/ERC20.sol\":4967:4976  _balances */\n      0x00\n        /* \"_lib/ERC20.sol\":4967:4983  _balances[_from] */\n      dup1\n        /* \"_lib/ERC20.sol\":4977:4982  _from */\n      dup7\n        /* \"_lib/ERC20.sol\":4967:4983  _balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"_lib/ERC20.sol\":4967:4987  _balances[_from].sub */\n      tag_60\n      swap1\n        /* \"_lib/ERC20.sol\":4967:4996  _balances[_from].sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_81:\n        /* \"_lib/ERC20.sol\":4948:4957  _balances */\n      0x00\n        /* \"_lib/ERC20.sol\":4948:4964  _balances[_from] */\n      dup1\n        /* \"_lib/ERC20.sol\":4958:4963  _from */\n      dup6\n        /* \"_lib/ERC20.sol\":4948:4964  _balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"_lib/ERC20.sol\":4948:4996  _balances[_from] = _balances[_from].sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"_lib/ERC20.sol\":5024:5051  _balances[_to].add(_amount) */\n      tag_82\n        /* \"_lib/ERC20.sol\":5043:5050  _amount */\n      dup2\n        /* \"_lib/ERC20.sol\":5024:5033  _balances */\n      0x00\n        /* \"_lib/ERC20.sol\":5024:5038  _balances[_to] */\n      dup1\n        /* \"_lib/ERC20.sol\":5034:5037  _to */\n      dup6\n        /* \"_lib/ERC20.sol\":5024:5038  _balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"_lib/ERC20.sol\":5024:5042  _balances[_to].add */\n      tag_83\n      swap1\n        /* \"_lib/ERC20.sol\":5024:5051  _balances[_to].add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_82:\n        /* \"_lib/ERC20.sol\":5007:5016  _balances */\n      0x00\n        /* \"_lib/ERC20.sol\":5007:5021  _balances[_to] */\n      dup1\n        /* \"_lib/ERC20.sol\":5017:5020  _to */\n      dup5\n        /* \"_lib/ERC20.sol\":5007:5021  _balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"_lib/ERC20.sol\":5007:5051  _balances[_to] = _balances[_to].add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"_lib/ERC20.sol\":5083:5086  _to */\n      dup2\n        /* \"_lib/ERC20.sol\":5067:5096  Transfer(_from, _to, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":5076:5081  _from */\n      dup4\n        /* \"_lib/ERC20.sol\":5067:5096  Transfer(_from, _to, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"_lib/ERC20.sol\":5088:5095  _amount */\n      dup4\n        /* \"_lib/ERC20.sol\":5067:5096  Transfer(_from, _to, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"_lib/ERC20.sol\":4652:5104  function _transfer(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"_lib/SafeMath.sol\":317:498  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_83:\n        /* \"_lib/SafeMath.sol\":375:382  uint256 */\n      0x00\n        /* \"_lib/SafeMath.sol\":395:404  uint256 c */\n      dup1\n        /* \"_lib/SafeMath.sol\":411:412  b */\n      dup3\n        /* \"_lib/SafeMath.sol\":407:408  a */\n      dup5\n        /* \"_lib/SafeMath.sol\":407:412  a + b */\n      add\n        /* \"_lib/SafeMath.sol\":395:412  uint256 c = a + b */\n      swap1\n      pop\n        /* \"_lib/SafeMath.sol\":436:437  a */\n      dup4\n        /* \"_lib/SafeMath.sol\":431:432  c */\n      dup2\n        /* \"_lib/SafeMath.sol\":431:437  c >= a */\n      lt\n      iszero\n        /* \"_lib/SafeMath.sol\":423:469  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_85\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_85:\n        /* \"_lib/SafeMath.sol\":489:490  c */\n      dup1\n        /* \"_lib/SafeMath.sol\":482:490  return c */\n      swap2\n      pop\n      pop\n        /* \"_lib/SafeMath.sol\":317:498  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122003d781075401c8c4954bd0a10f8369a9b582ebb7db4d2913f03ed832ff9613ef64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620011b6380380620011b6833981810160405260808110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660018202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019080838360005b83811015620000c3578082015181840152602081019050620000a6565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011557600080fd5b838201915060208201858111156200012c57600080fd5b82518660018202830111640100000000821117156200014a57600080fd5b8083526020830192505050908051906020019080838360005b838110156200018057808201518184015260208101905062000163565b50505050905090810190601f168015620001ae5780820380516001836020036101000a031916815260200191505b5060405260200180519060200190929190805190602001909291905050508360039080519060200190620001e492919062000278565b508260049080519060200190620001fd92919062000278565b5081600560006101000a81548160ff021916908360ff1602179055508160ff16600a0a8102905080600281905550806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050506200031e565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002bb57805160ff1916838001178555620002ec565b82800160010185558215620002ec579182015b82811115620002eb578251825591602001919060010190620002ce565b5b509050620002fb9190620002ff565b5090565b5b808211156200031a57600081600090555060010162000300565b5090565b610e88806200032e6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461022157806370a082311461024257806395d89b411461029a578063a9059cbb1461031d578063dd62ed3e1461038157610093565b806306fdde0314610098578063095ea7b31461011b57806318160ddd1461017f57806323b872dd1461019d575b600080fd5b6100a06103f9565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100e05780820151818401526020810190506100c5565b50505050905090810190601f16801561010d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101676004803603604081101561013157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610497565b60405180821515815260200191505060405180910390f35b6101876104b5565b6040518082815260200191505060405180910390f35b610209600480360360608110156101b357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506104bf565b60405180821515815260200191505060405180910390f35b6102296105f0565b604051808260ff16815260200191505060405180910390f35b6102846004803603602081101561025857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610603565b6040518082815260200191505060405180910390f35b6102a261064b565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102e25780820151818401526020810190506102c7565b50505050905090810190601f16801561030f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103696004803603604081101561033357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106e9565b60405180821515815260200191505060405180910390f35b6103e36004803603604081101561039757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610707565b6040518082815260200191505060405180910390f35b60038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561048f5780601f106104645761010080835404028352916020019161048f565b820191906000526020600020905b81548152906001019060200180831161047257829003601f168201915b505050505081565b60006104ab6104a461078e565b8484610796565b6001905092915050565b6000600254905090565b60008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415801561052a5750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b61053357600080fd5b6105da8461053f61078e565b6105d585600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061058c61078e565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546109c790919063ffffffff16565b610796565b6105e5848484610a50565b600190509392505050565b600560009054906101000a900460ff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106e15780601f106106b6576101008083540402835291602001916106e1565b820191906000526020600020905b8154815290600101906020018083116106c457829003601f168201915b505050505081565b60006106fd6106f661078e565b8484610a50565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610839576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f617070726f76652066726f6d203000000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f617070726f766520746f2030000000000000000000000000000000000000000081525060200191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600082821115610a3f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610af3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f7472616e736665722066726f6d2030000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b96576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f7472616e7366657220746f20300000000000000000000000000000000000000081525060200191505060405180910390fd5b61dead73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c3a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f7472616e7366657220746f20307864656164000000000000000000000000000081525060200191505060405180910390fd5b610c8b816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546109c790919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d1e816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610dca90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600080828401905083811015610e48576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fea264697066735822122003d781075401c8c4954bd0a10f8369a9b582ebb7db4d2913f03ed832ff9613ef64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x11B6 CODESIZE SUB DUP1 PUSH3 0x11B6 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x80 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xC3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xA6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xF1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x180 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x163 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x1AE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP4 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1E4 SWAP3 SWAP2 SWAP1 PUSH3 0x278 JUMP JUMPDEST POP DUP3 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1FD SWAP3 SWAP2 SWAP1 PUSH3 0x278 JUMP JUMPDEST POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0xFF AND PUSH1 0xA EXP DUP2 MUL SWAP1 POP DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP POP PUSH3 0x31E JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x2BB JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2EC JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2EC JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2EB JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2CE JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x2FB SWAP2 SWAP1 PUSH3 0x2FF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x31A JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x300 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0xE88 DUP1 PUSH3 0x32E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x381 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x10D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x167 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x497 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x229 PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x284 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x603 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH2 0x64B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2C7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x30F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x369 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x707 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x48F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x464 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x48F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x472 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AB PUSH2 0x4A4 PUSH2 0x78E JUMP JUMPDEST DUP5 DUP5 PUSH2 0x796 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x52A JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x533 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5DA DUP5 PUSH2 0x53F PUSH2 0x78E JUMP JUMPDEST PUSH2 0x5D5 DUP6 PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x58C PUSH2 0x78E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x9C7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x796 JUMP JUMPDEST PUSH2 0x5E5 DUP5 DUP5 DUP5 PUSH2 0xA50 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x6E1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6B6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6E1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6C4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FD PUSH2 0x6F6 PUSH2 0x78E JUMP JUMPDEST DUP5 DUP5 PUSH2 0xA50 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x839 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x617070726F76652066726F6D2030000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x617070726F766520746F20300000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xA3F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAF3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E736665722066726F6D20300000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB96 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E7366657220746F203000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDEAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC3A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E7366657220746F203078646561640000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC8B DUP2 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x9C7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xD1E DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xDCA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xE48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB 0xD7 DUP2 SMOD SLOAD ADD 0xC8 0xC4 SWAP6 0x4B 0xD0 LOG1 0xF DUP4 PUSH10 0xA9B582EBB7DB4D2913F0 RETURNDATACOPY 0xD8 ORIGIN SELFDESTRUCT SWAP7 SGT 0xEF PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "139:6978:1:-:0;;;1552:357;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1710:5;1703:4;:12;;;;;;;;;;;;:::i;:::-;;1735:7;1726:6;:16;;;;;;;;;;;;:::i;:::-;;1764:9;1753:8;;:20;;;;;;;;;;;;;;;;;;1816:9;1808:18;;1804:2;:22;1794:7;:32;1784:42;;1852:7;1837:12;:22;;;;1894:7;1870:9;:21;1880:10;1870:21;;;;;;;;;;;;;;;:31;;;;1552:357;;;;139:6978;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461022157806370a082311461024257806395d89b411461029a578063a9059cbb1461031d578063dd62ed3e1461038157610093565b806306fdde0314610098578063095ea7b31461011b57806318160ddd1461017f57806323b872dd1461019d575b600080fd5b6100a06103f9565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100e05780820151818401526020810190506100c5565b50505050905090810190601f16801561010d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101676004803603604081101561013157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610497565b60405180821515815260200191505060405180910390f35b6101876104b5565b6040518082815260200191505060405180910390f35b610209600480360360608110156101b357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506104bf565b60405180821515815260200191505060405180910390f35b6102296105f0565b604051808260ff16815260200191505060405180910390f35b6102846004803603602081101561025857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610603565b6040518082815260200191505060405180910390f35b6102a261064b565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102e25780820151818401526020810190506102c7565b50505050905090810190601f16801561030f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103696004803603604081101561033357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106e9565b60405180821515815260200191505060405180910390f35b6103e36004803603604081101561039757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610707565b6040518082815260200191505060405180910390f35b60038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561048f5780601f106104645761010080835404028352916020019161048f565b820191906000526020600020905b81548152906001019060200180831161047257829003601f168201915b505050505081565b60006104ab6104a461078e565b8484610796565b6001905092915050565b6000600254905090565b60008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415801561052a5750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b61053357600080fd5b6105da8461053f61078e565b6105d585600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061058c61078e565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546109c790919063ffffffff16565b610796565b6105e5848484610a50565b600190509392505050565b600560009054906101000a900460ff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106e15780601f106106b6576101008083540402835291602001916106e1565b820191906000526020600020905b8154815290600101906020018083116106c457829003601f168201915b505050505081565b60006106fd6106f661078e565b8484610a50565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610839576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f617070726f76652066726f6d203000000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f617070726f766520746f2030000000000000000000000000000000000000000081525060200191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600082821115610a3f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610af3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f7472616e736665722066726f6d2030000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b96576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f7472616e7366657220746f20300000000000000000000000000000000000000081525060200191505060405180910390fd5b61dead73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c3a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f7472616e7366657220746f20307864656164000000000000000000000000000081525060200191505060405180910390fd5b610c8b816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546109c790919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d1e816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610dca90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600080828401905083811015610e48576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fea264697066735822122003d781075401c8c4954bd0a10f8369a9b582ebb7db4d2913f03ed832ff9613ef64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x381 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x10D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x167 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x497 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x229 PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x284 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x603 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH2 0x64B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2C7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x30F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x369 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x707 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x48F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x464 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x48F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x472 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AB PUSH2 0x4A4 PUSH2 0x78E JUMP JUMPDEST DUP5 DUP5 PUSH2 0x796 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x52A JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x533 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5DA DUP5 PUSH2 0x53F PUSH2 0x78E JUMP JUMPDEST PUSH2 0x5D5 DUP6 PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x58C PUSH2 0x78E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x9C7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x796 JUMP JUMPDEST PUSH2 0x5E5 DUP5 DUP5 DUP5 PUSH2 0xA50 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x6E1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6B6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6E1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6C4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FD PUSH2 0x6F6 PUSH2 0x78E JUMP JUMPDEST DUP5 DUP5 PUSH2 0xA50 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x839 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x617070726F76652066726F6D2030000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x617070726F766520746F20300000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xA3F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAF3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E736665722066726F6D20300000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB96 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E7366657220746F203000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDEAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC3A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E7366657220746F203078646561640000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC8B DUP2 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x9C7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xD1E DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xDCA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xE48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB 0xD7 DUP2 SMOD SLOAD ADD 0xC8 0xC4 SWAP6 0x4B 0xD0 LOG1 0xF DUP4 PUSH10 0xA9B582EBB7DB4D2913F0 RETURNDATACOPY 0xD8 ORIGIN SELFDESTRUCT SWAP7 SGT 0xEF PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "139:6978:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;445:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3099:199;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1974:102;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3771:404;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1242:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2139:160;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;583:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2507:191;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2761:190;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;445:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3099:199::-;3205:4;3227:41;3236:12;:10;:12::i;:::-;3250:8;3260:7;3227:8;:41::i;:::-;3286:4;3279:11;;3099:199;;;;:::o;1974:102::-;2029:7;2056:12;;2049:19;;1974:102;:::o;3771:404::-;3899:4;3941:1;3924:19;;:5;:19;;;;:40;;;;;3962:1;3947:17;;:3;:17;;;;3924:40;3916:49;;;;;;3978:126;4001:5;4021:12;:10;:12::i;:::-;4048:45;4085:7;4048:11;:18;4060:5;4048:18;;;;;;;;;;;;;;;:32;4067:12;:10;:12::i;:::-;4048:32;;;;;;;;;;;;;;;;:36;;:45;;;;:::i;:::-;3978:8;:126::i;:::-;4115:30;4125:5;4132:3;4137:7;4115:9;:30::i;:::-;4163:4;4156:11;;3771:404;;;;;:::o;1242:21::-;;;;;;;;;;;;;:::o;2139:160::-;2242:7;2274:9;:17;2284:6;2274:17;;;;;;;;;;;;;;;;2267:24;;2139:160;;;:::o;583:20::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2507:191::-;2609:4;2631:37;2641:12;:10;:12::i;:::-;2655:3;2660:7;2631:9;:37::i;:::-;2686:4;2679:11;;2507:191;;;;:::o;2761:190::-;2882:7;2914:11;:19;2926:6;2914:19;;;;;;;;;;;;;;;:29;2934:8;2914:29;;;;;;;;;;;;;;;;2907:36;;2761:190;;;;:::o;605:106:0:-;658:15;693:10;686:17;;605:106;:::o;5546:339:1:-;5695:1;5677:20;;:6;:20;;;;5669:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5755:1;5735:22;;:8;:22;;;;5727:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5819:7;5787:11;:19;5799:6;5787:19;;;;;;;;;;;;;;;:29;5807:8;5787:29;;;;;;;;;;;;;;;:39;;;;5859:8;5842:35;;5851:6;5842:35;;;5869:7;5842:35;;;;;;;;;;;;;;;;;;5546:339;;;:::o;773:184:3:-;831:7;864:1;859;:6;;851:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;911:9;927:1;923;:5;911:17;;948:1;941:8;;;773:184;;;;:::o;4652:452:1:-;4795:1;4778:19;;:5;:19;;;;4770:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4851:1;4836:17;;:3;:17;;;;4828:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4905:6;4890:22;;:3;:22;;;;4882:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4967:29;4988:7;4967:9;:16;4977:5;4967:16;;;;;;;;;;;;;;;;:20;;:29;;;;:::i;:::-;4948:9;:16;4958:5;4948:16;;;;;;;;;;;;;;;:48;;;;5024:27;5043:7;5024:9;:14;5034:3;5024:14;;;;;;;;;;;;;;;;:18;;:27;;;;:::i;:::-;5007:9;:14;5017:3;5007:14;;;;;;;;;;;;;;;:44;;;;5083:3;5067:29;;5076:5;5067:29;;;5088:7;5067:29;;;;;;;;;;;;;;;;;;4652:452;;;:::o;317:181:3:-;375:7;395:9;411:1;407;:5;395:17;;436:1;431;:6;;423:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;489:1;482:8;;;317:181;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "744000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1409",
								"approve(address,uint256)": "22536",
								"balanceOf(address)": "1218",
								"decimals()": "1047",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1058",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "100000000"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "100000000"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "100000000"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "100000000"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1710,
									"end": 1715,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1703,
									"end": 1707,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1735,
									"end": 1742,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1726,
									"end": 1732,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1764,
									"end": 1773,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1753,
									"end": 1761,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1753,
									"end": 1761,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1816,
									"end": 1825,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1808,
									"end": 1826,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 1808,
									"end": 1826,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1804,
									"end": 1806,
									"name": "PUSH",
									"source": 1,
									"value": "A"
								},
								{
									"begin": 1804,
									"end": 1826,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 1794,
									"end": 1801,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1794,
									"end": 1826,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1784,
									"end": 1826,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1784,
									"end": 1826,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1852,
									"end": 1859,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1837,
									"end": 1849,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1837,
									"end": 1859,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1837,
									"end": 1859,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1837,
									"end": 1859,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1837,
									"end": 1859,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1894,
									"end": 1901,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1870,
									"end": 1879,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1880,
									"end": 1890,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1870,
									"end": 1901,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1870,
									"end": 1901,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1870,
									"end": 1901,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1870,
									"end": 1901,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122003d781075401c8c4954bd0a10f8369a9b582ebb7db4d2913f03ed832ff9613ef64736f6c634300060c0033",
									".code": [
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3205,
											"end": 3209,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3227,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3236,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3236,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3236,
											"end": 3248,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3236,
											"end": 3248,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3236,
											"end": 3248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3258,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3260,
											"end": 3267,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3227,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3227,
											"end": 3268,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3227,
											"end": 3268,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3227,
											"end": 3268,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3286,
											"end": 3290,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3279,
											"end": 3290,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3290,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2068,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2056,
											"end": 2068,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3899,
											"end": 3903,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3942,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3924,
											"end": 3943,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3924,
											"end": 3943,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3924,
											"end": 3929,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3924,
											"end": 3943,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3924,
											"end": 3943,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3924,
											"end": 3943,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3924,
											"end": 3943,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3924,
											"end": 3964,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3924,
											"end": 3964,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3924,
											"end": 3964,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3924,
											"end": 3964,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3924,
											"end": 3964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3962,
											"end": 3963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3947,
											"end": 3964,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3947,
											"end": 3964,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3947,
											"end": 3950,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3947,
											"end": 3964,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3947,
											"end": 3964,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3947,
											"end": 3964,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3947,
											"end": 3964,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3924,
											"end": 3964,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3924,
											"end": 3964,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3916,
											"end": 3965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3916,
											"end": 3965,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3916,
											"end": 3965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3916,
											"end": 3965,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3916,
											"end": 3965,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3916,
											"end": 3965,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3916,
											"end": 3965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 4001,
											"end": 4006,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4021,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 4021,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4021,
											"end": 4033,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4021,
											"end": 4033,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 4021,
											"end": 4033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4085,
											"end": 4092,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4048,
											"end": 4059,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4060,
											"end": 4065,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4067,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 4067,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4067,
											"end": 4079,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4067,
											"end": 4079,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 4067,
											"end": 4079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4048,
											"end": 4084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4048,
											"end": 4084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3978,
											"end": 4104,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3978,
											"end": 4104,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3978,
											"end": 4104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4115,
											"end": 4145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4125,
											"end": 4130,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4132,
											"end": 4135,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4144,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4115,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4115,
											"end": 4145,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4115,
											"end": 4145,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4115,
											"end": 4145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4163,
											"end": 4167,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4156,
											"end": 4167,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4156,
											"end": 4167,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2242,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2290,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2267,
											"end": 2291,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2267,
											"end": 2291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2609,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2631,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2641,
											"end": 2653,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2641,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2641,
											"end": 2653,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2641,
											"end": 2653,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2641,
											"end": 2653,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2655,
											"end": 2658,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2660,
											"end": 2667,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2631,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2631,
											"end": 2668,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2631,
											"end": 2668,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2631,
											"end": 2668,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2686,
											"end": 2690,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2679,
											"end": 2690,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2679,
											"end": 2690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 2889,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2914,
											"end": 2925,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2932,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2934,
											"end": 2942,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2907,
											"end": 2943,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2907,
											"end": 2943,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 605,
											"end": 711,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 605,
											"end": 711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 658,
											"end": 673,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 693,
											"end": 703,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 686,
											"end": 703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 686,
											"end": 703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 605,
											"end": 711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 605,
											"end": 711,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5546,
											"end": 5885,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 5546,
											"end": 5885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5695,
											"end": 5696,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5677,
											"end": 5697,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5677,
											"end": 5697,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5683,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5697,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5677,
											"end": 5697,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5697,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5697,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH",
											"source": 1,
											"value": "617070726F76652066726F6D2030000000000000000000000000000000000000"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5735,
											"end": 5757,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5735,
											"end": 5757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5735,
											"end": 5743,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5735,
											"end": 5757,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5735,
											"end": 5757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5735,
											"end": 5757,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5735,
											"end": 5757,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH",
											"source": 1,
											"value": "617070726F766520746F20300000000000000000000000000000000000000000"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5819,
											"end": 5826,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5798,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5805,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5815,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5826,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5826,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5859,
											"end": 5867,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5851,
											"end": 5857,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 5869,
											"end": 5876,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 5546,
											"end": 5885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5546,
											"end": 5885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5546,
											"end": 5885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5546,
											"end": 5885,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 773,
											"end": 957,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 773,
											"end": 957,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 831,
											"end": 838,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 864,
											"end": 865,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 859,
											"end": 860,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 859,
											"end": 865,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 859,
											"end": 865,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 851,
											"end": 900,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 851,
											"end": 900,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 851,
											"end": 900,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 3,
											"value": "1E"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 851,
											"end": 900,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 3,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 851,
											"end": 900,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 851,
											"end": 900,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 851,
											"end": 900,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 851,
											"end": 900,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 851,
											"end": 900,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 851,
											"end": 900,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 851,
											"end": 900,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 851,
											"end": 900,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 851,
											"end": 900,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 851,
											"end": 900,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 911,
											"end": 920,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 927,
											"end": 928,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 923,
											"end": 924,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 923,
											"end": 928,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 911,
											"end": 928,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 911,
											"end": 928,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 948,
											"end": 949,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 941,
											"end": 949,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 941,
											"end": 949,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 941,
											"end": 949,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 773,
											"end": 957,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 773,
											"end": 957,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 773,
											"end": 957,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 773,
											"end": 957,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 773,
											"end": 957,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4652,
											"end": 5104,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4652,
											"end": 5104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4795,
											"end": 4796,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4778,
											"end": 4797,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4778,
											"end": 4797,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4783,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4797,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4778,
											"end": 4797,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4797,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4797,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH",
											"source": 1,
											"value": "7472616E736665722066726F6D20300000000000000000000000000000000000"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4836,
											"end": 4853,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4836,
											"end": 4853,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4836,
											"end": 4839,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4836,
											"end": 4853,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4836,
											"end": 4853,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4836,
											"end": 4853,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4836,
											"end": 4853,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH",
											"source": 1,
											"value": "7472616E7366657220746F203000000000000000000000000000000000000000"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4905,
											"end": 4911,
											"name": "PUSH",
											"source": 1,
											"value": "DEAD"
										},
										{
											"begin": 4890,
											"end": 4912,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4890,
											"end": 4912,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 4893,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 4912,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4890,
											"end": 4912,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 4912,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 4912,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH",
											"source": 1,
											"value": "7472616E7366657220746F203078646561640000000000000000000000000000"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 4988,
											"end": 4995,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 4976,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 4982,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4967,
											"end": 4987,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 4996,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 4996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 4996,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4967,
											"end": 4996,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 4996,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4967,
											"end": 4996,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 4967,
											"end": 4996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 4957,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4958,
											"end": 4963,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 4996,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 4996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 4996,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 4996,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5024,
											"end": 5051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 5043,
											"end": 5050,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5024,
											"end": 5033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5034,
											"end": 5037,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5024,
											"end": 5042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 5024,
											"end": 5042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5024,
											"end": 5051,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5024,
											"end": 5051,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5024,
											"end": 5051,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5024,
											"end": 5051,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5024,
											"end": 5051,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5024,
											"end": 5051,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 5024,
											"end": 5051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5016,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5017,
											"end": 5020,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5051,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5051,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5051,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5051,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5083,
											"end": 5086,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5076,
											"end": 5081,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 5088,
											"end": 5095,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 4652,
											"end": 5104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4652,
											"end": 5104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4652,
											"end": 5104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4652,
											"end": 5104,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 317,
											"end": 498,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 317,
											"end": 498,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 375,
											"end": 382,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 395,
											"end": 404,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 407,
											"end": 408,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 407,
											"end": 412,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 395,
											"end": 412,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 395,
											"end": 412,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 436,
											"end": 437,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 431,
											"end": 432,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 431,
											"end": 437,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 431,
											"end": 437,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 423,
											"end": 469,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 423,
											"end": 469,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 423,
											"end": 469,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 3,
											"value": "1B"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 423,
											"end": 469,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 3,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 423,
											"end": 469,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 423,
											"end": 469,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 423,
											"end": 469,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 423,
											"end": 469,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 423,
											"end": 469,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 423,
											"end": 469,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 423,
											"end": 469,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 423,
											"end": 469,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 423,
											"end": 469,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 423,
											"end": 469,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 489,
											"end": 490,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 482,
											"end": 490,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 482,
											"end": 490,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 482,
											"end": 490,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 317,
											"end": 498,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 317,
											"end": 498,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 317,
											"end": 498,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 317,
											"end": 498,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 317,
											"end": 498,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_supply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `_spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {_name} and {_symbol}, {_decimals} To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `_to` cannot be the zero address. - the caller must have a balance of at least `_amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `_from` and `_to` cannot be the zero address. - `_from` must have a balance of at least `_amount`. - the caller must have allowance for `_from`'s tokens of at least `_amount`.\"}},\"stateVariables\":{\"decimals\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name\":{\"details\":\"Returns the name of the token.\"},\"symbol\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"_lib/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"_lib/Context.sol\":{\"keccak256\":\"0x77ec8b534124690b04754bc03aaa982479b91b9f7508bed54455c161e93a02e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf08de24c3951531b87b85a75157d4b26ddcb8952452672f9da9f63c06982e9f\",\"dweb:/ipfs/QmaUzytpjpYHNTXw3Hy4cdKmNoU5PWpyMZBhorK69pk8sA\"]},\"_lib/ERC20.sol\":{\"keccak256\":\"0x2ce16e09e444519aec6a0e1f355325dfe2af844ea539ae8f8a7d53a2daf6d844\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb89e49b22ff4dd4d67fe590e95ce997d8a5a83db5ca8a246086dd4a56f01a72\",\"dweb:/ipfs/QmfZbMN1MNau96zL4xS1EtA9gVyNRWPwZCWwGVVeNG8uNF\"]},\"_lib/IERC20.sol\":{\"keccak256\":\"0x943e16fe1fdaa84c7329da3fa5aab8ce507ff7b6776a3925e97ffc0beef9692a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7727696ef766547aaa34152d06a443c5c8924fa363f47e51335d0e3d619c194\",\"dweb:/ipfs/QmRYgfYhpyjHaQjSJMG5fDdDGbQA9eXCGhuSRnwGfoSyCD\"]},\"_lib/SafeMath.sol\":{\"keccak256\":\"0xe1bb41b0568cdd4364bb5fcba4fd6065df59c3ea8147e040fb9c978bc3a89af5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e4192a8253ea1f04e97ac1ac3df25dc77719696b0bee70b3af1a4a56edcb5b\",\"dweb:/ipfs/QmaQ4TkRxpXxjtKKewy2oAgJXFbdqSwacBUMrNaSgZ72jt\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"_lib/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP. From https://github.com/OpenZeppelin/openzeppelin-contracts",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP. From https://github.com/OpenZeppelin/openzeppelin-contracts\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"_lib/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"_lib/IERC20.sol\":{\"keccak256\":\"0x943e16fe1fdaa84c7329da3fa5aab8ce507ff7b6776a3925e97ffc0beef9692a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7727696ef766547aaa34152d06a443c5c8924fa363f47e51335d0e3d619c194\",\"dweb:/ipfs/QmRYgfYhpyjHaQjSJMG5fDdDGbQA9eXCGhuSRnwGfoSyCD\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"_lib/SafeMath.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"_lib/SafeMath.sol\":4604:5299  library Math {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"_lib/SafeMath.sol\":4604:5299  library Math {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206e04663ba7d4d7996cc8dbe663d4baffa3d9e7d95afee582dd0a49334044b9fb64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206e04663ba7d4d7996cc8dbe663d4baffa3d9e7d95afee582dd0a49334044b9fb64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x4663BA7D4D7996CC8DBE663D4BAFF LOG3 0xD9 0xE7 0xD9 GAS INVALID 0xE5 DUP3 0xDD EXP 0x49 CALLER BLOCKHASH DIFFICULTY 0xB9 0xFB PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "4604:695:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206e04663ba7d4d7996cc8dbe663d4baffa3d9e7d95afee582dd0a49334044b9fb64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x4663BA7D4D7996CC8DBE663D4BAFF LOG3 0xD9 0xE7 0xD9 GAS INVALID 0xE5 DUP3 0xDD EXP 0x49 CALLER BLOCKHASH DIFFICULTY 0xB9 0xFB PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "4604:695:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4604,
									"end": 5299,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "INVALID",
									"source": 3
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206e04663ba7d4d7996cc8dbe663d4baffa3d9e7d95afee582dd0a49334044b9fb64736f6c634300060c0033",
									".code": [
										{
											"begin": 4604,
											"end": 5299,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 4604,
											"end": 5299,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 4604,
											"end": 5299,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4604,
											"end": 5299,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 4604,
											"end": 5299,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4604,
											"end": 5299,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4604,
											"end": 5299,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4604,
											"end": 5299,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4604,
											"end": 5299,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"_lib/SafeMath.sol\":\"Math\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"_lib/SafeMath.sol\":{\"keccak256\":\"0xe1bb41b0568cdd4364bb5fcba4fd6065df59c3ea8147e040fb9c978bc3a89af5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e4192a8253ea1f04e97ac1ac3df25dc77719696b0bee70b3af1a4a56edcb5b\",\"dweb:/ipfs/QmaQ4TkRxpXxjtKKewy2oAgJXFbdqSwacBUMrNaSgZ72jt\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"_lib/SafeMath.sol\":62:3091  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"_lib/SafeMath.sol\":62:3091  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122068b375269c1d6f3484f11227346ae9d0b15e0fea769d778896867163d1544b3e64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122068b375269c1d6f3484f11227346ae9d0b15e0fea769d778896867163d1544b3e64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0xB375269C1D6F3484F1 SLT 0x27 CALLVALUE PUSH11 0xE9D0B15E0FEA769D778896 DUP7 PUSH18 0x63D1544B3E64736F6C634300060C00330000 ",
							"sourceMap": "62:3029:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122068b375269c1d6f3484f11227346ae9d0b15e0fea769d778896867163d1544b3e64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0xB375269C1D6F3484F1 SLT 0x27 CALLVALUE PUSH11 0xE9D0B15E0FEA769D778896 DUP7 PUSH18 0x63D1544B3E64736F6C634300060C00330000 ",
							"sourceMap": "62:3029:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 62,
									"end": 3091,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "INVALID",
									"source": 3
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122068b375269c1d6f3484f11227346ae9d0b15e0fea769d778896867163d1544b3e64736f6c634300060c0033",
									".code": [
										{
											"begin": 62,
											"end": 3091,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 62,
											"end": 3091,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 62,
											"end": 3091,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 62,
											"end": 3091,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 62,
											"end": 3091,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 62,
											"end": 3091,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 62,
											"end": 3091,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 62,
											"end": 3091,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 62,
											"end": 3091,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"_lib/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"_lib/SafeMath.sol\":{\"keccak256\":\"0xe1bb41b0568cdd4364bb5fcba4fd6065df59c3ea8147e040fb9c978bc3a89af5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e4192a8253ea1f04e97ac1ac3df25dc77719696b0bee70b3af1a4a56edcb5b\",\"dweb:/ipfs/QmaQ4TkRxpXxjtKKewy2oAgJXFbdqSwacBUMrNaSgZ72jt\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMathExt": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"_lib/SafeMath.sol\":3095:4600  library SafeMathExt {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"_lib/SafeMath.sol\":3095:4600  library SafeMathExt {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a626b76c907f888293c32fb457a49bf6f694e941ef3e36c80569f4fce9e6ce4e64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a626b76c907f888293c32fb457a49bf6f694e941ef3e36c80569f4fce9e6ce4e64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 0x26 0xB7 PUSH13 0x907F888293C32FB457A49BF6F6 SWAP5 0xE9 COINBASE 0xEF RETURNDATACOPY CALLDATASIZE 0xC8 SDIV PUSH10 0xF4FCE9E6CE4E64736F6C PUSH4 0x4300060C STOP CALLER ",
							"sourceMap": "3095:1505:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a626b76c907f888293c32fb457a49bf6f694e941ef3e36c80569f4fce9e6ce4e64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 0x26 0xB7 PUSH13 0x907F888293C32FB457A49BF6F6 SWAP5 0xE9 COINBASE 0xEF RETURNDATACOPY CALLDATASIZE 0xC8 SDIV PUSH10 0xF4FCE9E6CE4E64736F6C PUSH4 0x4300060C STOP CALLER ",
							"sourceMap": "3095:1505:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add128(uint128,uint128)": "infinite",
								"add64(uint64,uint64)": "infinite",
								"safe128(uint256)": "infinite",
								"safe16(uint256)": "infinite",
								"safe32(uint256)": "infinite",
								"safe64(uint256)": "infinite",
								"sub128(uint128,uint128)": "infinite",
								"sub64(uint64,uint64)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3095,
									"end": 4600,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "INVALID",
									"source": 3
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a626b76c907f888293c32fb457a49bf6f694e941ef3e36c80569f4fce9e6ce4e64736f6c634300060c0033",
									".code": [
										{
											"begin": 3095,
											"end": 4600,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 4600,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 4600,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 4600,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3095,
											"end": 4600,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3095,
											"end": 4600,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 4600,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 4600,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 4600,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"_lib/SafeMath.sol\":\"SafeMathExt\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"_lib/SafeMath.sol\":{\"keccak256\":\"0xe1bb41b0568cdd4364bb5fcba4fd6065df59c3ea8147e040fb9c978bc3a89af5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e4192a8253ea1f04e97ac1ac3df25dc77719696b0bee70b3af1a4a56edcb5b\",\"dweb:/ipfs/QmaQ4TkRxpXxjtKKewy2oAgJXFbdqSwacBUMrNaSgZ72jt\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"_lib/Context.sol": {
				"ast": {
					"absolutePath": "_lib/Context.sol",
					"exportedSymbols": {
						"Context": [
							22
						]
					},
					"id": 23,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 22,
							"linearizedBaseContracts": [
								22
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 9,
										"nodeType": "Block",
										"src": "675:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 6,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "693:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 7,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "693:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 5,
												"id": 8,
												"nodeType": "Return",
												"src": "686:17:0"
											}
										]
									},
									"documentation": null,
									"id": 10,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "624:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 10,
												"src": "658:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "657:17:0"
									},
									"scope": 22,
									"src": "605:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "784:168:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 15,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "795:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$22",
														"typeString": "contract Context"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "795:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 17,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "936:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "936:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 14,
												"id": 19,
												"nodeType": "Return",
												"src": "929:15:0"
											}
										]
									},
									"documentation": null,
									"id": 21,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "736:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 21,
												"src": "770:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 12,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "770:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "769:14:0"
									},
									"scope": 22,
									"src": "719:233:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 23,
							"src": "572:383:0"
						}
					],
					"src": "35:920:0"
				},
				"id": 0
			},
			"_lib/ERC20.sol": {
				"ast": {
					"absolutePath": "_lib/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							456
						]
					},
					"id": 457,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 24,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:1"
						},
						{
							"absolutePath": "_lib/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 25,
							"nodeType": "ImportDirective",
							"scope": 457,
							"sourceUnit": 926,
							"src": "62:24:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "_lib/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 26,
							"nodeType": "ImportDirective",
							"scope": 457,
							"sourceUnit": 535,
							"src": "88:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "_lib/Context.sol",
							"file": "./Context.sol",
							"id": 27,
							"nodeType": "ImportDirective",
							"scope": 457,
							"sourceUnit": 23,
							"src": "112:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 28,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 534,
										"src": "157:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$534",
											"typeString": "contract IERC20"
										}
									},
									"id": 29,
									"nodeType": "InheritanceSpecifier",
									"src": "157:6:1"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 30,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 22,
										"src": "165:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$22",
											"typeString": "contract Context"
										}
									},
									"id": 31,
									"nodeType": "InheritanceSpecifier",
									"src": "165:7:1"
								}
							],
							"contractDependencies": [
								22,
								534
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 456,
							"linearizedBaseContracts": [
								456,
								22,
								534
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 34,
									"libraryName": {
										"contractScope": null,
										"id": 32,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 672,
										"src": "186:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$672",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "180:27:1",
									"typeName": {
										"id": 33,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "199:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 38,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 456,
									"src": "215:46:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 37,
										"keyType": {
											"id": 35,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "223:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "215:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 36,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "234:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 44,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 456,
									"src": "268:68:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 43,
										"keyType": {
											"id": 39,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "276:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "268:47:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 42,
											"keyType": {
												"id": 40,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "295:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "287:27:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 41,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "306:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 46,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 456,
									"src": "345:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 45,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "345:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "383:56:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 49,
									"mutability": "mutable",
									"name": "name",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 456,
									"src": "445:18:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 48,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "445:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "472:105:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 52,
									"mutability": "mutable",
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 456,
									"src": "583:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 51,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "583:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "612:624:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 55,
									"mutability": "mutable",
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 456,
									"src": "1242:21:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 54,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1242:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "1692:217:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 67,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 49,
														"src": "1703:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 68,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 58,
														"src": "1710:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1703:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "1703:12:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 71,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "1726:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 72,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "1735:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1726:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 74,
												"nodeType": "ExpressionStatement",
												"src": "1726:16:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 75,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 55,
														"src": "1753:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 76,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 62,
														"src": "1764:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1753:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "1753:20:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 79,
														"name": "_supply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 64,
														"src": "1784:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 87,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 80,
															"name": "_supply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 64,
															"src": "1794:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "3130",
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1804:2:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 84,
																		"name": "_decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 62,
																		"src": "1816:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 83,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1808:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 82,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1808:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 85,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1808:18:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1804:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1794:32:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1784:42:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "1784:42:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 90,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "1837:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 91,
														"name": "_supply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 64,
														"src": "1852:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1837:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 93,
												"nodeType": "ExpressionStatement",
												"src": "1837:22:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 94,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 38,
															"src": "1870:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 97,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 95,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "1880:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1880:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1870:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 98,
														"name": "_supply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 64,
														"src": "1894:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1870:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 100,
												"nodeType": "ExpressionStatement",
												"src": "1870:31:1"
											}
										]
									},
									"documentation": {
										"id": 56,
										"nodeType": "StructuredDocumentation",
										"src": "1272:274:1",
										"text": " @dev Sets the values for {_name} and {_symbol}, {_decimals}\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."
									},
									"id": 102,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "_name",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 102,
												"src": "1574:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 57,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1574:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "_symbol",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 102,
												"src": "1604:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 59,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1604:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "_decimals",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 102,
												"src": "1636:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 61,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1636:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "_supply",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 102,
												"src": "1662:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1662:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1563:121:1"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1692:0:1"
									},
									"scope": 456,
									"src": "1552:357:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										465
									],
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "2038:38:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 109,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 46,
													"src": "2056:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 108,
												"id": 110,
												"nodeType": "Return",
												"src": "2049:19:1"
											}
										]
									},
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "1917:51:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 105,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2011:8:1"
									},
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1994:2:1"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 112,
												"src": "2029:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2029:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2028:9:1"
									},
									"scope": 456,
									"src": "1974:102:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										473
									],
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2256:43:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 121,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "2274:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 123,
													"indexExpression": {
														"argumentTypes": null,
														"id": 122,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "2284:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2274:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 120,
												"id": 124,
												"nodeType": "Return",
												"src": "2267:24:1"
											}
										]
									},
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "2084:49:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 117,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2215:8:1"
									},
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 126,
												"src": "2158:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2158:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2157:16:1"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 126,
												"src": "2242:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2242:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2241:9:1"
									},
									"scope": 456,
									"src": "2139:160:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										483
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "2620:78:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 138,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "2641:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2641:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 140,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "2655:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 141,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "2660:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 137,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "2631:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2631:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "2631:37:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2686:4:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 136,
												"id": 145,
												"nodeType": "Return",
												"src": "2679:11:1"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2307:194:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `_to` cannot be the zero address.\n - the caller must have a balance of at least `_amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 133,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2582:8:1"
									},
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 147,
												"src": "2525:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2525:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 147,
												"src": "2538:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2538:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2524:30:1"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 147,
												"src": "2609:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 134,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2609:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2608:6:1"
									},
									"scope": 456,
									"src": "2507:191:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										493
									],
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "2896:55:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 158,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "2914:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 160,
														"indexExpression": {
															"argumentTypes": null,
															"id": 159,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "2926:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2914:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 162,
													"indexExpression": {
														"argumentTypes": null,
														"id": 161,
														"name": "_spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 152,
														"src": "2934:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2914:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 157,
												"id": 163,
												"nodeType": "Return",
												"src": "2907:36:1"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "2706:49:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 154,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2855:8:1"
									},
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 165,
												"src": "2780:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2780:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 165,
												"src": "2796:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2796:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2779:34:1"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 165,
												"src": "2882:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2881:9:1"
									},
									"scope": 456,
									"src": "2761:190:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										503
									],
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "3216:82:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 177,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "3236:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3236:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 179,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "3250:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 180,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "3260:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 176,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "3227:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3227:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "3227:41:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3286:4:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 175,
												"id": 184,
												"nodeType": "Return",
												"src": "3279:11:1"
											}
										]
									},
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "2959:134:1",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `_spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 172,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3178:8:1"
									},
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 186,
												"src": "3116:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 186,
												"src": "3134:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3134:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3115:35:1"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 186,
												"src": "3205:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 173,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3205:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3204:6:1"
									},
									"scope": 456,
									"src": "3099:199:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										515
									],
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "3905:270:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 200,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 189,
																	"src": "3924:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 203,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3941:1:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 202,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3933:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 201,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3933:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3933:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "3924:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 206,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 191,
																	"src": "3947:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 209,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3962:1:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3954:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 207,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3954:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3954:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "3947:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3924:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 199,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3916:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3916:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 214,
												"nodeType": "ExpressionStatement",
												"src": "3916:49:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 216,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "4001:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 217,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "4021:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4021:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 226,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 193,
																	"src": "4085:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 219,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 44,
																			"src": "4048:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 221,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 220,
																			"name": "_from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 189,
																			"src": "4060:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4048:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 224,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 222,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 10,
																			"src": "4067:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4067:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4048:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 588,
																"src": "4048:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4048:45:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 215,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "3978:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3978:126:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 229,
												"nodeType": "ExpressionStatement",
												"src": "3978:126:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 231,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "4125:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 232,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "4132:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 233,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "4137:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 230,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "4115:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4115:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 235,
												"nodeType": "ExpressionStatement",
												"src": "4115:30:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4163:4:1",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 198,
												"id": 237,
												"nodeType": "Return",
												"src": "4156:11:1"
											}
										]
									},
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "3306:459:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `_from` and `_to` cannot be the zero address.\n - `_from` must have a balance of at least `_amount`.\n - the caller must have allowance for `_from`'s tokens of at least\n `_amount`."
									},
									"functionSelector": "23b872dd",
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 195,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3881:8:1"
									},
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 239,
												"src": "3803:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3803:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 239,
												"src": "3827:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3827:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 239,
												"src": "3849:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3792:79:1"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 239,
												"src": "3899:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 196,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3899:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3898:6:1"
									},
									"scope": 456,
									"src": "3771:404:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "4759:345:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 250,
																"name": "_from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 242,
																"src": "4778:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4795:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4787:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 251,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4787:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 254,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4787:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "4778:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "7472616e736665722066726f6d2030",
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4799:17:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_088211d17706da49ecdf58f6ac409477cc9130fd43883e0443984cdf77b1dbc9",
																"typeString": "literal_string \"transfer from 0\""
															},
															"value": "transfer from 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_088211d17706da49ecdf58f6ac409477cc9130fd43883e0443984cdf77b1dbc9",
																"typeString": "literal_string \"transfer from 0\""
															}
														],
														"id": 249,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4770:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4770:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 258,
												"nodeType": "ExpressionStatement",
												"src": "4770:47:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 260,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "4836:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 263,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4851:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4843:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 261,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4843:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 264,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4843:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "4836:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "7472616e7366657220746f2030",
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4855:15:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01bc61e3f4d850e3eb22a5a0ac43476dcc54e69adac1202623178f29549b4b44",
																"typeString": "literal_string \"transfer to 0\""
															},
															"value": "transfer to 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01bc61e3f4d850e3eb22a5a0ac43476dcc54e69adac1202623178f29549b4b44",
																"typeString": "literal_string \"transfer to 0\""
															}
														],
														"id": 259,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4828:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4828:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 268,
												"nodeType": "ExpressionStatement",
												"src": "4828:43:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 270,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "4890:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "307864656164",
																		"id": 273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4905:6:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_57005_by_1",
																			"typeString": "int_const 57005"
																		},
																		"value": "0xdead"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_57005_by_1",
																			"typeString": "int_const 57005"
																		}
																	],
																	"id": 272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4897:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 271,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4897:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 274,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4897:15:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "4890:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "7472616e7366657220746f20307864656164",
															"id": 276,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4914:20:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0f76b0e999ef8392e30c214f6024bd49c272969cba01c2b93095d2fe0bf18da5",
																"typeString": "literal_string \"transfer to 0xdead\""
															},
															"value": "transfer to 0xdead"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0f76b0e999ef8392e30c214f6024bd49c272969cba01c2b93095d2fe0bf18da5",
																"typeString": "literal_string \"transfer to 0xdead\""
															}
														],
														"id": 269,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4882:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4882:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 278,
												"nodeType": "ExpressionStatement",
												"src": "4882:53:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 279,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 38,
															"src": "4948:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 281,
														"indexExpression": {
															"argumentTypes": null,
															"id": 280,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "4958:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4948:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 286,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "4988:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 282,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 38,
																	"src": "4967:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 284,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 283,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "4977:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4967:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 588,
															"src": "4967:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4967:29:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4948:48:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 289,
												"nodeType": "ExpressionStatement",
												"src": "4948:48:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 290,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 38,
															"src": "5007:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 292,
														"indexExpression": {
															"argumentTypes": null,
															"id": 291,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "5017:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5007:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 297,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "5043:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 293,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 38,
																	"src": "5024:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 295,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 294,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 244,
																	"src": "5034:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5024:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 562,
															"src": "5024:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 298,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5024:27:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5007:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 300,
												"nodeType": "ExpressionStatement",
												"src": "5007:44:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 302,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "5076:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 303,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "5083:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 304,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "5088:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 301,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "5067:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5067:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 306,
												"nodeType": "EmitStatement",
												"src": "5062:34:1"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "4183:463:1",
										"text": " @dev Moves tokens `_amount` from `_from` to `_to`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `_from` cannot be the zero address.\n - `_to` cannot be the zero address.\n - `_from` must have a balance of at least `_amount`."
									},
									"id": 308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 308,
												"src": "4681:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4681:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 308,
												"src": "4705:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4705:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 308,
												"src": "4727:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4727:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4670:79:1"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4759:0:1"
									},
									"scope": 456,
									"src": "4652:452:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "5658:227:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 319,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "5677:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 322,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5695:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5687:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 320,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5687:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5687:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "5677:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "617070726f76652066726f6d2030",
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5699:16:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7be6a29a82c9e54f3748332e2433ff641b96e589a0c2b257be32ecb8594857aa",
																"typeString": "literal_string \"approve from 0\""
															},
															"value": "approve from 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7be6a29a82c9e54f3748332e2433ff641b96e589a0c2b257be32ecb8594857aa",
																"typeString": "literal_string \"approve from 0\""
															}
														],
														"id": 318,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5669:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5669:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "5669:47:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 329,
																"name": "_spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "5735:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 332,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5755:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5747:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 330,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5747:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5747:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "5735:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "617070726f766520746f2030",
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:14:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9735ec0b566eec43aef8e55c8869448c5c3b0e1f23c26343eec9ec39a891c8b4",
																"typeString": "literal_string \"approve to 0\""
															},
															"value": "approve to 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9735ec0b566eec43aef8e55c8869448c5c3b0e1f23c26343eec9ec39a891c8b4",
																"typeString": "literal_string \"approve to 0\""
															}
														],
														"id": 328,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5727:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5727:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 337,
												"nodeType": "ExpressionStatement",
												"src": "5727:47:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 338,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 44,
																"src": "5787:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 341,
															"indexExpression": {
																"argumentTypes": null,
																"id": 339,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "5799:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5787:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 342,
														"indexExpression": {
															"argumentTypes": null,
															"id": 340,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "5807:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5787:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 343,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "5819:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5787:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 345,
												"nodeType": "ExpressionStatement",
												"src": "5787:39:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 347,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "5851:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 348,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "5859:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 349,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "5869:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 346,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "5842:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5842:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 351,
												"nodeType": "EmitStatement",
												"src": "5837:40:1"
											}
										]
									},
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "5112:428:1",
										"text": " @dev Sets `amount` as the allowance of `_spender` over the `_owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `_owner` cannot be the zero address.\n - `_spender` cannot be the zero address."
									},
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 353,
												"src": "5574:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5574:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 353,
												"src": "5599:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5599:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 353,
												"src": "5626:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5626:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5563:85:1"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5658:0:1"
									},
									"scope": 456,
									"src": "5546:339:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "6218:216:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 362,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 356,
																"src": "6237:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6252:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6244:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 363,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6244:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6244:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6237:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6d696e7420746f2030",
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6256:11:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_341351e35cc1cea7d00a25dee4c4c0513a1d39ea1954597cbb7cb19fe6a8a930",
																"typeString": "literal_string \"mint to 0\""
															},
															"value": "mint to 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_341351e35cc1cea7d00a25dee4c4c0513a1d39ea1954597cbb7cb19fe6a8a930",
																"typeString": "literal_string \"mint to 0\""
															}
														],
														"id": 361,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6229:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6229:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 370,
												"nodeType": "ExpressionStatement",
												"src": "6229:39:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 371,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "6281:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 374,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 358,
																"src": "6313:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 372,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 46,
																"src": "6296:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 562,
															"src": "6296:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6296:25:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6281:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "6281:40:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 378,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 38,
															"src": "6332:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 380,
														"indexExpression": {
															"argumentTypes": null,
															"id": 379,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "6342:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6332:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 385,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 358,
																"src": "6368:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 381,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 38,
																	"src": "6349:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 383,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 382,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 356,
																	"src": "6359:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6349:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 562,
															"src": "6349:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 386,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6349:27:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6332:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "6332:44:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6409:1:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 391,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6401:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 390,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6401:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6401:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 394,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "6413:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 395,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "6418:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 389,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "6392:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6392:34:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 397,
												"nodeType": "EmitStatement",
												"src": "6387:39:1"
											}
										]
									},
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "5893:265:1",
										"text": "@dev Creates `_amount` tokens and assigns them to `_to`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `to` cannot be the zero address."
									},
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 399,
												"src": "6179:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6179:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 399,
												"src": "6192:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6192:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6178:30:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6218:0:1"
									},
									"scope": 456,
									"src": "6164:270:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 454,
										"nodeType": "Block",
										"src": "6819:295:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 408,
																"name": "_from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "6838:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6855:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6847:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 409,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6847:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6847:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6838:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6275726e2066726f6d2030",
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6859:13:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_787b4790c0cc1d5398d1165119b3cd89324d059eed4a4e3b5563167482dac8b9",
																"typeString": "literal_string \"burn from 0\""
															},
															"value": "burn from 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_787b4790c0cc1d5398d1165119b3cd89324d059eed4a4e3b5563167482dac8b9",
																"typeString": "literal_string \"burn from 0\""
															}
														],
														"id": 407,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6830:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6830:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "6830:43:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 418,
																"name": "_from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "6892:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "307864656164",
																		"id": 421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6909:6:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_57005_by_1",
																			"typeString": "int_const 57005"
																		},
																		"value": "0xdead"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_57005_by_1",
																			"typeString": "int_const 57005"
																		}
																	],
																	"id": 420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6901:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 419,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6901:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 422,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6901:15:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6892:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6275726e2066726f6d20307864656164",
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6918:18:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6b25ae7242490c676be63d6d4b6e88a8900efbe5296fb7f67d86b6a7c21cf04a",
																"typeString": "literal_string \"burn from 0xdead\""
															},
															"value": "burn from 0xdead"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6b25ae7242490c676be63d6d4b6e88a8900efbe5296fb7f67d86b6a7c21cf04a",
																"typeString": "literal_string \"burn from 0xdead\""
															}
														],
														"id": 417,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6884:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6884:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 426,
												"nodeType": "ExpressionStatement",
												"src": "6884:53:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 427,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 38,
															"src": "6950:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 429,
														"indexExpression": {
															"argumentTypes": null,
															"id": 428,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "6960:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6950:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 434,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "6990:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 430,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 38,
																	"src": "6969:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 432,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 431,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 402,
																	"src": "6979:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6969:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 588,
															"src": "6969:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6969:29:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6950:48:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "6950:48:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 438,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "7009:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 441,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "7041:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 439,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 46,
																"src": "7024:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 588,
															"src": "7024:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7024:25:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7009:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "7009:40:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 446,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "7074:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "307864656164",
																	"id": 449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7089:6:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_57005_by_1",
																		"typeString": "int_const 57005"
																	},
																	"value": "0xdead"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_57005_by_1",
																		"typeString": "int_const 57005"
																	}
																],
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7081:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 447,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7081:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7081:15:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 451,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "7098:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 445,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "7065:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7065:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 453,
												"nodeType": "EmitStatement",
												"src": "7060:46:1"
											}
										]
									},
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "6442:315:1",
										"text": " @dev Destroys `_amount` tokens from `_from`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `_from` cannot be the zero address.\n - `_from` must have at least `_amount` tokens."
									},
									"id": 455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 455,
												"src": "6778:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6778:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 455,
												"src": "6793:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6793:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6777:32:1"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6819:0:1"
									},
									"scope": 456,
									"src": "6763:351:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 457,
							"src": "139:6978:1"
						}
					],
					"src": "35:7084:1"
				},
				"id": 1
			},
			"_lib/IERC20.sol": {
				"ast": {
					"absolutePath": "_lib/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							534
						]
					},
					"id": 535,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 458,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 459,
								"nodeType": "StructuredDocumentation",
								"src": "62:136:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP.\n From https://github.com/OpenZeppelin/openzeppelin-contracts"
							},
							"fullyImplemented": false,
							"id": 534,
							"linearizedBaseContracts": [
								534
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "222:64:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 465,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "310:2:2"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 465,
												"src": "336:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "336:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "335:9:2"
									},
									"scope": 534,
									"src": "290:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 466,
										"nodeType": "StructuredDocumentation",
										"src": "351:70:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 473,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 473,
												"src": "444:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "444:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "443:17:2"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 473,
												"src": "484:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "484:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "483:9:2"
									},
									"scope": 534,
									"src": "425:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "499:203:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 483,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 483,
												"src": "724:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "724:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 483,
												"src": "743:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "743:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "723:35:2"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 483,
												"src": "777:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 480,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "776:6:2"
									},
									"scope": 534,
									"src": "706:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "789:258:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 493,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 493,
												"src": "1070:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1070:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 493,
												"src": "1085:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1085:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1069:32:2"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 493,
												"src": "1125:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1124:9:2"
									},
									"scope": 534,
									"src": "1051:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "1140:629:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 503,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 503,
												"src": "1790:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1790:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 503,
												"src": "1807:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1807:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1789:33:2"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 503,
												"src": "1841:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 500,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1841:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1840:6:2"
									},
									"scope": 534,
									"src": "1773:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 504,
										"nodeType": "StructuredDocumentation",
										"src": "1853:288:2",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 515,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 515,
												"src": "2173:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2173:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 515,
												"src": "2194:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2194:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 515,
												"src": "2218:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2218:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2166:71:2"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 515,
												"src": "2256:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 512,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2256:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2255:6:2"
									},
									"scope": 534,
									"src": "2145:117:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "2268:153:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 524,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 524,
												"src": "2440:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 524,
												"src": "2462:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2462:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 524,
												"src": "2482:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2482:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2439:57:2"
									},
									"src": "2425:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "2503:145:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 533,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 533,
												"src": "2667:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 533,
												"src": "2690:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2690:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 533,
												"src": "2715:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2715:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2666:63:2"
									},
									"src": "2652:78:2"
								}
							],
							"scope": 535,
							"src": "200:2533:2"
						}
					],
					"src": "35:2702:2"
				},
				"id": 2
			},
			"_lib/SafeMath.sol": {
				"ast": {
					"absolutePath": "_lib/SafeMath.sol",
					"exportedSymbols": {
						"Math": [
							925
						],
						"SafeMath": [
							672
						],
						"SafeMathExt": [
							853
						]
					},
					"id": 926,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 536,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 672,
							"linearizedBaseContracts": [
								672
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "384:114:3",
										"statements": [
											{
												"assignments": [
													547
												],
												"declarations": [
													{
														"constant": false,
														"id": 547,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 561,
														"src": "395:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 546,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "395:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 551,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 548,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 539,
														"src": "407:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 549,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 541,
														"src": "411:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "407:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "395:17:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 553,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 547,
																"src": "431:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 554,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 539,
																"src": "436:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "431:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "439:29:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 552,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "423:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "423:46:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 558,
												"nodeType": "ExpressionStatement",
												"src": "423:46:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 559,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 547,
													"src": "489:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 545,
												"id": 560,
												"nodeType": "Return",
												"src": "482:8:3"
											}
										]
									},
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "86:225:3",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 562,
												"src": "330:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "330:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 562,
												"src": "341:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "341:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "329:22:3"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 562,
												"src": "375:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "375:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "374:9:3"
									},
									"scope": 672,
									"src": "317:181:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 587,
										"nodeType": "Block",
										"src": "840:117:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 573,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "859:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 574,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 565,
																"src": "864:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "859:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "867:32:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 572,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "851:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "851:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 578,
												"nodeType": "ExpressionStatement",
												"src": "851:49:3"
											},
											{
												"assignments": [
													580
												],
												"declarations": [
													{
														"constant": false,
														"id": 580,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 587,
														"src": "911:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 579,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "911:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 584,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 581,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 565,
														"src": "923:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 582,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 567,
														"src": "927:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "923:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "911:17:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 585,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 580,
													"src": "948:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 571,
												"id": 586,
												"nodeType": "Return",
												"src": "941:8:3"
											}
										]
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "506:261:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 588,
												"src": "786:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "786:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 588,
												"src": "797:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "785:22:3"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 588,
												"src": "831:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "830:9:3"
									},
									"scope": 672,
									"src": "773:184:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 622,
										"nodeType": "Block",
										"src": "1275:403:3",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 598,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 591,
														"src": "1510:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 599,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1515:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1510:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 604,
												"nodeType": "IfStatement",
												"src": "1506:47:3",
												"trueBody": {
													"id": 603,
													"nodeType": "Block",
													"src": "1518:35:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1540:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 597,
															"id": 602,
															"nodeType": "Return",
															"src": "1533:8:3"
														}
													]
												}
											},
											{
												"assignments": [
													606
												],
												"declarations": [
													{
														"constant": false,
														"id": 606,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 622,
														"src": "1565:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 605,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1565:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 610,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 607,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 591,
														"src": "1577:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 608,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "1581:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1577:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1565:17:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 614,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 612,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 606,
																	"src": "1601:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 613,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 591,
																	"src": "1605:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1601:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 615,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "1610:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1613:35:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 611,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1593:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1593:56:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "1593:56:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 620,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 606,
													"src": "1669:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 597,
												"id": 621,
												"nodeType": "Return",
												"src": "1662:8:3"
											}
										]
									},
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "965:237:3",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 623,
												"src": "1221:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 623,
												"src": "1232:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1232:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1220:22:3"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 623,
												"src": "1266:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1266:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1265:9:3"
									},
									"scope": 672,
									"src": "1208:470:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 648,
										"nodeType": "Block",
										"src": "2213:266:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 634,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "2299:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 635,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2303:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2299:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2306:28:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 633,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2291:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2291:44:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 639,
												"nodeType": "ExpressionStatement",
												"src": "2291:44:3"
											},
											{
												"assignments": [
													641
												],
												"declarations": [
													{
														"constant": false,
														"id": 641,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 648,
														"src": "2346:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 640,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2346:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 645,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 642,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 626,
														"src": "2358:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 643,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "2362:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2358:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2346:17:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 646,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 641,
													"src": "2470:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 632,
												"id": 647,
												"nodeType": "Return",
												"src": "2463:8:3"
											}
										]
									},
									"documentation": {
										"id": 624,
										"nodeType": "StructuredDocumentation",
										"src": "1686:454:3",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 649,
												"src": "2159:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2159:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 649,
												"src": "2170:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2170:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2158:22:3"
									},
									"returnParameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 649,
												"src": "2204:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2204:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2203:9:3"
									},
									"scope": 672,
									"src": "2146:333:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "3003:85:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 660,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 654,
																"src": "3022:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3027:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3022:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3030:26:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 659,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3014:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3014:43:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 665,
												"nodeType": "ExpressionStatement",
												"src": "3014:43:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 666,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 652,
														"src": "3075:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 667,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "3079:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3075:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 658,
												"id": 669,
												"nodeType": "Return",
												"src": "3068:12:3"
											}
										]
									},
									"documentation": {
										"id": 650,
										"nodeType": "StructuredDocumentation",
										"src": "2487:443:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 671,
												"src": "2949:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2949:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 671,
												"src": "2960:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2960:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2948:22:3"
									},
									"returnParameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 671,
												"src": "2994:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2994:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2993:9:3"
									},
									"scope": 672,
									"src": "2936:152:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 926,
							"src": "62:3029:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 853,
							"linearizedBaseContracts": [
								853
							],
							"name": "SafeMathExt",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "3192:113:3",
										"statements": [
											{
												"assignments": [
													682
												],
												"declarations": [
													{
														"constant": false,
														"id": 682,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 696,
														"src": "3203:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 681,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "3203:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 686,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 683,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "3215:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 684,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 676,
														"src": "3219:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "3215:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3203:17:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 688,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 682,
																"src": "3239:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 689,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 674,
																"src": "3244:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "3239:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "75696e743132383a206164646974696f6e206f766572666c6f77",
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3247:28:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c99ac7713d922e549dbfa2ca1a444e3009e7b3e2c0457def1559be2bff104a96",
																"typeString": "literal_string \"uint128: addition overflow\""
															},
															"value": "uint128: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c99ac7713d922e549dbfa2ca1a444e3009e7b3e2c0457def1559be2bff104a96",
																"typeString": "literal_string \"uint128: addition overflow\""
															}
														],
														"id": 687,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3231:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3231:45:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 693,
												"nodeType": "ExpressionStatement",
												"src": "3231:45:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 694,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 682,
													"src": "3296:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 680,
												"id": 695,
												"nodeType": "Return",
												"src": "3289:8:3"
											}
										]
									},
									"documentation": null,
									"id": 697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add128",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 697,
												"src": "3138:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 673,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3138:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 697,
												"src": "3149:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 675,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3149:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3137:22:3"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 697,
												"src": "3183:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 678,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3183:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3182:9:3"
									},
									"scope": 853,
									"src": "3122:183:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "3383:116:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 707,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "3402:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 708,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 699,
																"src": "3407:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "3402:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "75696e743132383a207375627472616374696f6e206f766572666c6f77",
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3410:31:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_214bf26b84263a08b229ee18f74895fde1be3a33320f210ca0af7e474e7eca45",
																"typeString": "literal_string \"uint128: subtraction overflow\""
															},
															"value": "uint128: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_214bf26b84263a08b229ee18f74895fde1be3a33320f210ca0af7e474e7eca45",
																"typeString": "literal_string \"uint128: subtraction overflow\""
															}
														],
														"id": 706,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3394:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:48:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 712,
												"nodeType": "ExpressionStatement",
												"src": "3394:48:3"
											},
											{
												"assignments": [
													714
												],
												"declarations": [
													{
														"constant": false,
														"id": 714,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 721,
														"src": "3453:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 713,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "3453:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 718,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 715,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 699,
														"src": "3465:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 716,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "3469:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "3465:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3453:17:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 719,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 714,
													"src": "3490:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 705,
												"id": 720,
												"nodeType": "Return",
												"src": "3483:8:3"
											}
										]
									},
									"documentation": null,
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub128",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 722,
												"src": "3329:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 698,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3329:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 722,
												"src": "3340:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 700,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3328:22:3"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 722,
												"src": "3374:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 703,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3374:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3373:9:3"
									},
									"scope": 853,
									"src": "3313:186:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "3573:111:3",
										"statements": [
											{
												"assignments": [
													732
												],
												"declarations": [
													{
														"constant": false,
														"id": 732,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 746,
														"src": "3584:8:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 731,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "3584:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 736,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 733,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "3595:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 734,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "3599:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "3595:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3584:16:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 738,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 732,
																"src": "3619:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 739,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 724,
																"src": "3624:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "3619:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "75696e7436343a206164646974696f6e206f766572666c6f77",
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3627:27:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7675c39f44124aa9788d16e91930c0fa6aa81eb57a5f5d1f222c20d9527e3d87",
																"typeString": "literal_string \"uint64: addition overflow\""
															},
															"value": "uint64: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7675c39f44124aa9788d16e91930c0fa6aa81eb57a5f5d1f222c20d9527e3d87",
																"typeString": "literal_string \"uint64: addition overflow\""
															}
														],
														"id": 737,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3611:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3611:44:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 743,
												"nodeType": "ExpressionStatement",
												"src": "3611:44:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 744,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 732,
													"src": "3675:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 730,
												"id": 745,
												"nodeType": "Return",
												"src": "3668:8:3"
											}
										]
									},
									"documentation": null,
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add64",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 747,
												"src": "3522:8:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 723,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3522:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 747,
												"src": "3532:8:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 725,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3532:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3521:20:3"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 747,
												"src": "3565:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 728,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3565:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3564:8:3"
									},
									"scope": 853,
									"src": "3507:177:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 771,
										"nodeType": "Block",
										"src": "3758:114:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 757,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 751,
																"src": "3777:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 758,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 749,
																"src": "3782:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "3777:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "75696e7436343a207375627472616374696f6e206f766572666c6f77",
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3785:30:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_79791704ba5ccf52eae5c0e67d393b26febf6f2799eb0d958daaee578ba9781f",
																"typeString": "literal_string \"uint64: subtraction overflow\""
															},
															"value": "uint64: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_79791704ba5ccf52eae5c0e67d393b26febf6f2799eb0d958daaee578ba9781f",
																"typeString": "literal_string \"uint64: subtraction overflow\""
															}
														],
														"id": 756,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3769:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3769:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 762,
												"nodeType": "ExpressionStatement",
												"src": "3769:47:3"
											},
											{
												"assignments": [
													764
												],
												"declarations": [
													{
														"constant": false,
														"id": 764,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 771,
														"src": "3827:8:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 763,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "3827:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 768,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 765,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "3838:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 766,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "3842:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "3838:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3827:16:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 769,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 764,
													"src": "3863:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 755,
												"id": 770,
												"nodeType": "Return",
												"src": "3856:8:3"
											}
										]
									},
									"documentation": null,
									"id": 772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub64",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 772,
												"src": "3707:8:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 748,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3707:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 772,
												"src": "3717:8:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 750,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3717:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3706:20:3"
									},
									"returnParameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 772,
												"src": "3750:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 753,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3750:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3749:8:3"
									},
									"scope": 853,
									"src": "3692:180:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 791,
										"nodeType": "Block",
										"src": "3940:161:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 782,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 780,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 774,
																"src": "3973:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "307830313030303030303030303030303030303030303030303030303030303030303030",
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3977:36:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																	"typeString": "int_const 3402...(31 digits omitted)...1456"
																},
																"value": "0x0100000000000000000000000000000000"
															},
															"src": "3973:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "75696e743132383a206e756d626572206f766572666c6f77",
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4028:26:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a55ac4ef8ccd14ae33c9df525bfff93daf1b2199312485325ac861b80b5a6c04",
																"typeString": "literal_string \"uint128: number overflow\""
															},
															"value": "uint128: number overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a55ac4ef8ccd14ae33c9df525bfff93daf1b2199312485325ac861b80b5a6c04",
																"typeString": "literal_string \"uint128: number overflow\""
															}
														],
														"id": 779,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3951:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3951:114:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 785,
												"nodeType": "ExpressionStatement",
												"src": "3951:114:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 788,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "4091:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 787,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4083:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint128_$",
															"typeString": "type(uint128)"
														},
														"typeName": {
															"id": 786,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "4083:7:3",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4083:10:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 778,
												"id": 790,
												"nodeType": "Return",
												"src": "4076:17:3"
											}
										]
									},
									"documentation": null,
									"id": 792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe128",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 792,
												"src": "3897:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3897:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3896:11:3"
									},
									"returnParameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 792,
												"src": "3931:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 776,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3931:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3930:9:3"
									},
									"scope": 853,
									"src": "3880:221:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 811,
										"nodeType": "Block",
										"src": "4167:106:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 800,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 794,
																"src": "4186:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3078303130303030303030303030303030303030",
																"id": 801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4190:20:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18446744073709551616_by_1",
																	"typeString": "int_const 18446744073709551616"
																},
																"value": "0x010000000000000000"
															},
															"src": "4186:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "75696e7436343a206e756d626572206f766572666c6f77",
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4212:25:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_71a394c299de6cc8d998535a4904909b3af23ceccb6c6935d76929de286c9460",
																"typeString": "literal_string \"uint64: number overflow\""
															},
															"value": "uint64: number overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_71a394c299de6cc8d998535a4904909b3af23ceccb6c6935d76929de286c9460",
																"typeString": "literal_string \"uint64: number overflow\""
															}
														],
														"id": 799,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4178:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4178:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 805,
												"nodeType": "ExpressionStatement",
												"src": "4178:60:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 808,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "4263:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 807,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4256:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 806,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4256:6:3",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4256:9:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 798,
												"id": 810,
												"nodeType": "Return",
												"src": "4249:16:3"
											}
										]
									},
									"documentation": null,
									"id": 812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe64",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 812,
												"src": "4125:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4125:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4124:11:3"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 812,
												"src": "4159:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 796,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4159:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4158:8:3"
									},
									"scope": 853,
									"src": "4109:164:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 831,
										"nodeType": "Block",
										"src": "4339:98:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 820,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 814,
																"src": "4358:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "307830313030303030303030",
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4362:12:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																},
																"value": "0x0100000000"
															},
															"src": "4358:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "75696e7433323a206e756d626572206f766572666c6f77",
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4376:25:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b896ab161d2704c243b43595cba333aac88f946cbf2b30e564ab729c121cac8",
																"typeString": "literal_string \"uint32: number overflow\""
															},
															"value": "uint32: number overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b896ab161d2704c243b43595cba333aac88f946cbf2b30e564ab729c121cac8",
																"typeString": "literal_string \"uint32: number overflow\""
															}
														],
														"id": 819,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4350:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4350:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 825,
												"nodeType": "ExpressionStatement",
												"src": "4350:52:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 828,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "4427:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 827,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4420:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": {
															"id": 826,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "4420:6:3",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:9:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 818,
												"id": 830,
												"nodeType": "Return",
												"src": "4413:16:3"
											}
										]
									},
									"documentation": null,
									"id": 832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe32",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 832,
												"src": "4297:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4297:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4296:11:3"
									},
									"returnParameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 832,
												"src": "4331:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 816,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4331:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4330:8:3"
									},
									"scope": 853,
									"src": "4281:156:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 851,
										"nodeType": "Block",
										"src": "4503:94:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 840,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 834,
																"src": "4522:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3078303130303030",
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4526:8:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_65536_by_1",
																	"typeString": "int_const 65536"
																},
																"value": "0x010000"
															},
															"src": "4522:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "75696e7433323a206e756d626572206f766572666c6f77",
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4536:25:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b896ab161d2704c243b43595cba333aac88f946cbf2b30e564ab729c121cac8",
																"typeString": "literal_string \"uint32: number overflow\""
															},
															"value": "uint32: number overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b896ab161d2704c243b43595cba333aac88f946cbf2b30e564ab729c121cac8",
																"typeString": "literal_string \"uint32: number overflow\""
															}
														],
														"id": 839,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4514:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4514:48:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 845,
												"nodeType": "ExpressionStatement",
												"src": "4514:48:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 848,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "4587:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 847,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4580:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint16_$",
															"typeString": "type(uint16)"
														},
														"typeName": {
															"id": 846,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "4580:6:3",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4580:9:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 838,
												"id": 850,
												"nodeType": "Return",
												"src": "4573:16:3"
											}
										]
									},
									"documentation": null,
									"id": 852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe16",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 852,
												"src": "4461:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4461:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4460:11:3"
									},
									"returnParameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 852,
												"src": "4495:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 836,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4495:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4494:8:3"
									},
									"scope": 853,
									"src": "4445:152:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 926,
							"src": "3095:1505:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 925,
							"linearizedBaseContracts": [
								925
							],
							"name": "Math",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 870,
										"nodeType": "Block",
										"src": "4758:40:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 865,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 863,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "4776:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 864,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "4781:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4776:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"id": 867,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 858,
														"src": "4789:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4776:14:3",
													"trueExpression": {
														"argumentTypes": null,
														"id": 866,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "4785:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 862,
												"id": 869,
												"nodeType": "Return",
												"src": "4769:21:3"
											}
										]
									},
									"documentation": {
										"id": 854,
										"nodeType": "StructuredDocumentation",
										"src": "4624:61:3",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 871,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 871,
												"src": "4704:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4704:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 871,
												"src": "4715:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4715:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4703:22:3"
									},
									"returnParameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 871,
												"src": "4749:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4749:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4748:9:3"
									},
									"scope": 925,
									"src": "4691:107:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 888,
										"nodeType": "Block",
										"src": "4941:39:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 883,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 881,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "4959:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"argumentTypes": null,
															"id": 882,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "4963:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4959:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"id": 885,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "4971:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4959:13:3",
													"trueExpression": {
														"argumentTypes": null,
														"id": 884,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "4967:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 880,
												"id": 887,
												"nodeType": "Return",
												"src": "4952:20:3"
											}
										]
									},
									"documentation": {
										"id": 872,
										"nodeType": "StructuredDocumentation",
										"src": "4806:62:3",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 889,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 889,
												"src": "4887:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 889,
												"src": "4898:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4898:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4886:22:3"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 889,
												"src": "4932:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4932:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4931:9:3"
									},
									"scope": 925,
									"src": "4874:106:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "5170:126:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 907,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 901,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 899,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 892,
																		"src": "5244:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5248:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "5244:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 902,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5243:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 905,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 903,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 894,
																		"src": "5254:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 904,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5258:1:3",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "5254:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 906,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5253:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5243:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 916,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 910,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 908,
																							"name": "a",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 892,
																							"src": "5266:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "%",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "32",
																							"id": 909,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "5270:1:3",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2_by_1",
																								"typeString": "int_const 2"
																							},
																							"value": "2"
																						},
																						"src": "5266:5:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 911,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5265:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 914,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 912,
																							"name": "b",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 894,
																							"src": "5276:1:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "%",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "32",
																							"id": 913,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "5280:1:3",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2_by_1",
																								"typeString": "int_const 2"
																							},
																							"value": "2"
																						},
																						"src": "5276:5:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 915,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5275:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5265:17:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 917,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5264:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 918,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5286:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "5264:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 920,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5263:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5243:45:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 898,
												"id": 922,
												"nodeType": "Return",
												"src": "5236:52:3"
											}
										]
									},
									"documentation": {
										"id": 890,
										"nodeType": "StructuredDocumentation",
										"src": "4988:105:3",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 924,
												"src": "5116:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 924,
												"src": "5127:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5127:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5115:22:3"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 924,
												"src": "5161:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5161:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5160:9:3"
									},
									"scope": 925,
									"src": "5099:197:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 926,
							"src": "4604:695:3"
						}
					],
					"src": "35:5266:3"
				},
				"id": 3
			}
		}
	}
}