{
	"id": "849d1cff51536d7baddb43fb2e57865d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"BasicCoin/PokerToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.6;\r\n\r\nimport \"../_lib/SafeMath.sol\";\r\nimport \"../_lib/ERC20.sol\";\r\nimport \"../_lib/Ownable.sol\";\r\n\r\nlibrary EnumerableSet {\r\n    // To implement this library for multiple types with as little code\r\n    // repetition as possible, we write it in terms of a generic Set type with\r\n    // bytes32 values.\r\n    // The Set implementation uses private functions, and user-facing\r\n    // implementations (such as AddressSet) are just wrappers around the\r\n    // underlying Set.\r\n    // This means that we can only create new EnumerableSets for types that fit\r\n    // in bytes32.\r\n\r\n    struct Set {\r\n        // Storage of set values\r\n        bytes32[] _values;\r\n        // Position of the value in the `values` array, plus 1 because index 0\r\n        // means a value is not in the set.\r\n        mapping(bytes32 => uint256) _indexes;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function _add(Set storage set, bytes32 value) private returns (bool) {\r\n        if (!_contains(set, value)) {\r\n            set._values.push(value);\r\n            // The value is stored at length-1, but we add 1 to all indexes\r\n            // and use 0 as a sentinel value\r\n            set._indexes[value] = set._values.length;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\r\n        // We read and store the value's index to prevent multiple reads from the same storage slot\r\n        uint256 valueIndex = set._indexes[value];\r\n\r\n        if (valueIndex != 0) {\r\n            // Equivalent to contains(set, value)\r\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\r\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\r\n            // This modifies the order of the array, as noted in {at}.\r\n\r\n            uint256 toDeleteIndex = valueIndex - 1;\r\n            uint256 lastIndex = set._values.length - 1;\r\n\r\n            // When the value to delete is the last one, the swap operation is unnecessary. However, since this occurs\r\n            // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement.\r\n\r\n            bytes32 lastvalue = set._values[lastIndex];\r\n\r\n            // Move the last value to the index where the value to delete is\r\n            set._values[toDeleteIndex] = lastvalue;\r\n            // Update the index for the moved value\r\n            set._indexes[lastvalue] = toDeleteIndex + 1; // All indexes are 1-based\r\n\r\n            // Delete the slot where the moved value was stored\r\n            set._values.pop();\r\n\r\n            // Delete the index for the deleted slot\r\n            delete set._indexes[value];\r\n\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function _contains(Set storage set, bytes32 value)\r\n        private\r\n        view\r\n        returns (bool)\r\n    {\r\n        return set._indexes[value] != 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values on the set. O(1).\r\n     */\r\n    function _length(Set storage set) private view returns (uint256) {\r\n        return set._values.length;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function _at(Set storage set, uint256 index)\r\n        private\r\n        view\r\n        returns (bytes32)\r\n    {\r\n        require(\r\n            set._values.length > index,\r\n            \"EnumerableSet: index out of bounds\"\r\n        );\r\n        return set._values[index];\r\n    }\r\n\r\n    // Bytes32Set\r\n\r\n    struct Bytes32Set {\r\n        Set _inner;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function add(Bytes32Set storage set, bytes32 value)\r\n        internal\r\n        returns (bool)\r\n    {\r\n        return _add(set._inner, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function remove(Bytes32Set storage set, bytes32 value)\r\n        internal\r\n        returns (bool)\r\n    {\r\n        return _remove(set._inner, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function contains(Bytes32Set storage set, bytes32 value)\r\n        internal\r\n        view\r\n        returns (bool)\r\n    {\r\n        return _contains(set._inner, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values in the set. O(1).\r\n     */\r\n    function length(Bytes32Set storage set) internal view returns (uint256) {\r\n        return _length(set._inner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function at(Bytes32Set storage set, uint256 index)\r\n        internal\r\n        view\r\n        returns (bytes32)\r\n    {\r\n        return _at(set._inner, index);\r\n    }\r\n\r\n    // AddressSet\r\n\r\n    struct AddressSet {\r\n        Set _inner;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function add(AddressSet storage set, address value)\r\n        internal\r\n        returns (bool)\r\n    {\r\n        return _add(set._inner, bytes32(uint256(value)));\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function remove(AddressSet storage set, address value)\r\n        internal\r\n        returns (bool)\r\n    {\r\n        return _remove(set._inner, bytes32(uint256(value)));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function contains(AddressSet storage set, address value)\r\n        internal\r\n        view\r\n        returns (bool)\r\n    {\r\n        return _contains(set._inner, bytes32(uint256(value)));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values in the set. O(1).\r\n     */\r\n    function length(AddressSet storage set) internal view returns (uint256) {\r\n        return _length(set._inner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function at(AddressSet storage set, uint256 index)\r\n        internal\r\n        view\r\n        returns (address)\r\n    {\r\n        return address(uint256(_at(set._inner, index)));\r\n    }\r\n\r\n    // UintSet\r\n\r\n    struct UintSet {\r\n        Set _inner;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\r\n        return _add(set._inner, bytes32(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function remove(UintSet storage set, uint256 value)\r\n        internal\r\n        returns (bool)\r\n    {\r\n        return _remove(set._inner, bytes32(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function contains(UintSet storage set, uint256 value)\r\n        internal\r\n        view\r\n        returns (bool)\r\n    {\r\n        return _contains(set._inner, bytes32(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values on the set. O(1).\r\n     */\r\n    function length(UintSet storage set) internal view returns (uint256) {\r\n        return _length(set._inner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function at(UintSet storage set, uint256 index)\r\n        internal\r\n        view\r\n        returns (uint256)\r\n    {\r\n        return uint256(_at(set._inner, index));\r\n    }\r\n}\r\n\r\ncontract PokerToken is ERC20, Ownable {\r\n    using SafeMath for uint256;\r\n\r\n    using EnumerableSet for EnumerableSet.AddressSet;\r\n    EnumerableSet.AddressSet private _minters;\r\n    mapping(uint256 => uint256) public yearMintLimit;\r\n    mapping(address => uint256) public contractMintLimit;\r\n    mapping(address => mapping(uint256 => uint256)) public recordContractLimit;\r\n    uint256 public YEAR_MINT_NUM = 1000000000 * 10**18;\r\n\r\n    constructor() public ERC20(\"POKER\", \"POKER\", 18, 0) {}\r\n\r\n    function burn(uint256 amount_) external {\r\n        _burn(msg.sender, amount_);\r\n    }\r\n\r\n    function mint(uint256 amount_) external {\r\n        require(\r\n            yearMintLimit[getYear()].add(amount_) <= YEAR_MINT_NUM,\r\n            \"PokerToken: yearMintLimit\"\r\n        );\r\n        if (isOwner()) {\r\n            _mint(owner(), amount_);\r\n            yearMintLimit[getYear()] = yearMintLimit[getYear()].add(amount_);\r\n        }\r\n    }\r\n\r\n    function mint(address _to, uint256 _amount)\r\n        public\r\n        onlyMinter\r\n        returns (bool)\r\n    {\r\n        require(\r\n            yearMintLimit[getYear()].add(_amount) <= YEAR_MINT_NUM,\r\n            \"PokerToken: yearMintLimit\"\r\n        );\r\n        _mint(_to, _amount);\r\n        yearMintLimit[getYear()] = yearMintLimit[getYear()].add(_amount);\r\n        recordContractLimit[msg.sender][getYear()] = recordContractLimit[\r\n            msg.sender\r\n        ][getYear()].add(_amount);\r\n        require(\r\n            recordContractLimit[msg.sender][getYear()] <=\r\n                contractMintLimit[msg.sender],\r\n            \"PokerToken: recordContractLimit\"\r\n        );\r\n        return true;\r\n    }\r\n\r\n    function addMinter(address _addMinter, uint256 _amount)\r\n        public\r\n        onlyOwner\r\n        returns (bool)\r\n    {\r\n        require(\r\n            _addMinter != address(0),\r\n            \"PokerToken: _addMinter is the zero address\"\r\n        );\r\n        setContractMintNum(_addMinter, _amount);\r\n        return EnumerableSet.add(_minters, _addMinter);\r\n    }\r\n\r\n    function delMinter(address _delMinter) public onlyOwner returns (bool) {\r\n        require(\r\n            _delMinter != address(0),\r\n            \"PokerToken: _delMinter is the zero address\"\r\n        );\r\n        return EnumerableSet.remove(_minters, _delMinter);\r\n    }\r\n\r\n    function getMinterLength() public view returns (uint256) {\r\n        return EnumerableSet.length(_minters);\r\n    }\r\n\r\n    function isMinter(address account) public view returns (bool) {\r\n        return EnumerableSet.contains(_minters, account);\r\n    }\r\n\r\n    function getMinter(uint256 _index) public view onlyOwner returns (address) {\r\n        require(\r\n            _index <= getMinterLength() - 1,\r\n            \"PokerToken: index out of bounds\"\r\n        );\r\n        return EnumerableSet.at(_minters, _index);\r\n    }\r\n\r\n    // modifier for mint function\r\n    modifier onlyMinter() {\r\n        require(isMinter(msg.sender), \"caller is not the minter\");\r\n        _;\r\n    }\r\n\r\n    uint256 constant SECONDS_PER_DAY = 24 * 60 * 60;\r\n    uint256 constant SECONDS_PER_HOUR = 60 * 60;\r\n    uint256 constant SECONDS_PER_MINUTE = 60;\r\n    int256 constant OFFSET19700101 = 2440588;\r\n\r\n    function getYear() public view returns (uint256 year) {\r\n        uint256 timestamp = block.timestamp;\r\n        uint256 _days = timestamp / SECONDS_PER_DAY;\r\n        int256 __days = int256(_days);\r\n\r\n        int256 L = __days + 68569 + OFFSET19700101;\r\n        int256 N = (4 * L) / 146097;\r\n        L = L - (146097 * N + 3) / 4;\r\n        int256 _year = (4000 * (L + 1)) / 1461001;\r\n        L = L - (1461 * _year) / 4 + 31;\r\n        int256 _month = (80 * L) / 2447;\r\n        //int _day = L - 2447 * _month / 80;\r\n        L = _month / 11;\r\n        _month = _month + 2 - 12 * L;\r\n        _year = 100 * (N - 49) + _year + L;\r\n\r\n        year = uint256(_year);\r\n    }\r\n\r\n    function setYearMintNum(uint256 num) public {\r\n        if (isOwner()) {\r\n            YEAR_MINT_NUM = num;\r\n        }\r\n    }\r\n\r\n    function setContractMintNum(address ads, uint256 num) public {\r\n        if (isOwner()) {\r\n            contractMintLimit[ads] = num;\r\n        }\r\n    }\r\n\r\n    uint256 batchAmount = 10**18;\r\n\r\n    function batchTransferToken(address[] memory holders) public {\r\n        if (isOwner()) {\r\n            for (uint256 i = 0; i < holders.length; i++) {\r\n                _transfer(msg.sender, holders[i], batchAmount); //add\r\n                //emit Transfer(msg.sender, holders[i], batchAmount);\r\n            }\r\n        }\r\n    }\r\n\r\n    function setBatchAmount(uint256 num) public {\r\n        if (isOwner()) {\r\n            batchAmount = num;\r\n        }\r\n    }\r\n}\r\n"
			},
			"_lib/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.6;\r\n\r\nimport \"./Context.sol\";\r\n\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() internal {\r\n        _owner = _msgSender();\r\n        emit OwnershipTransferred(address(0), _owner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(_msgSender() == _owner, \"not owner\");\r\n        _;\r\n    }\r\n    \r\n    function isOwner() public view returns (bool){\r\n        bool flag = _msgSender() == _owner;\r\n        require(flag==true,\"not owner\");\r\n        return flag;\r\n    }\r\n\r\n}\r\n"
			},
			"_lib/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.6;\r\n\r\nimport \"./SafeMath.sol\";\r\nimport \"./IERC20.sol\";\r\nimport \"./Context.sol\";\r\n\r\ncontract ERC20 is IERC20, Context {\r\n    using SafeMath for uint256;\r\n\r\n    mapping(address => uint256) internal _balances;\r\n    mapping(address => mapping(address => uint256)) internal _allowances;\r\n\r\n    uint256 internal _totalSupply;\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    string public name;\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    string public symbol;\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\r\n     * called.\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    uint8 public decimals;\r\n\r\n    /**\r\n     * @dev Sets the values for {_name} and {_symbol}, {_decimals}\r\n     *\r\n     * To select a different value for {decimals}, use {_setupDecimals}.\r\n     *\r\n     * All three of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor(\r\n        string memory _name,\r\n        string memory _symbol,\r\n        uint8 _decimals,\r\n        uint256 _supply\r\n    ) public {\r\n        name = _name;\r\n        symbol = _symbol;\r\n        decimals = _decimals;\r\n        _supply = _supply * 10**uint256(_decimals);\r\n        _totalSupply = _supply;\r\n        _balances[msg.sender] = _supply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() external view override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address _owner)\r\n        external\r\n        view\r\n        override\r\n        returns (uint256)\r\n    {\r\n        return _balances[_owner];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `_to` cannot be the zero address.\r\n     * - the caller must have a balance of at least `_amount`.\r\n     */\r\n    function transfer(address _to, uint256 _amount)\r\n        external\r\n        override\r\n        returns (bool)\r\n    {\r\n        _transfer(_msgSender(), _to, _amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address _owner, address _spender)\r\n        external\r\n        view\r\n        override\r\n        returns (uint256)\r\n    {\r\n        return _allowances[_owner][_spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `_spender` cannot be the zero address.\r\n     */\r\n    function approve(address _spender, uint256 _amount)\r\n        external\r\n        override\r\n        returns (bool)\r\n    {\r\n        _approve(_msgSender(), _spender, _amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {ERC20}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `_from` and `_to` cannot be the zero address.\r\n     * - `_from` must have a balance of at least `_amount`.\r\n     * - the caller must have allowance for `_from`'s tokens of at least\r\n     * `_amount`.\r\n     */\r\n    function transferFrom(\r\n        address _from,\r\n        address _to,\r\n        uint256 _amount\r\n    ) external override returns (bool) {\r\n        require(_from != address(0) && _to != address(0));\r\n\r\n        _approve(\r\n            _from,\r\n            _msgSender(),\r\n            _allowances[_from][_msgSender()].sub(_amount)\r\n        );\r\n        _transfer(_from, _to, _amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves tokens `_amount` from `_from` to `_to`.\r\n     *\r\n     * This is internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `_from` cannot be the zero address.\r\n     * - `_to` cannot be the zero address.\r\n     * - `_from` must have a balance of at least `_amount`.\r\n     */\r\n    function _transfer(\r\n        address _from,\r\n        address _to,\r\n        uint256 _amount\r\n    ) internal {\r\n        require(_from != address(0), \"transfer from 0\");\r\n        require(_to != address(0), \"transfer to 0\");\r\n        require(_to != address(0xdead), \"transfer to 0xdead\");\r\n\r\n        _balances[_from] = _balances[_from].sub(_amount);\r\n        _balances[_to] = _balances[_to].add(_amount);\r\n        emit Transfer(_from, _to, _amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `_spender` over the `_owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `_owner` cannot be the zero address.\r\n     * - `_spender` cannot be the zero address.\r\n     */\r\n    function _approve(\r\n        address _owner,\r\n        address _spender,\r\n        uint256 _amount\r\n    ) internal {\r\n        require(_owner != address(0), \"approve from 0\");\r\n        require(_spender != address(0), \"approve to 0\");\r\n\r\n        _allowances[_owner][_spender] = _amount;\r\n        emit Approval(_owner, _spender, _amount);\r\n    }\r\n\r\n    /** @dev Creates `_amount` tokens and assigns them to `_to`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     */\r\n    function _mint(address _to, uint256 _amount) internal {\r\n        require(_to != address(0), \"mint to 0\");\r\n\r\n        _totalSupply = _totalSupply.add(_amount);\r\n        _balances[_to] = _balances[_to].add(_amount);\r\n        emit Transfer(address(0), _to, _amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `_amount` tokens from `_from`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `_from` cannot be the zero address.\r\n     * - `_from` must have at least `_amount` tokens.\r\n     */\r\n    function _burn(address _from, uint256 _amount) internal {\r\n        require(_from != address(0), \"burn from 0\");\r\n        require(_from != address(0xdead), \"burn from 0xdead\");\r\n\r\n        _balances[_from] = _balances[_from].sub(_amount);\r\n        _totalSupply = _totalSupply.sub(_amount);\r\n        emit Transfer(_from, address(0xdead), _amount);\r\n    }\r\n}\r\n"
			},
			"_lib/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.6;\r\n\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a, \"SafeMath: subtraction overflow\");\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Solidity only automatically asserts when dividing by 0\r\n        require(b > 0, \"SafeMath: division by zero\");\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b != 0, \"SafeMath: modulo by zero\");\r\n        return a % b;\r\n    }\r\n}\r\n\r\nlibrary SafeMathExt {\r\n    function add128(uint128 a, uint128 b) internal pure returns (uint128) {\r\n        uint128 c = a + b;\r\n        require(c >= a, \"uint128: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    function sub128(uint128 a, uint128 b) internal pure returns (uint128) {\r\n        require(b <= a, \"uint128: subtraction overflow\");\r\n        uint128 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    function add64(uint64 a, uint64 b) internal pure returns (uint64) {\r\n        uint64 c = a + b;\r\n        require(c >= a, \"uint64: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    function sub64(uint64 a, uint64 b) internal pure returns (uint64) {\r\n        require(b <= a, \"uint64: subtraction overflow\");\r\n        uint64 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    function safe128(uint256 a) internal pure returns (uint128) {\r\n        require(\r\n            a < 0x0100000000000000000000000000000000,\r\n            \"uint128: number overflow\"\r\n        );\r\n        return uint128(a);\r\n    }\r\n\r\n    function safe64(uint256 a) internal pure returns (uint64) {\r\n        require(a < 0x010000000000000000, \"uint64: number overflow\");\r\n        return uint64(a);\r\n    }\r\n\r\n    function safe32(uint256 a) internal pure returns (uint32) {\r\n        require(a < 0x0100000000, \"uint32: number overflow\");\r\n        return uint32(a);\r\n    }\r\n\r\n    function safe16(uint256 a) internal pure returns (uint16) {\r\n        require(a < 0x010000, \"uint32: number overflow\");\r\n        return uint16(a);\r\n    }\r\n}\r\n\r\nlibrary Math {\r\n    /**\r\n     * @dev Returns the largest of two numbers.\r\n     */\r\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a >= b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two numbers.\r\n     */\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two numbers. The result is rounded towards\r\n     * zero.\r\n     */\r\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // (a + b) / 2 can overflow, so we distribute\r\n        return (a / 2) + (b / 2) + (((a % 2) + (b % 2)) / 2);\r\n    }\r\n}\r\n"
			},
			"_lib/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.6;\r\n\r\n/*\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with GSN meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address payable) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes memory) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}"
			},
			"_lib/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.6;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n * From https://github.com/OpenZeppelin/openzeppelin-contracts\r\n */\r\ninterface IERC20 {\r\n  /**\r\n   * @dev Returns the amount of tokens in existence.\r\n   */\r\n  function totalSupply() external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Returns the amount of tokens owned by `account`.\r\n   */\r\n  function balanceOf(address account) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n  function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Returns the remaining number of tokens that `spender` will be\r\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n   * zero by default.\r\n   *\r\n   * This value changes when {approve} or {transferFrom} are called.\r\n   */\r\n  function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n   * that someone may use both the old and the new allowance by unfortunate\r\n   * transaction ordering. One possible solution to mitigate this race\r\n   * condition is to first reduce the spender's allowance to 0 and set the\r\n   * desired value afterwards:\r\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n   *\r\n   * Emits an {Approval} event.\r\n   */\r\n  function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n   * allowance mechanism. `amount` is then deducted from the caller's\r\n   * allowance.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n  function transferFrom(\r\n    address sender,\r\n    address recipient,\r\n    uint256 amount\r\n  ) external returns (bool);\r\n\r\n  /**\r\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n   * another (`to`).\r\n   *\r\n   * Note that `value` may be zero.\r\n   */\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n  /**\r\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n   * a call to {approve}. `value` is the new allowance.\r\n   */\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"BasicCoin/PokerToken.sol": {
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"BasicCoin/PokerToken.sol\":156:9478  library EnumerableSet {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"BasicCoin/PokerToken.sol\":156:9478  library EnumerableSet {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220983e3ca094d6c1999f0d8a9702729b6551afff8b63257f50dc721b02a76a069964736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220983e3ca094d6c1999f0d8a9702729b6551afff8b63257f50dc721b02a76a069964736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 RETURNDATACOPY EXTCODECOPY LOG0 SWAP5 0xD6 0xC1 SWAP10 SWAP16 0xD DUP11 SWAP8 MUL PUSH19 0x9B6551AFFF8B63257F50DC721B02A76A069964 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
							"sourceMap": "156:9322:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220983e3ca094d6c1999f0d8a9702729b6551afff8b63257f50dc721b02a76a069964736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 RETURNDATACOPY EXTCODECOPY LOG0 SWAP5 0xD6 0xC1 SWAP10 SWAP16 0xD DUP11 SWAP8 MUL PUSH19 0x9B6551AFFF8B63257F50DC721B02A76A069964 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
							"sourceMap": "156:9322:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_add(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_at(struct EnumerableSet.Set storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_length(struct EnumerableSet.Set storage pointer)": "infinite",
								"_remove(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"add(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.Bytes32Set storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"contains(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"length(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"length(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"length(struct EnumerableSet.UintSet storage pointer)": "infinite",
								"remove(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"remove(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 156,
									"end": 9478,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 156,
									"end": 9478,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 156,
									"end": 9478,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 156,
									"end": 9478,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 156,
									"end": 9478,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 156,
									"end": 9478,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 156,
									"end": 9478,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 156,
									"end": 9478,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 156,
									"end": 9478,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 156,
									"end": 9478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 156,
									"end": 9478,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 156,
									"end": 9478,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 156,
									"end": 9478,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 156,
									"end": 9478,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 156,
									"end": 9478,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 156,
									"end": 9478,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 156,
									"end": 9478,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 156,
									"end": 9478,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 156,
									"end": 9478,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 156,
									"end": 9478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 156,
									"end": 9478,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 156,
									"end": 9478,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 156,
									"end": 9478,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 156,
									"end": 9478,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 156,
									"end": 9478,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 156,
									"end": 9478,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 156,
									"end": 9478,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220983e3ca094d6c1999f0d8a9702729b6551afff8b63257f50dc721b02a76a069964736f6c634300060c0033",
									".code": [
										{
											"begin": 156,
											"end": 9478,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 156,
											"end": 9478,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 156,
											"end": 9478,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 156,
											"end": 9478,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 156,
											"end": 9478,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 156,
											"end": 9478,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 156,
											"end": 9478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 156,
											"end": 9478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 156,
											"end": 9478,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BasicCoin/PokerToken.sol\":\"EnumerableSet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BasicCoin/PokerToken.sol\":{\"keccak256\":\"0x72f6d3755b9a9a4eaca2dec834063bc2e0884bedfc723a9e8575a26ef27be06f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://647f66be338b180f24f695ec9afb4dffcfcacd5e220e36a99ab828a3ef2577b1\",\"dweb:/ipfs/QmYjbGbykxKkMvsoBJw3xSf26ogG9PFjb6CqDdZ3mwxxNF\"]},\"_lib/Context.sol\":{\"keccak256\":\"0x77ec8b534124690b04754bc03aaa982479b91b9f7508bed54455c161e93a02e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf08de24c3951531b87b85a75157d4b26ddcb8952452672f9da9f63c06982e9f\",\"dweb:/ipfs/QmaUzytpjpYHNTXw3Hy4cdKmNoU5PWpyMZBhorK69pk8sA\"]},\"_lib/ERC20.sol\":{\"keccak256\":\"0x2ce16e09e444519aec6a0e1f355325dfe2af844ea539ae8f8a7d53a2daf6d844\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb89e49b22ff4dd4d67fe590e95ce997d8a5a83db5ca8a246086dd4a56f01a72\",\"dweb:/ipfs/QmfZbMN1MNau96zL4xS1EtA9gVyNRWPwZCWwGVVeNG8uNF\"]},\"_lib/IERC20.sol\":{\"keccak256\":\"0x943e16fe1fdaa84c7329da3fa5aab8ce507ff7b6776a3925e97ffc0beef9692a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7727696ef766547aaa34152d06a443c5c8924fa363f47e51335d0e3d619c194\",\"dweb:/ipfs/QmRYgfYhpyjHaQjSJMG5fDdDGbQA9eXCGhuSRnwGfoSyCD\"]},\"_lib/Ownable.sol\":{\"keccak256\":\"0x9bb16a0785f0f888e4b470311e02af5bb72f0663d7be20eb7a60902e29e35406\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://014bf309648c0793be70899bc260d7094e17de223ed8eaebae9327643623cf93\",\"dweb:/ipfs/QmR4LhypLf6CVNvqxgDDAJ4E9E5h3wqV6RT8g7jERZdVLT\"]},\"_lib/SafeMath.sol\":{\"keccak256\":\"0xe1bb41b0568cdd4364bb5fcba4fd6065df59c3ea8147e040fb9c978bc3a89af5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e4192a8253ea1f04e97ac1ac3df25dc77719696b0bee70b3af1a4a56edcb5b\",\"dweb:/ipfs/QmaQ4TkRxpXxjtKKewy2oAgJXFbdqSwacBUMrNaSgZ72jt\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"PokerToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "YEAR_MINT_NUM",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addMinter",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "addMinter",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "holders",
									"type": "address[]"
								}
							],
							"name": "batchTransferToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount_",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "contractMintLimit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_delMinter",
									"type": "address"
								}
							],
							"name": "delMinter",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								}
							],
							"name": "getMinter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMinterLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getYear",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "year",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isMinter",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount_",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "recordContractLimit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "num",
									"type": "uint256"
								}
							],
							"name": "setBatchAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "ads",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "num",
									"type": "uint256"
								}
							],
							"name": "setContractMintNum",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "num",
									"type": "uint256"
								}
							],
							"name": "setYearMintNum",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "yearMintLimit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `_spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `_to` cannot be the zero address. - the caller must have a balance of at least `_amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `_from` and `_to` cannot be the zero address. - `_from` must have a balance of at least `_amount`. - the caller must have allowance for `_from`'s tokens of at least `_amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"BasicCoin/PokerToken.sol\":9482:14104  contract PokerToken is ERC20, Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"BasicCoin/PokerToken.sol\":9891:9910  1000000000 * 10**18 */\n  0x033b2e3c9fd0803ce8000000\n    /* \"BasicCoin/PokerToken.sol\":9860:9910  uint256 public YEAR_MINT_NUM = 1000000000 * 10**18 */\n  0x0b\n  sstore\n    /* \"BasicCoin/PokerToken.sol\":13634:13640  10**18 */\n  0x0de0b6b3a7640000\n    /* \"BasicCoin/PokerToken.sol\":13612:13640  uint256 batchAmount = 10**18 */\n  0x0c\n  sstore\n    /* \"BasicCoin/PokerToken.sol\":9919:9973  constructor() public ERC20(\"POKER\", \"POKER\", 18, 0) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"_lib/ERC20.sol\":1552:1909  constructor(\r... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x504f4b4552000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x504f4b4552000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"BasicCoin/PokerToken.sol\":9964:9966  18 */\n  0x12\n    /* \"BasicCoin/PokerToken.sol\":9968:9969  0 */\n  0x00\n    /* \"_lib/ERC20.sol\":1710:1715  _name */\n  dup4\n    /* \"_lib/ERC20.sol\":1703:1707  name */\n  0x03\n    /* \"_lib/ERC20.sol\":1703:1715  name = _name */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_6\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"_lib/ERC20.sol\":1735:1742  _symbol */\n  dup3\n    /* \"_lib/ERC20.sol\":1726:1732  symbol */\n  0x04\n    /* \"_lib/ERC20.sol\":1726:1742  symbol = _symbol */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_8\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"_lib/ERC20.sol\":1764:1773  _decimals */\n  dup2\n    /* \"_lib/ERC20.sol\":1753:1761  decimals */\n  0x05\n  0x00\n    /* \"_lib/ERC20.sol\":1753:1773  decimals = _decimals */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"_lib/ERC20.sol\":1816:1825  _decimals */\n  dup2\n    /* \"_lib/ERC20.sol\":1808:1826  uint256(_decimals) */\n  0xff\n  and\n    /* \"_lib/ERC20.sol\":1804:1806  10 */\n  0x0a\n    /* \"_lib/ERC20.sol\":1804:1826  10**uint256(_decimals) */\n  exp\n    /* \"_lib/ERC20.sol\":1794:1801  _supply */\n  dup2\n    /* \"_lib/ERC20.sol\":1794:1826  _supply * 10**uint256(_decimals) */\n  mul\n    /* \"_lib/ERC20.sol\":1784:1826  _supply = _supply * 10**uint256(_decimals) */\n  swap1\n  pop\n    /* \"_lib/ERC20.sol\":1852:1859  _supply */\n  dup1\n    /* \"_lib/ERC20.sol\":1837:1849  _totalSupply */\n  0x02\n    /* \"_lib/ERC20.sol\":1837:1859  _totalSupply = _supply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"_lib/ERC20.sol\":1894:1901  _supply */\n  dup1\n    /* \"_lib/ERC20.sol\":1870:1879  _balances */\n  0x00\n    /* \"_lib/ERC20.sol\":1870:1891  _balances[msg.sender] */\n  dup1\n    /* \"_lib/ERC20.sol\":1880:1890  msg.sender */\n  caller\n    /* \"_lib/ERC20.sol\":1870:1891  _balances[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"_lib/ERC20.sol\":1870:1901  _balances[msg.sender] = _supply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"_lib/ERC20.sol\":1552:1909  constructor(\r... */\n  pop\n  pop\n  pop\n  pop\n    /* \"_lib/Ownable.sol\":398:410  _msgSender() */\n  tag_10\n    /* \"_lib/Ownable.sol\":398:408  _msgSender */\n  shl(0x20, tag_11)\n    /* \"_lib/Ownable.sol\":398:410  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"_lib/Ownable.sol\":389:395  _owner */\n  0x05\n  0x01\n    /* \"_lib/Ownable.sol\":389:410  _owner = _msgSender() */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"_lib/Ownable.sol\":459:465  _owner */\n  0x05\n  0x01\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"_lib/Ownable.sol\":426:466  OwnershipTransferred(address(0), _owner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"_lib/Ownable.sol\":455:456  0 */\n  0x00\n    /* \"_lib/Ownable.sol\":426:466  OwnershipTransferred(address(0), _owner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"BasicCoin/PokerToken.sol\":9482:14104  contract PokerToken is ERC20, Ownable {\r... */\n  jump(tag_13)\n    /* \"_lib/Context.sol\":605:711  function _msgSender() internal view virtual returns (address payable) {\r... */\ntag_11:\n    /* \"_lib/Context.sol\":658:673  address payable */\n  0x00\n    /* \"_lib/Context.sol\":693:703  msg.sender */\n  caller\n    /* \"_lib/Context.sol\":686:703  return msg.sender */\n  swap1\n  pop\n    /* \"_lib/Context.sol\":605:711  function _msgSender() internal view virtual returns (address payable) {\r... */\n  swap1\n  jump\t// out\n    /* \"BasicCoin/PokerToken.sol\":9482:14104  contract PokerToken is ERC20, Ownable {\r... */\ntag_7:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_15)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_15\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\ntag_15:\n  pop\n  swap1\n  pop\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\ntag_21:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_22\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_21)\ntag_22:\n  pop\n  swap1\n  jump\t// out\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"BasicCoin/PokerToken.sol\":9482:14104  contract PokerToken is ERC20, Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x761248b4\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xaa271e1a\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xe1665f56\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xe235a4a6\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xfd08921b\n      eq\n      tag_30\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0xaa271e1a\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xb56a711c\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xdb6783b8\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0x9098f2a7\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x9098f2a7\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x761248b4\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8f32d59b\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x23b872dd\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x42966c68\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x599a1c3a\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x5b7121f8\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x23b872dd\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x095ea7b3\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x230614fb\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23338b88\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x0323aac7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x092654a0\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"BasicCoin/PokerToken.sol\":11779:11892  function getMinterLength() public view returns (uint256) {\r... */\n    tag_3:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_lib/ERC20.sol\":445:463  string public name */\n    tag_4:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_42:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_44\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_42)\n    tag_44:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_45\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_45:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BasicCoin/PokerToken.sol\":9720:9772  mapping(address => uint256) public contractMintLimit */\n    tag_5:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_48\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_lib/ERC20.sol\":3099:3298  function approve(address _spender, uint256 _amount)\r... */\n    tag_6:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_51\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_lib/ERC20.sol\":1974:2076  function totalSupply() external view override returns (uint256) {\r... */\n    tag_7:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BasicCoin/PokerToken.sol\":13649:13972  function batchTransferToken(address[] memory holders) public {\r... */\n    tag_8:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      0x0100000000\n      dup2\n      gt\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x20\n      dup4\n      mul\n      dup5\n      add\n      gt\n      0x0100000000\n      dup4\n      gt\n      or\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      dup2\n      dup5\n      add\n      mstore\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      swap1\n      pop\n      dup1\n      dup4\n      add\n      swap3\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      tag_59\n      jump\t// in\n    tag_54:\n      stop\n        /* \"BasicCoin/PokerToken.sol\":11505:11771  function delMinter(address _delMinter) public onlyOwner returns (bool) {\r... */\n    tag_9:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_62\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_lib/ERC20.sol\":3771:4175  function transferFrom(\r... */\n    tag_10:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_65\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_lib/ERC20.sol\":1242:1263  uint8 public decimals */\n    tag_11:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BasicCoin/PokerToken.sol\":10424:11127  function mint(address _to, uint256 _amount)\r... */\n    tag_12:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_70\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BasicCoin/PokerToken.sol\":9981:10066  function burn(uint256 amount_) external {\r... */\n    tag_13:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_73\n      jump\t// in\n    tag_71:\n      stop\n        /* \"BasicCoin/PokerToken.sol\":13324:13447  function setYearMintNum(uint256 num) public {\r... */\n    tag_14:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_76\n      jump\t// in\n    tag_74:\n      stop\n        /* \"BasicCoin/PokerToken.sol\":12037:12295  function getMinter(uint256 _index) public view onlyOwner returns (address) {\r... */\n    tag_15:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_79\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_lib/ERC20.sol\":2139:2299  function balanceOf(address _owner)\r... */\n    tag_16:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_82\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BasicCoin/PokerToken.sol\":11135:11497  function addMinter(address _addMinter, uint256 _amount)\r... */\n    tag_17:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_85\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_lib/Ownable.sol\":555:634  function owner() public view returns (address) {\r... */\n    tag_18:\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_lib/Ownable.sol\":835:997  function isOwner() public view returns (bool){\r... */\n    tag_19:\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BasicCoin/PokerToken.sol\":9665:9713  mapping(uint256 => uint256) public yearMintLimit */\n    tag_20:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_92\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_lib/ERC20.sol\":583:603  string public symbol */\n    tag_21:\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_95:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_97\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_95)\n    tag_97:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_98\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_98:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BasicCoin/PokerToken.sol\":10074:10416  function mint(uint256 amount_) external {\r... */\n    tag_22:\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_101\n      jump\t// in\n    tag_99:\n      stop\n        /* \"_lib/ERC20.sol\":2507:2698  function transfer(address _to, uint256 _amount)\r... */\n    tag_23:\n      tag_102\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_104\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BasicCoin/PokerToken.sol\":11900:12029  function isMinter(address account) public view returns (bool) {\r... */\n    tag_24:\n      tag_105\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_107\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BasicCoin/PokerToken.sol\":13455:13604  function setContractMintNum(address ads, uint256 num) public {\r... */\n    tag_25:\n      tag_108\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_110\n      jump\t// in\n    tag_108:\n      stop\n        /* \"BasicCoin/PokerToken.sol\":13980:14101  function setBatchAmount(uint256 num) public {\r... */\n    tag_26:\n      tag_111\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_113\n      jump\t// in\n    tag_111:\n      stop\n        /* \"_lib/ERC20.sol\":2761:2951  function allowance(address _owner, address _spender)\r... */\n    tag_27:\n      tag_114\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_116\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BasicCoin/PokerToken.sol\":9860:9910  uint256 public YEAR_MINT_NUM = 1000000000 * 10**18 */\n    tag_28:\n      tag_117\n      tag_118\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BasicCoin/PokerToken.sol\":9779:9853  mapping(address => mapping(uint256 => uint256)) public recordContractLimit */\n    tag_29:\n      tag_119\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_121\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BasicCoin/PokerToken.sol\":12656:13316  function getYear() public view returns (uint256 year) {\r... */\n    tag_30:\n      tag_122\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BasicCoin/PokerToken.sol\":11779:11892  function getMinterLength() public view returns (uint256) {\r... */\n    tag_39:\n        /* \"BasicCoin/PokerToken.sol\":11827:11834  uint256 */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":11854:11884  EnumerableSet.length(_minters) */\n      tag_125\n        /* \"BasicCoin/PokerToken.sol\":11875:11883  _minters */\n      0x06\n        /* \"BasicCoin/PokerToken.sol\":11854:11874  EnumerableSet.length */\n      tag_126\n        /* \"BasicCoin/PokerToken.sol\":11854:11884  EnumerableSet.length(_minters) */\n      jump\t// in\n    tag_125:\n        /* \"BasicCoin/PokerToken.sol\":11847:11884  return EnumerableSet.length(_minters) */\n      swap1\n      pop\n        /* \"BasicCoin/PokerToken.sol\":11779:11892  function getMinterLength() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"_lib/ERC20.sol\":445:463  string public name */\n    tag_41:\n      0x03\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_127\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_128\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_127)\n    tag_128:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_129:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_129\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_127:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"BasicCoin/PokerToken.sol\":9720:9772  mapping(address => uint256) public contractMintLimit */\n    tag_48:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"_lib/ERC20.sol\":3099:3298  function approve(address _spender, uint256 _amount)\r... */\n    tag_51:\n        /* \"_lib/ERC20.sol\":3205:3209  bool */\n      0x00\n        /* \"_lib/ERC20.sol\":3227:3268  _approve(_msgSender(), _spender, _amount) */\n      tag_131\n        /* \"_lib/ERC20.sol\":3236:3248  _msgSender() */\n      tag_132\n        /* \"_lib/ERC20.sol\":3236:3246  _msgSender */\n      tag_133\n        /* \"_lib/ERC20.sol\":3236:3248  _msgSender() */\n      jump\t// in\n    tag_132:\n        /* \"_lib/ERC20.sol\":3250:3258  _spender */\n      dup5\n        /* \"_lib/ERC20.sol\":3260:3267  _amount */\n      dup5\n        /* \"_lib/ERC20.sol\":3227:3235  _approve */\n      tag_134\n        /* \"_lib/ERC20.sol\":3227:3268  _approve(_msgSender(), _spender, _amount) */\n      jump\t// in\n    tag_131:\n        /* \"_lib/ERC20.sol\":3286:3290  true */\n      0x01\n        /* \"_lib/ERC20.sol\":3279:3290  return true */\n      swap1\n      pop\n        /* \"_lib/ERC20.sol\":3099:3298  function approve(address _spender, uint256 _amount)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"_lib/ERC20.sol\":1974:2076  function totalSupply() external view override returns (uint256) {\r... */\n    tag_53:\n        /* \"_lib/ERC20.sol\":2029:2036  uint256 */\n      0x00\n        /* \"_lib/ERC20.sol\":2056:2068  _totalSupply */\n      sload(0x02)\n        /* \"_lib/ERC20.sol\":2049:2068  return _totalSupply */\n      swap1\n      pop\n        /* \"_lib/ERC20.sol\":1974:2076  function totalSupply() external view override returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"BasicCoin/PokerToken.sol\":13649:13972  function batchTransferToken(address[] memory holders) public {\r... */\n    tag_59:\n        /* \"BasicCoin/PokerToken.sol\":13725:13734  isOwner() */\n      tag_137\n        /* \"BasicCoin/PokerToken.sol\":13725:13732  isOwner */\n      tag_89\n        /* \"BasicCoin/PokerToken.sol\":13725:13734  isOwner() */\n      jump\t// in\n    tag_137:\n        /* \"BasicCoin/PokerToken.sol\":13721:13965  if (isOwner()) {\r... */\n      iszero\n      tag_138\n      jumpi\n        /* \"BasicCoin/PokerToken.sol\":13756:13765  uint256 i */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":13751:13954  for (uint256 i = 0; i < holders.length; i++) {\r... */\n    tag_139:\n        /* \"BasicCoin/PokerToken.sol\":13775:13782  holders */\n      dup2\n        /* \"BasicCoin/PokerToken.sol\":13775:13789  holders.length */\n      mload\n        /* \"BasicCoin/PokerToken.sol\":13771:13772  i */\n      dup2\n        /* \"BasicCoin/PokerToken.sol\":13771:13789  i < holders.length */\n      lt\n        /* \"BasicCoin/PokerToken.sol\":13751:13954  for (uint256 i = 0; i < holders.length; i++) {\r... */\n      iszero\n      tag_140\n      jumpi\n        /* \"BasicCoin/PokerToken.sol\":13815:13861  _transfer(msg.sender, holders[i], batchAmount) */\n      tag_142\n        /* \"BasicCoin/PokerToken.sol\":13825:13835  msg.sender */\n      caller\n        /* \"BasicCoin/PokerToken.sol\":13837:13844  holders */\n      dup4\n        /* \"BasicCoin/PokerToken.sol\":13845:13846  i */\n      dup4\n        /* \"BasicCoin/PokerToken.sol\":13837:13847  holders[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_143\n      jumpi\n      invalid\n    tag_143:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"BasicCoin/PokerToken.sol\":13849:13860  batchAmount */\n      sload(0x0c)\n        /* \"BasicCoin/PokerToken.sol\":13815:13824  _transfer */\n      tag_144\n        /* \"BasicCoin/PokerToken.sol\":13815:13861  _transfer(msg.sender, holders[i], batchAmount) */\n      jump\t// in\n    tag_142:\n        /* \"BasicCoin/PokerToken.sol\":13791:13794  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"BasicCoin/PokerToken.sol\":13751:13954  for (uint256 i = 0; i < holders.length; i++) {\r... */\n      jump(tag_139)\n    tag_140:\n      pop\n        /* \"BasicCoin/PokerToken.sol\":13721:13965  if (isOwner()) {\r... */\n    tag_138:\n        /* \"BasicCoin/PokerToken.sol\":13649:13972  function batchTransferToken(address[] memory holders) public {\r... */\n      pop\n      jump\t// out\n        /* \"BasicCoin/PokerToken.sol\":11505:11771  function delMinter(address _delMinter) public onlyOwner returns (bool) {\r... */\n    tag_62:\n        /* \"BasicCoin/PokerToken.sol\":11570:11574  bool */\n      0x00\n        /* \"_lib/Ownable.sol\":783:789  _owner */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/Ownable.sol\":767:789  _msgSender() == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/Ownable.sol\":767:779  _msgSender() */\n      tag_146\n        /* \"_lib/Ownable.sol\":767:777  _msgSender */\n      tag_133\n        /* \"_lib/Ownable.sol\":767:779  _msgSender() */\n      jump\t// in\n    tag_146:\n        /* \"_lib/Ownable.sol\":767:789  _msgSender() == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"_lib/Ownable.sol\":759:803  require(_msgSender() == _owner, \"not owner\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x09\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x6e6f74206f776e65720000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n        /* \"BasicCoin/PokerToken.sol\":11631:11632  0 */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":11609:11633  _delMinter != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BasicCoin/PokerToken.sol\":11609:11619  _delMinter */\n      dup3\n        /* \"BasicCoin/PokerToken.sol\":11609:11633  _delMinter != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"BasicCoin/PokerToken.sol\":11587:11703  require(\r... */\n      tag_149\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_214d6a2bcbc2880da3f1409c020bc73ea2584b13faa007de23ec5ca8b186aba0\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_149:\n        /* \"BasicCoin/PokerToken.sol\":11721:11763  EnumerableSet.remove(_minters, _delMinter) */\n      tag_150\n        /* \"BasicCoin/PokerToken.sol\":11742:11750  _minters */\n      0x06\n        /* \"BasicCoin/PokerToken.sol\":11752:11762  _delMinter */\n      dup4\n        /* \"BasicCoin/PokerToken.sol\":11721:11741  EnumerableSet.remove */\n      tag_151\n        /* \"BasicCoin/PokerToken.sol\":11721:11763  EnumerableSet.remove(_minters, _delMinter) */\n      jump\t// in\n    tag_150:\n        /* \"BasicCoin/PokerToken.sol\":11714:11763  return EnumerableSet.remove(_minters, _delMinter) */\n      swap1\n      pop\n        /* \"BasicCoin/PokerToken.sol\":11505:11771  function delMinter(address _delMinter) public onlyOwner returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"_lib/ERC20.sol\":3771:4175  function transferFrom(\r... */\n    tag_65:\n        /* \"_lib/ERC20.sol\":3899:3903  bool */\n      0x00\n        /* \"_lib/ERC20.sol\":3941:3942  0 */\n      dup1\n        /* \"_lib/ERC20.sol\":3924:3943  _from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":3924:3929  _from */\n      dup5\n        /* \"_lib/ERC20.sol\":3924:3943  _from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"_lib/ERC20.sol\":3924:3964  _from != address(0) && _to != address(0) */\n      dup1\n      iszero\n      tag_153\n      jumpi\n      pop\n        /* \"_lib/ERC20.sol\":3962:3963  0 */\n      0x00\n        /* \"_lib/ERC20.sol\":3947:3964  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":3947:3950  _to */\n      dup4\n        /* \"_lib/ERC20.sol\":3947:3964  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"_lib/ERC20.sol\":3924:3964  _from != address(0) && _to != address(0) */\n    tag_153:\n        /* \"_lib/ERC20.sol\":3916:3965  require(_from != address(0) && _to != address(0)) */\n      tag_154\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_154:\n        /* \"_lib/ERC20.sol\":3978:4104  _approve(\r... */\n      tag_155\n        /* \"_lib/ERC20.sol\":4001:4006  _from */\n      dup5\n        /* \"_lib/ERC20.sol\":4021:4033  _msgSender() */\n      tag_156\n        /* \"_lib/ERC20.sol\":4021:4031  _msgSender */\n      tag_133\n        /* \"_lib/ERC20.sol\":4021:4033  _msgSender() */\n      jump\t// in\n    tag_156:\n        /* \"_lib/ERC20.sol\":4048:4093  _allowances[_from][_msgSender()].sub(_amount) */\n      tag_157\n        /* \"_lib/ERC20.sol\":4085:4092  _amount */\n      dup6\n        /* \"_lib/ERC20.sol\":4048:4059  _allowances */\n      0x01\n        /* \"_lib/ERC20.sol\":4048:4066  _allowances[_from] */\n      0x00\n        /* \"_lib/ERC20.sol\":4060:4065  _from */\n      dup11\n        /* \"_lib/ERC20.sol\":4048:4066  _allowances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"_lib/ERC20.sol\":4048:4080  _allowances[_from][_msgSender()] */\n      0x00\n        /* \"_lib/ERC20.sol\":4067:4079  _msgSender() */\n      tag_158\n        /* \"_lib/ERC20.sol\":4067:4077  _msgSender */\n      tag_133\n        /* \"_lib/ERC20.sol\":4067:4079  _msgSender() */\n      jump\t// in\n    tag_158:\n        /* \"_lib/ERC20.sol\":4048:4080  _allowances[_from][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"_lib/ERC20.sol\":4048:4084  _allowances[_from][_msgSender()].sub */\n      tag_159\n      swap1\n        /* \"_lib/ERC20.sol\":4048:4093  _allowances[_from][_msgSender()].sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_157:\n        /* \"_lib/ERC20.sol\":3978:3986  _approve */\n      tag_134\n        /* \"_lib/ERC20.sol\":3978:4104  _approve(\r... */\n      jump\t// in\n    tag_155:\n        /* \"_lib/ERC20.sol\":4115:4145  _transfer(_from, _to, _amount) */\n      tag_160\n        /* \"_lib/ERC20.sol\":4125:4130  _from */\n      dup5\n        /* \"_lib/ERC20.sol\":4132:4135  _to */\n      dup5\n        /* \"_lib/ERC20.sol\":4137:4144  _amount */\n      dup5\n        /* \"_lib/ERC20.sol\":4115:4124  _transfer */\n      tag_144\n        /* \"_lib/ERC20.sol\":4115:4145  _transfer(_from, _to, _amount) */\n      jump\t// in\n    tag_160:\n        /* \"_lib/ERC20.sol\":4163:4167  true */\n      0x01\n        /* \"_lib/ERC20.sol\":4156:4167  return true */\n      swap1\n      pop\n        /* \"_lib/ERC20.sol\":3771:4175  function transferFrom(\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"_lib/ERC20.sol\":1242:1263  uint8 public decimals */\n    tag_67:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"BasicCoin/PokerToken.sol\":10424:11127  function mint(address _to, uint256 _amount)\r... */\n    tag_70:\n        /* \"BasicCoin/PokerToken.sol\":10522:10526  bool */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":12379:12399  isMinter(msg.sender) */\n      tag_162\n        /* \"BasicCoin/PokerToken.sol\":12388:12398  msg.sender */\n      caller\n        /* \"BasicCoin/PokerToken.sol\":12379:12387  isMinter */\n      tag_107\n        /* \"BasicCoin/PokerToken.sol\":12379:12399  isMinter(msg.sender) */\n      jump\t// in\n    tag_162:\n        /* \"BasicCoin/PokerToken.sol\":12371:12428  require(isMinter(msg.sender), \"caller is not the minter\") */\n      tag_163\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x18\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x63616c6c6572206973206e6f7420746865206d696e7465720000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_163:\n        /* \"BasicCoin/PokerToken.sol\":10607:10620  YEAR_MINT_NUM */\n      sload(0x0b)\n        /* \"BasicCoin/PokerToken.sol\":10566:10603  yearMintLimit[getYear()].add(_amount) */\n      tag_165\n        /* \"BasicCoin/PokerToken.sol\":10595:10602  _amount */\n      dup4\n        /* \"BasicCoin/PokerToken.sol\":10566:10579  yearMintLimit */\n      0x08\n        /* \"BasicCoin/PokerToken.sol\":10566:10590  yearMintLimit[getYear()] */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":10580:10589  getYear() */\n      tag_166\n        /* \"BasicCoin/PokerToken.sol\":10580:10587  getYear */\n      tag_123\n        /* \"BasicCoin/PokerToken.sol\":10580:10589  getYear() */\n      jump\t// in\n    tag_166:\n        /* \"BasicCoin/PokerToken.sol\":10566:10590  yearMintLimit[getYear()] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BasicCoin/PokerToken.sol\":10566:10594  yearMintLimit[getYear()].add */\n      tag_167\n      swap1\n        /* \"BasicCoin/PokerToken.sol\":10566:10603  yearMintLimit[getYear()].add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_165:\n        /* \"BasicCoin/PokerToken.sol\":10566:10620  yearMintLimit[getYear()].add(_amount) <= YEAR_MINT_NUM */\n      gt\n      iszero\n        /* \"BasicCoin/PokerToken.sol\":10544:10673  require(\r... */\n      tag_168\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x19\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x506f6b6572546f6b656e3a20796561724d696e744c696d697400000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_168:\n        /* \"BasicCoin/PokerToken.sol\":10684:10703  _mint(_to, _amount) */\n      tag_169\n        /* \"BasicCoin/PokerToken.sol\":10690:10693  _to */\n      dup4\n        /* \"BasicCoin/PokerToken.sol\":10695:10702  _amount */\n      dup4\n        /* \"BasicCoin/PokerToken.sol\":10684:10689  _mint */\n      tag_170\n        /* \"BasicCoin/PokerToken.sol\":10684:10703  _mint(_to, _amount) */\n      jump\t// in\n    tag_169:\n        /* \"BasicCoin/PokerToken.sol\":10741:10778  yearMintLimit[getYear()].add(_amount) */\n      tag_171\n        /* \"BasicCoin/PokerToken.sol\":10770:10777  _amount */\n      dup3\n        /* \"BasicCoin/PokerToken.sol\":10741:10754  yearMintLimit */\n      0x08\n        /* \"BasicCoin/PokerToken.sol\":10741:10765  yearMintLimit[getYear()] */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":10755:10764  getYear() */\n      tag_172\n        /* \"BasicCoin/PokerToken.sol\":10755:10762  getYear */\n      tag_123\n        /* \"BasicCoin/PokerToken.sol\":10755:10764  getYear() */\n      jump\t// in\n    tag_172:\n        /* \"BasicCoin/PokerToken.sol\":10741:10765  yearMintLimit[getYear()] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BasicCoin/PokerToken.sol\":10741:10769  yearMintLimit[getYear()].add */\n      tag_167\n      swap1\n        /* \"BasicCoin/PokerToken.sol\":10741:10778  yearMintLimit[getYear()].add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_171:\n        /* \"BasicCoin/PokerToken.sol\":10714:10727  yearMintLimit */\n      0x08\n        /* \"BasicCoin/PokerToken.sol\":10714:10738  yearMintLimit[getYear()] */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":10728:10737  getYear() */\n      tag_173\n        /* \"BasicCoin/PokerToken.sol\":10728:10735  getYear */\n      tag_123\n        /* \"BasicCoin/PokerToken.sol\":10728:10737  getYear() */\n      jump\t// in\n    tag_173:\n        /* \"BasicCoin/PokerToken.sol\":10714:10738  yearMintLimit[getYear()] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BasicCoin/PokerToken.sol\":10714:10778  yearMintLimit[getYear()] = yearMintLimit[getYear()].add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BasicCoin/PokerToken.sol\":10834:10913  recordContractLimit[\r... */\n      tag_174\n        /* \"BasicCoin/PokerToken.sol\":10905:10912  _amount */\n      dup3\n        /* \"BasicCoin/PokerToken.sol\":10834:10853  recordContractLimit */\n      0x0a\n        /* \"BasicCoin/PokerToken.sol\":10834:10889  recordContractLimit[\r... */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":10868:10878  msg.sender */\n      caller\n        /* \"BasicCoin/PokerToken.sol\":10834:10889  recordContractLimit[\r... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BasicCoin/PokerToken.sol\":10834:10900  recordContractLimit[\r... */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":10890:10899  getYear() */\n      tag_175\n        /* \"BasicCoin/PokerToken.sol\":10890:10897  getYear */\n      tag_123\n        /* \"BasicCoin/PokerToken.sol\":10890:10899  getYear() */\n      jump\t// in\n    tag_175:\n        /* \"BasicCoin/PokerToken.sol\":10834:10900  recordContractLimit[\r... */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BasicCoin/PokerToken.sol\":10834:10904  recordContractLimit[\r... */\n      tag_167\n      swap1\n        /* \"BasicCoin/PokerToken.sol\":10834:10913  recordContractLimit[\r... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_174:\n        /* \"BasicCoin/PokerToken.sol\":10789:10808  recordContractLimit */\n      0x0a\n        /* \"BasicCoin/PokerToken.sol\":10789:10820  recordContractLimit[msg.sender] */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":10809:10819  msg.sender */\n      caller\n        /* \"BasicCoin/PokerToken.sol\":10789:10820  recordContractLimit[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BasicCoin/PokerToken.sol\":10789:10831  recordContractLimit[msg.sender][getYear()] */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":10821:10830  getYear() */\n      tag_176\n        /* \"BasicCoin/PokerToken.sol\":10821:10828  getYear */\n      tag_123\n        /* \"BasicCoin/PokerToken.sol\":10821:10830  getYear() */\n      jump\t// in\n    tag_176:\n        /* \"BasicCoin/PokerToken.sol\":10789:10831  recordContractLimit[msg.sender][getYear()] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BasicCoin/PokerToken.sol\":10789:10913  recordContractLimit[msg.sender][getYear()] = recordContractLimit[\r... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BasicCoin/PokerToken.sol\":11009:11026  contractMintLimit */\n      0x09\n        /* \"BasicCoin/PokerToken.sol\":11009:11038  contractMintLimit[msg.sender] */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":11027:11037  msg.sender */\n      caller\n        /* \"BasicCoin/PokerToken.sol\":11009:11038  contractMintLimit[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BasicCoin/PokerToken.sol\":10946:10965  recordContractLimit */\n      0x0a\n        /* \"BasicCoin/PokerToken.sol\":10946:10977  recordContractLimit[msg.sender] */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":10966:10976  msg.sender */\n      caller\n        /* \"BasicCoin/PokerToken.sol\":10946:10977  recordContractLimit[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BasicCoin/PokerToken.sol\":10946:10988  recordContractLimit[msg.sender][getYear()] */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":10978:10987  getYear() */\n      tag_177\n        /* \"BasicCoin/PokerToken.sol\":10978:10985  getYear */\n      tag_123\n        /* \"BasicCoin/PokerToken.sol\":10978:10987  getYear() */\n      jump\t// in\n    tag_177:\n        /* \"BasicCoin/PokerToken.sol\":10946:10988  recordContractLimit[msg.sender][getYear()] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BasicCoin/PokerToken.sol\":10946:11038  recordContractLimit[msg.sender][getYear()] <=\r... */\n      gt\n      iszero\n        /* \"BasicCoin/PokerToken.sol\":10924:11097  require(\r... */\n      tag_178\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x506f6b6572546f6b656e3a207265636f7264436f6e74726163744c696d697400\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_178:\n        /* \"BasicCoin/PokerToken.sol\":11115:11119  true */\n      0x01\n        /* \"BasicCoin/PokerToken.sol\":11108:11119  return true */\n      swap1\n      pop\n        /* \"BasicCoin/PokerToken.sol\":10424:11127  function mint(address _to, uint256 _amount)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"BasicCoin/PokerToken.sol\":9981:10066  function burn(uint256 amount_) external {\r... */\n    tag_73:\n        /* \"BasicCoin/PokerToken.sol\":10032:10058  _burn(msg.sender, amount_) */\n      tag_180\n        /* \"BasicCoin/PokerToken.sol\":10038:10048  msg.sender */\n      caller\n        /* \"BasicCoin/PokerToken.sol\":10050:10057  amount_ */\n      dup3\n        /* \"BasicCoin/PokerToken.sol\":10032:10037  _burn */\n      tag_181\n        /* \"BasicCoin/PokerToken.sol\":10032:10058  _burn(msg.sender, amount_) */\n      jump\t// in\n    tag_180:\n        /* \"BasicCoin/PokerToken.sol\":9981:10066  function burn(uint256 amount_) external {\r... */\n      pop\n      jump\t// out\n        /* \"BasicCoin/PokerToken.sol\":13324:13447  function setYearMintNum(uint256 num) public {\r... */\n    tag_76:\n        /* \"BasicCoin/PokerToken.sol\":13383:13392  isOwner() */\n      tag_183\n        /* \"BasicCoin/PokerToken.sol\":13383:13390  isOwner */\n      tag_89\n        /* \"BasicCoin/PokerToken.sol\":13383:13392  isOwner() */\n      jump\t// in\n    tag_183:\n        /* \"BasicCoin/PokerToken.sol\":13379:13440  if (isOwner()) {\r... */\n      iszero\n      tag_184\n      jumpi\n        /* \"BasicCoin/PokerToken.sol\":13425:13428  num */\n      dup1\n        /* \"BasicCoin/PokerToken.sol\":13409:13422  YEAR_MINT_NUM */\n      0x0b\n        /* \"BasicCoin/PokerToken.sol\":13409:13428  YEAR_MINT_NUM = num */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BasicCoin/PokerToken.sol\":13379:13440  if (isOwner()) {\r... */\n    tag_184:\n        /* \"BasicCoin/PokerToken.sol\":13324:13447  function setYearMintNum(uint256 num) public {\r... */\n      pop\n      jump\t// out\n        /* \"BasicCoin/PokerToken.sol\":12037:12295  function getMinter(uint256 _index) public view onlyOwner returns (address) {\r... */\n    tag_79:\n        /* \"BasicCoin/PokerToken.sol\":12103:12110  address */\n      0x00\n        /* \"_lib/Ownable.sol\":783:789  _owner */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/Ownable.sol\":767:789  _msgSender() == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/Ownable.sol\":767:779  _msgSender() */\n      tag_186\n        /* \"_lib/Ownable.sol\":767:777  _msgSender */\n      tag_133\n        /* \"_lib/Ownable.sol\":767:779  _msgSender() */\n      jump\t// in\n    tag_186:\n        /* \"_lib/Ownable.sol\":767:789  _msgSender() == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"_lib/Ownable.sol\":759:803  require(_msgSender() == _owner, \"not owner\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x09\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x6e6f74206f776e65720000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_187:\n        /* \"BasicCoin/PokerToken.sol\":12175:12176  1 */\n      0x01\n        /* \"BasicCoin/PokerToken.sol\":12155:12172  getMinterLength() */\n      tag_189\n        /* \"BasicCoin/PokerToken.sol\":12155:12170  getMinterLength */\n      tag_39\n        /* \"BasicCoin/PokerToken.sol\":12155:12172  getMinterLength() */\n      jump\t// in\n    tag_189:\n        /* \"BasicCoin/PokerToken.sol\":12155:12176  getMinterLength() - 1 */\n      sub\n        /* \"BasicCoin/PokerToken.sol\":12145:12151  _index */\n      dup3\n        /* \"BasicCoin/PokerToken.sol\":12145:12176  _index <= getMinterLength() - 1 */\n      gt\n      iszero\n        /* \"BasicCoin/PokerToken.sol\":12123:12235  require(\r... */\n      tag_190\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x506f6b6572546f6b656e3a20696e646578206f7574206f6620626f756e647300\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_190:\n        /* \"BasicCoin/PokerToken.sol\":12253:12287  EnumerableSet.at(_minters, _index) */\n      tag_191\n        /* \"BasicCoin/PokerToken.sol\":12270:12278  _minters */\n      0x06\n        /* \"BasicCoin/PokerToken.sol\":12280:12286  _index */\n      dup4\n        /* \"BasicCoin/PokerToken.sol\":12253:12269  EnumerableSet.at */\n      tag_192\n        /* \"BasicCoin/PokerToken.sol\":12253:12287  EnumerableSet.at(_minters, _index) */\n      jump\t// in\n    tag_191:\n        /* \"BasicCoin/PokerToken.sol\":12246:12287  return EnumerableSet.at(_minters, _index) */\n      swap1\n      pop\n        /* \"BasicCoin/PokerToken.sol\":12037:12295  function getMinter(uint256 _index) public view onlyOwner returns (address) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"_lib/ERC20.sol\":2139:2299  function balanceOf(address _owner)\r... */\n    tag_82:\n        /* \"_lib/ERC20.sol\":2242:2249  uint256 */\n      0x00\n        /* \"_lib/ERC20.sol\":2274:2283  _balances */\n      dup1\n        /* \"_lib/ERC20.sol\":2274:2291  _balances[_owner] */\n      0x00\n        /* \"_lib/ERC20.sol\":2284:2290  _owner */\n      dup4\n        /* \"_lib/ERC20.sol\":2274:2291  _balances[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"_lib/ERC20.sol\":2267:2291  return _balances[_owner] */\n      swap1\n      pop\n        /* \"_lib/ERC20.sol\":2139:2299  function balanceOf(address _owner)\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"BasicCoin/PokerToken.sol\":11135:11497  function addMinter(address _addMinter, uint256 _amount)\r... */\n    tag_85:\n        /* \"BasicCoin/PokerToken.sol\":11244:11248  bool */\n      0x00\n        /* \"_lib/Ownable.sol\":783:789  _owner */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/Ownable.sol\":767:789  _msgSender() == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/Ownable.sol\":767:779  _msgSender() */\n      tag_195\n        /* \"_lib/Ownable.sol\":767:777  _msgSender */\n      tag_133\n        /* \"_lib/Ownable.sol\":767:779  _msgSender() */\n      jump\t// in\n    tag_195:\n        /* \"_lib/Ownable.sol\":767:789  _msgSender() == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"_lib/Ownable.sol\":759:803  require(_msgSender() == _owner, \"not owner\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x09\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x6e6f74206f776e65720000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_196:\n        /* \"BasicCoin/PokerToken.sol\":11310:11311  0 */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":11288:11312  _addMinter != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BasicCoin/PokerToken.sol\":11288:11298  _addMinter */\n      dup4\n        /* \"BasicCoin/PokerToken.sol\":11288:11312  _addMinter != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"BasicCoin/PokerToken.sol\":11266:11382  require(\r... */\n      tag_198\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_cb9d3212f00552d8be41e69b0ea5b8e9499f587c01d683168aa870e2f69a84ce\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_198:\n        /* \"BasicCoin/PokerToken.sol\":11393:11432  setContractMintNum(_addMinter, _amount) */\n      tag_199\n        /* \"BasicCoin/PokerToken.sol\":11412:11422  _addMinter */\n      dup4\n        /* \"BasicCoin/PokerToken.sol\":11424:11431  _amount */\n      dup4\n        /* \"BasicCoin/PokerToken.sol\":11393:11411  setContractMintNum */\n      tag_110\n        /* \"BasicCoin/PokerToken.sol\":11393:11432  setContractMintNum(_addMinter, _amount) */\n      jump\t// in\n    tag_199:\n        /* \"BasicCoin/PokerToken.sol\":11450:11489  EnumerableSet.add(_minters, _addMinter) */\n      tag_200\n        /* \"BasicCoin/PokerToken.sol\":11468:11476  _minters */\n      0x06\n        /* \"BasicCoin/PokerToken.sol\":11478:11488  _addMinter */\n      dup5\n        /* \"BasicCoin/PokerToken.sol\":11450:11467  EnumerableSet.add */\n      tag_201\n        /* \"BasicCoin/PokerToken.sol\":11450:11489  EnumerableSet.add(_minters, _addMinter) */\n      jump\t// in\n    tag_200:\n        /* \"BasicCoin/PokerToken.sol\":11443:11489  return EnumerableSet.add(_minters, _addMinter) */\n      swap1\n      pop\n        /* \"BasicCoin/PokerToken.sol\":11135:11497  function addMinter(address _addMinter, uint256 _amount)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"_lib/Ownable.sol\":555:634  function owner() public view returns (address) {\r... */\n    tag_87:\n        /* \"_lib/Ownable.sol\":593:600  address */\n      0x00\n        /* \"_lib/Ownable.sol\":620:626  _owner */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/Ownable.sol\":613:626  return _owner */\n      swap1\n      pop\n        /* \"_lib/Ownable.sol\":555:634  function owner() public view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"_lib/Ownable.sol\":835:997  function isOwner() public view returns (bool){\r... */\n    tag_89:\n        /* \"_lib/Ownable.sol\":875:879  bool */\n      0x00\n        /* \"_lib/Ownable.sol\":891:900  bool flag */\n      dup1\n        /* \"_lib/Ownable.sol\":919:925  _owner */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/Ownable.sol\":903:925  _msgSender() == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/Ownable.sol\":903:915  _msgSender() */\n      tag_204\n        /* \"_lib/Ownable.sol\":903:913  _msgSender */\n      tag_133\n        /* \"_lib/Ownable.sol\":903:915  _msgSender() */\n      jump\t// in\n    tag_204:\n        /* \"_lib/Ownable.sol\":903:925  _msgSender() == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"_lib/Ownable.sol\":891:925  bool flag = _msgSender() == _owner */\n      swap1\n      pop\n        /* \"_lib/Ownable.sol\":950:954  true */\n      0x01\n        /* \"_lib/Ownable.sol\":944:954  flag==true */\n      iszero\n      iszero\n        /* \"_lib/Ownable.sol\":944:948  flag */\n      dup2\n        /* \"_lib/Ownable.sol\":944:954  flag==true */\n      iszero\n      iszero\n      eq\n        /* \"_lib/Ownable.sol\":936:967  require(flag==true,\"not owner\") */\n      tag_205\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x09\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x6e6f74206f776e65720000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_205:\n        /* \"_lib/Ownable.sol\":985:989  flag */\n      dup1\n        /* \"_lib/Ownable.sol\":978:989  return flag */\n      swap2\n      pop\n      pop\n        /* \"_lib/Ownable.sol\":835:997  function isOwner() public view returns (bool){\r... */\n      swap1\n      jump\t// out\n        /* \"BasicCoin/PokerToken.sol\":9665:9713  mapping(uint256 => uint256) public yearMintLimit */\n    tag_92:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"_lib/ERC20.sol\":583:603  string public symbol */\n    tag_94:\n      0x04\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_206\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_207\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_206)\n    tag_207:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_208:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_208\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_206:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"BasicCoin/PokerToken.sol\":10074:10416  function mint(uint256 amount_) external {\r... */\n    tag_101:\n        /* \"BasicCoin/PokerToken.sol\":10188:10201  YEAR_MINT_NUM */\n      sload(0x0b)\n        /* \"BasicCoin/PokerToken.sol\":10147:10184  yearMintLimit[getYear()].add(amount_) */\n      tag_210\n        /* \"BasicCoin/PokerToken.sol\":10176:10183  amount_ */\n      dup3\n        /* \"BasicCoin/PokerToken.sol\":10147:10160  yearMintLimit */\n      0x08\n        /* \"BasicCoin/PokerToken.sol\":10147:10171  yearMintLimit[getYear()] */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":10161:10170  getYear() */\n      tag_211\n        /* \"BasicCoin/PokerToken.sol\":10161:10168  getYear */\n      tag_123\n        /* \"BasicCoin/PokerToken.sol\":10161:10170  getYear() */\n      jump\t// in\n    tag_211:\n        /* \"BasicCoin/PokerToken.sol\":10147:10171  yearMintLimit[getYear()] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BasicCoin/PokerToken.sol\":10147:10175  yearMintLimit[getYear()].add */\n      tag_167\n      swap1\n        /* \"BasicCoin/PokerToken.sol\":10147:10184  yearMintLimit[getYear()].add(amount_) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_210:\n        /* \"BasicCoin/PokerToken.sol\":10147:10201  yearMintLimit[getYear()].add(amount_) <= YEAR_MINT_NUM */\n      gt\n      iszero\n        /* \"BasicCoin/PokerToken.sol\":10125:10254  require(\r... */\n      tag_212\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x19\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x506f6b6572546f6b656e3a20796561724d696e744c696d697400000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_212:\n        /* \"BasicCoin/PokerToken.sol\":10269:10278  isOwner() */\n      tag_213\n        /* \"BasicCoin/PokerToken.sol\":10269:10276  isOwner */\n      tag_89\n        /* \"BasicCoin/PokerToken.sol\":10269:10278  isOwner() */\n      jump\t// in\n    tag_213:\n        /* \"BasicCoin/PokerToken.sol\":10265:10409  if (isOwner()) {\r... */\n      iszero\n      tag_214\n      jumpi\n        /* \"BasicCoin/PokerToken.sol\":10295:10318  _mint(owner(), amount_) */\n      tag_215\n        /* \"BasicCoin/PokerToken.sol\":10301:10308  owner() */\n      tag_216\n        /* \"BasicCoin/PokerToken.sol\":10301:10306  owner */\n      tag_87\n        /* \"BasicCoin/PokerToken.sol\":10301:10308  owner() */\n      jump\t// in\n    tag_216:\n        /* \"BasicCoin/PokerToken.sol\":10310:10317  amount_ */\n      dup3\n        /* \"BasicCoin/PokerToken.sol\":10295:10300  _mint */\n      tag_170\n        /* \"BasicCoin/PokerToken.sol\":10295:10318  _mint(owner(), amount_) */\n      jump\t// in\n    tag_215:\n        /* \"BasicCoin/PokerToken.sol\":10360:10397  yearMintLimit[getYear()].add(amount_) */\n      tag_217\n        /* \"BasicCoin/PokerToken.sol\":10389:10396  amount_ */\n      dup2\n        /* \"BasicCoin/PokerToken.sol\":10360:10373  yearMintLimit */\n      0x08\n        /* \"BasicCoin/PokerToken.sol\":10360:10384  yearMintLimit[getYear()] */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":10374:10383  getYear() */\n      tag_218\n        /* \"BasicCoin/PokerToken.sol\":10374:10381  getYear */\n      tag_123\n        /* \"BasicCoin/PokerToken.sol\":10374:10383  getYear() */\n      jump\t// in\n    tag_218:\n        /* \"BasicCoin/PokerToken.sol\":10360:10384  yearMintLimit[getYear()] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BasicCoin/PokerToken.sol\":10360:10388  yearMintLimit[getYear()].add */\n      tag_167\n      swap1\n        /* \"BasicCoin/PokerToken.sol\":10360:10397  yearMintLimit[getYear()].add(amount_) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_217:\n        /* \"BasicCoin/PokerToken.sol\":10333:10346  yearMintLimit */\n      0x08\n        /* \"BasicCoin/PokerToken.sol\":10333:10357  yearMintLimit[getYear()] */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":10347:10356  getYear() */\n      tag_219\n        /* \"BasicCoin/PokerToken.sol\":10347:10354  getYear */\n      tag_123\n        /* \"BasicCoin/PokerToken.sol\":10347:10356  getYear() */\n      jump\t// in\n    tag_219:\n        /* \"BasicCoin/PokerToken.sol\":10333:10357  yearMintLimit[getYear()] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BasicCoin/PokerToken.sol\":10333:10397  yearMintLimit[getYear()] = yearMintLimit[getYear()].add(amount_) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BasicCoin/PokerToken.sol\":10265:10409  if (isOwner()) {\r... */\n    tag_214:\n        /* \"BasicCoin/PokerToken.sol\":10074:10416  function mint(uint256 amount_) external {\r... */\n      pop\n      jump\t// out\n        /* \"_lib/ERC20.sol\":2507:2698  function transfer(address _to, uint256 _amount)\r... */\n    tag_104:\n        /* \"_lib/ERC20.sol\":2609:2613  bool */\n      0x00\n        /* \"_lib/ERC20.sol\":2631:2668  _transfer(_msgSender(), _to, _amount) */\n      tag_221\n        /* \"_lib/ERC20.sol\":2641:2653  _msgSender() */\n      tag_222\n        /* \"_lib/ERC20.sol\":2641:2651  _msgSender */\n      tag_133\n        /* \"_lib/ERC20.sol\":2641:2653  _msgSender() */\n      jump\t// in\n    tag_222:\n        /* \"_lib/ERC20.sol\":2655:2658  _to */\n      dup5\n        /* \"_lib/ERC20.sol\":2660:2667  _amount */\n      dup5\n        /* \"_lib/ERC20.sol\":2631:2640  _transfer */\n      tag_144\n        /* \"_lib/ERC20.sol\":2631:2668  _transfer(_msgSender(), _to, _amount) */\n      jump\t// in\n    tag_221:\n        /* \"_lib/ERC20.sol\":2686:2690  true */\n      0x01\n        /* \"_lib/ERC20.sol\":2679:2690  return true */\n      swap1\n      pop\n        /* \"_lib/ERC20.sol\":2507:2698  function transfer(address _to, uint256 _amount)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"BasicCoin/PokerToken.sol\":11900:12029  function isMinter(address account) public view returns (bool) {\r... */\n    tag_107:\n        /* \"BasicCoin/PokerToken.sol\":11956:11960  bool */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":11980:12021  EnumerableSet.contains(_minters, account) */\n      tag_224\n        /* \"BasicCoin/PokerToken.sol\":12003:12011  _minters */\n      0x06\n        /* \"BasicCoin/PokerToken.sol\":12013:12020  account */\n      dup4\n        /* \"BasicCoin/PokerToken.sol\":11980:12002  EnumerableSet.contains */\n      tag_225\n        /* \"BasicCoin/PokerToken.sol\":11980:12021  EnumerableSet.contains(_minters, account) */\n      jump\t// in\n    tag_224:\n        /* \"BasicCoin/PokerToken.sol\":11973:12021  return EnumerableSet.contains(_minters, account) */\n      swap1\n      pop\n        /* \"BasicCoin/PokerToken.sol\":11900:12029  function isMinter(address account) public view returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"BasicCoin/PokerToken.sol\":13455:13604  function setContractMintNum(address ads, uint256 num) public {\r... */\n    tag_110:\n        /* \"BasicCoin/PokerToken.sol\":13531:13540  isOwner() */\n      tag_227\n        /* \"BasicCoin/PokerToken.sol\":13531:13538  isOwner */\n      tag_89\n        /* \"BasicCoin/PokerToken.sol\":13531:13540  isOwner() */\n      jump\t// in\n    tag_227:\n        /* \"BasicCoin/PokerToken.sol\":13527:13597  if (isOwner()) {\r... */\n      iszero\n      tag_228\n      jumpi\n        /* \"BasicCoin/PokerToken.sol\":13582:13585  num */\n      dup1\n        /* \"BasicCoin/PokerToken.sol\":13557:13574  contractMintLimit */\n      0x09\n        /* \"BasicCoin/PokerToken.sol\":13557:13579  contractMintLimit[ads] */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":13575:13578  ads */\n      dup5\n        /* \"BasicCoin/PokerToken.sol\":13557:13579  contractMintLimit[ads] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BasicCoin/PokerToken.sol\":13557:13585  contractMintLimit[ads] = num */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BasicCoin/PokerToken.sol\":13527:13597  if (isOwner()) {\r... */\n    tag_228:\n        /* \"BasicCoin/PokerToken.sol\":13455:13604  function setContractMintNum(address ads, uint256 num) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"BasicCoin/PokerToken.sol\":13980:14101  function setBatchAmount(uint256 num) public {\r... */\n    tag_113:\n        /* \"BasicCoin/PokerToken.sol\":14039:14048  isOwner() */\n      tag_230\n        /* \"BasicCoin/PokerToken.sol\":14039:14046  isOwner */\n      tag_89\n        /* \"BasicCoin/PokerToken.sol\":14039:14048  isOwner() */\n      jump\t// in\n    tag_230:\n        /* \"BasicCoin/PokerToken.sol\":14035:14094  if (isOwner()) {\r... */\n      iszero\n      tag_231\n      jumpi\n        /* \"BasicCoin/PokerToken.sol\":14079:14082  num */\n      dup1\n        /* \"BasicCoin/PokerToken.sol\":14065:14076  batchAmount */\n      0x0c\n        /* \"BasicCoin/PokerToken.sol\":14065:14082  batchAmount = num */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BasicCoin/PokerToken.sol\":14035:14094  if (isOwner()) {\r... */\n    tag_231:\n        /* \"BasicCoin/PokerToken.sol\":13980:14101  function setBatchAmount(uint256 num) public {\r... */\n      pop\n      jump\t// out\n        /* \"_lib/ERC20.sol\":2761:2951  function allowance(address _owner, address _spender)\r... */\n    tag_116:\n        /* \"_lib/ERC20.sol\":2882:2889  uint256 */\n      0x00\n        /* \"_lib/ERC20.sol\":2914:2925  _allowances */\n      0x01\n        /* \"_lib/ERC20.sol\":2914:2933  _allowances[_owner] */\n      0x00\n        /* \"_lib/ERC20.sol\":2926:2932  _owner */\n      dup5\n        /* \"_lib/ERC20.sol\":2914:2933  _allowances[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"_lib/ERC20.sol\":2914:2943  _allowances[_owner][_spender] */\n      0x00\n        /* \"_lib/ERC20.sol\":2934:2942  _spender */\n      dup4\n        /* \"_lib/ERC20.sol\":2914:2943  _allowances[_owner][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"_lib/ERC20.sol\":2907:2943  return _allowances[_owner][_spender] */\n      swap1\n      pop\n        /* \"_lib/ERC20.sol\":2761:2951  function allowance(address _owner, address _spender)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"BasicCoin/PokerToken.sol\":9860:9910  uint256 public YEAR_MINT_NUM = 1000000000 * 10**18 */\n    tag_118:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"BasicCoin/PokerToken.sol\":9779:9853  mapping(address => mapping(uint256 => uint256)) public recordContractLimit */\n    tag_121:\n      mstore(0x20, 0x0a)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"BasicCoin/PokerToken.sol\":12656:13316  function getYear() public view returns (uint256 year) {\r... */\n    tag_123:\n        /* \"BasicCoin/PokerToken.sol\":12696:12708  uint256 year */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":12721:12738  uint256 timestamp */\n      dup1\n        /* \"BasicCoin/PokerToken.sol\":12741:12756  block.timestamp */\n      timestamp\n        /* \"BasicCoin/PokerToken.sol\":12721:12756  uint256 timestamp = block.timestamp */\n      swap1\n      pop\n        /* \"BasicCoin/PokerToken.sol\":12767:12780  uint256 _days */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":12491:12503  24 * 60 * 60 */\n      0x015180\n        /* \"BasicCoin/PokerToken.sol\":12783:12792  timestamp */\n      dup3\n        /* \"BasicCoin/PokerToken.sol\":12783:12810  timestamp / SECONDS_PER_DAY */\n      dup2\n      tag_234\n      jumpi\n      invalid\n    tag_234:\n      div\n        /* \"BasicCoin/PokerToken.sol\":12767:12810  uint256 _days = timestamp / SECONDS_PER_DAY */\n      swap1\n      pop\n        /* \"BasicCoin/PokerToken.sol\":12821:12834  int256 __days */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":12844:12849  _days */\n      dup2\n        /* \"BasicCoin/PokerToken.sol\":12821:12850  int256 __days = int256(_days) */\n      swap1\n      pop\n        /* \"BasicCoin/PokerToken.sol\":12863:12871  int256 L */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":12640:12647  2440588 */\n      0x253d8c\n        /* \"BasicCoin/PokerToken.sol\":12883:12888  68569 */\n      0x010bd9\n        /* \"BasicCoin/PokerToken.sol\":12874:12880  __days */\n      dup4\n        /* \"BasicCoin/PokerToken.sol\":12874:12888  __days + 68569 */\n      add\n        /* \"BasicCoin/PokerToken.sol\":12874:12905  __days + 68569 + OFFSET19700101 */\n      add\n        /* \"BasicCoin/PokerToken.sol\":12863:12905  int256 L = __days + 68569 + OFFSET19700101 */\n      swap1\n      pop\n        /* \"BasicCoin/PokerToken.sol\":12916:12924  int256 N */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":12937:12943  146097 */\n      0x023ab1\n        /* \"BasicCoin/PokerToken.sol\":12932:12933  L */\n      dup3\n        /* \"BasicCoin/PokerToken.sol\":12928:12929  4 */\n      0x04\n        /* \"BasicCoin/PokerToken.sol\":12928:12933  4 * L */\n      mul\n        /* \"BasicCoin/PokerToken.sol\":12927:12943  (4 * L) / 146097 */\n      dup2\n      tag_235\n      jumpi\n      invalid\n    tag_235:\n      sdiv\n        /* \"BasicCoin/PokerToken.sol\":12916:12943  int256 N = (4 * L) / 146097 */\n      swap1\n      pop\n        /* \"BasicCoin/PokerToken.sol\":12981:12982  4 */\n      0x04\n        /* \"BasicCoin/PokerToken.sol\":12976:12977  3 */\n      0x03\n        /* \"BasicCoin/PokerToken.sol\":12972:12973  N */\n      dup3\n        /* \"BasicCoin/PokerToken.sol\":12963:12969  146097 */\n      0x023ab1\n        /* \"BasicCoin/PokerToken.sol\":12963:12973  146097 * N */\n      mul\n        /* \"BasicCoin/PokerToken.sol\":12963:12977  146097 * N + 3 */\n      add\n        /* \"BasicCoin/PokerToken.sol\":12962:12982  (146097 * N + 3) / 4 */\n      dup2\n      tag_236\n      jumpi\n      invalid\n    tag_236:\n      sdiv\n        /* \"BasicCoin/PokerToken.sol\":12958:12959  L */\n      dup3\n        /* \"BasicCoin/PokerToken.sol\":12958:12982  L - (146097 * N + 3) / 4 */\n      sub\n        /* \"BasicCoin/PokerToken.sol\":12954:12982  L = L - (146097 * N + 3) / 4 */\n      swap2\n      pop\n        /* \"BasicCoin/PokerToken.sol\":12993:13005  int256 _year */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":13027:13034  1461001 */\n      0x164b09\n        /* \"BasicCoin/PokerToken.sol\":13021:13022  1 */\n      0x01\n        /* \"BasicCoin/PokerToken.sol\":13017:13018  L */\n      dup5\n        /* \"BasicCoin/PokerToken.sol\":13017:13022  L + 1 */\n      add\n        /* \"BasicCoin/PokerToken.sol\":13009:13013  4000 */\n      0x0fa0\n        /* \"BasicCoin/PokerToken.sol\":13009:13023  4000 * (L + 1) */\n      mul\n        /* \"BasicCoin/PokerToken.sol\":13008:13034  (4000 * (L + 1)) / 1461001 */\n      dup2\n      tag_237\n      jumpi\n      invalid\n    tag_237:\n      sdiv\n        /* \"BasicCoin/PokerToken.sol\":12993:13034  int256 _year = (4000 * (L + 1)) / 1461001 */\n      swap1\n      pop\n        /* \"BasicCoin/PokerToken.sol\":13074:13076  31 */\n      0x1f\n        /* \"BasicCoin/PokerToken.sol\":13070:13071  4 */\n      0x04\n        /* \"BasicCoin/PokerToken.sol\":13061:13066  _year */\n      dup3\n        /* \"BasicCoin/PokerToken.sol\":13054:13058  1461 */\n      0x05b5\n        /* \"BasicCoin/PokerToken.sol\":13054:13066  1461 * _year */\n      mul\n        /* \"BasicCoin/PokerToken.sol\":13053:13071  (1461 * _year) / 4 */\n      dup2\n      tag_238\n      jumpi\n      invalid\n    tag_238:\n      sdiv\n        /* \"BasicCoin/PokerToken.sol\":13049:13050  L */\n      dup5\n        /* \"BasicCoin/PokerToken.sol\":13049:13071  L - (1461 * _year) / 4 */\n      sub\n        /* \"BasicCoin/PokerToken.sol\":13049:13076  L - (1461 * _year) / 4 + 31 */\n      add\n        /* \"BasicCoin/PokerToken.sol\":13045:13076  L = L - (1461 * _year) / 4 + 31 */\n      swap3\n      pop\n        /* \"BasicCoin/PokerToken.sol\":13087:13100  int256 _month */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":13114:13118  2447 */\n      0x098f\n        /* \"BasicCoin/PokerToken.sol\":13109:13110  L */\n      dup5\n        /* \"BasicCoin/PokerToken.sol\":13104:13106  80 */\n      0x50\n        /* \"BasicCoin/PokerToken.sol\":13104:13110  80 * L */\n      mul\n        /* \"BasicCoin/PokerToken.sol\":13103:13118  (80 * L) / 2447 */\n      dup2\n      tag_239\n      jumpi\n      invalid\n    tag_239:\n      sdiv\n        /* \"BasicCoin/PokerToken.sol\":13087:13118  int256 _month = (80 * L) / 2447 */\n      swap1\n      pop\n        /* \"BasicCoin/PokerToken.sol\":13188:13190  11 */\n      0x0b\n        /* \"BasicCoin/PokerToken.sol\":13179:13185  _month */\n      dup2\n        /* \"BasicCoin/PokerToken.sol\":13179:13190  _month / 11 */\n      dup2\n      tag_240\n      jumpi\n      invalid\n    tag_240:\n      sdiv\n        /* \"BasicCoin/PokerToken.sol\":13175:13190  L = _month / 11 */\n      swap4\n      pop\n        /* \"BasicCoin/PokerToken.sol\":13228:13229  L */\n      dup4\n        /* \"BasicCoin/PokerToken.sol\":13223:13225  12 */\n      0x0c\n        /* \"BasicCoin/PokerToken.sol\":13223:13229  12 * L */\n      mul\n        /* \"BasicCoin/PokerToken.sol\":13219:13220  2 */\n      0x02\n        /* \"BasicCoin/PokerToken.sol\":13210:13216  _month */\n      dup3\n        /* \"BasicCoin/PokerToken.sol\":13210:13220  _month + 2 */\n      add\n        /* \"BasicCoin/PokerToken.sol\":13210:13229  _month + 2 - 12 * L */\n      sub\n        /* \"BasicCoin/PokerToken.sol\":13201:13229  _month = _month + 2 - 12 * L */\n      swap1\n      pop\n        /* \"BasicCoin/PokerToken.sol\":13273:13274  L */\n      dup4\n        /* \"BasicCoin/PokerToken.sol\":13265:13270  _year */\n      dup3\n        /* \"BasicCoin/PokerToken.sol\":13259:13261  49 */\n      0x31\n        /* \"BasicCoin/PokerToken.sol\":13255:13256  N */\n      dup6\n        /* \"BasicCoin/PokerToken.sol\":13255:13261  N - 49 */\n      sub\n        /* \"BasicCoin/PokerToken.sol\":13248:13251  100 */\n      0x64\n        /* \"BasicCoin/PokerToken.sol\":13248:13262  100 * (N - 49) */\n      mul\n        /* \"BasicCoin/PokerToken.sol\":13248:13270  100 * (N - 49) + _year */\n      add\n        /* \"BasicCoin/PokerToken.sol\":13248:13274  100 * (N - 49) + _year + L */\n      add\n        /* \"BasicCoin/PokerToken.sol\":13240:13274  _year = 100 * (N - 49) + _year + L */\n      swap2\n      pop\n        /* \"BasicCoin/PokerToken.sol\":13302:13307  _year */\n      dup2\n        /* \"BasicCoin/PokerToken.sol\":13287:13308  year = uint256(_year) */\n      swap8\n      pop\n        /* \"BasicCoin/PokerToken.sol\":12656:13316  function getYear() public view returns (uint256 year) {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      jump\t// out\n        /* \"BasicCoin/PokerToken.sol\":7121:7238  function length(AddressSet storage set) internal view returns (uint256) {\r... */\n    tag_126:\n        /* \"BasicCoin/PokerToken.sol\":7184:7191  uint256 */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":7211:7230  _length(set._inner) */\n      tag_242\n        /* \"BasicCoin/PokerToken.sol\":7219:7222  set */\n      dup3\n        /* \"BasicCoin/PokerToken.sol\":7219:7229  set._inner */\n      0x00\n      add\n        /* \"BasicCoin/PokerToken.sol\":7211:7218  _length */\n      tag_243\n        /* \"BasicCoin/PokerToken.sol\":7211:7230  _length(set._inner) */\n      jump\t// in\n    tag_242:\n        /* \"BasicCoin/PokerToken.sol\":7204:7230  return _length(set._inner) */\n      swap1\n      pop\n        /* \"BasicCoin/PokerToken.sol\":7121:7238  function length(AddressSet storage set) internal view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"_lib/Context.sol\":605:711  function _msgSender() internal view virtual returns (address payable) {\r... */\n    tag_133:\n        /* \"_lib/Context.sol\":658:673  address payable */\n      0x00\n        /* \"_lib/Context.sol\":693:703  msg.sender */\n      caller\n        /* \"_lib/Context.sol\":686:703  return msg.sender */\n      swap1\n      pop\n        /* \"_lib/Context.sol\":605:711  function _msgSender() internal view virtual returns (address payable) {\r... */\n      swap1\n      jump\t// out\n        /* \"_lib/ERC20.sol\":5546:5885  function _approve(\r... */\n    tag_134:\n        /* \"_lib/ERC20.sol\":5695:5696  0 */\n      0x00\n        /* \"_lib/ERC20.sol\":5677:5697  _owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":5677:5683  _owner */\n      dup4\n        /* \"_lib/ERC20.sol\":5677:5697  _owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"_lib/ERC20.sol\":5669:5716  require(_owner != address(0), \"approve from 0\") */\n      tag_246\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x617070726f76652066726f6d2030000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_246:\n        /* \"_lib/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"_lib/ERC20.sol\":5735:5757  _spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":5735:5743  _spender */\n      dup3\n        /* \"_lib/ERC20.sol\":5735:5757  _spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"_lib/ERC20.sol\":5727:5774  require(_spender != address(0), \"approve to 0\") */\n      tag_247\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x617070726f766520746f20300000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_247:\n        /* \"_lib/ERC20.sol\":5819:5826  _amount */\n      dup1\n        /* \"_lib/ERC20.sol\":5787:5798  _allowances */\n      0x01\n        /* \"_lib/ERC20.sol\":5787:5806  _allowances[_owner] */\n      0x00\n        /* \"_lib/ERC20.sol\":5799:5805  _owner */\n      dup6\n        /* \"_lib/ERC20.sol\":5787:5806  _allowances[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"_lib/ERC20.sol\":5787:5816  _allowances[_owner][_spender] */\n      0x00\n        /* \"_lib/ERC20.sol\":5807:5815  _spender */\n      dup5\n        /* \"_lib/ERC20.sol\":5787:5816  _allowances[_owner][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"_lib/ERC20.sol\":5787:5826  _allowances[_owner][_spender] = _amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"_lib/ERC20.sol\":5859:5867  _spender */\n      dup2\n        /* \"_lib/ERC20.sol\":5842:5877  Approval(_owner, _spender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":5851:5857  _owner */\n      dup4\n        /* \"_lib/ERC20.sol\":5842:5877  Approval(_owner, _spender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"_lib/ERC20.sol\":5869:5876  _amount */\n      dup4\n        /* \"_lib/ERC20.sol\":5842:5877  Approval(_owner, _spender, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"_lib/ERC20.sol\":5546:5885  function _approve(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"_lib/ERC20.sol\":4652:5104  function _transfer(\r... */\n    tag_144:\n        /* \"_lib/ERC20.sol\":4795:4796  0 */\n      0x00\n        /* \"_lib/ERC20.sol\":4778:4797  _from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":4778:4783  _from */\n      dup4\n        /* \"_lib/ERC20.sol\":4778:4797  _from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"_lib/ERC20.sol\":4770:4817  require(_from != address(0), \"transfer from 0\") */\n      tag_249\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x7472616e736665722066726f6d20300000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_249:\n        /* \"_lib/ERC20.sol\":4851:4852  0 */\n      0x00\n        /* \"_lib/ERC20.sol\":4836:4853  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":4836:4839  _to */\n      dup3\n        /* \"_lib/ERC20.sol\":4836:4853  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"_lib/ERC20.sol\":4828:4871  require(_to != address(0), \"transfer to 0\") */\n      tag_250\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x7472616e7366657220746f203000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_250:\n        /* \"_lib/ERC20.sol\":4905:4911  0xdead */\n      0xdead\n        /* \"_lib/ERC20.sol\":4890:4912  _to != address(0xdead) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":4890:4893  _to */\n      dup3\n        /* \"_lib/ERC20.sol\":4890:4912  _to != address(0xdead) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"_lib/ERC20.sol\":4882:4935  require(_to != address(0xdead), \"transfer to 0xdead\") */\n      tag_251\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x7472616e7366657220746f203078646561640000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_251:\n        /* \"_lib/ERC20.sol\":4967:4996  _balances[_from].sub(_amount) */\n      tag_252\n        /* \"_lib/ERC20.sol\":4988:4995  _amount */\n      dup2\n        /* \"_lib/ERC20.sol\":4967:4976  _balances */\n      0x00\n        /* \"_lib/ERC20.sol\":4967:4983  _balances[_from] */\n      dup1\n        /* \"_lib/ERC20.sol\":4977:4982  _from */\n      dup7\n        /* \"_lib/ERC20.sol\":4967:4983  _balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"_lib/ERC20.sol\":4967:4987  _balances[_from].sub */\n      tag_159\n      swap1\n        /* \"_lib/ERC20.sol\":4967:4996  _balances[_from].sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_252:\n        /* \"_lib/ERC20.sol\":4948:4957  _balances */\n      0x00\n        /* \"_lib/ERC20.sol\":4948:4964  _balances[_from] */\n      dup1\n        /* \"_lib/ERC20.sol\":4958:4963  _from */\n      dup6\n        /* \"_lib/ERC20.sol\":4948:4964  _balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"_lib/ERC20.sol\":4948:4996  _balances[_from] = _balances[_from].sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"_lib/ERC20.sol\":5024:5051  _balances[_to].add(_amount) */\n      tag_253\n        /* \"_lib/ERC20.sol\":5043:5050  _amount */\n      dup2\n        /* \"_lib/ERC20.sol\":5024:5033  _balances */\n      0x00\n        /* \"_lib/ERC20.sol\":5024:5038  _balances[_to] */\n      dup1\n        /* \"_lib/ERC20.sol\":5034:5037  _to */\n      dup6\n        /* \"_lib/ERC20.sol\":5024:5038  _balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"_lib/ERC20.sol\":5024:5042  _balances[_to].add */\n      tag_167\n      swap1\n        /* \"_lib/ERC20.sol\":5024:5051  _balances[_to].add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_253:\n        /* \"_lib/ERC20.sol\":5007:5016  _balances */\n      0x00\n        /* \"_lib/ERC20.sol\":5007:5021  _balances[_to] */\n      dup1\n        /* \"_lib/ERC20.sol\":5017:5020  _to */\n      dup5\n        /* \"_lib/ERC20.sol\":5007:5021  _balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"_lib/ERC20.sol\":5007:5051  _balances[_to] = _balances[_to].add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"_lib/ERC20.sol\":5083:5086  _to */\n      dup2\n        /* \"_lib/ERC20.sol\":5067:5096  Transfer(_from, _to, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":5076:5081  _from */\n      dup4\n        /* \"_lib/ERC20.sol\":5067:5096  Transfer(_from, _to, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"_lib/ERC20.sol\":5088:5095  _amount */\n      dup4\n        /* \"_lib/ERC20.sol\":5067:5096  Transfer(_from, _to, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"_lib/ERC20.sol\":4652:5104  function _transfer(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"BasicCoin/PokerToken.sol\":6587:6759  function remove(AddressSet storage set, address value)\r... */\n    tag_151:\n        /* \"BasicCoin/PokerToken.sol\":6678:6682  bool */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":6707:6751  _remove(set._inner, bytes32(uint256(value))) */\n      tag_255\n        /* \"BasicCoin/PokerToken.sol\":6715:6718  set */\n      dup4\n        /* \"BasicCoin/PokerToken.sol\":6715:6725  set._inner */\n      0x00\n      add\n        /* \"BasicCoin/PokerToken.sol\":6743:6748  value */\n      dup4\n        /* \"BasicCoin/PokerToken.sol\":6735:6749  uint256(value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BasicCoin/PokerToken.sol\":6727:6750  bytes32(uint256(value)) */\n      0x00\n      shl\n        /* \"BasicCoin/PokerToken.sol\":6707:6714  _remove */\n      tag_256\n        /* \"BasicCoin/PokerToken.sol\":6707:6751  _remove(set._inner, bytes32(uint256(value))) */\n      jump\t// in\n    tag_255:\n        /* \"BasicCoin/PokerToken.sol\":6700:6751  return _remove(set._inner, bytes32(uint256(value))) */\n      swap1\n      pop\n        /* \"BasicCoin/PokerToken.sol\":6587:6759  function remove(AddressSet storage set, address value)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"_lib/SafeMath.sol\":773:957  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_159:\n        /* \"_lib/SafeMath.sol\":831:838  uint256 */\n      0x00\n        /* \"_lib/SafeMath.sol\":864:865  a */\n      dup3\n        /* \"_lib/SafeMath.sol\":859:860  b */\n      dup3\n        /* \"_lib/SafeMath.sol\":859:865  b <= a */\n      gt\n      iszero\n        /* \"_lib/SafeMath.sol\":851:900  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_258\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_258:\n        /* \"_lib/SafeMath.sol\":911:920  uint256 c */\n      0x00\n        /* \"_lib/SafeMath.sol\":927:928  b */\n      dup3\n        /* \"_lib/SafeMath.sol\":923:924  a */\n      dup5\n        /* \"_lib/SafeMath.sol\":923:928  a - b */\n      sub\n        /* \"_lib/SafeMath.sol\":911:928  uint256 c = a - b */\n      swap1\n      pop\n        /* \"_lib/SafeMath.sol\":948:949  c */\n      dup1\n        /* \"_lib/SafeMath.sol\":941:949  return c */\n      swap2\n      pop\n      pop\n        /* \"_lib/SafeMath.sol\":773:957  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"_lib/SafeMath.sol\":317:498  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_167:\n        /* \"_lib/SafeMath.sol\":375:382  uint256 */\n      0x00\n        /* \"_lib/SafeMath.sol\":395:404  uint256 c */\n      dup1\n        /* \"_lib/SafeMath.sol\":411:412  b */\n      dup3\n        /* \"_lib/SafeMath.sol\":407:408  a */\n      dup5\n        /* \"_lib/SafeMath.sol\":407:412  a + b */\n      add\n        /* \"_lib/SafeMath.sol\":395:412  uint256 c = a + b */\n      swap1\n      pop\n        /* \"_lib/SafeMath.sol\":436:437  a */\n      dup4\n        /* \"_lib/SafeMath.sol\":431:432  c */\n      dup2\n        /* \"_lib/SafeMath.sol\":431:437  c >= a */\n      lt\n      iszero\n        /* \"_lib/SafeMath.sol\":423:469  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_260\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_260:\n        /* \"_lib/SafeMath.sol\":489:490  c */\n      dup1\n        /* \"_lib/SafeMath.sol\":482:490  return c */\n      swap2\n      pop\n      pop\n        /* \"_lib/SafeMath.sol\":317:498  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"_lib/ERC20.sol\":6164:6434  function _mint(address _to, uint256 _amount) internal {\r... */\n    tag_170:\n        /* \"_lib/ERC20.sol\":6252:6253  0 */\n      0x00\n        /* \"_lib/ERC20.sol\":6237:6254  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":6237:6240  _to */\n      dup3\n        /* \"_lib/ERC20.sol\":6237:6254  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"_lib/ERC20.sol\":6229:6268  require(_to != address(0), \"mint to 0\") */\n      tag_262\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x09\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x6d696e7420746f20300000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_262:\n        /* \"_lib/ERC20.sol\":6296:6321  _totalSupply.add(_amount) */\n      tag_263\n        /* \"_lib/ERC20.sol\":6313:6320  _amount */\n      dup2\n        /* \"_lib/ERC20.sol\":6296:6308  _totalSupply */\n      sload(0x02)\n        /* \"_lib/ERC20.sol\":6296:6312  _totalSupply.add */\n      tag_167\n      swap1\n        /* \"_lib/ERC20.sol\":6296:6321  _totalSupply.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_263:\n        /* \"_lib/ERC20.sol\":6281:6293  _totalSupply */\n      0x02\n        /* \"_lib/ERC20.sol\":6281:6321  _totalSupply = _totalSupply.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"_lib/ERC20.sol\":6349:6376  _balances[_to].add(_amount) */\n      tag_264\n        /* \"_lib/ERC20.sol\":6368:6375  _amount */\n      dup2\n        /* \"_lib/ERC20.sol\":6349:6358  _balances */\n      0x00\n        /* \"_lib/ERC20.sol\":6349:6363  _balances[_to] */\n      dup1\n        /* \"_lib/ERC20.sol\":6359:6362  _to */\n      dup6\n        /* \"_lib/ERC20.sol\":6349:6363  _balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"_lib/ERC20.sol\":6349:6367  _balances[_to].add */\n      tag_167\n      swap1\n        /* \"_lib/ERC20.sol\":6349:6376  _balances[_to].add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_264:\n        /* \"_lib/ERC20.sol\":6332:6341  _balances */\n      0x00\n        /* \"_lib/ERC20.sol\":6332:6346  _balances[_to] */\n      dup1\n        /* \"_lib/ERC20.sol\":6342:6345  _to */\n      dup5\n        /* \"_lib/ERC20.sol\":6332:6346  _balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"_lib/ERC20.sol\":6332:6376  _balances[_to] = _balances[_to].add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"_lib/ERC20.sol\":6413:6416  _to */\n      dup2\n        /* \"_lib/ERC20.sol\":6392:6426  Transfer(address(0), _to, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":6409:6410  0 */\n      0x00\n        /* \"_lib/ERC20.sol\":6392:6426  Transfer(address(0), _to, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"_lib/ERC20.sol\":6418:6425  _amount */\n      dup4\n        /* \"_lib/ERC20.sol\":6392:6426  Transfer(address(0), _to, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"_lib/ERC20.sol\":6164:6434  function _mint(address _to, uint256 _amount) internal {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"_lib/ERC20.sol\":6763:7114  function _burn(address _from, uint256 _amount) internal {\r... */\n    tag_181:\n        /* \"_lib/ERC20.sol\":6855:6856  0 */\n      0x00\n        /* \"_lib/ERC20.sol\":6838:6857  _from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":6838:6843  _from */\n      dup3\n        /* \"_lib/ERC20.sol\":6838:6857  _from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"_lib/ERC20.sol\":6830:6873  require(_from != address(0), \"burn from 0\") */\n      tag_266\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x6275726e2066726f6d2030000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_266:\n        /* \"_lib/ERC20.sol\":6909:6915  0xdead */\n      0xdead\n        /* \"_lib/ERC20.sol\":6892:6916  _from != address(0xdead) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":6892:6897  _from */\n      dup3\n        /* \"_lib/ERC20.sol\":6892:6916  _from != address(0xdead) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"_lib/ERC20.sol\":6884:6937  require(_from != address(0xdead), \"burn from 0xdead\") */\n      tag_267\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x10\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x6275726e2066726f6d2030786465616400000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_267:\n        /* \"_lib/ERC20.sol\":6969:6998  _balances[_from].sub(_amount) */\n      tag_268\n        /* \"_lib/ERC20.sol\":6990:6997  _amount */\n      dup2\n        /* \"_lib/ERC20.sol\":6969:6978  _balances */\n      0x00\n        /* \"_lib/ERC20.sol\":6969:6985  _balances[_from] */\n      dup1\n        /* \"_lib/ERC20.sol\":6979:6984  _from */\n      dup6\n        /* \"_lib/ERC20.sol\":6969:6985  _balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"_lib/ERC20.sol\":6969:6989  _balances[_from].sub */\n      tag_159\n      swap1\n        /* \"_lib/ERC20.sol\":6969:6998  _balances[_from].sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_268:\n        /* \"_lib/ERC20.sol\":6950:6959  _balances */\n      0x00\n        /* \"_lib/ERC20.sol\":6950:6966  _balances[_from] */\n      dup1\n        /* \"_lib/ERC20.sol\":6960:6965  _from */\n      dup5\n        /* \"_lib/ERC20.sol\":6950:6966  _balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"_lib/ERC20.sol\":6950:6998  _balances[_from] = _balances[_from].sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"_lib/ERC20.sol\":7024:7049  _totalSupply.sub(_amount) */\n      tag_269\n        /* \"_lib/ERC20.sol\":7041:7048  _amount */\n      dup2\n        /* \"_lib/ERC20.sol\":7024:7036  _totalSupply */\n      sload(0x02)\n        /* \"_lib/ERC20.sol\":7024:7040  _totalSupply.sub */\n      tag_159\n      swap1\n        /* \"_lib/ERC20.sol\":7024:7049  _totalSupply.sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_269:\n        /* \"_lib/ERC20.sol\":7009:7021  _totalSupply */\n      0x02\n        /* \"_lib/ERC20.sol\":7009:7049  _totalSupply = _totalSupply.sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"_lib/ERC20.sol\":7089:7095  0xdead */\n      0xdead\n        /* \"_lib/ERC20.sol\":7065:7106  Transfer(_from, address(0xdead), _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":7074:7079  _from */\n      dup3\n        /* \"_lib/ERC20.sol\":7065:7106  Transfer(_from, address(0xdead), _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"_lib/ERC20.sol\":7098:7105  _amount */\n      dup4\n        /* \"_lib/ERC20.sol\":7065:7106  Transfer(_from, address(0xdead), _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"_lib/ERC20.sol\":6763:7114  function _burn(address _from, uint256 _amount) internal {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"BasicCoin/PokerToken.sol\":7592:7773  function at(AddressSet storage set, uint256 index)\r... */\n    tag_192:\n        /* \"BasicCoin/PokerToken.sol\":7693:7700  address */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":7741:7763  _at(set._inner, index) */\n      tag_271\n        /* \"BasicCoin/PokerToken.sol\":7745:7748  set */\n      dup4\n        /* \"BasicCoin/PokerToken.sol\":7745:7755  set._inner */\n      0x00\n      add\n        /* \"BasicCoin/PokerToken.sol\":7757:7762  index */\n      dup4\n        /* \"BasicCoin/PokerToken.sol\":7741:7744  _at */\n      tag_272\n        /* \"BasicCoin/PokerToken.sol\":7741:7763  _at(set._inner, index) */\n      jump\t// in\n    tag_271:\n        /* \"BasicCoin/PokerToken.sol\":7733:7764  uint256(_at(set._inner, index)) */\n      0x00\n      shr\n        /* \"BasicCoin/PokerToken.sol\":7718:7765  return address(uint256(_at(set._inner, index))) */\n      swap1\n      pop\n        /* \"BasicCoin/PokerToken.sol\":7592:7773  function at(AddressSet storage set, uint256 index)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"BasicCoin/PokerToken.sol\":6245:6411  function add(AddressSet storage set, address value)\r... */\n    tag_201:\n        /* \"BasicCoin/PokerToken.sol\":6333:6337  bool */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":6362:6403  _add(set._inner, bytes32(uint256(value))) */\n      tag_274\n        /* \"BasicCoin/PokerToken.sol\":6367:6370  set */\n      dup4\n        /* \"BasicCoin/PokerToken.sol\":6367:6377  set._inner */\n      0x00\n      add\n        /* \"BasicCoin/PokerToken.sol\":6395:6400  value */\n      dup4\n        /* \"BasicCoin/PokerToken.sol\":6387:6401  uint256(value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BasicCoin/PokerToken.sol\":6379:6402  bytes32(uint256(value)) */\n      0x00\n      shl\n        /* \"BasicCoin/PokerToken.sol\":6362:6366  _add */\n      tag_275\n        /* \"BasicCoin/PokerToken.sol\":6362:6403  _add(set._inner, bytes32(uint256(value))) */\n      jump\t// in\n    tag_274:\n        /* \"BasicCoin/PokerToken.sol\":6355:6403  return _add(set._inner, bytes32(uint256(value))) */\n      swap1\n      pop\n        /* \"BasicCoin/PokerToken.sol\":6245:6411  function add(AddressSet storage set, address value)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"BasicCoin/PokerToken.sol\":6845:7035  function contains(AddressSet storage set, address value)\r... */\n    tag_225:\n        /* \"BasicCoin/PokerToken.sol\":6952:6956  bool */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":6981:7027  _contains(set._inner, bytes32(uint256(value))) */\n      tag_277\n        /* \"BasicCoin/PokerToken.sol\":6991:6994  set */\n      dup4\n        /* \"BasicCoin/PokerToken.sol\":6991:7001  set._inner */\n      0x00\n      add\n        /* \"BasicCoin/PokerToken.sol\":7019:7024  value */\n      dup4\n        /* \"BasicCoin/PokerToken.sol\":7011:7025  uint256(value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BasicCoin/PokerToken.sol\":7003:7026  bytes32(uint256(value)) */\n      0x00\n      shl\n        /* \"BasicCoin/PokerToken.sol\":6981:6990  _contains */\n      tag_278\n        /* \"BasicCoin/PokerToken.sol\":6981:7027  _contains(set._inner, bytes32(uint256(value))) */\n      jump\t// in\n    tag_277:\n        /* \"BasicCoin/PokerToken.sol\":6974:7027  return _contains(set._inner, bytes32(uint256(value))) */\n      swap1\n      pop\n        /* \"BasicCoin/PokerToken.sol\":6845:7035  function contains(AddressSet storage set, address value)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"BasicCoin/PokerToken.sol\":3545:3654  function _length(Set storage set) private view returns (uint256) {\r... */\n    tag_243:\n        /* \"BasicCoin/PokerToken.sol\":3601:3608  uint256 */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":3628:3631  set */\n      dup2\n        /* \"BasicCoin/PokerToken.sol\":3628:3639  set._values */\n      0x00\n      add\n        /* \"BasicCoin/PokerToken.sol\":3628:3646  set._values.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"BasicCoin/PokerToken.sol\":3621:3646  return set._values.length */\n      swap1\n      pop\n        /* \"BasicCoin/PokerToken.sol\":3545:3654  function _length(Set storage set) private view returns (uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"BasicCoin/PokerToken.sol\":1655:3212  function _remove(Set storage set, bytes32 value) private returns (bool) {\r... */\n    tag_256:\n        /* \"BasicCoin/PokerToken.sol\":1721:1725  bool */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":1839:1857  uint256 valueIndex */\n      dup1\n        /* \"BasicCoin/PokerToken.sol\":1860:1863  set */\n      dup4\n        /* \"BasicCoin/PokerToken.sol\":1860:1872  set._indexes */\n      0x01\n      add\n        /* \"BasicCoin/PokerToken.sol\":1860:1879  set._indexes[value] */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":1873:1878  value */\n      dup5\n        /* \"BasicCoin/PokerToken.sol\":1860:1879  set._indexes[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BasicCoin/PokerToken.sol\":1839:1879  uint256 valueIndex = set._indexes[value] */\n      swap1\n      pop\n        /* \"BasicCoin/PokerToken.sol\":1910:1911  0 */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":1896:1906  valueIndex */\n      dup2\n        /* \"BasicCoin/PokerToken.sol\":1896:1911  valueIndex != 0 */\n      eq\n        /* \"BasicCoin/PokerToken.sol\":1892:3205  if (valueIndex != 0) {\r... */\n      tag_281\n      jumpi\n        /* \"BasicCoin/PokerToken.sol\":2271:2292  uint256 toDeleteIndex */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":2308:2309  1 */\n      0x01\n        /* \"BasicCoin/PokerToken.sol\":2295:2305  valueIndex */\n      dup3\n        /* \"BasicCoin/PokerToken.sol\":2295:2309  valueIndex - 1 */\n      sub\n        /* \"BasicCoin/PokerToken.sol\":2271:2309  uint256 toDeleteIndex = valueIndex - 1 */\n      swap1\n      pop\n        /* \"BasicCoin/PokerToken.sol\":2324:2341  uint256 lastIndex */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":2365:2366  1 */\n      0x01\n        /* \"BasicCoin/PokerToken.sol\":2344:2347  set */\n      dup7\n        /* \"BasicCoin/PokerToken.sol\":2344:2355  set._values */\n      0x00\n      add\n        /* \"BasicCoin/PokerToken.sol\":2344:2362  set._values.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"BasicCoin/PokerToken.sol\":2344:2366  set._values.length - 1 */\n      sub\n        /* \"BasicCoin/PokerToken.sol\":2324:2366  uint256 lastIndex = set._values.length - 1 */\n      swap1\n      pop\n        /* \"BasicCoin/PokerToken.sol\":2611:2628  bytes32 lastvalue */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":2631:2634  set */\n      dup7\n        /* \"BasicCoin/PokerToken.sol\":2631:2642  set._values */\n      0x00\n      add\n        /* \"BasicCoin/PokerToken.sol\":2643:2652  lastIndex */\n      dup3\n        /* \"BasicCoin/PokerToken.sol\":2631:2653  set._values[lastIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_282\n      jumpi\n      invalid\n    tag_282:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"BasicCoin/PokerToken.sol\":2611:2653  bytes32 lastvalue = set._values[lastIndex] */\n      swap1\n      pop\n        /* \"BasicCoin/PokerToken.sol\":2777:2786  lastvalue */\n      dup1\n        /* \"BasicCoin/PokerToken.sol\":2748:2751  set */\n      dup8\n        /* \"BasicCoin/PokerToken.sol\":2748:2759  set._values */\n      0x00\n      add\n        /* \"BasicCoin/PokerToken.sol\":2760:2773  toDeleteIndex */\n      dup5\n        /* \"BasicCoin/PokerToken.sol\":2748:2774  set._values[toDeleteIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_284\n      jumpi\n      invalid\n    tag_284:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"BasicCoin/PokerToken.sol\":2748:2786  set._values[toDeleteIndex] = lastvalue */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BasicCoin/PokerToken.sol\":2896:2897  1 */\n      0x01\n        /* \"BasicCoin/PokerToken.sol\":2880:2893  toDeleteIndex */\n      dup4\n        /* \"BasicCoin/PokerToken.sol\":2880:2897  toDeleteIndex + 1 */\n      add\n        /* \"BasicCoin/PokerToken.sol\":2854:2857  set */\n      dup8\n        /* \"BasicCoin/PokerToken.sol\":2854:2866  set._indexes */\n      0x01\n      add\n        /* \"BasicCoin/PokerToken.sol\":2854:2877  set._indexes[lastvalue] */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":2867:2876  lastvalue */\n      dup4\n        /* \"BasicCoin/PokerToken.sol\":2854:2877  set._indexes[lastvalue] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BasicCoin/PokerToken.sol\":2854:2897  set._indexes[lastvalue] = toDeleteIndex + 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BasicCoin/PokerToken.sol\":3006:3009  set */\n      dup7\n        /* \"BasicCoin/PokerToken.sol\":3006:3017  set._values */\n      0x00\n      add\n        /* \"BasicCoin/PokerToken.sol\":3006:3023  set._values.pop() */\n      dup1\n      sload\n      dup1\n      tag_286\n      jumpi\n      invalid\n    tag_286:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"BasicCoin/PokerToken.sol\":3101:3104  set */\n      dup7\n        /* \"BasicCoin/PokerToken.sol\":3101:3113  set._indexes */\n      0x01\n      add\n        /* \"BasicCoin/PokerToken.sol\":3101:3120  set._indexes[value] */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":3114:3119  value */\n      dup8\n        /* \"BasicCoin/PokerToken.sol\":3101:3120  set._indexes[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BasicCoin/PokerToken.sol\":3094:3120  delete set._indexes[value] */\n      0x00\n      swap1\n      sstore\n        /* \"BasicCoin/PokerToken.sol\":3144:3148  true */\n      0x01\n        /* \"BasicCoin/PokerToken.sol\":3137:3148  return true */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_280)\n        /* \"BasicCoin/PokerToken.sol\":1892:3205  if (valueIndex != 0) {\r... */\n    tag_281:\n        /* \"BasicCoin/PokerToken.sol\":3188:3193  false */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":3181:3193  return false */\n      swap2\n      pop\n      pop\n        /* \"BasicCoin/PokerToken.sol\":1655:3212  function _remove(Set storage set, bytes32 value) private returns (bool) {\r... */\n    tag_280:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"BasicCoin/PokerToken.sol\":4008:4281  function _at(Set storage set, uint256 index)\r... */\n    tag_272:\n        /* \"BasicCoin/PokerToken.sol\":4102:4109  bytes32 */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":4170:4175  index */\n      dup2\n        /* \"BasicCoin/PokerToken.sol\":4149:4152  set */\n      dup4\n        /* \"BasicCoin/PokerToken.sol\":4149:4160  set._values */\n      0x00\n      add\n        /* \"BasicCoin/PokerToken.sol\":4149:4167  set._values.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"BasicCoin/PokerToken.sol\":4149:4175  set._values.length > index */\n      gt\n        /* \"BasicCoin/PokerToken.sol\":4127:4237  require(\r... */\n      tag_290\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_290:\n        /* \"BasicCoin/PokerToken.sol\":4255:4258  set */\n      dup3\n        /* \"BasicCoin/PokerToken.sol\":4255:4266  set._values */\n      0x00\n      add\n        /* \"BasicCoin/PokerToken.sol\":4267:4272  index */\n      dup3\n        /* \"BasicCoin/PokerToken.sol\":4255:4273  set._values[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_291\n      jumpi\n      invalid\n    tag_291:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"BasicCoin/PokerToken.sol\":4248:4273  return set._values[index] */\n      swap1\n      pop\n        /* \"BasicCoin/PokerToken.sol\":4008:4281  function _at(Set storage set, uint256 index)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"BasicCoin/PokerToken.sol\":1065:1479  function _add(Set storage set, bytes32 value) private returns (bool) {\r... */\n    tag_275:\n        /* \"BasicCoin/PokerToken.sol\":1128:1132  bool */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":1150:1171  _contains(set, value) */\n      tag_294\n        /* \"BasicCoin/PokerToken.sol\":1160:1163  set */\n      dup4\n        /* \"BasicCoin/PokerToken.sol\":1165:1170  value */\n      dup4\n        /* \"BasicCoin/PokerToken.sol\":1150:1159  _contains */\n      tag_278\n        /* \"BasicCoin/PokerToken.sol\":1150:1171  _contains(set, value) */\n      jump\t// in\n    tag_294:\n        /* \"BasicCoin/PokerToken.sol\":1145:1472  if (!_contains(set, value)) {\r... */\n      tag_295\n      jumpi\n        /* \"BasicCoin/PokerToken.sol\":1188:1191  set */\n      dup3\n        /* \"BasicCoin/PokerToken.sol\":1188:1199  set._values */\n      0x00\n      add\n        /* \"BasicCoin/PokerToken.sol\":1205:1210  value */\n      dup3\n        /* \"BasicCoin/PokerToken.sol\":1188:1211  set._values.push(value) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"BasicCoin/PokerToken.sol\":1371:1374  set */\n      dup3\n        /* \"BasicCoin/PokerToken.sol\":1371:1382  set._values */\n      0x00\n      add\n        /* \"BasicCoin/PokerToken.sol\":1371:1389  set._values.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"BasicCoin/PokerToken.sol\":1349:1352  set */\n      dup4\n        /* \"BasicCoin/PokerToken.sol\":1349:1361  set._indexes */\n      0x01\n      add\n        /* \"BasicCoin/PokerToken.sol\":1349:1368  set._indexes[value] */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":1362:1367  value */\n      dup5\n        /* \"BasicCoin/PokerToken.sol\":1349:1368  set._indexes[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BasicCoin/PokerToken.sol\":1349:1389  set._indexes[value] = set._values.length */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BasicCoin/PokerToken.sol\":1411:1415  true */\n      0x01\n        /* \"BasicCoin/PokerToken.sol\":1404:1415  return true */\n      swap1\n      pop\n      jump(tag_293)\n        /* \"BasicCoin/PokerToken.sol\":1145:1472  if (!_contains(set, value)) {\r... */\n    tag_295:\n        /* \"BasicCoin/PokerToken.sol\":1455:1460  false */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":1448:1460  return false */\n      swap1\n      pop\n        /* \"BasicCoin/PokerToken.sol\":1065:1479  function _add(Set storage set, bytes32 value) private returns (bool) {\r... */\n    tag_293:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"BasicCoin/PokerToken.sol\":3298:3459  function _contains(Set storage set, bytes32 value)\r... */\n    tag_278:\n        /* \"BasicCoin/PokerToken.sol\":3398:3402  bool */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":3450:3451  0 */\n      dup1\n        /* \"BasicCoin/PokerToken.sol\":3427:3430  set */\n      dup4\n        /* \"BasicCoin/PokerToken.sol\":3427:3439  set._indexes */\n      0x01\n      add\n        /* \"BasicCoin/PokerToken.sol\":3427:3446  set._indexes[value] */\n      0x00\n        /* \"BasicCoin/PokerToken.sol\":3440:3445  value */\n      dup5\n        /* \"BasicCoin/PokerToken.sol\":3427:3446  set._indexes[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BasicCoin/PokerToken.sol\":3427:3451  set._indexes[value] != 0 */\n      eq\n      iszero\n        /* \"BasicCoin/PokerToken.sol\":3420:3451  return set._indexes[value] != 0 */\n      swap1\n      pop\n        /* \"BasicCoin/PokerToken.sol\":3298:3459  function _contains(Set storage set, bytes32 value)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb 456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473\n    data_214d6a2bcbc2880da3f1409c020bc73ea2584b13faa007de23ec5ca8b186aba0 506f6b6572546f6b656e3a205f64656c4d696e74657220697320746865207a65726f2061646472657373\n    data_cb9d3212f00552d8be41e69b0ea5b8e9499f587c01d683168aa870e2f69a84ce 506f6b6572546f6b656e3a205f6164644d696e74657220697320746865207a65726f2061646472657373\n\n    auxdata: 0xa2646970667358221220bc403b6fa0e74ed4fa3a5f62b46728061c1bb1f3968eb715dba835426b1a5e1564736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526b033b2e3c9fd0803ce8000000600b55670de0b6b3a7640000600c553480156200002d57600080fd5b506040518060400160405280600581526020017f504f4b45520000000000000000000000000000000000000000000000000000008152506040518060400160405280600581526020017f504f4b4552000000000000000000000000000000000000000000000000000000815250601260008360039080519060200190620000b69291906200021f565b508260049080519060200190620000cf9291906200021f565b5081600560006101000a81548160ff021916908360ff1602179055508160ff16600a0a8102905080600281905550806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505050620001546200021760201b60201c565b600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3620002c5565b600033905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200026257805160ff191683800117855562000293565b8280016001018555821562000293579182015b828111156200029257825182559160200191906001019062000275565b5b509050620002a29190620002a6565b5090565b5b80821115620002c1576000816000905550600101620002a7565b5090565b61281680620002d56000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c8063761248b4116100f9578063aa271e1a11610097578063dd62ed3e11610071578063dd62ed3e14610950578063e1665f56146109c8578063e235a4a6146109e6578063fd08921b14610a48576101c4565b8063aa271e1a1461087a578063b56a711c146108d4578063db6783b814610922576101c4565b80639098f2a7116100d35780639098f2a71461072357806395d89b4114610765578063a0712d68146107e8578063a9059cbb14610816576101c4565b8063761248b41461066b5780638da5cb5b146106cf5780638f32d59b14610703576101c4565b806323b872dd1161016657806342966c681161014057806342966c681461055f578063599a1c3a1461058d5780635b7121f8146105bb57806370a0823114610613576101c4565b806323b872dd14610456578063313ce567146104da57806340c10f19146104fb576101c4565b8063095ea7b3116101a2578063095ea7b3146102c257806318160ddd14610326578063230614fb1461034457806323338b88146103fc576101c4565b80630323aac7146101c957806306fdde03146101e7578063092654a01461026a575b600080fd5b6101d1610a66565b6040518082815260200191505060405180910390f35b6101ef610a77565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561022f578082015181840152602081019050610214565b50505050905090810190601f16801561025c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102ac6004803603602081101561028057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b15565b6040518082815260200191505060405180910390f35b61030e600480360360408110156102d857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b2d565b60405180821515815260200191505060405180910390f35b61032e610b4b565b6040518082815260200191505060405180910390f35b6103fa6004803603602081101561035a57600080fd5b810190808035906020019064010000000081111561037757600080fd5b82018360208201111561038957600080fd5b803590602001918460208302840111640100000000831117156103ab57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290505050610b55565b005b61043e6004803603602081101561041257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ba0565b60405180821515815260200191505060405180910390f35b6104c26004803603606081101561046c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d04565b60405180821515815260200191505060405180910390f35b6104e2610e35565b604051808260ff16815260200191505060405180910390f35b6105476004803603604081101561051157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e48565b60405180821515815260200191505060405180910390f35b61058b6004803603602081101561057557600080fd5b8101908080359060200190929190505050611199565b005b6105b9600480360360208110156105a357600080fd5b81019080803590602001909291905050506111a6565b005b6105e7600480360360208110156105d157600080fd5b81019080803590602001909291905050506111be565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106556004803603602081101561062957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061131c565b6040518082815260200191505060405180910390f35b6106b76004803603604081101561068157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611364565b60405180821515815260200191505060405180910390f35b6106d76114d3565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61070b6114fd565b60405180821515815260200191505060405180910390f35b61074f6004803603602081101561073957600080fd5b81019080803590602001909291905050506115db565b6040518082815260200191505060405180910390f35b61076d6115f3565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107ad578082015181840152602081019050610792565b50505050905090810190601f1680156107da5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610814600480360360208110156107fe57600080fd5b8101908080359060200190929190505050611691565b005b6108626004803603604081101561082c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506117a2565b60405180821515815260200191505060405180910390f35b6108bc6004803603602081101561089057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506117c0565b60405180821515815260200191505060405180910390f35b610920600480360360408110156108ea57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506117d4565b005b61094e6004803603602081101561093857600080fd5b810190808035906020019092919050505061182a565b005b6109b26004803603604081101561096657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611842565b6040518082815260200191505060405180910390f35b6109d06118c9565b6040518082815260200191505060405180910390f35b610a32600480360360408110156109fc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506118cf565b6040518082815260200191505060405180910390f35b610a506118f4565b6040518082815260200191505060405180910390f35b6000610a7260066119bd565b905090565b60038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b0d5780601f10610ae257610100808354040283529160200191610b0d565b820191906000526020600020905b815481529060010190602001808311610af057829003601f168201915b505050505081565b60096020528060005260406000206000915090505481565b6000610b41610b3a6119d2565b84846119da565b6001905092915050565b6000600254905090565b610b5d6114fd565b15610b9d5760005b8151811015610b9b57610b8e33838381518110610b7e57fe5b6020026020010151600c54611c0b565b8080600101915050610b65565b505b50565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610be36119d2565b73ffffffffffffffffffffffffffffffffffffffff1614610c6c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f6e6f74206f776e6572000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cf2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a81526020018061278d602a913960400191505060405180910390fd5b610cfd600683611f85565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614158015610d6f5750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b610d7857600080fd5b610e1f84610d846119d2565b610e1a85600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610dd16119d2565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611fb590919063ffffffff16565b6119da565b610e2a848484611c0b565b600190509392505050565b600560009054906101000a900460ff1681565b6000610e53336117c0565b610ec5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f63616c6c6572206973206e6f7420746865206d696e746572000000000000000081525060200191505060405180910390fd5b600b54610ef58360086000610ed86118f4565b81526020019081526020016000205461203e90919063ffffffff16565b1115610f69576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f506f6b6572546f6b656e3a20796561724d696e744c696d69740000000000000081525060200191505060405180910390fd5b610f7383836120c6565b610fa08260086000610f836118f4565b81526020019081526020016000205461203e90919063ffffffff16565b60086000610fac6118f4565b81526020019081526020016000208190555061102882600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061100b6118f4565b81526020019081526020016000205461203e90919063ffffffff16565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006110716118f4565b815260200190815260200160002081905550600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061110c6118f4565b815260200190815260200160002054111561118f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f506f6b6572546f6b656e3a207265636f7264436f6e74726163744c696d69740081525060200191505060405180910390fd5b6001905092915050565b6111a33382612281565b50565b6111ae6114fd565b156111bb5780600b819055505b50565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166112016119d2565b73ffffffffffffffffffffffffffffffffffffffff161461128a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f6e6f74206f776e6572000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6001611294610a66565b0382111561130a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f506f6b6572546f6b656e3a20696e646578206f7574206f6620626f756e64730081525060200191505060405180910390fd5b6113156006836124e1565b9050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166113a76119d2565b73ffffffffffffffffffffffffffffffffffffffff1614611430576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f6e6f74206f776e6572000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156114b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806127b7602a913960400191505060405180910390fd5b6114c083836117d4565b6114cb6006846124fb565b905092915050565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166115416119d2565b73ffffffffffffffffffffffffffffffffffffffff1614905060011515811515146115d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f6e6f74206f776e6572000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b8091505090565b60086020528060005260406000206000915090505481565b60048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116895780601f1061165e57610100808354040283529160200191611689565b820191906000526020600020905b81548152906001019060200180831161166c57829003601f168201915b505050505081565b600b546116c182600860006116a46118f4565b81526020019081526020016000205461203e90919063ffffffff16565b1115611735576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f506f6b6572546f6b656e3a20796561724d696e744c696d69740000000000000081525060200191505060405180910390fd5b61173d6114fd565b1561179f5761175361174d6114d3565b826120c6565b61178081600860006117636118f4565b81526020019081526020016000205461203e90919063ffffffff16565b6008600061178c6118f4565b8152602001908152602001600020819055505b50565b60006117b66117af6119d2565b8484611c0b565b6001905092915050565b60006117cd60068361252b565b9050919050565b6117dc6114fd565b156118265780600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5050565b6118326114fd565b1561183f5780600c819055505b50565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600b5481565b600a602052816000526040600020602052806000526040600020600091509150505481565b600080429050600062015180828161190857fe5b0490506000819050600062253d8c62010bd98301019050600062023ab1826004028161193057fe5b059050600460038262023ab102018161194557fe5b0582039150600062164b0960018401610fa0028161195f57fe5b059050601f6004826105b5028161197257fe5b058403019250600061098f846050028161198857fe5b059050600b818161199557fe5b05935083600c0260028201039050838260318503606402010191508197505050505050505090565b60006119cb8260000161255b565b9050919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611a7d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f617070726f76652066726f6d203000000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611b20576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f617070726f766520746f2030000000000000000000000000000000000000000081525060200191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611cae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f7472616e736665722066726f6d2030000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611d51576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f7472616e7366657220746f20300000000000000000000000000000000000000081525060200191505060405180910390fd5b61dead73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611df5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f7472616e7366657220746f20307864656164000000000000000000000000000081525060200191505060405180910390fd5b611e46816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611fb590919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611ed9816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461203e90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000611fad836000018373ffffffffffffffffffffffffffffffffffffffff1660001b61256c565b905092915050565b60008282111561202d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b6000808284019050838110156120bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612169576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f6d696e7420746f2030000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b61217e8160025461203e90919063ffffffff16565b6002819055506121d5816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461203e90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612324576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f6275726e2066726f6d203000000000000000000000000000000000000000000081525060200191505060405180910390fd5b61dead73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156123c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f6275726e2066726f6d203078646561640000000000000000000000000000000081525060200191505060405180910390fd5b612419816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611fb590919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061247081600254611fb590919063ffffffff16565b60028190555061dead73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60006124f08360000183612654565b60001c905092915050565b6000612523836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6126d7565b905092915050565b6000612553836000018373ffffffffffffffffffffffffffffffffffffffff1660001b612747565b905092915050565b600081600001805490509050919050565b6000808360010160008481526020019081526020016000205490506000811461264857600060018203905060006001866000018054905003905060008660000182815481106125b757fe5b90600052602060002001549050808760000184815481106125d457fe5b906000526020600020018190555060018301876001016000838152602001908152602001600020819055508660000180548061260c57fe5b6001900381819060005260206000200160009055905586600101600087815260200190815260200160002060009055600194505050505061264e565b60009150505b92915050565b6000818360000180549050116126b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061276b6022913960400191505060405180910390fd5b8260000182815481106126c457fe5b9060005260206000200154905092915050565b60006126e38383612747565b61273c578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050612741565b600090505b92915050565b60008083600101600084815260200190815260200160002054141590509291505056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473506f6b6572546f6b656e3a205f64656c4d696e74657220697320746865207a65726f2061646472657373506f6b6572546f6b656e3a205f6164644d696e74657220697320746865207a65726f2061646472657373a2646970667358221220bc403b6fa0e74ed4fa3a5f62b46728061c1bb1f3968eb715dba835426b1a5e1564736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH12 0x33B2E3C9FD0803CE8000000 PUSH1 0xB SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0xC SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x504F4B4552000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x504F4B4552000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x12 PUSH1 0x0 DUP4 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xB6 SWAP3 SWAP2 SWAP1 PUSH3 0x21F JUMP JUMPDEST POP DUP3 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xCF SWAP3 SWAP2 SWAP1 PUSH3 0x21F JUMP JUMPDEST POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0xFF AND PUSH1 0xA EXP DUP2 MUL SWAP1 POP DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP POP PUSH3 0x154 PUSH3 0x217 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x2C5 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x262 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x293 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x293 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x292 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x275 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x2A2 SWAP2 SWAP1 PUSH3 0x2A6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2C1 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x2A7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x2816 DUP1 PUSH3 0x2D5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x761248B4 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xAA271E1A GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x950 JUMPI DUP1 PUSH4 0xE1665F56 EQ PUSH2 0x9C8 JUMPI DUP1 PUSH4 0xE235A4A6 EQ PUSH2 0x9E6 JUMPI DUP1 PUSH4 0xFD08921B EQ PUSH2 0xA48 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0xAA271E1A EQ PUSH2 0x87A JUMPI DUP1 PUSH4 0xB56A711C EQ PUSH2 0x8D4 JUMPI DUP1 PUSH4 0xDB6783B8 EQ PUSH2 0x922 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x9098F2A7 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x9098F2A7 EQ PUSH2 0x723 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x765 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x7E8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x816 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x761248B4 EQ PUSH2 0x66B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6CF JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x703 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x42966C68 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x55F JUMPI DUP1 PUSH4 0x599A1C3A EQ PUSH2 0x58D JUMPI DUP1 PUSH4 0x5B7121F8 EQ PUSH2 0x5BB JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x613 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x456 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x4DA JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x4FB JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0x230614FB EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0x23338B88 EQ PUSH2 0x3FC JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x323AAC7 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x92654A0 EQ PUSH2 0x26A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D1 PUSH2 0xA66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EF PUSH2 0xA77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x214 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x25C JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32E PUSH2 0xB4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x35A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x377 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x3AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0xB55 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x43E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x412 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x46C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E2 PUSH2 0xE35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x547 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x511 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x58B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x575 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1199 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x11A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x11BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x655 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x629 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x131C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x681 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1364 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6D7 PUSH2 0x14D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x70B PUSH2 0x14FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x74F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x739 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x15DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x76D PUSH2 0x15F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7AD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x792 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x7DA JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x814 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1691 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x862 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x82C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x17A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8BC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x890 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x17C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x920 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x8EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x17D4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x94E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x938 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x182A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x966 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1842 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9D0 PUSH2 0x18C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA32 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x9FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x18CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA50 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0xA72 PUSH1 0x6 PUSH2 0x19BD JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xB0D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAE2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB0D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAF0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB41 PUSH2 0xB3A PUSH2 0x19D2 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x19DA JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB5D PUSH2 0x14FD JUMP JUMPDEST ISZERO PUSH2 0xB9D JUMPI PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xB9B JUMPI PUSH2 0xB8E CALLER DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xB7E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xC SLOAD PUSH2 0x1C0B JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xB65 JUMP JUMPDEST POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBE3 PUSH2 0x19D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6E6F74206F776E65720000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x278D PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCFD PUSH1 0x6 DUP4 PUSH2 0x1F85 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xD6F JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0xD78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE1F DUP5 PUSH2 0xD84 PUSH2 0x19D2 JUMP JUMPDEST PUSH2 0xE1A DUP6 PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0xDD1 PUSH2 0x19D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1FB5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x19DA JUMP JUMPDEST PUSH2 0xE2A DUP5 DUP5 DUP5 PUSH2 0x1C0B JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE53 CALLER PUSH2 0x17C0 JUMP JUMPDEST PUSH2 0xEC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x63616C6C6572206973206E6F7420746865206D696E7465720000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH2 0xEF5 DUP4 PUSH1 0x8 PUSH1 0x0 PUSH2 0xED8 PUSH2 0x18F4 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x203E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0xF69 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x506F6B6572546F6B656E3A20796561724D696E744C696D697400000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF73 DUP4 DUP4 PUSH2 0x20C6 JUMP JUMPDEST PUSH2 0xFA0 DUP3 PUSH1 0x8 PUSH1 0x0 PUSH2 0xF83 PUSH2 0x18F4 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x203E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 PUSH2 0xFAC PUSH2 0x18F4 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1028 DUP3 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100B PUSH2 0x18F4 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x203E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x1071 PUSH2 0x18F4 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x110C PUSH2 0x18F4 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0x118F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x506F6B6572546F6B656E3A207265636F7264436F6E74726163744C696D697400 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11A3 CALLER DUP3 PUSH2 0x2281 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x11AE PUSH2 0x14FD JUMP JUMPDEST ISZERO PUSH2 0x11BB JUMPI DUP1 PUSH1 0xB DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1201 PUSH2 0x19D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x128A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6E6F74206F776E65720000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH2 0x1294 PUSH2 0xA66 JUMP JUMPDEST SUB DUP3 GT ISZERO PUSH2 0x130A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x506F6B6572546F6B656E3A20696E646578206F7574206F6620626F756E647300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1315 PUSH1 0x6 DUP4 PUSH2 0x24E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13A7 PUSH2 0x19D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1430 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6E6F74206F776E65720000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x14B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x27B7 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14C0 DUP4 DUP4 PUSH2 0x17D4 JUMP JUMPDEST PUSH2 0x14CB PUSH1 0x6 DUP5 PUSH2 0x24FB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1541 PUSH2 0x19D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP PUSH1 0x1 ISZERO ISZERO DUP2 ISZERO ISZERO EQ PUSH2 0x15D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6E6F74206F776E65720000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x1689 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x165E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1689 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x166C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x16C1 DUP3 PUSH1 0x8 PUSH1 0x0 PUSH2 0x16A4 PUSH2 0x18F4 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x203E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0x1735 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x506F6B6572546F6B656E3A20796561724D696E744C696D697400000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x173D PUSH2 0x14FD JUMP JUMPDEST ISZERO PUSH2 0x179F JUMPI PUSH2 0x1753 PUSH2 0x174D PUSH2 0x14D3 JUMP JUMPDEST DUP3 PUSH2 0x20C6 JUMP JUMPDEST PUSH2 0x1780 DUP2 PUSH1 0x8 PUSH1 0x0 PUSH2 0x1763 PUSH2 0x18F4 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x203E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 PUSH2 0x178C PUSH2 0x18F4 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17B6 PUSH2 0x17AF PUSH2 0x19D2 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1C0B JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17CD PUSH1 0x6 DUP4 PUSH2 0x252B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17DC PUSH2 0x14FD JUMP JUMPDEST ISZERO PUSH2 0x1826 JUMPI DUP1 PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1832 PUSH2 0x14FD JUMP JUMPDEST ISZERO PUSH2 0x183F JUMPI DUP1 PUSH1 0xC DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 TIMESTAMP SWAP1 POP PUSH1 0x0 PUSH3 0x15180 DUP3 DUP2 PUSH2 0x1908 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 PUSH3 0x253D8C PUSH3 0x10BD9 DUP4 ADD ADD SWAP1 POP PUSH1 0x0 PUSH3 0x23AB1 DUP3 PUSH1 0x4 MUL DUP2 PUSH2 0x1930 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x4 PUSH1 0x3 DUP3 PUSH3 0x23AB1 MUL ADD DUP2 PUSH2 0x1945 JUMPI INVALID JUMPDEST SDIV DUP3 SUB SWAP2 POP PUSH1 0x0 PUSH3 0x164B09 PUSH1 0x1 DUP5 ADD PUSH2 0xFA0 MUL DUP2 PUSH2 0x195F JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x1F PUSH1 0x4 DUP3 PUSH2 0x5B5 MUL DUP2 PUSH2 0x1972 JUMPI INVALID JUMPDEST SDIV DUP5 SUB ADD SWAP3 POP PUSH1 0x0 PUSH2 0x98F DUP5 PUSH1 0x50 MUL DUP2 PUSH2 0x1988 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0xB DUP2 DUP2 PUSH2 0x1995 JUMPI INVALID JUMPDEST SDIV SWAP4 POP DUP4 PUSH1 0xC MUL PUSH1 0x2 DUP3 ADD SUB SWAP1 POP DUP4 DUP3 PUSH1 0x31 DUP6 SUB PUSH1 0x64 MUL ADD ADD SWAP2 POP DUP2 SWAP8 POP POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19CB DUP3 PUSH1 0x0 ADD PUSH2 0x255B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A7D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x617070726F76652066726F6D2030000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1B20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x617070726F766520746F20300000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1CAE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E736665722066726F6D20300000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1D51 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E7366657220746F203000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDEAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1DF5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E7366657220746F203078646561640000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E46 DUP2 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1FB5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1ED9 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x203E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FAD DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x256C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x202D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x20BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2169 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6D696E7420746F20300000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x217E DUP2 PUSH1 0x2 SLOAD PUSH2 0x203E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x21D5 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x203E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2324 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6275726E2066726F6D2030000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDEAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x23C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6275726E2066726F6D2030786465616400000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2419 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1FB5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x2470 DUP2 PUSH1 0x2 SLOAD PUSH2 0x1FB5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0xDEAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24F0 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x2654 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2523 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x26D7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2553 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x2747 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x2648 JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 SUB SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SUB SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x25B7 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x25D4 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP4 ADD DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP7 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x260C JUMPI INVALID JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x264E JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP GT PUSH2 0x26B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x276B PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x26C4 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26E3 DUP4 DUP4 PUSH2 0x2747 JUMP JUMPDEST PUSH2 0x273C JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x2741 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID GASLIMIT PUSH15 0x756D657261626C655365743A20696E PUSH5 0x6578206F75 PUSH21 0x206F6620626F756E6473506F6B6572546F6B656E3A KECCAK256 0x5F PUSH5 0x656C4D696E PUSH21 0x657220697320746865207A65726F20616464726573 PUSH20 0x506F6B6572546F6B656E3A205F6164644D696E74 PUSH6 0x722069732074 PUSH9 0x65207A65726F206164 PUSH5 0x72657373A2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC BLOCKHASH EXTCODESIZE PUSH16 0xA0E74ED4FA3A5F62B46728061C1BB1F3 SWAP7 DUP15 0xB7 ISZERO 0xDB 0xA8 CALLDATALOAD TIMESTAMP PUSH12 0x1A5E1564736F6C634300060C STOP CALLER ",
							"sourceMap": "9482:4622:0:-:0;;;9891:19;9860:50;;13634:6;13612:28;;9919:54;;;;;;;;;;1552:357:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9964:2:0;9968:1;1710:5:2;1703:4;:12;;;;;;;;;;;;:::i;:::-;;1735:7;1726:6;:16;;;;;;;;;;;;:::i;:::-;;1764:9;1753:8;;:20;;;;;;;;;;;;;;;;;;1816:9;1808:18;;1804:2;:22;1794:7;:32;1784:42;;1852:7;1837:12;:22;;;;1894:7;1870:9;:21;1880:10;1870:21;;;;;;;;;;;;;;;:31;;;;1552:357;;;;398:12:4;:10;;;:12;;:::i;:::-;389:6;;:21;;;;;;;;;;;;;;;;;;459:6;;;;;;;;;;;426:40;;455:1;426:40;;;;;;;;;;;;9482:4622:0;;605:106:1;658:15;693:10;686:17;;605:106;:::o;9482:4622:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101c45760003560e01c8063761248b4116100f9578063aa271e1a11610097578063dd62ed3e11610071578063dd62ed3e14610950578063e1665f56146109c8578063e235a4a6146109e6578063fd08921b14610a48576101c4565b8063aa271e1a1461087a578063b56a711c146108d4578063db6783b814610922576101c4565b80639098f2a7116100d35780639098f2a71461072357806395d89b4114610765578063a0712d68146107e8578063a9059cbb14610816576101c4565b8063761248b41461066b5780638da5cb5b146106cf5780638f32d59b14610703576101c4565b806323b872dd1161016657806342966c681161014057806342966c681461055f578063599a1c3a1461058d5780635b7121f8146105bb57806370a0823114610613576101c4565b806323b872dd14610456578063313ce567146104da57806340c10f19146104fb576101c4565b8063095ea7b3116101a2578063095ea7b3146102c257806318160ddd14610326578063230614fb1461034457806323338b88146103fc576101c4565b80630323aac7146101c957806306fdde03146101e7578063092654a01461026a575b600080fd5b6101d1610a66565b6040518082815260200191505060405180910390f35b6101ef610a77565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561022f578082015181840152602081019050610214565b50505050905090810190601f16801561025c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102ac6004803603602081101561028057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b15565b6040518082815260200191505060405180910390f35b61030e600480360360408110156102d857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b2d565b60405180821515815260200191505060405180910390f35b61032e610b4b565b6040518082815260200191505060405180910390f35b6103fa6004803603602081101561035a57600080fd5b810190808035906020019064010000000081111561037757600080fd5b82018360208201111561038957600080fd5b803590602001918460208302840111640100000000831117156103ab57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290505050610b55565b005b61043e6004803603602081101561041257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ba0565b60405180821515815260200191505060405180910390f35b6104c26004803603606081101561046c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d04565b60405180821515815260200191505060405180910390f35b6104e2610e35565b604051808260ff16815260200191505060405180910390f35b6105476004803603604081101561051157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e48565b60405180821515815260200191505060405180910390f35b61058b6004803603602081101561057557600080fd5b8101908080359060200190929190505050611199565b005b6105b9600480360360208110156105a357600080fd5b81019080803590602001909291905050506111a6565b005b6105e7600480360360208110156105d157600080fd5b81019080803590602001909291905050506111be565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106556004803603602081101561062957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061131c565b6040518082815260200191505060405180910390f35b6106b76004803603604081101561068157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611364565b60405180821515815260200191505060405180910390f35b6106d76114d3565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61070b6114fd565b60405180821515815260200191505060405180910390f35b61074f6004803603602081101561073957600080fd5b81019080803590602001909291905050506115db565b6040518082815260200191505060405180910390f35b61076d6115f3565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156107ad578082015181840152602081019050610792565b50505050905090810190601f1680156107da5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610814600480360360208110156107fe57600080fd5b8101908080359060200190929190505050611691565b005b6108626004803603604081101561082c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506117a2565b60405180821515815260200191505060405180910390f35b6108bc6004803603602081101561089057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506117c0565b60405180821515815260200191505060405180910390f35b610920600480360360408110156108ea57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506117d4565b005b61094e6004803603602081101561093857600080fd5b810190808035906020019092919050505061182a565b005b6109b26004803603604081101561096657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611842565b6040518082815260200191505060405180910390f35b6109d06118c9565b6040518082815260200191505060405180910390f35b610a32600480360360408110156109fc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506118cf565b6040518082815260200191505060405180910390f35b610a506118f4565b6040518082815260200191505060405180910390f35b6000610a7260066119bd565b905090565b60038054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b0d5780601f10610ae257610100808354040283529160200191610b0d565b820191906000526020600020905b815481529060010190602001808311610af057829003601f168201915b505050505081565b60096020528060005260406000206000915090505481565b6000610b41610b3a6119d2565b84846119da565b6001905092915050565b6000600254905090565b610b5d6114fd565b15610b9d5760005b8151811015610b9b57610b8e33838381518110610b7e57fe5b6020026020010151600c54611c0b565b8080600101915050610b65565b505b50565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610be36119d2565b73ffffffffffffffffffffffffffffffffffffffff1614610c6c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f6e6f74206f776e6572000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cf2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a81526020018061278d602a913960400191505060405180910390fd5b610cfd600683611f85565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614158015610d6f5750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b610d7857600080fd5b610e1f84610d846119d2565b610e1a85600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610dd16119d2565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611fb590919063ffffffff16565b6119da565b610e2a848484611c0b565b600190509392505050565b600560009054906101000a900460ff1681565b6000610e53336117c0565b610ec5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f63616c6c6572206973206e6f7420746865206d696e746572000000000000000081525060200191505060405180910390fd5b600b54610ef58360086000610ed86118f4565b81526020019081526020016000205461203e90919063ffffffff16565b1115610f69576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f506f6b6572546f6b656e3a20796561724d696e744c696d69740000000000000081525060200191505060405180910390fd5b610f7383836120c6565b610fa08260086000610f836118f4565b81526020019081526020016000205461203e90919063ffffffff16565b60086000610fac6118f4565b81526020019081526020016000208190555061102882600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061100b6118f4565b81526020019081526020016000205461203e90919063ffffffff16565b600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006110716118f4565b815260200190815260200160002081905550600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061110c6118f4565b815260200190815260200160002054111561118f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f506f6b6572546f6b656e3a207265636f7264436f6e74726163744c696d69740081525060200191505060405180910390fd5b6001905092915050565b6111a33382612281565b50565b6111ae6114fd565b156111bb5780600b819055505b50565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166112016119d2565b73ffffffffffffffffffffffffffffffffffffffff161461128a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f6e6f74206f776e6572000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6001611294610a66565b0382111561130a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f506f6b6572546f6b656e3a20696e646578206f7574206f6620626f756e64730081525060200191505060405180910390fd5b6113156006836124e1565b9050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166113a76119d2565b73ffffffffffffffffffffffffffffffffffffffff1614611430576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f6e6f74206f776e6572000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156114b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806127b7602a913960400191505060405180910390fd5b6114c083836117d4565b6114cb6006846124fb565b905092915050565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166115416119d2565b73ffffffffffffffffffffffffffffffffffffffff1614905060011515811515146115d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f6e6f74206f776e6572000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b8091505090565b60086020528060005260406000206000915090505481565b60048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116895780601f1061165e57610100808354040283529160200191611689565b820191906000526020600020905b81548152906001019060200180831161166c57829003601f168201915b505050505081565b600b546116c182600860006116a46118f4565b81526020019081526020016000205461203e90919063ffffffff16565b1115611735576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f506f6b6572546f6b656e3a20796561724d696e744c696d69740000000000000081525060200191505060405180910390fd5b61173d6114fd565b1561179f5761175361174d6114d3565b826120c6565b61178081600860006117636118f4565b81526020019081526020016000205461203e90919063ffffffff16565b6008600061178c6118f4565b8152602001908152602001600020819055505b50565b60006117b66117af6119d2565b8484611c0b565b6001905092915050565b60006117cd60068361252b565b9050919050565b6117dc6114fd565b156118265780600960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5050565b6118326114fd565b1561183f5780600c819055505b50565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600b5481565b600a602052816000526040600020602052806000526040600020600091509150505481565b600080429050600062015180828161190857fe5b0490506000819050600062253d8c62010bd98301019050600062023ab1826004028161193057fe5b059050600460038262023ab102018161194557fe5b0582039150600062164b0960018401610fa0028161195f57fe5b059050601f6004826105b5028161197257fe5b058403019250600061098f846050028161198857fe5b059050600b818161199557fe5b05935083600c0260028201039050838260318503606402010191508197505050505050505090565b60006119cb8260000161255b565b9050919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611a7d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f617070726f76652066726f6d203000000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611b20576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f617070726f766520746f2030000000000000000000000000000000000000000081525060200191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611cae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f7472616e736665722066726f6d2030000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611d51576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f7472616e7366657220746f20300000000000000000000000000000000000000081525060200191505060405180910390fd5b61dead73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611df5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f7472616e7366657220746f20307864656164000000000000000000000000000081525060200191505060405180910390fd5b611e46816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611fb590919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611ed9816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461203e90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000611fad836000018373ffffffffffffffffffffffffffffffffffffffff1660001b61256c565b905092915050565b60008282111561202d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b6000808284019050838110156120bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612169576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f6d696e7420746f2030000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b61217e8160025461203e90919063ffffffff16565b6002819055506121d5816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461203e90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612324576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f6275726e2066726f6d203000000000000000000000000000000000000000000081525060200191505060405180910390fd5b61dead73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156123c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f6275726e2066726f6d203078646561640000000000000000000000000000000081525060200191505060405180910390fd5b612419816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611fb590919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061247081600254611fb590919063ffffffff16565b60028190555061dead73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60006124f08360000183612654565b60001c905092915050565b6000612523836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6126d7565b905092915050565b6000612553836000018373ffffffffffffffffffffffffffffffffffffffff1660001b612747565b905092915050565b600081600001805490509050919050565b6000808360010160008481526020019081526020016000205490506000811461264857600060018203905060006001866000018054905003905060008660000182815481106125b757fe5b90600052602060002001549050808760000184815481106125d457fe5b906000526020600020018190555060018301876001016000838152602001908152602001600020819055508660000180548061260c57fe5b6001900381819060005260206000200160009055905586600101600087815260200190815260200160002060009055600194505050505061264e565b60009150505b92915050565b6000818360000180549050116126b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061276b6022913960400191505060405180910390fd5b8260000182815481106126c457fe5b9060005260206000200154905092915050565b60006126e38383612747565b61273c578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050612741565b600090505b92915050565b60008083600101600084815260200190815260200160002054141590509291505056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473506f6b6572546f6b656e3a205f64656c4d696e74657220697320746865207a65726f2061646472657373506f6b6572546f6b656e3a205f6164644d696e74657220697320746865207a65726f2061646472657373a2646970667358221220bc403b6fa0e74ed4fa3a5f62b46728061c1bb1f3968eb715dba835426b1a5e1564736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x761248B4 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xAA271E1A GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x950 JUMPI DUP1 PUSH4 0xE1665F56 EQ PUSH2 0x9C8 JUMPI DUP1 PUSH4 0xE235A4A6 EQ PUSH2 0x9E6 JUMPI DUP1 PUSH4 0xFD08921B EQ PUSH2 0xA48 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0xAA271E1A EQ PUSH2 0x87A JUMPI DUP1 PUSH4 0xB56A711C EQ PUSH2 0x8D4 JUMPI DUP1 PUSH4 0xDB6783B8 EQ PUSH2 0x922 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x9098F2A7 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x9098F2A7 EQ PUSH2 0x723 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x765 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x7E8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x816 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x761248B4 EQ PUSH2 0x66B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6CF JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x703 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x42966C68 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x55F JUMPI DUP1 PUSH4 0x599A1C3A EQ PUSH2 0x58D JUMPI DUP1 PUSH4 0x5B7121F8 EQ PUSH2 0x5BB JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x613 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x456 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x4DA JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x4FB JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0x230614FB EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0x23338B88 EQ PUSH2 0x3FC JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x323AAC7 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x92654A0 EQ PUSH2 0x26A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D1 PUSH2 0xA66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EF PUSH2 0xA77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x22F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x214 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x25C JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB2D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32E PUSH2 0xB4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x35A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x377 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x3AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0xB55 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x43E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x412 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x46C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E2 PUSH2 0xE35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x547 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x511 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x58B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x575 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1199 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x11A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x11BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x655 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x629 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x131C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x681 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1364 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6D7 PUSH2 0x14D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x70B PUSH2 0x14FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x74F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x739 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x15DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x76D PUSH2 0x15F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7AD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x792 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x7DA JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x814 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1691 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x862 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x82C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x17A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8BC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x890 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x17C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x920 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x8EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x17D4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x94E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x938 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x182A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x966 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1842 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9D0 PUSH2 0x18C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA32 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x9FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x18CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA50 PUSH2 0x18F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0xA72 PUSH1 0x6 PUSH2 0x19BD JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xB0D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAE2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB0D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAF0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB41 PUSH2 0xB3A PUSH2 0x19D2 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x19DA JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB5D PUSH2 0x14FD JUMP JUMPDEST ISZERO PUSH2 0xB9D JUMPI PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xB9B JUMPI PUSH2 0xB8E CALLER DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xB7E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xC SLOAD PUSH2 0x1C0B JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xB65 JUMP JUMPDEST POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBE3 PUSH2 0x19D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6E6F74206F776E65720000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x278D PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCFD PUSH1 0x6 DUP4 PUSH2 0x1F85 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xD6F JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0xD78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE1F DUP5 PUSH2 0xD84 PUSH2 0x19D2 JUMP JUMPDEST PUSH2 0xE1A DUP6 PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0xDD1 PUSH2 0x19D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1FB5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x19DA JUMP JUMPDEST PUSH2 0xE2A DUP5 DUP5 DUP5 PUSH2 0x1C0B JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE53 CALLER PUSH2 0x17C0 JUMP JUMPDEST PUSH2 0xEC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x63616C6C6572206973206E6F7420746865206D696E7465720000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH2 0xEF5 DUP4 PUSH1 0x8 PUSH1 0x0 PUSH2 0xED8 PUSH2 0x18F4 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x203E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0xF69 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x506F6B6572546F6B656E3A20796561724D696E744C696D697400000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF73 DUP4 DUP4 PUSH2 0x20C6 JUMP JUMPDEST PUSH2 0xFA0 DUP3 PUSH1 0x8 PUSH1 0x0 PUSH2 0xF83 PUSH2 0x18F4 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x203E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 PUSH2 0xFAC PUSH2 0x18F4 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1028 DUP3 PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100B PUSH2 0x18F4 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x203E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x1071 PUSH2 0x18F4 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xA PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x110C PUSH2 0x18F4 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0x118F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x506F6B6572546F6B656E3A207265636F7264436F6E74726163744C696D697400 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11A3 CALLER DUP3 PUSH2 0x2281 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x11AE PUSH2 0x14FD JUMP JUMPDEST ISZERO PUSH2 0x11BB JUMPI DUP1 PUSH1 0xB DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1201 PUSH2 0x19D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x128A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6E6F74206F776E65720000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH2 0x1294 PUSH2 0xA66 JUMP JUMPDEST SUB DUP3 GT ISZERO PUSH2 0x130A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x506F6B6572546F6B656E3A20696E646578206F7574206F6620626F756E647300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1315 PUSH1 0x6 DUP4 PUSH2 0x24E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13A7 PUSH2 0x19D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1430 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6E6F74206F776E65720000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x14B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x27B7 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14C0 DUP4 DUP4 PUSH2 0x17D4 JUMP JUMPDEST PUSH2 0x14CB PUSH1 0x6 DUP5 PUSH2 0x24FB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1541 PUSH2 0x19D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP PUSH1 0x1 ISZERO ISZERO DUP2 ISZERO ISZERO EQ PUSH2 0x15D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6E6F74206F776E65720000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x1689 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x165E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1689 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x166C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x16C1 DUP3 PUSH1 0x8 PUSH1 0x0 PUSH2 0x16A4 PUSH2 0x18F4 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x203E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0x1735 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x506F6B6572546F6B656E3A20796561724D696E744C696D697400000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x173D PUSH2 0x14FD JUMP JUMPDEST ISZERO PUSH2 0x179F JUMPI PUSH2 0x1753 PUSH2 0x174D PUSH2 0x14D3 JUMP JUMPDEST DUP3 PUSH2 0x20C6 JUMP JUMPDEST PUSH2 0x1780 DUP2 PUSH1 0x8 PUSH1 0x0 PUSH2 0x1763 PUSH2 0x18F4 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x203E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 PUSH2 0x178C PUSH2 0x18F4 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17B6 PUSH2 0x17AF PUSH2 0x19D2 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1C0B JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17CD PUSH1 0x6 DUP4 PUSH2 0x252B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17DC PUSH2 0x14FD JUMP JUMPDEST ISZERO PUSH2 0x1826 JUMPI DUP1 PUSH1 0x9 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1832 PUSH2 0x14FD JUMP JUMPDEST ISZERO PUSH2 0x183F JUMPI DUP1 PUSH1 0xC DUP2 SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 TIMESTAMP SWAP1 POP PUSH1 0x0 PUSH3 0x15180 DUP3 DUP2 PUSH2 0x1908 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 PUSH3 0x253D8C PUSH3 0x10BD9 DUP4 ADD ADD SWAP1 POP PUSH1 0x0 PUSH3 0x23AB1 DUP3 PUSH1 0x4 MUL DUP2 PUSH2 0x1930 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x4 PUSH1 0x3 DUP3 PUSH3 0x23AB1 MUL ADD DUP2 PUSH2 0x1945 JUMPI INVALID JUMPDEST SDIV DUP3 SUB SWAP2 POP PUSH1 0x0 PUSH3 0x164B09 PUSH1 0x1 DUP5 ADD PUSH2 0xFA0 MUL DUP2 PUSH2 0x195F JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0x1F PUSH1 0x4 DUP3 PUSH2 0x5B5 MUL DUP2 PUSH2 0x1972 JUMPI INVALID JUMPDEST SDIV DUP5 SUB ADD SWAP3 POP PUSH1 0x0 PUSH2 0x98F DUP5 PUSH1 0x50 MUL DUP2 PUSH2 0x1988 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH1 0xB DUP2 DUP2 PUSH2 0x1995 JUMPI INVALID JUMPDEST SDIV SWAP4 POP DUP4 PUSH1 0xC MUL PUSH1 0x2 DUP3 ADD SUB SWAP1 POP DUP4 DUP3 PUSH1 0x31 DUP6 SUB PUSH1 0x64 MUL ADD ADD SWAP2 POP DUP2 SWAP8 POP POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19CB DUP3 PUSH1 0x0 ADD PUSH2 0x255B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1A7D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x617070726F76652066726F6D2030000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1B20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x617070726F766520746F20300000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1CAE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E736665722066726F6D20300000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1D51 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E7366657220746F203000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDEAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1DF5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E7366657220746F203078646561640000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E46 DUP2 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1FB5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1ED9 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x203E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FAD DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x256C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x202D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x20BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2169 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6D696E7420746F20300000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x217E DUP2 PUSH1 0x2 SLOAD PUSH2 0x203E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x21D5 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x203E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2324 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6275726E2066726F6D2030000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDEAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x23C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6275726E2066726F6D2030786465616400000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2419 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1FB5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x2470 DUP2 PUSH1 0x2 SLOAD PUSH2 0x1FB5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0xDEAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24F0 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x2654 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2523 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x26D7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2553 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x2747 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x2648 JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 SUB SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SUB SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x25B7 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x25D4 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP4 ADD DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP7 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x260C JUMPI INVALID JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x264E JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP GT PUSH2 0x26B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x276B PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x26C4 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26E3 DUP4 DUP4 PUSH2 0x2747 JUMP JUMPDEST PUSH2 0x273C JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x2741 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID GASLIMIT PUSH15 0x756D657261626C655365743A20696E PUSH5 0x6578206F75 PUSH21 0x206F6620626F756E6473506F6B6572546F6B656E3A KECCAK256 0x5F PUSH5 0x656C4D696E PUSH21 0x657220697320746865207A65726F20616464726573 PUSH20 0x506F6B6572546F6B656E3A205F6164644D696E74 PUSH6 0x722069732074 PUSH9 0x65207A65726F206164 PUSH5 0x72657373A2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC BLOCKHASH EXTCODESIZE PUSH16 0xA0E74ED4FA3A5F62B46728061C1BB1F3 SWAP7 DUP15 0xB7 ISZERO 0xDB 0xA8 CALLDATALOAD TIMESTAMP PUSH12 0x1A5E1564736F6C634300060C STOP CALLER ",
							"sourceMap": "9482:4622:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11779:113;;;:::i;:::-;;;;;;;;;;;;;;;;;;;445:18:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9720:52:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3099:199:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1974:102;;;:::i;:::-;;;;;;;;;;;;;;;;;;;13649:323:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;11505:266;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3771:404:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1242:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;10424:703:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;9981:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;13324:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;12037:258;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2139:160:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;11135:362:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;555:79:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;835:162;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;9665:48:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;583:20:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10074:342:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2507:191:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;11900:129:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;13455:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;13980:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2761:190:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9860:50:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9779:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;12656:660;;;:::i;:::-;;;;;;;;;;;;;;;;;;;11779:113;11827:7;11854:30;11875:8;11854:20;:30::i;:::-;11847:37;;11779:113;:::o;445:18:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9720:52:0:-;;;;;;;;;;;;;;;;;:::o;3099:199:2:-;3205:4;3227:41;3236:12;:10;:12::i;:::-;3250:8;3260:7;3227:8;:41::i;:::-;3286:4;3279:11;;3099:199;;;;:::o;1974:102::-;2029:7;2056:12;;2049:19;;1974:102;:::o;13649:323:0:-;13725:9;:7;:9::i;:::-;13721:244;;;13756:9;13751:203;13775:7;:14;13771:1;:18;13751:203;;;13815:46;13825:10;13837:7;13845:1;13837:10;;;;;;;;;;;;;;13849:11;;13815:9;:46::i;:::-;13791:3;;;;;;;13751:203;;;;13721:244;13649:323;:::o;11505:266::-;11570:4;783:6:4;;;;;;;;;;;767:22;;:12;:10;:12::i;:::-;:22;;;759:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11631:1:0::1;11609:24;;:10;:24;;;;11587:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11721:42;11742:8;11752:10;11721:20;:42::i;:::-;11714:49;;11505:266:::0;;;:::o;3771:404:2:-;3899:4;3941:1;3924:19;;:5;:19;;;;:40;;;;;3962:1;3947:17;;:3;:17;;;;3924:40;3916:49;;;;;;3978:126;4001:5;4021:12;:10;:12::i;:::-;4048:45;4085:7;4048:11;:18;4060:5;4048:18;;;;;;;;;;;;;;;:32;4067:12;:10;:12::i;:::-;4048:32;;;;;;;;;;;;;;;;:36;;:45;;;;:::i;:::-;3978:8;:126::i;:::-;4115:30;4125:5;4132:3;4137:7;4115:9;:30::i;:::-;4163:4;4156:11;;3771:404;;;;;:::o;1242:21::-;;;;;;;;;;;;;:::o;10424:703:0:-;10522:4;12379:20;12388:10;12379:8;:20::i;:::-;12371:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10607:13:::1;;10566:37;10595:7;10566:13;:24;10580:9;:7;:9::i;:::-;10566:24;;;;;;;;;;;;:28;;:37;;;;:::i;:::-;:54;;10544:129;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;10684:19;10690:3;10695:7;10684:5;:19::i;:::-;10741:37;10770:7;10741:13;:24;10755:9;:7;:9::i;:::-;10741:24;;;;;;;;;;;;:28;;:37;;;;:::i;:::-;10714:13;:24;10728:9;:7;:9::i;:::-;10714:24;;;;;;;;;;;:64;;;;10834:79;10905:7;10834:19;:55;10868:10;10834:55;;;;;;;;;;;;;;;:66;10890:9;:7;:9::i;:::-;10834:66;;;;;;;;;;;;:70;;:79;;;;:::i;:::-;10789:19;:31;10809:10;10789:31;;;;;;;;;;;;;;;:42;10821:9;:7;:9::i;:::-;10789:42;;;;;;;;;;;:124;;;;11009:17;:29;11027:10;11009:29;;;;;;;;;;;;;;;;10946:19;:31;10966:10;10946:31;;;;;;;;;;;;;;;:42;10978:9;:7;:9::i;:::-;10946:42;;;;;;;;;;;;:92;;10924:173;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;11115:4;11108:11;;10424:703:::0;;;;:::o;9981:85::-;10032:26;10038:10;10050:7;10032:5;:26::i;:::-;9981:85;:::o;13324:123::-;13383:9;:7;:9::i;:::-;13379:61;;;13425:3;13409:13;:19;;;;13379:61;13324:123;:::o;12037:258::-;12103:7;783:6:4;;;;;;;;;;;767:22;;:12;:10;:12::i;:::-;:22;;;759:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12175:1:0::1;12155:17;:15;:17::i;:::-;:21;12145:6;:31;;12123:112;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;12253:34;12270:8;12280:6;12253:16;:34::i;:::-;12246:41;;12037:258:::0;;;:::o;2139:160:2:-;2242:7;2274:9;:17;2284:6;2274:17;;;;;;;;;;;;;;;;2267:24;;2139:160;;;:::o;11135:362:0:-;11244:4;783:6:4;;;;;;;;;;;767:22;;:12;:10;:12::i;:::-;:22;;;759:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11310:1:0::1;11288:24;;:10;:24;;;;11266:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11393:39;11412:10;11424:7;11393:18;:39::i;:::-;11450;11468:8;11478:10;11450:17;:39::i;:::-;11443:46;;11135:362:::0;;;;:::o;555:79:4:-;593:7;620:6;;;;;;;;;;;613:13;;555:79;:::o;835:162::-;875:4;891:9;919:6;;;;;;;;;;;903:22;;:12;:10;:12::i;:::-;:22;;;891:34;;950:4;944:10;;:4;:10;;;936:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;985:4;978:11;;;835:162;:::o;9665:48:0:-;;;;;;;;;;;;;;;;;:::o;583:20:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10074:342:0:-;10188:13;;10147:37;10176:7;10147:13;:24;10161:9;:7;:9::i;:::-;10147:24;;;;;;;;;;;;:28;;:37;;;;:::i;:::-;:54;;10125:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10269:9;:7;:9::i;:::-;10265:144;;;10295:23;10301:7;:5;:7::i;:::-;10310;10295:5;:23::i;:::-;10360:37;10389:7;10360:13;:24;10374:9;:7;:9::i;:::-;10360:24;;;;;;;;;;;;:28;;:37;;;;:::i;:::-;10333:13;:24;10347:9;:7;:9::i;:::-;10333:24;;;;;;;;;;;:64;;;;10265:144;10074:342;:::o;2507:191:2:-;2609:4;2631:37;2641:12;:10;:12::i;:::-;2655:3;2660:7;2631:9;:37::i;:::-;2686:4;2679:11;;2507:191;;;;:::o;11900:129:0:-;11956:4;11980:41;12003:8;12013:7;11980:22;:41::i;:::-;11973:48;;11900:129;;;:::o;13455:149::-;13531:9;:7;:9::i;:::-;13527:70;;;13582:3;13557:17;:22;13575:3;13557:22;;;;;;;;;;;;;;;:28;;;;13527:70;13455:149;;:::o;13980:121::-;14039:9;:7;:9::i;:::-;14035:59;;;14079:3;14065:11;:17;;;;14035:59;13980:121;:::o;2761:190:2:-;2882:7;2914:11;:19;2926:6;2914:19;;;;;;;;;;;;;;;:29;2934:8;2914:29;;;;;;;;;;;;;;;;2907:36;;2761:190;;;;:::o;9860:50:0:-;;;;:::o;9779:74::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;12656:660::-;12696:12;12721:17;12741:15;12721:35;;12767:13;12491:12;12783:9;:27;;;;;;12767:43;;12821:13;12844:5;12821:29;;12863:8;12640:7;12883:5;12874:6;:14;:31;12863:42;;12916:8;12937:6;12932:1;12928;:5;12927:16;;;;;;12916:27;;12981:1;12976;12972;12963:6;:10;:14;12962:20;;;;;;12958:1;:24;12954:28;;12993:12;13027:7;13021:1;13017;:5;13009:4;:14;13008:26;;;;;;12993:41;;13074:2;13070:1;13061:5;13054:4;:12;13053:18;;;;;;13049:1;:22;:27;13045:31;;13087:13;13114:4;13109:1;13104:2;:6;13103:15;;;;;;13087:31;;13188:2;13179:6;:11;;;;;;13175:15;;13228:1;13223:2;:6;13219:1;13210:6;:10;:19;13201:28;;13273:1;13265:5;13259:2;13255:1;:6;13248:3;:14;:22;:26;13240:34;;13302:5;13287:21;;12656:660;;;;;;;;:::o;7121:117::-;7184:7;7211:19;7219:3;:10;;7211:7;:19::i;:::-;7204:26;;7121:117;;;:::o;605:106:1:-;658:15;693:10;686:17;;605:106;:::o;5546:339:2:-;5695:1;5677:20;;:6;:20;;;;5669:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5755:1;5735:22;;:8;:22;;;;5727:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5819:7;5787:11;:19;5799:6;5787:19;;;;;;;;;;;;;;;:29;5807:8;5787:29;;;;;;;;;;;;;;;:39;;;;5859:8;5842:35;;5851:6;5842:35;;;5869:7;5842:35;;;;;;;;;;;;;;;;;;5546:339;;;:::o;4652:452::-;4795:1;4778:19;;:5;:19;;;;4770:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4851:1;4836:17;;:3;:17;;;;4828:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4905:6;4890:22;;:3;:22;;;;4882:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4967:29;4988:7;4967:9;:16;4977:5;4967:16;;;;;;;;;;;;;;;;:20;;:29;;;;:::i;:::-;4948:9;:16;4958:5;4948:16;;;;;;;;;;;;;;;:48;;;;5024:27;5043:7;5024:9;:14;5034:3;5024:14;;;;;;;;;;;;;;;;:18;;:27;;;;:::i;:::-;5007:9;:14;5017:3;5007:14;;;;;;;;;;;;;;;:44;;;;5083:3;5067:29;;5076:5;5067:29;;;5088:7;5067:29;;;;;;;;;;;;;;;;;;4652:452;;;:::o;6587:172:0:-;6678:4;6707:44;6715:3;:10;;6743:5;6735:14;;6727:23;;6707:7;:44::i;:::-;6700:51;;6587:172;;;;:::o;773:184:5:-;831:7;864:1;859;:6;;851:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;911:9;927:1;923;:5;911:17;;948:1;941:8;;;773:184;;;;:::o;317:181::-;375:7;395:9;411:1;407;:5;395:17;;436:1;431;:6;;423:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;489:1;482:8;;;317:181;;;;:::o;6164:270:2:-;6252:1;6237:17;;:3;:17;;;;6229:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6296:25;6313:7;6296:12;;:16;;:25;;;;:::i;:::-;6281:12;:40;;;;6349:27;6368:7;6349:9;:14;6359:3;6349:14;;;;;;;;;;;;;;;;:18;;:27;;;;:::i;:::-;6332:9;:14;6342:3;6332:14;;;;;;;;;;;;;;;:44;;;;6413:3;6392:34;;6409:1;6392:34;;;6418:7;6392:34;;;;;;;;;;;;;;;;;;6164:270;;:::o;6763:351::-;6855:1;6838:19;;:5;:19;;;;6830:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6909:6;6892:24;;:5;:24;;;;6884:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6969:29;6990:7;6969:9;:16;6979:5;6969:16;;;;;;;;;;;;;;;;:20;;:29;;;;:::i;:::-;6950:9;:16;6960:5;6950:16;;;;;;;;;;;;;;;:48;;;;7024:25;7041:7;7024:12;;:16;;:25;;;;:::i;:::-;7009:12;:40;;;;7089:6;7065:41;;7074:5;7065:41;;;7098:7;7065:41;;;;;;;;;;;;;;;;;;6763:351;;:::o;7592:181:0:-;7693:7;7741:22;7745:3;:10;;7757:5;7741:3;:22::i;:::-;7733:31;;7718:47;;7592:181;;;;:::o;6245:166::-;6333:4;6362:41;6367:3;:10;;6395:5;6387:14;;6379:23;;6362:4;:41::i;:::-;6355:48;;6245:166;;;;:::o;6845:190::-;6952:4;6981:46;6991:3;:10;;7019:5;7011:14;;7003:23;;6981:9;:46::i;:::-;6974:53;;6845:190;;;;:::o;3545:109::-;3601:7;3628:3;:11;;:18;;;;3621:25;;3545:109;;;:::o;1655:1557::-;1721:4;1839:18;1860:3;:12;;:19;1873:5;1860:19;;;;;;;;;;;;1839:40;;1910:1;1896:10;:15;1892:1313;;2271:21;2308:1;2295:10;:14;2271:38;;2324:17;2365:1;2344:3;:11;;:18;;;;:22;2324:42;;2611:17;2631:3;:11;;2643:9;2631:22;;;;;;;;;;;;;;;;2611:42;;2777:9;2748:3;:11;;2760:13;2748:26;;;;;;;;;;;;;;;:38;;;;2896:1;2880:13;:17;2854:3;:12;;:23;2867:9;2854:23;;;;;;;;;;;:43;;;;3006:3;:11;;:17;;;;;;;;;;;;;;;;;;;;;;;;3101:3;:12;;:19;3114:5;3101:19;;;;;;;;;;;3094:26;;;3144:4;3137:11;;;;;;;;1892:1313;3188:5;3181:12;;;1655:1557;;;;;:::o;4008:273::-;4102:7;4170:5;4149:3;:11;;:18;;;;:26;4127:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4255:3;:11;;4267:5;4255:18;;;;;;;;;;;;;;;;4248:25;;4008:273;;;;:::o;1065:414::-;1128:4;1150:21;1160:3;1165:5;1150:9;:21::i;:::-;1145:327;;1188:3;:11;;1205:5;1188:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1371:3;:11;;:18;;;;1349:3;:12;;:19;1362:5;1349:19;;;;;;;;;;;:40;;;;1411:4;1404:11;;;;1145:327;1455:5;1448:12;;1065:414;;;;;:::o;3298:161::-;3398:4;3450:1;3427:3;:12;;:19;3440:5;3427:19;;;;;;;;;;;;:24;;3420:31;;3298:161;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2052400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"YEAR_MINT_NUM()": "1071",
								"addMinter(address,uint256)": "infinite",
								"allowance(address,address)": "1365",
								"approve(address,uint256)": "22559",
								"balanceOf(address)": "1307",
								"batchTransferToken(address[])": "infinite",
								"burn(uint256)": "infinite",
								"contractMintLimit(address)": "1260",
								"decimals()": "1115",
								"delMinter(address)": "infinite",
								"getMinter(uint256)": "infinite",
								"getMinterLength()": "1166",
								"getYear()": "756",
								"isMinter(address)": "1364",
								"isOwner()": "1334",
								"mint(address,uint256)": "infinite",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"owner()": "1173",
								"recordContractLimit(address,uint256)": "1349",
								"setBatchAmount(uint256)": "21372",
								"setContractMintNum(address,uint256)": "21475",
								"setYearMintNum(uint256)": "21350",
								"symbol()": "infinite",
								"totalSupply()": "1081",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"yearMintLimit(uint256)": "1208"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 9482,
									"end": 14104,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9891,
									"end": 9910,
									"name": "PUSH",
									"source": 0,
									"value": "33B2E3C9FD0803CE8000000"
								},
								{
									"begin": 9860,
									"end": 9910,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 9860,
									"end": 9910,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 13634,
									"end": 13640,
									"name": "PUSH",
									"source": 0,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 13612,
									"end": 13640,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 13612,
									"end": 13640,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9919,
									"end": 9973,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 9919,
									"end": 9973,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9919,
									"end": 9973,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 9919,
									"end": 9973,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 9919,
									"end": 9973,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 9919,
									"end": 9973,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9919,
									"end": 9973,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9919,
									"end": 9973,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 9919,
									"end": 9973,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 9919,
									"end": 9973,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9919,
									"end": 9973,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "504F4B4552000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "504F4B4552000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 9964,
									"end": 9966,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 9968,
									"end": 9969,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1710,
									"end": 1715,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1707,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1735,
									"end": 1742,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1726,
									"end": 1732,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1764,
									"end": 1773,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1761,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1753,
									"end": 1761,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1816,
									"end": 1825,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1808,
									"end": 1826,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 1808,
									"end": 1826,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1804,
									"end": 1806,
									"name": "PUSH",
									"source": 2,
									"value": "A"
								},
								{
									"begin": 1804,
									"end": 1826,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1794,
									"end": 1801,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1794,
									"end": 1826,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1784,
									"end": 1826,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1784,
									"end": 1826,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1852,
									"end": 1859,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1837,
									"end": 1849,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1837,
									"end": 1859,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1837,
									"end": 1859,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1837,
									"end": 1859,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1837,
									"end": 1859,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1894,
									"end": 1901,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1879,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1880,
									"end": 1890,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1901,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1901,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1901,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1901,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 398,
									"end": 410,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 398,
									"end": 408,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 398,
									"end": 408,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 398,
									"end": 408,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 398,
									"end": 410,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 398,
									"end": 410,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 398,
									"end": 410,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 398,
									"end": 410,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 398,
									"end": 410,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 389,
									"end": 395,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 389,
									"end": 395,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 389,
									"end": 410,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 389,
									"end": 410,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 389,
									"end": 410,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 389,
									"end": 410,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 389,
									"end": 410,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 389,
									"end": 410,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 389,
									"end": 410,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 389,
									"end": 410,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 389,
									"end": 410,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 389,
									"end": 410,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 389,
									"end": 410,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 389,
									"end": 410,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 389,
									"end": 410,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 389,
									"end": 410,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 389,
									"end": 410,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 389,
									"end": 410,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 389,
									"end": 410,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 389,
									"end": 410,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 459,
									"end": 465,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 459,
									"end": 465,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 459,
									"end": 465,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 459,
									"end": 465,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 459,
									"end": 465,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 459,
									"end": 465,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 459,
									"end": 465,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 459,
									"end": 465,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 459,
									"end": 465,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 459,
									"end": 465,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 459,
									"end": 465,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 426,
									"end": 466,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 426,
									"end": 466,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 455,
									"end": 456,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 426,
									"end": 466,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 426,
									"end": 466,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 426,
									"end": 466,
									"name": "PUSH",
									"source": 4,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 426,
									"end": 466,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 426,
									"end": 466,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 426,
									"end": 466,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 426,
									"end": 466,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 426,
									"end": 466,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 426,
									"end": 466,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 426,
									"end": 466,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 426,
									"end": 466,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 426,
									"end": 466,
									"name": "LOG3",
									"source": 4
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 605,
									"end": 711,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 605,
									"end": 711,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 658,
									"end": 673,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 693,
									"end": 703,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 686,
									"end": 703,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 686,
									"end": 703,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 605,
									"end": 711,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 605,
									"end": 711,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9482,
									"end": 14104,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bc403b6fa0e74ed4fa3a5f62b46728061c1bb1f3968eb715dba835426b1a5e1564736f6c634300060c0033",
									".code": [
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH",
											"source": 0,
											"value": "761248B4"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH",
											"source": 0,
											"value": "AA271E1A"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH",
											"source": 0,
											"value": "E1665F56"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH",
											"source": 0,
											"value": "E235A4A6"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH",
											"source": 0,
											"value": "FD08921B"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH",
											"source": 0,
											"value": "AA271E1A"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH",
											"source": 0,
											"value": "B56A711C"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH",
											"source": 0,
											"value": "DB6783B8"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH",
											"source": 0,
											"value": "9098F2A7"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH",
											"source": 0,
											"value": "9098F2A7"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH",
											"source": 0,
											"value": "A0712D68"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH",
											"source": 0,
											"value": "761248B4"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH",
											"source": 0,
											"value": "8F32D59B"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH",
											"source": 0,
											"value": "599A1C3A"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH",
											"source": 0,
											"value": "5B7121F8"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH",
											"source": 0,
											"value": "230614FB"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH",
											"source": 0,
											"value": "23338B88"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH",
											"source": 0,
											"value": "323AAC7"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH",
											"source": 0,
											"value": "92654A0"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9482,
											"end": 14104,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11779,
											"end": 11892,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11779,
											"end": 11892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11779,
											"end": 11892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 11779,
											"end": 11892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 11779,
											"end": 11892,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11779,
											"end": 11892,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 11779,
											"end": 11892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11779,
											"end": 11892,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11779,
											"end": 11892,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11779,
											"end": 11892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11779,
											"end": 11892,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11779,
											"end": 11892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11779,
											"end": 11892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11779,
											"end": 11892,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11779,
											"end": 11892,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11779,
											"end": 11892,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11779,
											"end": 11892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11779,
											"end": 11892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11779,
											"end": 11892,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11779,
											"end": 11892,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11779,
											"end": 11892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11779,
											"end": 11892,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11779,
											"end": 11892,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11779,
											"end": 11892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11779,
											"end": 11892,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 445,
											"end": 463,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9981,
											"end": 10066,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 9981,
											"end": 10066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9981,
											"end": 10066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 9981,
											"end": 10066,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9981,
											"end": 10066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9981,
											"end": 10066,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9981,
											"end": 10066,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9981,
											"end": 10066,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9981,
											"end": 10066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9981,
											"end": 10066,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9981,
											"end": 10066,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9981,
											"end": 10066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 9981,
											"end": 10066,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9981,
											"end": 10066,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9981,
											"end": 10066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9981,
											"end": 10066,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9981,
											"end": 10066,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 9981,
											"end": 10066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9981,
											"end": 10066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9981,
											"end": 10066,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9981,
											"end": 10066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9981,
											"end": 10066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9981,
											"end": 10066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9981,
											"end": 10066,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 9981,
											"end": 10066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9981,
											"end": 10066,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9981,
											"end": 10066,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9981,
											"end": 10066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9981,
											"end": 10066,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9981,
											"end": 10066,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9981,
											"end": 10066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9981,
											"end": 10066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9981,
											"end": 10066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9981,
											"end": 10066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9981,
											"end": 10066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 9981,
											"end": 10066,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9981,
											"end": 10066,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 9981,
											"end": 10066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9981,
											"end": 10066,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 13324,
											"end": 13447,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 13324,
											"end": 13447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13324,
											"end": 13447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 13324,
											"end": 13447,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13324,
											"end": 13447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13324,
											"end": 13447,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13324,
											"end": 13447,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13324,
											"end": 13447,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13324,
											"end": 13447,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13324,
											"end": 13447,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13324,
											"end": 13447,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13324,
											"end": 13447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 13324,
											"end": 13447,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13324,
											"end": 13447,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13324,
											"end": 13447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13324,
											"end": 13447,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13324,
											"end": 13447,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 13324,
											"end": 13447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13324,
											"end": 13447,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13324,
											"end": 13447,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13324,
											"end": 13447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13324,
											"end": 13447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13324,
											"end": 13447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13324,
											"end": 13447,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 13324,
											"end": 13447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13324,
											"end": 13447,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13324,
											"end": 13447,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13324,
											"end": 13447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13324,
											"end": 13447,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13324,
											"end": 13447,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13324,
											"end": 13447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13324,
											"end": 13447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13324,
											"end": 13447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13324,
											"end": 13447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13324,
											"end": 13447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 13324,
											"end": 13447,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13324,
											"end": 13447,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 13324,
											"end": 13447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13324,
											"end": 13447,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 555,
											"end": 634,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 555,
											"end": 634,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 555,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 555,
											"end": 634,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 555,
											"end": 634,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 555,
											"end": 634,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 555,
											"end": 634,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 555,
											"end": 634,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 555,
											"end": 634,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 555,
											"end": 634,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 555,
											"end": 634,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 555,
											"end": 634,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 555,
											"end": 634,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 555,
											"end": 634,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 555,
											"end": 634,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 555,
											"end": 634,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 555,
											"end": 634,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 555,
											"end": 634,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 555,
											"end": 634,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 555,
											"end": 634,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 555,
											"end": 634,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 555,
											"end": 634,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 555,
											"end": 634,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 555,
											"end": 634,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 555,
											"end": 634,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 555,
											"end": 634,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 555,
											"end": 634,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 835,
											"end": 997,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 835,
											"end": 997,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 835,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 835,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 835,
											"end": 997,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 835,
											"end": 997,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 835,
											"end": 997,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 835,
											"end": 997,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 835,
											"end": 997,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 835,
											"end": 997,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 835,
											"end": 997,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 835,
											"end": 997,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 835,
											"end": 997,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 835,
											"end": 997,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 835,
											"end": 997,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 835,
											"end": 997,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 835,
											"end": 997,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 835,
											"end": 997,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 835,
											"end": 997,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 835,
											"end": 997,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 835,
											"end": 997,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 835,
											"end": 997,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 835,
											"end": 997,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 835,
											"end": 997,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 835,
											"end": 997,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 835,
											"end": 997,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 835,
											"end": 997,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 583,
											"end": 603,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 10074,
											"end": 10416,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 10074,
											"end": 10416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10074,
											"end": 10416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 10074,
											"end": 10416,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10074,
											"end": 10416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10074,
											"end": 10416,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10074,
											"end": 10416,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10074,
											"end": 10416,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10074,
											"end": 10416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10074,
											"end": 10416,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10074,
											"end": 10416,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10074,
											"end": 10416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10074,
											"end": 10416,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10074,
											"end": 10416,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10074,
											"end": 10416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10074,
											"end": 10416,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10074,
											"end": 10416,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10074,
											"end": 10416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10074,
											"end": 10416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10074,
											"end": 10416,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10074,
											"end": 10416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10074,
											"end": 10416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10074,
											"end": 10416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10074,
											"end": 10416,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 10074,
											"end": 10416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10074,
											"end": 10416,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10074,
											"end": 10416,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10074,
											"end": 10416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10074,
											"end": 10416,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10074,
											"end": 10416,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10074,
											"end": 10416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10074,
											"end": 10416,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10074,
											"end": 10416,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10074,
											"end": 10416,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10074,
											"end": 10416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 10074,
											"end": 10416,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10074,
											"end": 10416,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 10074,
											"end": 10416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10074,
											"end": 10416,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14101,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 13980,
											"end": 14101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 13980,
											"end": 14101,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13980,
											"end": 14101,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14101,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14101,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14101,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13980,
											"end": 14101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14101,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14101,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 13980,
											"end": 14101,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14101,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13980,
											"end": 14101,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14101,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14101,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 13980,
											"end": 14101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14101,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14101,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14101,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14101,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14101,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13980,
											"end": 14101,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14101,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14101,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 13980,
											"end": 14101,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13980,
											"end": 14101,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 13980,
											"end": 14101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14101,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 9860,
											"end": 9910,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 9860,
											"end": 9910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9860,
											"end": 9910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 9860,
											"end": 9910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 9860,
											"end": 9910,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9860,
											"end": 9910,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 9860,
											"end": 9910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9860,
											"end": 9910,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9860,
											"end": 9910,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9860,
											"end": 9910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9860,
											"end": 9910,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9860,
											"end": 9910,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9860,
											"end": 9910,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9860,
											"end": 9910,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9860,
											"end": 9910,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9860,
											"end": 9910,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9860,
											"end": 9910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9860,
											"end": 9910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9860,
											"end": 9910,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9860,
											"end": 9910,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9860,
											"end": 9910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9860,
											"end": 9910,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9860,
											"end": 9910,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9860,
											"end": 9910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9860,
											"end": 9910,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 12656,
											"end": 13316,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 12656,
											"end": 13316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12656,
											"end": 13316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 12656,
											"end": 13316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 12656,
											"end": 13316,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12656,
											"end": 13316,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 12656,
											"end": 13316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12656,
											"end": 13316,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12656,
											"end": 13316,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12656,
											"end": 13316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12656,
											"end": 13316,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12656,
											"end": 13316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12656,
											"end": 13316,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12656,
											"end": 13316,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12656,
											"end": 13316,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12656,
											"end": 13316,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12656,
											"end": 13316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12656,
											"end": 13316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12656,
											"end": 13316,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12656,
											"end": 13316,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12656,
											"end": 13316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12656,
											"end": 13316,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12656,
											"end": 13316,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12656,
											"end": 13316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12656,
											"end": 13316,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 11779,
											"end": 11892,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 11779,
											"end": 11892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11827,
											"end": 11834,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11854,
											"end": 11884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 11875,
											"end": 11883,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11854,
											"end": 11874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 11854,
											"end": 11884,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11854,
											"end": 11884,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 11854,
											"end": 11884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11847,
											"end": 11884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11847,
											"end": 11884,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11779,
											"end": 11892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11779,
											"end": 11892,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9720,
											"end": 9772,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3205,
											"end": 3209,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3227,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3236,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 3236,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 3236,
											"end": 3248,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3236,
											"end": 3248,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 3236,
											"end": 3248,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3250,
											"end": 3258,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3260,
											"end": 3267,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3227,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 3227,
											"end": 3268,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3227,
											"end": 3268,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3227,
											"end": 3268,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3286,
											"end": 3290,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3279,
											"end": 3290,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3279,
											"end": 3290,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2068,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2056,
											"end": 2068,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2049,
											"end": 2068,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2049,
											"end": 2068,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13725,
											"end": 13734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 13725,
											"end": 13732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 13725,
											"end": 13734,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13725,
											"end": 13734,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 13725,
											"end": 13734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13721,
											"end": 13965,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13721,
											"end": 13965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 13721,
											"end": 13965,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13756,
											"end": 13765,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13751,
											"end": 13954,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 13751,
											"end": 13954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13775,
											"end": 13782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13775,
											"end": 13789,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13771,
											"end": 13772,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13771,
											"end": 13789,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13751,
											"end": 13954,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13751,
											"end": 13954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 13751,
											"end": 13954,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13815,
											"end": 13861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 13825,
											"end": 13835,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13837,
											"end": 13844,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13845,
											"end": 13846,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13837,
											"end": 13847,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13837,
											"end": 13847,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13837,
											"end": 13847,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13837,
											"end": 13847,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13837,
											"end": 13847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 13837,
											"end": 13847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13837,
											"end": 13847,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 13837,
											"end": 13847,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 13837,
											"end": 13847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13837,
											"end": 13847,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13837,
											"end": 13847,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13837,
											"end": 13847,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13837,
											"end": 13847,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13837,
											"end": 13847,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13837,
											"end": 13847,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13849,
											"end": 13860,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 13849,
											"end": 13860,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13815,
											"end": 13824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 13815,
											"end": 13861,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13815,
											"end": 13861,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 13815,
											"end": 13861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13791,
											"end": 13794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13791,
											"end": 13794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13791,
											"end": 13794,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13791,
											"end": 13794,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13791,
											"end": 13794,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13791,
											"end": 13794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13791,
											"end": 13794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13751,
											"end": 13954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 13751,
											"end": 13954,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13751,
											"end": 13954,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 13751,
											"end": 13954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13751,
											"end": 13954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13721,
											"end": 13965,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 13721,
											"end": 13965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13649,
											"end": 13972,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11570,
											"end": 11574,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 783,
											"end": 789,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 783,
											"end": 789,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 783,
											"end": 789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 783,
											"end": 789,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 783,
											"end": 789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 783,
											"end": 789,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 783,
											"end": 789,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 783,
											"end": 789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 783,
											"end": 789,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 783,
											"end": 789,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 783,
											"end": 789,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 767,
											"end": 789,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 767,
											"end": 789,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 767,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 767,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 767,
											"end": 779,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 767,
											"end": 779,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 767,
											"end": 779,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 767,
											"end": 789,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 767,
											"end": 789,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 767,
											"end": 789,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 759,
											"end": 803,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 803,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 759,
											"end": 803,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 759,
											"end": 803,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 803,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 759,
											"end": 803,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 803,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "PUSH",
											"source": 4,
											"value": "6E6F74206F776E65720000000000000000000000000000000000000000000000"
										},
										{
											"begin": 759,
											"end": 803,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 803,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 803,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 759,
											"end": 803,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11631,
											"end": 11632,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11609,
											"end": 11633,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11609,
											"end": 11633,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11619,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11633,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11609,
											"end": 11633,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11633,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11609,
											"end": 11633,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11587,
											"end": 11703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 11587,
											"end": 11703,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11587,
											"end": 11703,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11587,
											"end": 11703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11587,
											"end": 11703,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11587,
											"end": 11703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11587,
											"end": 11703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11587,
											"end": 11703,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11587,
											"end": 11703,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11587,
											"end": 11703,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11587,
											"end": 11703,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11587,
											"end": 11703,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11587,
											"end": 11703,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11587,
											"end": 11703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11587,
											"end": 11703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11587,
											"end": 11703,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11587,
											"end": 11703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11587,
											"end": 11703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11587,
											"end": 11703,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 11587,
											"end": 11703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11587,
											"end": 11703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11587,
											"end": 11703,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11587,
											"end": 11703,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11587,
											"end": 11703,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11587,
											"end": 11703,
											"name": "PUSH data",
											"source": 0,
											"value": "214D6A2BCBC2880DA3F1409C020BC73EA2584B13FAA007DE23EC5CA8B186ABA0"
										},
										{
											"begin": 11587,
											"end": 11703,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 11587,
											"end": 11703,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11587,
											"end": 11703,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 11587,
											"end": 11703,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11587,
											"end": 11703,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11587,
											"end": 11703,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11587,
											"end": 11703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11587,
											"end": 11703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11587,
											"end": 11703,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11587,
											"end": 11703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11587,
											"end": 11703,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11587,
											"end": 11703,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11587,
											"end": 11703,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11587,
											"end": 11703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11587,
											"end": 11703,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11587,
											"end": 11703,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 11587,
											"end": 11703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11721,
											"end": 11763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 11742,
											"end": 11750,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11752,
											"end": 11762,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11721,
											"end": 11741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 11721,
											"end": 11763,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11721,
											"end": 11763,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 11721,
											"end": 11763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11714,
											"end": 11763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11714,
											"end": 11763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11505,
											"end": 11771,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3899,
											"end": 3903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3942,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3943,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3924,
											"end": 3943,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3929,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3943,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3924,
											"end": 3943,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3943,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3943,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3964,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3964,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3964,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 3924,
											"end": 3964,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3962,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3947,
											"end": 3964,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3947,
											"end": 3964,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3947,
											"end": 3950,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3947,
											"end": 3964,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3947,
											"end": 3964,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3947,
											"end": 3964,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3947,
											"end": 3964,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3964,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 3924,
											"end": 3964,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3916,
											"end": 3965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 3916,
											"end": 3965,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3916,
											"end": 3965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3916,
											"end": 3965,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3916,
											"end": 3965,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3916,
											"end": 3965,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 3916,
											"end": 3965,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3978,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 4001,
											"end": 4006,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4021,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 4021,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 4021,
											"end": 4033,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4021,
											"end": 4033,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 4021,
											"end": 4033,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 4085,
											"end": 4092,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4059,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4060,
											"end": 4065,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4067,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 4067,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 4067,
											"end": 4079,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4067,
											"end": 4079,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 4067,
											"end": 4079,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 4048,
											"end": 4084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3978,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 3978,
											"end": 4104,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3978,
											"end": 4104,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 3978,
											"end": 4104,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4115,
											"end": 4145,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 4125,
											"end": 4130,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4132,
											"end": 4135,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4137,
											"end": 4144,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4115,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 4115,
											"end": 4145,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4115,
											"end": 4145,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 4115,
											"end": 4145,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4167,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4156,
											"end": 4167,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4156,
											"end": 4167,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10522,
											"end": 10526,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12379,
											"end": 12399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 12388,
											"end": 12398,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12379,
											"end": 12387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 12379,
											"end": 12399,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12379,
											"end": 12399,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 12379,
											"end": 12399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12371,
											"end": 12428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 12371,
											"end": 12428,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12371,
											"end": 12428,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12371,
											"end": 12428,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12371,
											"end": 12428,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12371,
											"end": 12428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12371,
											"end": 12428,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12371,
											"end": 12428,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12371,
											"end": 12428,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12371,
											"end": 12428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12371,
											"end": 12428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12371,
											"end": 12428,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12371,
											"end": 12428,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12371,
											"end": 12428,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12371,
											"end": 12428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12371,
											"end": 12428,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12371,
											"end": 12428,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12371,
											"end": 12428,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12371,
											"end": 12428,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 12371,
											"end": 12428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12371,
											"end": 12428,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12371,
											"end": 12428,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12371,
											"end": 12428,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12371,
											"end": 12428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12371,
											"end": 12428,
											"name": "PUSH",
											"source": 0,
											"value": "63616C6C6572206973206E6F7420746865206D696E7465720000000000000000"
										},
										{
											"begin": 12371,
											"end": 12428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12371,
											"end": 12428,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12371,
											"end": 12428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12371,
											"end": 12428,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12371,
											"end": 12428,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12371,
											"end": 12428,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12371,
											"end": 12428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12371,
											"end": 12428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12371,
											"end": 12428,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12371,
											"end": 12428,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12371,
											"end": 12428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12371,
											"end": 12428,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12371,
											"end": 12428,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12371,
											"end": 12428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12371,
											"end": 12428,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12371,
											"end": 12428,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 12371,
											"end": 12428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10607,
											"end": 10620,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 10607,
											"end": 10620,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10566,
											"end": 10603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 10595,
											"end": 10602,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10566,
											"end": 10579,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 10566,
											"end": 10590,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10580,
											"end": 10589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 10580,
											"end": 10587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 10580,
											"end": 10589,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10580,
											"end": 10589,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 10580,
											"end": 10589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10566,
											"end": 10590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10566,
											"end": 10590,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10566,
											"end": 10590,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10566,
											"end": 10590,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10566,
											"end": 10590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10566,
											"end": 10590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10566,
											"end": 10590,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10566,
											"end": 10590,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10566,
											"end": 10590,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10566,
											"end": 10590,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10566,
											"end": 10590,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10566,
											"end": 10590,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10566,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 10566,
											"end": 10594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10566,
											"end": 10603,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10566,
											"end": 10603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10566,
											"end": 10603,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10566,
											"end": 10603,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10566,
											"end": 10603,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10566,
											"end": 10603,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 10566,
											"end": 10603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10566,
											"end": 10620,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 10566,
											"end": 10620,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10544,
											"end": 10673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 10544,
											"end": 10673,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10544,
											"end": 10673,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10544,
											"end": 10673,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10544,
											"end": 10673,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10544,
											"end": 10673,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10544,
											"end": 10673,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10544,
											"end": 10673,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10544,
											"end": 10673,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10544,
											"end": 10673,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10544,
											"end": 10673,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10544,
											"end": 10673,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10544,
											"end": 10673,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10544,
											"end": 10673,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10544,
											"end": 10673,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10544,
											"end": 10673,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10544,
											"end": 10673,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10544,
											"end": 10673,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10544,
											"end": 10673,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 10544,
											"end": 10673,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10544,
											"end": 10673,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10544,
											"end": 10673,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10544,
											"end": 10673,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10544,
											"end": 10673,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10544,
											"end": 10673,
											"name": "PUSH",
											"source": 0,
											"value": "506F6B6572546F6B656E3A20796561724D696E744C696D697400000000000000"
										},
										{
											"begin": 10544,
											"end": 10673,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10544,
											"end": 10673,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10544,
											"end": 10673,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10544,
											"end": 10673,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10544,
											"end": 10673,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10544,
											"end": 10673,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10544,
											"end": 10673,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10544,
											"end": 10673,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10544,
											"end": 10673,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10544,
											"end": 10673,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10544,
											"end": 10673,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10544,
											"end": 10673,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10544,
											"end": 10673,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10544,
											"end": 10673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10544,
											"end": 10673,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10544,
											"end": 10673,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 10544,
											"end": 10673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10684,
											"end": 10703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 10690,
											"end": 10693,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10695,
											"end": 10702,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10684,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 10684,
											"end": 10703,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10684,
											"end": 10703,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 10684,
											"end": 10703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10741,
											"end": 10778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 10770,
											"end": 10777,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10741,
											"end": 10754,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 10741,
											"end": 10765,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10755,
											"end": 10764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 10755,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 10755,
											"end": 10764,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10755,
											"end": 10764,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 10755,
											"end": 10764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10741,
											"end": 10765,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10741,
											"end": 10765,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10741,
											"end": 10765,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10741,
											"end": 10765,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10741,
											"end": 10765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10741,
											"end": 10765,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10741,
											"end": 10765,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10741,
											"end": 10765,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10741,
											"end": 10765,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10741,
											"end": 10765,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10741,
											"end": 10765,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10741,
											"end": 10765,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10741,
											"end": 10769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 10741,
											"end": 10769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10741,
											"end": 10778,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10741,
											"end": 10778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10741,
											"end": 10778,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10741,
											"end": 10778,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10741,
											"end": 10778,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10741,
											"end": 10778,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 10741,
											"end": 10778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10727,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 10714,
											"end": 10738,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10728,
											"end": 10737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 10728,
											"end": 10735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 10728,
											"end": 10737,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10728,
											"end": 10737,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 10728,
											"end": 10737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10738,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10738,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10738,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10714,
											"end": 10738,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10738,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10738,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10738,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10714,
											"end": 10738,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10738,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10714,
											"end": 10738,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10778,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10778,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10778,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10834,
											"end": 10913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 10905,
											"end": 10912,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10834,
											"end": 10853,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 10834,
											"end": 10889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10868,
											"end": 10878,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10834,
											"end": 10889,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10834,
											"end": 10889,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10834,
											"end": 10889,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10834,
											"end": 10889,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10834,
											"end": 10889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10834,
											"end": 10889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10834,
											"end": 10889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10834,
											"end": 10889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10834,
											"end": 10889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10834,
											"end": 10889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10834,
											"end": 10889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10834,
											"end": 10889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10834,
											"end": 10889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10834,
											"end": 10889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10834,
											"end": 10889,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10834,
											"end": 10900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10890,
											"end": 10899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 10890,
											"end": 10897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 10890,
											"end": 10899,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10890,
											"end": 10899,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 10890,
											"end": 10899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10834,
											"end": 10900,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10834,
											"end": 10900,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10834,
											"end": 10900,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10834,
											"end": 10900,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10834,
											"end": 10900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10834,
											"end": 10900,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10834,
											"end": 10900,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10834,
											"end": 10900,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10834,
											"end": 10900,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10834,
											"end": 10900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10834,
											"end": 10900,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10834,
											"end": 10900,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10834,
											"end": 10904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 10834,
											"end": 10904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10834,
											"end": 10913,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10834,
											"end": 10913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10834,
											"end": 10913,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10834,
											"end": 10913,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10834,
											"end": 10913,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10834,
											"end": 10913,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 10834,
											"end": 10913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10789,
											"end": 10808,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 10789,
											"end": 10820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10809,
											"end": 10819,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10789,
											"end": 10820,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10789,
											"end": 10820,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10789,
											"end": 10820,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10789,
											"end": 10820,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10789,
											"end": 10820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10789,
											"end": 10820,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10789,
											"end": 10820,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10789,
											"end": 10820,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10789,
											"end": 10820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10789,
											"end": 10820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10789,
											"end": 10820,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10789,
											"end": 10820,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10789,
											"end": 10820,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10789,
											"end": 10820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10820,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10789,
											"end": 10831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10821,
											"end": 10830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 10821,
											"end": 10828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 10821,
											"end": 10830,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10821,
											"end": 10830,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 10821,
											"end": 10830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10789,
											"end": 10831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10789,
											"end": 10831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10789,
											"end": 10831,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10789,
											"end": 10831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10789,
											"end": 10831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10789,
											"end": 10831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10789,
											"end": 10831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10789,
											"end": 10831,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10789,
											"end": 10831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10789,
											"end": 10831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10831,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10789,
											"end": 10913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10789,
											"end": 10913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10789,
											"end": 10913,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10789,
											"end": 10913,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11009,
											"end": 11026,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 11009,
											"end": 11038,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11027,
											"end": 11037,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11009,
											"end": 11038,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11009,
											"end": 11038,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11009,
											"end": 11038,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11009,
											"end": 11038,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11009,
											"end": 11038,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11009,
											"end": 11038,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11009,
											"end": 11038,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11009,
											"end": 11038,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11009,
											"end": 11038,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11009,
											"end": 11038,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11009,
											"end": 11038,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11009,
											"end": 11038,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11009,
											"end": 11038,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11009,
											"end": 11038,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11009,
											"end": 11038,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11009,
											"end": 11038,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10946,
											"end": 10965,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 10946,
											"end": 10977,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10966,
											"end": 10976,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10946,
											"end": 10977,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10946,
											"end": 10977,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10946,
											"end": 10977,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10946,
											"end": 10977,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10946,
											"end": 10977,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10946,
											"end": 10977,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10946,
											"end": 10977,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10946,
											"end": 10977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10946,
											"end": 10977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10946,
											"end": 10977,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10946,
											"end": 10977,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10946,
											"end": 10977,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10946,
											"end": 10977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10946,
											"end": 10977,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10946,
											"end": 10977,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10946,
											"end": 10988,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10978,
											"end": 10987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 10978,
											"end": 10985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 10978,
											"end": 10987,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10978,
											"end": 10987,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 10978,
											"end": 10987,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10946,
											"end": 10988,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10946,
											"end": 10988,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10946,
											"end": 10988,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10946,
											"end": 10988,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10946,
											"end": 10988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10946,
											"end": 10988,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10946,
											"end": 10988,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10946,
											"end": 10988,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10946,
											"end": 10988,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10946,
											"end": 10988,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10946,
											"end": 10988,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10946,
											"end": 10988,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10946,
											"end": 11038,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 10946,
											"end": 11038,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10924,
											"end": 11097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 10924,
											"end": 11097,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10924,
											"end": 11097,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10924,
											"end": 11097,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10924,
											"end": 11097,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10924,
											"end": 11097,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10924,
											"end": 11097,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10924,
											"end": 11097,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10924,
											"end": 11097,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10924,
											"end": 11097,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10924,
											"end": 11097,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10924,
											"end": 11097,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10924,
											"end": 11097,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10924,
											"end": 11097,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10924,
											"end": 11097,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10924,
											"end": 11097,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10924,
											"end": 11097,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10924,
											"end": 11097,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10924,
											"end": 11097,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10924,
											"end": 11097,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10924,
											"end": 11097,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10924,
											"end": 11097,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10924,
											"end": 11097,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10924,
											"end": 11097,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10924,
											"end": 11097,
											"name": "PUSH",
											"source": 0,
											"value": "506F6B6572546F6B656E3A207265636F7264436F6E74726163744C696D697400"
										},
										{
											"begin": 10924,
											"end": 11097,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10924,
											"end": 11097,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10924,
											"end": 11097,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10924,
											"end": 11097,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10924,
											"end": 11097,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10924,
											"end": 11097,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10924,
											"end": 11097,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10924,
											"end": 11097,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10924,
											"end": 11097,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10924,
											"end": 11097,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10924,
											"end": 11097,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10924,
											"end": 11097,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10924,
											"end": 11097,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10924,
											"end": 11097,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10924,
											"end": 11097,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10924,
											"end": 11097,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 10924,
											"end": 11097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11115,
											"end": 11119,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11108,
											"end": 11119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11108,
											"end": 11119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10424,
											"end": 11127,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9981,
											"end": 10066,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 9981,
											"end": 10066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10032,
											"end": 10058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 10038,
											"end": 10048,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10050,
											"end": 10057,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10032,
											"end": 10037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 10032,
											"end": 10058,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10032,
											"end": 10058,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 10032,
											"end": 10058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9981,
											"end": 10066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9981,
											"end": 10066,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13324,
											"end": 13447,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 13324,
											"end": 13447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13383,
											"end": 13392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 13383,
											"end": 13390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 13383,
											"end": 13392,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13383,
											"end": 13392,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 13383,
											"end": 13392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13379,
											"end": 13440,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13379,
											"end": 13440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 13379,
											"end": 13440,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13425,
											"end": 13428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13409,
											"end": 13422,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 13409,
											"end": 13428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13409,
											"end": 13428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13409,
											"end": 13428,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13409,
											"end": 13428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13379,
											"end": 13440,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 13379,
											"end": 13440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13324,
											"end": 13447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13324,
											"end": 13447,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12103,
											"end": 12110,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 783,
											"end": 789,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 783,
											"end": 789,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 783,
											"end": 789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 783,
											"end": 789,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 783,
											"end": 789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 783,
											"end": 789,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 783,
											"end": 789,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 783,
											"end": 789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 783,
											"end": 789,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 783,
											"end": 789,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 783,
											"end": 789,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 767,
											"end": 789,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 767,
											"end": 789,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 767,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 767,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 767,
											"end": 779,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 767,
											"end": 779,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 767,
											"end": 779,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 767,
											"end": 789,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 767,
											"end": 789,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 767,
											"end": 789,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 759,
											"end": 803,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 803,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 759,
											"end": 803,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 759,
											"end": 803,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 803,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 759,
											"end": 803,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 803,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "PUSH",
											"source": 4,
											"value": "6E6F74206F776E65720000000000000000000000000000000000000000000000"
										},
										{
											"begin": 759,
											"end": 803,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 803,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 803,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 759,
											"end": 803,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12175,
											"end": 12176,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12155,
											"end": 12172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 12155,
											"end": 12170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 12155,
											"end": 12172,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12155,
											"end": 12172,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 12155,
											"end": 12172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12155,
											"end": 12176,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12145,
											"end": 12151,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12145,
											"end": 12176,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12145,
											"end": 12176,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12123,
											"end": 12235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 12123,
											"end": 12235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12123,
											"end": 12235,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12123,
											"end": 12235,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12123,
											"end": 12235,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12123,
											"end": 12235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12123,
											"end": 12235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12123,
											"end": 12235,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12123,
											"end": 12235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12123,
											"end": 12235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12123,
											"end": 12235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12123,
											"end": 12235,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12123,
											"end": 12235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12123,
											"end": 12235,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12123,
											"end": 12235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12123,
											"end": 12235,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12123,
											"end": 12235,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12123,
											"end": 12235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12123,
											"end": 12235,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12123,
											"end": 12235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12123,
											"end": 12235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12123,
											"end": 12235,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12123,
											"end": 12235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12123,
											"end": 12235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12123,
											"end": 12235,
											"name": "PUSH",
											"source": 0,
											"value": "506F6B6572546F6B656E3A20696E646578206F7574206F6620626F756E647300"
										},
										{
											"begin": 12123,
											"end": 12235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12123,
											"end": 12235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12123,
											"end": 12235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12123,
											"end": 12235,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12123,
											"end": 12235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12123,
											"end": 12235,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12123,
											"end": 12235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12123,
											"end": 12235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12123,
											"end": 12235,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12123,
											"end": 12235,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12123,
											"end": 12235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12123,
											"end": 12235,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12123,
											"end": 12235,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12123,
											"end": 12235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12123,
											"end": 12235,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12123,
											"end": 12235,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 12123,
											"end": 12235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12253,
											"end": 12287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 12270,
											"end": 12278,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 12280,
											"end": 12286,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12253,
											"end": 12269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 12253,
											"end": 12287,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12253,
											"end": 12287,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 12253,
											"end": 12287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12246,
											"end": 12287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12246,
											"end": 12287,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12037,
											"end": 12295,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2290,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2267,
											"end": 2291,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2267,
											"end": 2291,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11244,
											"end": 11248,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 783,
											"end": 789,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 783,
											"end": 789,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 783,
											"end": 789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 783,
											"end": 789,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 783,
											"end": 789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 783,
											"end": 789,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 783,
											"end": 789,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 783,
											"end": 789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 783,
											"end": 789,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 783,
											"end": 789,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 783,
											"end": 789,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 767,
											"end": 789,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 767,
											"end": 789,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 767,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 767,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 767,
											"end": 779,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 767,
											"end": 779,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 767,
											"end": 779,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 767,
											"end": 789,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 767,
											"end": 789,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 767,
											"end": 789,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 759,
											"end": 803,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 803,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 759,
											"end": 803,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 759,
											"end": 803,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 803,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 759,
											"end": 803,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 803,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "PUSH",
											"source": 4,
											"value": "6E6F74206F776E65720000000000000000000000000000000000000000000000"
										},
										{
											"begin": 759,
											"end": 803,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 803,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 803,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 759,
											"end": 803,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 759,
											"end": 803,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11310,
											"end": 11311,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11288,
											"end": 11312,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11288,
											"end": 11312,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11288,
											"end": 11298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11288,
											"end": 11312,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11288,
											"end": 11312,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11288,
											"end": 11312,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11288,
											"end": 11312,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11266,
											"end": 11382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 11266,
											"end": 11382,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11266,
											"end": 11382,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11266,
											"end": 11382,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11266,
											"end": 11382,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11266,
											"end": 11382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11266,
											"end": 11382,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11266,
											"end": 11382,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11266,
											"end": 11382,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11266,
											"end": 11382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11266,
											"end": 11382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11266,
											"end": 11382,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11266,
											"end": 11382,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11266,
											"end": 11382,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11266,
											"end": 11382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11266,
											"end": 11382,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11266,
											"end": 11382,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11266,
											"end": 11382,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11266,
											"end": 11382,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 11266,
											"end": 11382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11266,
											"end": 11382,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11266,
											"end": 11382,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11266,
											"end": 11382,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11266,
											"end": 11382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11266,
											"end": 11382,
											"name": "PUSH data",
											"source": 0,
											"value": "CB9D3212F00552D8BE41E69B0EA5B8E9499F587C01D683168AA870E2F69A84CE"
										},
										{
											"begin": 11266,
											"end": 11382,
											"name": "PUSH",
											"source": 0,
											"value": "2A"
										},
										{
											"begin": 11266,
											"end": 11382,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11266,
											"end": 11382,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 11266,
											"end": 11382,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11266,
											"end": 11382,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11266,
											"end": 11382,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11266,
											"end": 11382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11266,
											"end": 11382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11266,
											"end": 11382,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11266,
											"end": 11382,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11266,
											"end": 11382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11266,
											"end": 11382,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11266,
											"end": 11382,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11266,
											"end": 11382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11266,
											"end": 11382,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11266,
											"end": 11382,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 11266,
											"end": 11382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11393,
											"end": 11432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 11412,
											"end": 11422,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11424,
											"end": 11431,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11393,
											"end": 11411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 11393,
											"end": 11432,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11393,
											"end": 11432,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 11393,
											"end": 11432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11450,
											"end": 11489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 11468,
											"end": 11476,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11478,
											"end": 11488,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11450,
											"end": 11467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 11450,
											"end": 11489,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11450,
											"end": 11489,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 11450,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11135,
											"end": 11497,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 555,
											"end": 634,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 555,
											"end": 634,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 593,
											"end": 600,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 620,
											"end": 626,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 620,
											"end": 626,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 620,
											"end": 626,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 620,
											"end": 626,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 620,
											"end": 626,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 620,
											"end": 626,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 620,
											"end": 626,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 620,
											"end": 626,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 620,
											"end": 626,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 620,
											"end": 626,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 620,
											"end": 626,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 613,
											"end": 626,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 613,
											"end": 626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 555,
											"end": 634,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 555,
											"end": 634,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 835,
											"end": 997,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 835,
											"end": 997,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 875,
											"end": 879,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 891,
											"end": 900,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 919,
											"end": 925,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 919,
											"end": 925,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 919,
											"end": 925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 919,
											"end": 925,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 919,
											"end": 925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 919,
											"end": 925,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 919,
											"end": 925,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 919,
											"end": 925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 919,
											"end": 925,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 919,
											"end": 925,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 919,
											"end": 925,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 903,
											"end": 925,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 903,
											"end": 925,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 903,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 903,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 903,
											"end": 915,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 903,
											"end": 915,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 903,
											"end": 915,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 903,
											"end": 925,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 903,
											"end": 925,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 903,
											"end": 925,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 891,
											"end": 925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 891,
											"end": 925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 950,
											"end": 954,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 944,
											"end": 954,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 944,
											"end": 954,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 944,
											"end": 948,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 944,
											"end": 954,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 944,
											"end": 954,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 944,
											"end": 954,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 936,
											"end": 967,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 936,
											"end": 967,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 936,
											"end": 967,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 936,
											"end": 967,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 936,
											"end": 967,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 936,
											"end": 967,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 936,
											"end": 967,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 936,
											"end": 967,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 936,
											"end": 967,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 936,
											"end": 967,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 936,
											"end": 967,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 936,
											"end": 967,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 936,
											"end": 967,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 936,
											"end": 967,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 936,
											"end": 967,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 936,
											"end": 967,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 936,
											"end": 967,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 936,
											"end": 967,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 936,
											"end": 967,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 936,
											"end": 967,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 936,
											"end": 967,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 936,
											"end": 967,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 936,
											"end": 967,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 936,
											"end": 967,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 936,
											"end": 967,
											"name": "PUSH",
											"source": 4,
											"value": "6E6F74206F776E65720000000000000000000000000000000000000000000000"
										},
										{
											"begin": 936,
											"end": 967,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 936,
											"end": 967,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 936,
											"end": 967,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 936,
											"end": 967,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 936,
											"end": 967,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 936,
											"end": 967,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 936,
											"end": 967,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 936,
											"end": 967,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 936,
											"end": 967,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 936,
											"end": 967,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 936,
											"end": 967,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 936,
											"end": 967,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 936,
											"end": 967,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 936,
											"end": 967,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 936,
											"end": 967,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 936,
											"end": 967,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 936,
											"end": 967,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 985,
											"end": 989,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 978,
											"end": 989,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 978,
											"end": 989,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 978,
											"end": 989,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 835,
											"end": 997,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 835,
											"end": 997,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9665,
											"end": 9713,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10074,
											"end": 10416,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 10074,
											"end": 10416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10188,
											"end": 10201,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 10188,
											"end": 10201,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10147,
											"end": 10184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 10176,
											"end": 10183,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10147,
											"end": 10160,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 10147,
											"end": 10171,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10161,
											"end": 10170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 10161,
											"end": 10168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 10161,
											"end": 10170,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10161,
											"end": 10170,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 10161,
											"end": 10170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10147,
											"end": 10171,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10147,
											"end": 10171,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10147,
											"end": 10171,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10147,
											"end": 10171,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10147,
											"end": 10171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10147,
											"end": 10171,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10147,
											"end": 10171,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10147,
											"end": 10171,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10147,
											"end": 10171,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10147,
											"end": 10171,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10147,
											"end": 10171,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10147,
											"end": 10171,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10147,
											"end": 10175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 10147,
											"end": 10175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10147,
											"end": 10184,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10147,
											"end": 10184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10147,
											"end": 10184,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10147,
											"end": 10184,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10147,
											"end": 10184,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10147,
											"end": 10184,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 10147,
											"end": 10184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10147,
											"end": 10201,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 10147,
											"end": 10201,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 10125,
											"end": 10254,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10125,
											"end": 10254,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10254,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10125,
											"end": 10254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10254,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10254,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10125,
											"end": 10254,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10254,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10125,
											"end": 10254,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10254,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10254,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10254,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10254,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10254,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 10125,
											"end": 10254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10254,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10254,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10125,
											"end": 10254,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10254,
											"name": "PUSH",
											"source": 0,
											"value": "506F6B6572546F6B656E3A20796561724D696E744C696D697400000000000000"
										},
										{
											"begin": 10125,
											"end": 10254,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10254,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10254,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10125,
											"end": 10254,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10254,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10125,
											"end": 10254,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10254,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10254,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10254,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10125,
											"end": 10254,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 10125,
											"end": 10254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10269,
											"end": 10278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 10269,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 10269,
											"end": 10278,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10269,
											"end": 10278,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 10269,
											"end": 10278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10265,
											"end": 10409,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10265,
											"end": 10409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 10265,
											"end": 10409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10295,
											"end": 10318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 10301,
											"end": 10308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 10301,
											"end": 10306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 10301,
											"end": 10308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10301,
											"end": 10308,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 10301,
											"end": 10308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10310,
											"end": 10317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10295,
											"end": 10300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 10295,
											"end": 10318,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10295,
											"end": 10318,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 10295,
											"end": 10318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10360,
											"end": 10397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 10389,
											"end": 10396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10360,
											"end": 10373,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 10360,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10374,
											"end": 10383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 10374,
											"end": 10381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 10374,
											"end": 10383,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10374,
											"end": 10383,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 10374,
											"end": 10383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10360,
											"end": 10384,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10360,
											"end": 10384,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10360,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10360,
											"end": 10384,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10360,
											"end": 10384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10360,
											"end": 10384,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10360,
											"end": 10384,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10360,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10360,
											"end": 10384,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10360,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10360,
											"end": 10384,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10360,
											"end": 10384,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10360,
											"end": 10388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 10360,
											"end": 10388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10360,
											"end": 10397,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10360,
											"end": 10397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10360,
											"end": 10397,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10360,
											"end": 10397,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10360,
											"end": 10397,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10360,
											"end": 10397,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 10360,
											"end": 10397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10333,
											"end": 10346,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 10333,
											"end": 10357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10347,
											"end": 10356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 10347,
											"end": 10354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 10347,
											"end": 10356,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10347,
											"end": 10356,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 10347,
											"end": 10356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10333,
											"end": 10357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10333,
											"end": 10357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10333,
											"end": 10357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10333,
											"end": 10357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10333,
											"end": 10357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10333,
											"end": 10357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10333,
											"end": 10357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10333,
											"end": 10357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10333,
											"end": 10357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10333,
											"end": 10357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10333,
											"end": 10357,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10333,
											"end": 10397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10333,
											"end": 10397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10333,
											"end": 10397,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10333,
											"end": 10397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10265,
											"end": 10409,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 10265,
											"end": 10409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10074,
											"end": 10416,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10074,
											"end": 10416,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2609,
											"end": 2613,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2631,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 2641,
											"end": 2653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 2641,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2641,
											"end": 2653,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2641,
											"end": 2653,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 2641,
											"end": 2653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2658,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2660,
											"end": 2667,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2631,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2631,
											"end": 2668,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2631,
											"end": 2668,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 2631,
											"end": 2668,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2686,
											"end": 2690,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2679,
											"end": 2690,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2679,
											"end": 2690,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11956,
											"end": 11960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11980,
											"end": 12021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 12003,
											"end": 12011,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 12013,
											"end": 12020,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11980,
											"end": 12002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 11980,
											"end": 12021,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11980,
											"end": 12021,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 11980,
											"end": 12021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11973,
											"end": 12021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11973,
											"end": 12021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11900,
											"end": 12029,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13531,
											"end": 13540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 13531,
											"end": 13538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 13531,
											"end": 13540,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13531,
											"end": 13540,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 13531,
											"end": 13540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13527,
											"end": 13597,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13527,
											"end": 13597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 13527,
											"end": 13597,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13582,
											"end": 13585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13574,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 13557,
											"end": 13579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13575,
											"end": 13578,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13579,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13557,
											"end": 13579,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13579,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13557,
											"end": 13579,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13579,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13557,
											"end": 13579,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13579,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13557,
											"end": 13579,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13557,
											"end": 13579,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13585,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13585,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13557,
											"end": 13585,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13527,
											"end": 13597,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 13527,
											"end": 13597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13455,
											"end": 13604,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13980,
											"end": 14101,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 13980,
											"end": 14101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14039,
											"end": 14048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 14039,
											"end": 14046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 14039,
											"end": 14048,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14039,
											"end": 14048,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 14039,
											"end": 14048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14094,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 14035,
											"end": 14094,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14079,
											"end": 14082,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14065,
											"end": 14076,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 14065,
											"end": 14082,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14065,
											"end": 14082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14065,
											"end": 14082,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14065,
											"end": 14082,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14035,
											"end": 14094,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 14035,
											"end": 14094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14101,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2882,
											"end": 2889,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2914,
											"end": 2925,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2932,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2934,
											"end": 2942,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2907,
											"end": 2943,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2907,
											"end": 2943,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 9860,
											"end": 9910,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 9860,
											"end": 9910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9860,
											"end": 9910,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 9860,
											"end": 9910,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9860,
											"end": 9910,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9860,
											"end": 9910,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9779,
											"end": 9853,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12656,
											"end": 13316,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 12656,
											"end": 13316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12696,
											"end": 12708,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12721,
											"end": 12738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12741,
											"end": 12756,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 12721,
											"end": 12756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12721,
											"end": 12756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12767,
											"end": 12780,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12491,
											"end": 12503,
											"name": "PUSH",
											"source": 0,
											"value": "15180"
										},
										{
											"begin": 12783,
											"end": 12792,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12783,
											"end": 12810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12783,
											"end": 12810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 12783,
											"end": 12810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12783,
											"end": 12810,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 12783,
											"end": 12810,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 12783,
											"end": 12810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12783,
											"end": 12810,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12767,
											"end": 12810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12767,
											"end": 12810,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12821,
											"end": 12834,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12844,
											"end": 12849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12821,
											"end": 12850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12821,
											"end": 12850,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12863,
											"end": 12871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12640,
											"end": 12647,
											"name": "PUSH",
											"source": 0,
											"value": "253D8C"
										},
										{
											"begin": 12883,
											"end": 12888,
											"name": "PUSH",
											"source": 0,
											"value": "10BD9"
										},
										{
											"begin": 12874,
											"end": 12880,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12874,
											"end": 12888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12874,
											"end": 12905,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12863,
											"end": 12905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12863,
											"end": 12905,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12916,
											"end": 12924,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12937,
											"end": 12943,
											"name": "PUSH",
											"source": 0,
											"value": "23AB1"
										},
										{
											"begin": 12932,
											"end": 12933,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12928,
											"end": 12929,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12928,
											"end": 12933,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12927,
											"end": 12943,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12927,
											"end": 12943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 12927,
											"end": 12943,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12927,
											"end": 12943,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 12927,
											"end": 12943,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 12927,
											"end": 12943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12927,
											"end": 12943,
											"name": "SDIV",
											"source": 0
										},
										{
											"begin": 12916,
											"end": 12943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12916,
											"end": 12943,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12981,
											"end": 12982,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12976,
											"end": 12977,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12972,
											"end": 12973,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12963,
											"end": 12969,
											"name": "PUSH",
											"source": 0,
											"value": "23AB1"
										},
										{
											"begin": 12963,
											"end": 12973,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12963,
											"end": 12977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12962,
											"end": 12982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12962,
											"end": 12982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 12962,
											"end": 12982,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12962,
											"end": 12982,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 12962,
											"end": 12982,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 12962,
											"end": 12982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12962,
											"end": 12982,
											"name": "SDIV",
											"source": 0
										},
										{
											"begin": 12958,
											"end": 12959,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12958,
											"end": 12982,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12982,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12954,
											"end": 12982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12993,
											"end": 13005,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13027,
											"end": 13034,
											"name": "PUSH",
											"source": 0,
											"value": "164B09"
										},
										{
											"begin": 13021,
											"end": 13022,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13017,
											"end": 13018,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13017,
											"end": 13022,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13009,
											"end": 13013,
											"name": "PUSH",
											"source": 0,
											"value": "FA0"
										},
										{
											"begin": 13009,
											"end": 13023,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 13008,
											"end": 13034,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13034,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13034,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 13008,
											"end": 13034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13008,
											"end": 13034,
											"name": "SDIV",
											"source": 0
										},
										{
											"begin": 12993,
											"end": 13034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12993,
											"end": 13034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13074,
											"end": 13076,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13070,
											"end": 13071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13061,
											"end": 13066,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13054,
											"end": 13058,
											"name": "PUSH",
											"source": 0,
											"value": "5B5"
										},
										{
											"begin": 13054,
											"end": 13066,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13053,
											"end": 13071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13053,
											"end": 13071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 13053,
											"end": 13071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13053,
											"end": 13071,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 13053,
											"end": 13071,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 13053,
											"end": 13071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13053,
											"end": 13071,
											"name": "SDIV",
											"source": 0
										},
										{
											"begin": 13049,
											"end": 13050,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13049,
											"end": 13071,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13049,
											"end": 13076,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13045,
											"end": 13076,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13045,
											"end": 13076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13087,
											"end": 13100,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13114,
											"end": 13118,
											"name": "PUSH",
											"source": 0,
											"value": "98F"
										},
										{
											"begin": 13109,
											"end": 13110,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13104,
											"end": 13106,
											"name": "PUSH",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 13104,
											"end": 13110,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13103,
											"end": 13118,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13103,
											"end": 13118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 13103,
											"end": 13118,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13103,
											"end": 13118,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 13103,
											"end": 13118,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 13103,
											"end": 13118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13103,
											"end": 13118,
											"name": "SDIV",
											"source": 0
										},
										{
											"begin": 13087,
											"end": 13118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13087,
											"end": 13118,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13188,
											"end": 13190,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 13179,
											"end": 13185,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13179,
											"end": 13190,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13179,
											"end": 13190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 13179,
											"end": 13190,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13179,
											"end": 13190,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 13179,
											"end": 13190,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 13179,
											"end": 13190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13179,
											"end": 13190,
											"name": "SDIV",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13190,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13175,
											"end": 13190,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13228,
											"end": 13229,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13223,
											"end": 13225,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 13223,
											"end": 13229,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13219,
											"end": 13220,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13210,
											"end": 13216,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13210,
											"end": 13220,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13210,
											"end": 13229,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13201,
											"end": 13229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13201,
											"end": 13229,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13273,
											"end": 13274,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13265,
											"end": 13270,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13259,
											"end": 13261,
											"name": "PUSH",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 13255,
											"end": 13256,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13255,
											"end": 13261,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13248,
											"end": 13251,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 13248,
											"end": 13262,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13248,
											"end": 13270,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13248,
											"end": 13274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13274,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13240,
											"end": 13274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13302,
											"end": 13307,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13287,
											"end": 13308,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 13287,
											"end": 13308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12656,
											"end": 13316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12656,
											"end": 13316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12656,
											"end": 13316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12656,
											"end": 13316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12656,
											"end": 13316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12656,
											"end": 13316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12656,
											"end": 13316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12656,
											"end": 13316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12656,
											"end": 13316,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7121,
											"end": 7238,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 7121,
											"end": 7238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7184,
											"end": 7191,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7211,
											"end": 7230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 7219,
											"end": 7222,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7219,
											"end": 7229,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7219,
											"end": 7229,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7211,
											"end": 7218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 7211,
											"end": 7230,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7211,
											"end": 7230,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 7211,
											"end": 7230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7204,
											"end": 7230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7204,
											"end": 7230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7121,
											"end": 7238,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7121,
											"end": 7238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7121,
											"end": 7238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7121,
											"end": 7238,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 605,
											"end": 711,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 605,
											"end": 711,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 658,
											"end": 673,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 693,
											"end": 703,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 686,
											"end": 703,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 686,
											"end": 703,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 605,
											"end": 711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 605,
											"end": 711,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5546,
											"end": 5885,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 5546,
											"end": 5885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5696,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5677,
											"end": 5697,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5677,
											"end": 5697,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5683,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5697,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5677,
											"end": 5697,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5697,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5697,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH",
											"source": 2,
											"value": "E"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH",
											"source": 2,
											"value": "617070726F76652066726F6D2030000000000000000000000000000000000000"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5735,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5735,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5743,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5735,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5757,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5757,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH",
											"source": 2,
											"value": "617070726F766520746F20300000000000000000000000000000000000000000"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5819,
											"end": 5826,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5798,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5805,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5815,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5826,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5826,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5826,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5826,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5859,
											"end": 5867,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5851,
											"end": 5857,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 5869,
											"end": 5876,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 5546,
											"end": 5885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5546,
											"end": 5885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5546,
											"end": 5885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5546,
											"end": 5885,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4652,
											"end": 5104,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 4652,
											"end": 5104,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4795,
											"end": 4796,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4778,
											"end": 4797,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4778,
											"end": 4797,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4778,
											"end": 4783,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4778,
											"end": 4797,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4778,
											"end": 4797,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4778,
											"end": 4797,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4778,
											"end": 4797,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH",
											"source": 2,
											"value": "F"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH",
											"source": 2,
											"value": "7472616E736665722066726F6D20300000000000000000000000000000000000"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4851,
											"end": 4852,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4836,
											"end": 4853,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4836,
											"end": 4853,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4836,
											"end": 4839,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4836,
											"end": 4853,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4836,
											"end": 4853,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4836,
											"end": 4853,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4836,
											"end": 4853,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH",
											"source": 2,
											"value": "D"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH",
											"source": 2,
											"value": "7472616E7366657220746F203000000000000000000000000000000000000000"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4905,
											"end": 4911,
											"name": "PUSH",
											"source": 2,
											"value": "DEAD"
										},
										{
											"begin": 4890,
											"end": 4912,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4890,
											"end": 4912,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4890,
											"end": 4893,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4890,
											"end": 4912,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4890,
											"end": 4912,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4890,
											"end": 4912,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4890,
											"end": 4912,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH",
											"source": 2,
											"value": "7472616E7366657220746F203078646561640000000000000000000000000000"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 4988,
											"end": 4995,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4976,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4977,
											"end": 4982,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 4967,
											"end": 4987,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4996,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4967,
											"end": 4996,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4996,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4967,
											"end": 4996,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 4967,
											"end": 4996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4957,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4958,
											"end": 4963,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4996,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4996,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 5043,
											"end": 5050,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5034,
											"end": 5037,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5042,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 5024,
											"end": 5042,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5051,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5051,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5051,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5024,
											"end": 5051,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5051,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5024,
											"end": 5051,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 5024,
											"end": 5051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5016,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5017,
											"end": 5020,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5051,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5051,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5051,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5051,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5083,
											"end": 5086,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5081,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 5088,
											"end": 5095,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 4652,
											"end": 5104,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4652,
											"end": 5104,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4652,
											"end": 5104,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4652,
											"end": 5104,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6587,
											"end": 6759,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 6587,
											"end": 6759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6678,
											"end": 6682,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6707,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 6715,
											"end": 6718,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6715,
											"end": 6725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6715,
											"end": 6725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6743,
											"end": 6748,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6735,
											"end": 6749,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6735,
											"end": 6749,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6727,
											"end": 6750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6727,
											"end": 6750,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 6707,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 6707,
											"end": 6751,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6707,
											"end": 6751,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 6707,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6700,
											"end": 6751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6700,
											"end": 6751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6587,
											"end": 6759,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6587,
											"end": 6759,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6587,
											"end": 6759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6587,
											"end": 6759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6587,
											"end": 6759,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 773,
											"end": 957,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 773,
											"end": 957,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 831,
											"end": 838,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 864,
											"end": 865,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 859,
											"end": 860,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 859,
											"end": 865,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 859,
											"end": 865,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "1E"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 911,
											"end": 920,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 927,
											"end": 928,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 923,
											"end": 924,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 923,
											"end": 928,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 911,
											"end": 928,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 911,
											"end": 928,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 948,
											"end": 949,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 941,
											"end": 949,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 941,
											"end": 949,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 941,
											"end": 949,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 773,
											"end": 957,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 773,
											"end": 957,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 773,
											"end": 957,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 773,
											"end": 957,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 773,
											"end": 957,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 317,
											"end": 498,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 317,
											"end": 498,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 375,
											"end": 382,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 395,
											"end": 404,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 407,
											"end": 408,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 407,
											"end": 412,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 395,
											"end": 412,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 395,
											"end": 412,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 436,
											"end": 437,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 431,
											"end": 432,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 431,
											"end": 437,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 431,
											"end": 437,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "1B"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 489,
											"end": 490,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 482,
											"end": 490,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 482,
											"end": 490,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 482,
											"end": 490,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 317,
											"end": 498,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 317,
											"end": 498,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 317,
											"end": 498,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 317,
											"end": 498,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 317,
											"end": 498,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6164,
											"end": 6434,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 6164,
											"end": 6434,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6252,
											"end": 6253,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6237,
											"end": 6254,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6237,
											"end": 6254,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6237,
											"end": 6240,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6237,
											"end": 6254,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6237,
											"end": 6254,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6237,
											"end": 6254,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6237,
											"end": 6254,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6229,
											"end": 6268,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 6229,
											"end": 6268,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6229,
											"end": 6268,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6229,
											"end": 6268,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6229,
											"end": 6268,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6229,
											"end": 6268,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6229,
											"end": 6268,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6229,
											"end": 6268,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6229,
											"end": 6268,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6229,
											"end": 6268,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6229,
											"end": 6268,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6229,
											"end": 6268,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6229,
											"end": 6268,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6229,
											"end": 6268,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6229,
											"end": 6268,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6229,
											"end": 6268,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6229,
											"end": 6268,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6229,
											"end": 6268,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6229,
											"end": 6268,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 6229,
											"end": 6268,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6229,
											"end": 6268,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6229,
											"end": 6268,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6229,
											"end": 6268,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6229,
											"end": 6268,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6229,
											"end": 6268,
											"name": "PUSH",
											"source": 2,
											"value": "6D696E7420746F20300000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6229,
											"end": 6268,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6229,
											"end": 6268,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6229,
											"end": 6268,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6229,
											"end": 6268,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6229,
											"end": 6268,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6229,
											"end": 6268,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6229,
											"end": 6268,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6229,
											"end": 6268,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6229,
											"end": 6268,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6229,
											"end": 6268,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6229,
											"end": 6268,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6229,
											"end": 6268,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6229,
											"end": 6268,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6229,
											"end": 6268,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6229,
											"end": 6268,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6229,
											"end": 6268,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 6229,
											"end": 6268,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6296,
											"end": 6321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 6313,
											"end": 6320,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6296,
											"end": 6308,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6296,
											"end": 6308,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6296,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 6296,
											"end": 6312,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6296,
											"end": 6321,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6296,
											"end": 6321,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6296,
											"end": 6321,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6296,
											"end": 6321,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6296,
											"end": 6321,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6296,
											"end": 6321,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 6296,
											"end": 6321,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6293,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6281,
											"end": 6321,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6321,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6321,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6321,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6349,
											"end": 6376,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 6368,
											"end": 6375,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6349,
											"end": 6358,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6349,
											"end": 6363,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6359,
											"end": 6362,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6349,
											"end": 6363,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6349,
											"end": 6363,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6349,
											"end": 6363,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6349,
											"end": 6363,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6349,
											"end": 6363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6349,
											"end": 6363,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6349,
											"end": 6363,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6349,
											"end": 6363,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6349,
											"end": 6363,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6349,
											"end": 6363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6349,
											"end": 6363,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6349,
											"end": 6363,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6349,
											"end": 6363,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6349,
											"end": 6363,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6349,
											"end": 6363,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6349,
											"end": 6363,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6349,
											"end": 6367,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 6349,
											"end": 6367,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6349,
											"end": 6376,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6349,
											"end": 6376,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6349,
											"end": 6376,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6349,
											"end": 6376,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6349,
											"end": 6376,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6349,
											"end": 6376,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 6349,
											"end": 6376,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6332,
											"end": 6341,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6332,
											"end": 6346,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6342,
											"end": 6345,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6332,
											"end": 6346,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6332,
											"end": 6346,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6332,
											"end": 6346,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6332,
											"end": 6346,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6332,
											"end": 6346,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6332,
											"end": 6346,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6332,
											"end": 6346,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6332,
											"end": 6346,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6332,
											"end": 6346,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6332,
											"end": 6346,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6332,
											"end": 6346,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6332,
											"end": 6346,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6332,
											"end": 6346,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6332,
											"end": 6346,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6332,
											"end": 6346,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6332,
											"end": 6376,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6332,
											"end": 6376,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6332,
											"end": 6376,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6332,
											"end": 6376,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6413,
											"end": 6416,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6392,
											"end": 6426,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6392,
											"end": 6426,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6409,
											"end": 6410,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6392,
											"end": 6426,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6392,
											"end": 6426,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6392,
											"end": 6426,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 6418,
											"end": 6425,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6392,
											"end": 6426,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6392,
											"end": 6426,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6392,
											"end": 6426,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6392,
											"end": 6426,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6392,
											"end": 6426,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6392,
											"end": 6426,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6392,
											"end": 6426,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6392,
											"end": 6426,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6392,
											"end": 6426,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6392,
											"end": 6426,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6392,
											"end": 6426,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6392,
											"end": 6426,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6392,
											"end": 6426,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6392,
											"end": 6426,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6392,
											"end": 6426,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6392,
											"end": 6426,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6392,
											"end": 6426,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6392,
											"end": 6426,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6164,
											"end": 6434,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6164,
											"end": 6434,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6164,
											"end": 6434,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6763,
											"end": 7114,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 6763,
											"end": 7114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6855,
											"end": 6856,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6838,
											"end": 6857,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6838,
											"end": 6857,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6838,
											"end": 6843,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6838,
											"end": 6857,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6838,
											"end": 6857,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6838,
											"end": 6857,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6838,
											"end": 6857,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6873,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 6830,
											"end": 6873,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6873,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6830,
											"end": 6873,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6873,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6830,
											"end": 6873,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6873,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6873,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6830,
											"end": 6873,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6873,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6873,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6873,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6830,
											"end": 6873,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6873,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6873,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6873,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6873,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6873,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6873,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 6830,
											"end": 6873,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6873,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6873,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6830,
											"end": 6873,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6873,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6873,
											"name": "PUSH",
											"source": 2,
											"value": "6275726E2066726F6D2030000000000000000000000000000000000000000000"
										},
										{
											"begin": 6830,
											"end": 6873,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6873,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6873,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6873,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6830,
											"end": 6873,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6873,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6873,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6873,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6873,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6830,
											"end": 6873,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6873,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6873,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6873,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6873,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6873,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6830,
											"end": 6873,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 6830,
											"end": 6873,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6909,
											"end": 6915,
											"name": "PUSH",
											"source": 2,
											"value": "DEAD"
										},
										{
											"begin": 6892,
											"end": 6916,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6892,
											"end": 6916,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6892,
											"end": 6897,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6892,
											"end": 6916,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6892,
											"end": 6916,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6892,
											"end": 6916,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6892,
											"end": 6916,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6884,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 6884,
											"end": 6937,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6884,
											"end": 6937,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6884,
											"end": 6937,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6884,
											"end": 6937,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6884,
											"end": 6937,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6884,
											"end": 6937,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6884,
											"end": 6937,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6884,
											"end": 6937,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6884,
											"end": 6937,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6884,
											"end": 6937,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6884,
											"end": 6937,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6884,
											"end": 6937,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6884,
											"end": 6937,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6884,
											"end": 6937,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6884,
											"end": 6937,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6884,
											"end": 6937,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6884,
											"end": 6937,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6884,
											"end": 6937,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 6884,
											"end": 6937,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6884,
											"end": 6937,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6884,
											"end": 6937,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6884,
											"end": 6937,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6884,
											"end": 6937,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6884,
											"end": 6937,
											"name": "PUSH",
											"source": 2,
											"value": "6275726E2066726F6D2030786465616400000000000000000000000000000000"
										},
										{
											"begin": 6884,
											"end": 6937,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6884,
											"end": 6937,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6884,
											"end": 6937,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6884,
											"end": 6937,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6884,
											"end": 6937,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6884,
											"end": 6937,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6884,
											"end": 6937,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6884,
											"end": 6937,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6884,
											"end": 6937,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6884,
											"end": 6937,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6884,
											"end": 6937,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6884,
											"end": 6937,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6884,
											"end": 6937,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6884,
											"end": 6937,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6884,
											"end": 6937,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6884,
											"end": 6937,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 6884,
											"end": 6937,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6969,
											"end": 6998,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 6990,
											"end": 6997,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6969,
											"end": 6978,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6969,
											"end": 6985,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6979,
											"end": 6984,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6969,
											"end": 6985,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6969,
											"end": 6985,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6969,
											"end": 6985,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6969,
											"end": 6985,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6969,
											"end": 6985,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6969,
											"end": 6985,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6969,
											"end": 6985,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6969,
											"end": 6985,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6969,
											"end": 6985,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6969,
											"end": 6985,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6969,
											"end": 6985,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6969,
											"end": 6985,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6969,
											"end": 6985,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6969,
											"end": 6985,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6969,
											"end": 6985,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6969,
											"end": 6985,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6969,
											"end": 6989,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 6969,
											"end": 6989,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6969,
											"end": 6998,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6969,
											"end": 6998,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6969,
											"end": 6998,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6969,
											"end": 6998,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6969,
											"end": 6998,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6969,
											"end": 6998,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 6969,
											"end": 6998,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6950,
											"end": 6959,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6950,
											"end": 6966,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6960,
											"end": 6965,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6950,
											"end": 6966,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6950,
											"end": 6966,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6950,
											"end": 6966,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6950,
											"end": 6966,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6950,
											"end": 6966,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6950,
											"end": 6966,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6950,
											"end": 6966,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6950,
											"end": 6966,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6950,
											"end": 6966,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6950,
											"end": 6966,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6950,
											"end": 6966,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6950,
											"end": 6966,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6950,
											"end": 6966,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6950,
											"end": 6966,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6950,
											"end": 6966,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6950,
											"end": 6998,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6950,
											"end": 6998,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6950,
											"end": 6998,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6950,
											"end": 6998,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7024,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 7041,
											"end": 7048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7024,
											"end": 7036,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7024,
											"end": 7036,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7024,
											"end": 7040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 7024,
											"end": 7040,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7024,
											"end": 7049,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7024,
											"end": 7049,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7024,
											"end": 7049,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7024,
											"end": 7049,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7024,
											"end": 7049,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7024,
											"end": 7049,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 7024,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7009,
											"end": 7021,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7009,
											"end": 7049,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7009,
											"end": 7049,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7009,
											"end": 7049,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7009,
											"end": 7049,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7089,
											"end": 7095,
											"name": "PUSH",
											"source": 2,
											"value": "DEAD"
										},
										{
											"begin": 7065,
											"end": 7106,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7065,
											"end": 7106,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7074,
											"end": 7079,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7106,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7065,
											"end": 7106,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7106,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7098,
											"end": 7105,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7106,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7065,
											"end": 7106,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7106,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7106,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7106,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7106,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7106,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7065,
											"end": 7106,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7106,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7106,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7106,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7106,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7065,
											"end": 7106,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7106,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7106,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7106,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7106,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7065,
											"end": 7106,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6763,
											"end": 7114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6763,
											"end": 7114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6763,
											"end": 7114,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7592,
											"end": 7773,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 7592,
											"end": 7773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7693,
											"end": 7700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7741,
											"end": 7763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 7745,
											"end": 7748,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7745,
											"end": 7755,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7745,
											"end": 7755,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7762,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7741,
											"end": 7744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 7741,
											"end": 7763,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7741,
											"end": 7763,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 7741,
											"end": 7763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7733,
											"end": 7764,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7733,
											"end": 7764,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7718,
											"end": 7765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7718,
											"end": 7765,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7592,
											"end": 7773,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7592,
											"end": 7773,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7592,
											"end": 7773,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7592,
											"end": 7773,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7592,
											"end": 7773,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6245,
											"end": 6411,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 6245,
											"end": 6411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6333,
											"end": 6337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6362,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 6367,
											"end": 6370,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6367,
											"end": 6377,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6367,
											"end": 6377,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6395,
											"end": 6400,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6387,
											"end": 6401,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6387,
											"end": 6401,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6379,
											"end": 6402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6379,
											"end": 6402,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 6362,
											"end": 6366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 6362,
											"end": 6403,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6362,
											"end": 6403,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 6362,
											"end": 6403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6355,
											"end": 6403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6355,
											"end": 6403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6245,
											"end": 6411,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6245,
											"end": 6411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6245,
											"end": 6411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6245,
											"end": 6411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6245,
											"end": 6411,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6845,
											"end": 7035,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 6845,
											"end": 7035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6952,
											"end": 6956,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6981,
											"end": 7027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 6991,
											"end": 6994,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6991,
											"end": 7001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6991,
											"end": 7001,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7019,
											"end": 7024,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7011,
											"end": 7025,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7011,
											"end": 7025,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7003,
											"end": 7026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7003,
											"end": 7026,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 6981,
											"end": 6990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 6981,
											"end": 7027,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6981,
											"end": 7027,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 6981,
											"end": 7027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6974,
											"end": 7027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6974,
											"end": 7027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6845,
											"end": 7035,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6845,
											"end": 7035,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6845,
											"end": 7035,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6845,
											"end": 7035,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6845,
											"end": 7035,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3545,
											"end": 3654,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 3545,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3601,
											"end": 3608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3628,
											"end": 3639,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3639,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3628,
											"end": 3646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3628,
											"end": 3646,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3628,
											"end": 3646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3628,
											"end": 3646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3621,
											"end": 3646,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3621,
											"end": 3646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3545,
											"end": 3654,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3545,
											"end": 3654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3545,
											"end": 3654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3545,
											"end": 3654,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1655,
											"end": 3212,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 1655,
											"end": 3212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1721,
											"end": 1725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1839,
											"end": 1857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1863,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1872,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1860,
											"end": 1872,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1873,
											"end": 1878,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1860,
											"end": 1879,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1839,
											"end": 1879,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1839,
											"end": 1879,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1910,
											"end": 1911,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1896,
											"end": 1906,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1896,
											"end": 1911,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 3205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 1892,
											"end": 3205,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2271,
											"end": 2292,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2308,
											"end": 2309,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2295,
											"end": 2305,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2271,
											"end": 2309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2271,
											"end": 2309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2341,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2365,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2344,
											"end": 2347,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2344,
											"end": 2355,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2344,
											"end": 2355,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2344,
											"end": 2362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2344,
											"end": 2362,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2344,
											"end": 2362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2344,
											"end": 2362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2344,
											"end": 2366,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2324,
											"end": 2366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 2628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2631,
											"end": 2634,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2631,
											"end": 2642,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2643,
											"end": 2652,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2653,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2653,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 2631,
											"end": 2653,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2653,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2653,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 2631,
											"end": 2653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2653,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2631,
											"end": 2653,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2653,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2631,
											"end": 2653,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2631,
											"end": 2653,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2653,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 2653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 2653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2777,
											"end": 2786,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2748,
											"end": 2751,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2748,
											"end": 2759,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2748,
											"end": 2759,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2773,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2748,
											"end": 2774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2748,
											"end": 2774,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2748,
											"end": 2774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2748,
											"end": 2774,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2748,
											"end": 2774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 2748,
											"end": 2774,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2748,
											"end": 2774,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 2748,
											"end": 2774,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 2748,
											"end": 2774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2748,
											"end": 2774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2748,
											"end": 2774,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2748,
											"end": 2774,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2748,
											"end": 2774,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2748,
											"end": 2774,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2748,
											"end": 2774,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2748,
											"end": 2774,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2748,
											"end": 2786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2748,
											"end": 2786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2748,
											"end": 2786,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2748,
											"end": 2786,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2896,
											"end": 2897,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2880,
											"end": 2893,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2880,
											"end": 2897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2857,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2866,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2854,
											"end": 2866,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2877,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2867,
											"end": 2876,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2877,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2877,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2877,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2854,
											"end": 2877,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2877,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2877,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2877,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2854,
											"end": 2877,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2877,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2854,
											"end": 2877,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2897,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2897,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3009,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3006,
											"end": 3017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3023,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 3006,
											"end": 3023,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3023,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3023,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 3006,
											"end": 3023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3023,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3006,
											"end": 3023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3023,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3023,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3006,
											"end": 3023,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3023,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3006,
											"end": 3023,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3006,
											"end": 3023,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3023,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3023,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3006,
											"end": 3023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3023,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3023,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3101,
											"end": 3104,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3101,
											"end": 3113,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3101,
											"end": 3113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3101,
											"end": 3120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3114,
											"end": 3119,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3101,
											"end": 3120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3101,
											"end": 3120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3101,
											"end": 3120,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3101,
											"end": 3120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3101,
											"end": 3120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3101,
											"end": 3120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3101,
											"end": 3120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3101,
											"end": 3120,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3101,
											"end": 3120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3101,
											"end": 3120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3101,
											"end": 3120,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3094,
											"end": 3120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3094,
											"end": 3120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3094,
											"end": 3120,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3144,
											"end": 3148,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3137,
											"end": 3148,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3148,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3148,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3148,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3148,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3148,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3137,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 3137,
											"end": 3148,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 3205,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 1892,
											"end": 3205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3188,
											"end": 3193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3181,
											"end": 3193,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3181,
											"end": 3193,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3181,
											"end": 3193,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1655,
											"end": 3212,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 1655,
											"end": 3212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1655,
											"end": 3212,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1655,
											"end": 3212,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1655,
											"end": 3212,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1655,
											"end": 3212,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1655,
											"end": 3212,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4008,
											"end": 4281,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 4008,
											"end": 4281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4170,
											"end": 4175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4149,
											"end": 4152,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4149,
											"end": 4160,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4149,
											"end": 4160,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4149,
											"end": 4167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4149,
											"end": 4167,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4149,
											"end": 4167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4149,
											"end": 4167,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4149,
											"end": 4175,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4127,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 4127,
											"end": 4237,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4127,
											"end": 4237,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4127,
											"end": 4237,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4127,
											"end": 4237,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4127,
											"end": 4237,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4127,
											"end": 4237,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4127,
											"end": 4237,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4127,
											"end": 4237,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4127,
											"end": 4237,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4127,
											"end": 4237,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4127,
											"end": 4237,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4127,
											"end": 4237,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4127,
											"end": 4237,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4127,
											"end": 4237,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4127,
											"end": 4237,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4127,
											"end": 4237,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4127,
											"end": 4237,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4127,
											"end": 4237,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4127,
											"end": 4237,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4127,
											"end": 4237,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4127,
											"end": 4237,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4127,
											"end": 4237,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4127,
											"end": 4237,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4127,
											"end": 4237,
											"name": "PUSH data",
											"source": 0,
											"value": "45D6834E6193A687012A3AD777F612279E549B6945364D9D2324F48610D3CBB"
										},
										{
											"begin": 4127,
											"end": 4237,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4127,
											"end": 4237,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4127,
											"end": 4237,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 4127,
											"end": 4237,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4127,
											"end": 4237,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4127,
											"end": 4237,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4127,
											"end": 4237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4127,
											"end": 4237,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4127,
											"end": 4237,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4127,
											"end": 4237,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4127,
											"end": 4237,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4127,
											"end": 4237,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4127,
											"end": 4237,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4127,
											"end": 4237,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4127,
											"end": 4237,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4127,
											"end": 4237,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 4127,
											"end": 4237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4255,
											"end": 4258,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4255,
											"end": 4266,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4266,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4267,
											"end": 4272,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4255,
											"end": 4273,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4255,
											"end": 4273,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4255,
											"end": 4273,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4255,
											"end": 4273,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4255,
											"end": 4273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 4255,
											"end": 4273,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4255,
											"end": 4273,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 4255,
											"end": 4273,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 4255,
											"end": 4273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4255,
											"end": 4273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4255,
											"end": 4273,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4273,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4255,
											"end": 4273,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4255,
											"end": 4273,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4273,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4255,
											"end": 4273,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4255,
											"end": 4273,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4248,
											"end": 4273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4248,
											"end": 4273,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4008,
											"end": 4281,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4008,
											"end": 4281,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4008,
											"end": 4281,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4008,
											"end": 4281,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4008,
											"end": 4281,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1065,
											"end": 1479,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 1065,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1132,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 1160,
											"end": 1163,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1165,
											"end": 1170,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1150,
											"end": 1171,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1150,
											"end": 1171,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 1150,
											"end": 1171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1145,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 1145,
											"end": 1472,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1191,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1199,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1188,
											"end": 1199,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1205,
											"end": 1210,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1211,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1188,
											"end": 1211,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1211,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1211,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1211,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1211,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1211,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1211,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1211,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1188,
											"end": 1211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1211,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1211,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1188,
											"end": 1211,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1211,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1188,
											"end": 1211,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1188,
											"end": 1211,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1211,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1211,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1188,
											"end": 1211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1211,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1211,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1211,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1211,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1374,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1371,
											"end": 1382,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1389,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1352,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1349,
											"end": 1361,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1362,
											"end": 1367,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1368,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1368,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1368,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1349,
											"end": 1368,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1368,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1368,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1368,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1349,
											"end": 1368,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1349,
											"end": 1368,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1389,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1411,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1404,
											"end": 1415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1404,
											"end": 1415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1404,
											"end": 1415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 1404,
											"end": 1415,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1145,
											"end": 1472,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 1145,
											"end": 1472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1455,
											"end": 1460,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1448,
											"end": 1460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1460,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1479,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 1065,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1479,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1479,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1479,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3298,
											"end": 3459,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 3298,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3398,
											"end": 3402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3427,
											"end": 3430,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3427,
											"end": 3439,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3427,
											"end": 3439,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3427,
											"end": 3446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3427,
											"end": 3446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3427,
											"end": 3446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3427,
											"end": 3446,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3427,
											"end": 3446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3427,
											"end": 3446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3427,
											"end": 3446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3427,
											"end": 3446,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3427,
											"end": 3446,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3427,
											"end": 3446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3427,
											"end": 3446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3427,
											"end": 3446,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3427,
											"end": 3446,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3427,
											"end": 3451,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3427,
											"end": 3451,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3420,
											"end": 3451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3420,
											"end": 3451,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3298,
											"end": 3459,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3298,
											"end": 3459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3298,
											"end": 3459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3298,
											"end": 3459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3298,
											"end": 3459,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									],
									".data": {
										"214D6A2BCBC2880DA3F1409C020BC73EA2584B13FAA007DE23EC5CA8B186ABA0": "506f6b6572546f6b656e3a205f64656c4d696e74657220697320746865207a65726f2061646472657373",
										"45D6834E6193A687012A3AD777F612279E549B6945364D9D2324F48610D3CBB": "456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473",
										"CB9D3212F00552D8BE41E69B0EA5B8E9499F587C01D683168AA870E2F69A84CE": "506f6b6572546f6b656e3a205f6164644d696e74657220697320746865207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"YEAR_MINT_NUM()": "e1665f56",
							"addMinter(address,uint256)": "761248b4",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"batchTransferToken(address[])": "230614fb",
							"burn(uint256)": "42966c68",
							"contractMintLimit(address)": "092654a0",
							"decimals()": "313ce567",
							"delMinter(address)": "23338b88",
							"getMinter(uint256)": "5b7121f8",
							"getMinterLength()": "0323aac7",
							"getYear()": "fd08921b",
							"isMinter(address)": "aa271e1a",
							"isOwner()": "8f32d59b",
							"mint(address,uint256)": "40c10f19",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"recordContractLimit(address,uint256)": "e235a4a6",
							"setBatchAmount(uint256)": "db6783b8",
							"setContractMintNum(address,uint256)": "b56a711c",
							"setYearMintNum(uint256)": "599a1c3a",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"yearMintLimit(uint256)": "9098f2a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"YEAR_MINT_NUM\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addMinter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"holders\",\"type\":\"address[]\"}],\"name\":\"batchTransferToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"contractMintLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delMinter\",\"type\":\"address\"}],\"name\":\"delMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getMinter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMinterLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getYear\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"year\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"recordContractLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"num\",\"type\":\"uint256\"}],\"name\":\"setBatchAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ads\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"num\",\"type\":\"uint256\"}],\"name\":\"setContractMintNum\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"num\",\"type\":\"uint256\"}],\"name\":\"setYearMintNum\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"yearMintLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `_spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `_to` cannot be the zero address. - the caller must have a balance of at least `_amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `_from` and `_to` cannot be the zero address. - `_from` must have a balance of at least `_amount`. - the caller must have allowance for `_from`'s tokens of at least `_amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BasicCoin/PokerToken.sol\":\"PokerToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BasicCoin/PokerToken.sol\":{\"keccak256\":\"0x72f6d3755b9a9a4eaca2dec834063bc2e0884bedfc723a9e8575a26ef27be06f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://647f66be338b180f24f695ec9afb4dffcfcacd5e220e36a99ab828a3ef2577b1\",\"dweb:/ipfs/QmYjbGbykxKkMvsoBJw3xSf26ogG9PFjb6CqDdZ3mwxxNF\"]},\"_lib/Context.sol\":{\"keccak256\":\"0x77ec8b534124690b04754bc03aaa982479b91b9f7508bed54455c161e93a02e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf08de24c3951531b87b85a75157d4b26ddcb8952452672f9da9f63c06982e9f\",\"dweb:/ipfs/QmaUzytpjpYHNTXw3Hy4cdKmNoU5PWpyMZBhorK69pk8sA\"]},\"_lib/ERC20.sol\":{\"keccak256\":\"0x2ce16e09e444519aec6a0e1f355325dfe2af844ea539ae8f8a7d53a2daf6d844\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb89e49b22ff4dd4d67fe590e95ce997d8a5a83db5ca8a246086dd4a56f01a72\",\"dweb:/ipfs/QmfZbMN1MNau96zL4xS1EtA9gVyNRWPwZCWwGVVeNG8uNF\"]},\"_lib/IERC20.sol\":{\"keccak256\":\"0x943e16fe1fdaa84c7329da3fa5aab8ce507ff7b6776a3925e97ffc0beef9692a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7727696ef766547aaa34152d06a443c5c8924fa363f47e51335d0e3d619c194\",\"dweb:/ipfs/QmRYgfYhpyjHaQjSJMG5fDdDGbQA9eXCGhuSRnwGfoSyCD\"]},\"_lib/Ownable.sol\":{\"keccak256\":\"0x9bb16a0785f0f888e4b470311e02af5bb72f0663d7be20eb7a60902e29e35406\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://014bf309648c0793be70899bc260d7094e17de223ed8eaebae9327643623cf93\",\"dweb:/ipfs/QmR4LhypLf6CVNvqxgDDAJ4E9E5h3wqV6RT8g7jERZdVLT\"]},\"_lib/SafeMath.sol\":{\"keccak256\":\"0xe1bb41b0568cdd4364bb5fcba4fd6065df59c3ea8147e040fb9c978bc3a89af5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e4192a8253ea1f04e97ac1ac3df25dc77719696b0bee70b3af1a4a56edcb5b\",\"dweb:/ipfs/QmaQ4TkRxpXxjtKKewy2oAgJXFbdqSwacBUMrNaSgZ72jt\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"_lib/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"_lib/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"_lib/Context.sol\":{\"keccak256\":\"0x77ec8b534124690b04754bc03aaa982479b91b9f7508bed54455c161e93a02e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf08de24c3951531b87b85a75157d4b26ddcb8952452672f9da9f63c06982e9f\",\"dweb:/ipfs/QmaUzytpjpYHNTXw3Hy4cdKmNoU5PWpyMZBhorK69pk8sA\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"_lib/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								},
								{
									"internalType": "uint8",
									"name": "_decimals",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "_supply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `_spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {_name} and {_symbol}, {_decimals} To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `_to` cannot be the zero address. - the caller must have a balance of at least `_amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `_from` and `_to` cannot be the zero address. - `_from` must have a balance of at least `_amount`. - the caller must have allowance for `_from`'s tokens of at least `_amount`."
							}
						},
						"stateVariables": {
							"decimals": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name": {
								"details": "Returns the name of the token."
							},
							"symbol": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"_lib/ERC20.sol\":139:7117  contract ERC20 is IERC20, Context {\r... */\n  mstore(0x40, 0x80)\n    /* \"_lib/ERC20.sol\":1552:1909  constructor(\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x80\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  dup4\n  dup3\n  add\n  swap2\n  pop\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  dup3\n  mload\n  dup7\n  0x01\n  dup3\n  mul\n  dup4\n  add\n  gt\n  0x0100000000\n  dup3\n  gt\n  or\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  dup1\n  dup4\n  mstore\n  0x20\n  dup4\n  add\n  swap3\n  pop\n  pop\n  pop\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_6:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_8\n  jumpi\n  dup1\n  dup3\n  add\n  mload\n  dup2\n  dup5\n  add\n  mstore\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  jump(tag_6)\ntag_8:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_10\n  jumpi\n  0x00\n  dup1\n  revert\ntag_10:\n  dup4\n  dup3\n  add\n  swap2\n  pop\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  0x00\n  dup1\n  revert\ntag_11:\n  dup3\n  mload\n  dup7\n  0x01\n  dup3\n  mul\n  dup4\n  add\n  gt\n  0x0100000000\n  dup3\n  gt\n  or\n  iszero\n  tag_12\n  jumpi\n  0x00\n  dup1\n  revert\ntag_12:\n  dup1\n  dup4\n  mstore\n  0x20\n  dup4\n  add\n  swap3\n  pop\n  pop\n  pop\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_13:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_15\n  jumpi\n  dup1\n  dup3\n  add\n  mload\n  dup2\n  dup5\n  add\n  mstore\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  jump(tag_13)\ntag_15:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"_lib/ERC20.sol\":1710:1715  _name */\n  dup4\n    /* \"_lib/ERC20.sol\":1703:1707  name */\n  0x03\n    /* \"_lib/ERC20.sol\":1703:1715  name = _name */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_19\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n    /* \"_lib/ERC20.sol\":1735:1742  _symbol */\n  dup3\n    /* \"_lib/ERC20.sol\":1726:1732  symbol */\n  0x04\n    /* \"_lib/ERC20.sol\":1726:1742  symbol = _symbol */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_21\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_21:\n  pop\n    /* \"_lib/ERC20.sol\":1764:1773  _decimals */\n  dup2\n    /* \"_lib/ERC20.sol\":1753:1761  decimals */\n  0x05\n  0x00\n    /* \"_lib/ERC20.sol\":1753:1773  decimals = _decimals */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"_lib/ERC20.sol\":1816:1825  _decimals */\n  dup2\n    /* \"_lib/ERC20.sol\":1808:1826  uint256(_decimals) */\n  0xff\n  and\n    /* \"_lib/ERC20.sol\":1804:1806  10 */\n  0x0a\n    /* \"_lib/ERC20.sol\":1804:1826  10**uint256(_decimals) */\n  exp\n    /* \"_lib/ERC20.sol\":1794:1801  _supply */\n  dup2\n    /* \"_lib/ERC20.sol\":1794:1826  _supply * 10**uint256(_decimals) */\n  mul\n    /* \"_lib/ERC20.sol\":1784:1826  _supply = _supply * 10**uint256(_decimals) */\n  swap1\n  pop\n    /* \"_lib/ERC20.sol\":1852:1859  _supply */\n  dup1\n    /* \"_lib/ERC20.sol\":1837:1849  _totalSupply */\n  0x02\n    /* \"_lib/ERC20.sol\":1837:1859  _totalSupply = _supply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"_lib/ERC20.sol\":1894:1901  _supply */\n  dup1\n    /* \"_lib/ERC20.sol\":1870:1879  _balances */\n  0x00\n    /* \"_lib/ERC20.sol\":1870:1891  _balances[msg.sender] */\n  dup1\n    /* \"_lib/ERC20.sol\":1880:1890  msg.sender */\n  caller\n    /* \"_lib/ERC20.sol\":1870:1891  _balances[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"_lib/ERC20.sol\":1870:1901  _balances[msg.sender] = _supply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"_lib/ERC20.sol\":1552:1909  constructor(\r... */\n  pop\n  pop\n  pop\n  pop\n    /* \"_lib/ERC20.sol\":139:7117  contract ERC20 is IERC20, Context {\r... */\n  jump(tag_22)\ntag_20:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_24\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_23)\ntag_24:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_23\n  jumpi\n  swap2\n  dup3\n  add\ntag_25:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_26\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_25)\ntag_26:\ntag_23:\n  pop\n  swap1\n  pop\n  tag_27\n  swap2\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n  pop\n  swap1\n  jump\t// out\ntag_28:\ntag_29:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_30\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_29)\ntag_30:\n  pop\n  swap1\n  jump\t// out\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"_lib/ERC20.sol\":139:7117  contract ERC20 is IERC20, Context {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x313ce567\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"_lib/ERC20.sol\":445:463  string public name */\n    tag_3:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_15:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_17\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_15)\n    tag_17:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_18\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_18:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_lib/ERC20.sol\":3099:3298  function approve(address _spender, uint256 _amount)\r... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_21\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_lib/ERC20.sol\":1974:2076  function totalSupply() external view override returns (uint256) {\r... */\n    tag_5:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_lib/ERC20.sol\":3771:4175  function transferFrom(\r... */\n    tag_6:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_26\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_lib/ERC20.sol\":1242:1263  uint8 public decimals */\n    tag_7:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_lib/ERC20.sol\":2139:2299  function balanceOf(address _owner)\r... */\n    tag_8:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_31\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_lib/ERC20.sol\":583:603  string public symbol */\n    tag_9:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_34:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_36\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_34)\n    tag_36:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_37\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_37:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_lib/ERC20.sol\":2507:2698  function transfer(address _to, uint256 _amount)\r... */\n    tag_10:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_lib/ERC20.sol\":2761:2951  function allowance(address _owner, address _spender)\r... */\n    tag_11:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_43\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_lib/ERC20.sol\":445:463  string public name */\n    tag_14:\n      0x03\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_44\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_45\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_44)\n    tag_45:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_46:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_46\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_44:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"_lib/ERC20.sol\":3099:3298  function approve(address _spender, uint256 _amount)\r... */\n    tag_21:\n        /* \"_lib/ERC20.sol\":3205:3209  bool */\n      0x00\n        /* \"_lib/ERC20.sol\":3227:3268  _approve(_msgSender(), _spender, _amount) */\n      tag_48\n        /* \"_lib/ERC20.sol\":3236:3248  _msgSender() */\n      tag_49\n        /* \"_lib/ERC20.sol\":3236:3246  _msgSender */\n      tag_50\n        /* \"_lib/ERC20.sol\":3236:3248  _msgSender() */\n      jump\t// in\n    tag_49:\n        /* \"_lib/ERC20.sol\":3250:3258  _spender */\n      dup5\n        /* \"_lib/ERC20.sol\":3260:3267  _amount */\n      dup5\n        /* \"_lib/ERC20.sol\":3227:3235  _approve */\n      tag_51\n        /* \"_lib/ERC20.sol\":3227:3268  _approve(_msgSender(), _spender, _amount) */\n      jump\t// in\n    tag_48:\n        /* \"_lib/ERC20.sol\":3286:3290  true */\n      0x01\n        /* \"_lib/ERC20.sol\":3279:3290  return true */\n      swap1\n      pop\n        /* \"_lib/ERC20.sol\":3099:3298  function approve(address _spender, uint256 _amount)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"_lib/ERC20.sol\":1974:2076  function totalSupply() external view override returns (uint256) {\r... */\n    tag_23:\n        /* \"_lib/ERC20.sol\":2029:2036  uint256 */\n      0x00\n        /* \"_lib/ERC20.sol\":2056:2068  _totalSupply */\n      sload(0x02)\n        /* \"_lib/ERC20.sol\":2049:2068  return _totalSupply */\n      swap1\n      pop\n        /* \"_lib/ERC20.sol\":1974:2076  function totalSupply() external view override returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"_lib/ERC20.sol\":3771:4175  function transferFrom(\r... */\n    tag_26:\n        /* \"_lib/ERC20.sol\":3899:3903  bool */\n      0x00\n        /* \"_lib/ERC20.sol\":3941:3942  0 */\n      dup1\n        /* \"_lib/ERC20.sol\":3924:3943  _from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":3924:3929  _from */\n      dup5\n        /* \"_lib/ERC20.sol\":3924:3943  _from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"_lib/ERC20.sol\":3924:3964  _from != address(0) && _to != address(0) */\n      dup1\n      iszero\n      tag_54\n      jumpi\n      pop\n        /* \"_lib/ERC20.sol\":3962:3963  0 */\n      0x00\n        /* \"_lib/ERC20.sol\":3947:3964  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":3947:3950  _to */\n      dup4\n        /* \"_lib/ERC20.sol\":3947:3964  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"_lib/ERC20.sol\":3924:3964  _from != address(0) && _to != address(0) */\n    tag_54:\n        /* \"_lib/ERC20.sol\":3916:3965  require(_from != address(0) && _to != address(0)) */\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n        /* \"_lib/ERC20.sol\":3978:4104  _approve(\r... */\n      tag_56\n        /* \"_lib/ERC20.sol\":4001:4006  _from */\n      dup5\n        /* \"_lib/ERC20.sol\":4021:4033  _msgSender() */\n      tag_57\n        /* \"_lib/ERC20.sol\":4021:4031  _msgSender */\n      tag_50\n        /* \"_lib/ERC20.sol\":4021:4033  _msgSender() */\n      jump\t// in\n    tag_57:\n        /* \"_lib/ERC20.sol\":4048:4093  _allowances[_from][_msgSender()].sub(_amount) */\n      tag_58\n        /* \"_lib/ERC20.sol\":4085:4092  _amount */\n      dup6\n        /* \"_lib/ERC20.sol\":4048:4059  _allowances */\n      0x01\n        /* \"_lib/ERC20.sol\":4048:4066  _allowances[_from] */\n      0x00\n        /* \"_lib/ERC20.sol\":4060:4065  _from */\n      dup11\n        /* \"_lib/ERC20.sol\":4048:4066  _allowances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"_lib/ERC20.sol\":4048:4080  _allowances[_from][_msgSender()] */\n      0x00\n        /* \"_lib/ERC20.sol\":4067:4079  _msgSender() */\n      tag_59\n        /* \"_lib/ERC20.sol\":4067:4077  _msgSender */\n      tag_50\n        /* \"_lib/ERC20.sol\":4067:4079  _msgSender() */\n      jump\t// in\n    tag_59:\n        /* \"_lib/ERC20.sol\":4048:4080  _allowances[_from][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"_lib/ERC20.sol\":4048:4084  _allowances[_from][_msgSender()].sub */\n      tag_60\n      swap1\n        /* \"_lib/ERC20.sol\":4048:4093  _allowances[_from][_msgSender()].sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_58:\n        /* \"_lib/ERC20.sol\":3978:3986  _approve */\n      tag_51\n        /* \"_lib/ERC20.sol\":3978:4104  _approve(\r... */\n      jump\t// in\n    tag_56:\n        /* \"_lib/ERC20.sol\":4115:4145  _transfer(_from, _to, _amount) */\n      tag_61\n        /* \"_lib/ERC20.sol\":4125:4130  _from */\n      dup5\n        /* \"_lib/ERC20.sol\":4132:4135  _to */\n      dup5\n        /* \"_lib/ERC20.sol\":4137:4144  _amount */\n      dup5\n        /* \"_lib/ERC20.sol\":4115:4124  _transfer */\n      tag_62\n        /* \"_lib/ERC20.sol\":4115:4145  _transfer(_from, _to, _amount) */\n      jump\t// in\n    tag_61:\n        /* \"_lib/ERC20.sol\":4163:4167  true */\n      0x01\n        /* \"_lib/ERC20.sol\":4156:4167  return true */\n      swap1\n      pop\n        /* \"_lib/ERC20.sol\":3771:4175  function transferFrom(\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"_lib/ERC20.sol\":1242:1263  uint8 public decimals */\n    tag_28:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"_lib/ERC20.sol\":2139:2299  function balanceOf(address _owner)\r... */\n    tag_31:\n        /* \"_lib/ERC20.sol\":2242:2249  uint256 */\n      0x00\n        /* \"_lib/ERC20.sol\":2274:2283  _balances */\n      dup1\n        /* \"_lib/ERC20.sol\":2274:2291  _balances[_owner] */\n      0x00\n        /* \"_lib/ERC20.sol\":2284:2290  _owner */\n      dup4\n        /* \"_lib/ERC20.sol\":2274:2291  _balances[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"_lib/ERC20.sol\":2267:2291  return _balances[_owner] */\n      swap1\n      pop\n        /* \"_lib/ERC20.sol\":2139:2299  function balanceOf(address _owner)\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"_lib/ERC20.sol\":583:603  string public symbol */\n    tag_33:\n      0x04\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_64\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_65\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_64)\n    tag_65:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_66:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_66\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_64:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"_lib/ERC20.sol\":2507:2698  function transfer(address _to, uint256 _amount)\r... */\n    tag_40:\n        /* \"_lib/ERC20.sol\":2609:2613  bool */\n      0x00\n        /* \"_lib/ERC20.sol\":2631:2668  _transfer(_msgSender(), _to, _amount) */\n      tag_68\n        /* \"_lib/ERC20.sol\":2641:2653  _msgSender() */\n      tag_69\n        /* \"_lib/ERC20.sol\":2641:2651  _msgSender */\n      tag_50\n        /* \"_lib/ERC20.sol\":2641:2653  _msgSender() */\n      jump\t// in\n    tag_69:\n        /* \"_lib/ERC20.sol\":2655:2658  _to */\n      dup5\n        /* \"_lib/ERC20.sol\":2660:2667  _amount */\n      dup5\n        /* \"_lib/ERC20.sol\":2631:2640  _transfer */\n      tag_62\n        /* \"_lib/ERC20.sol\":2631:2668  _transfer(_msgSender(), _to, _amount) */\n      jump\t// in\n    tag_68:\n        /* \"_lib/ERC20.sol\":2686:2690  true */\n      0x01\n        /* \"_lib/ERC20.sol\":2679:2690  return true */\n      swap1\n      pop\n        /* \"_lib/ERC20.sol\":2507:2698  function transfer(address _to, uint256 _amount)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"_lib/ERC20.sol\":2761:2951  function allowance(address _owner, address _spender)\r... */\n    tag_43:\n        /* \"_lib/ERC20.sol\":2882:2889  uint256 */\n      0x00\n        /* \"_lib/ERC20.sol\":2914:2925  _allowances */\n      0x01\n        /* \"_lib/ERC20.sol\":2914:2933  _allowances[_owner] */\n      0x00\n        /* \"_lib/ERC20.sol\":2926:2932  _owner */\n      dup5\n        /* \"_lib/ERC20.sol\":2914:2933  _allowances[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"_lib/ERC20.sol\":2914:2943  _allowances[_owner][_spender] */\n      0x00\n        /* \"_lib/ERC20.sol\":2934:2942  _spender */\n      dup4\n        /* \"_lib/ERC20.sol\":2914:2943  _allowances[_owner][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"_lib/ERC20.sol\":2907:2943  return _allowances[_owner][_spender] */\n      swap1\n      pop\n        /* \"_lib/ERC20.sol\":2761:2951  function allowance(address _owner, address _spender)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"_lib/Context.sol\":605:711  function _msgSender() internal view virtual returns (address payable) {\r... */\n    tag_50:\n        /* \"_lib/Context.sol\":658:673  address payable */\n      0x00\n        /* \"_lib/Context.sol\":693:703  msg.sender */\n      caller\n        /* \"_lib/Context.sol\":686:703  return msg.sender */\n      swap1\n      pop\n        /* \"_lib/Context.sol\":605:711  function _msgSender() internal view virtual returns (address payable) {\r... */\n      swap1\n      jump\t// out\n        /* \"_lib/ERC20.sol\":5546:5885  function _approve(\r... */\n    tag_51:\n        /* \"_lib/ERC20.sol\":5695:5696  0 */\n      0x00\n        /* \"_lib/ERC20.sol\":5677:5697  _owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":5677:5683  _owner */\n      dup4\n        /* \"_lib/ERC20.sol\":5677:5697  _owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"_lib/ERC20.sol\":5669:5716  require(_owner != address(0), \"approve from 0\") */\n      tag_73\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x617070726f76652066726f6d2030000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_73:\n        /* \"_lib/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"_lib/ERC20.sol\":5735:5757  _spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":5735:5743  _spender */\n      dup3\n        /* \"_lib/ERC20.sol\":5735:5757  _spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"_lib/ERC20.sol\":5727:5774  require(_spender != address(0), \"approve to 0\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x617070726f766520746f20300000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_74:\n        /* \"_lib/ERC20.sol\":5819:5826  _amount */\n      dup1\n        /* \"_lib/ERC20.sol\":5787:5798  _allowances */\n      0x01\n        /* \"_lib/ERC20.sol\":5787:5806  _allowances[_owner] */\n      0x00\n        /* \"_lib/ERC20.sol\":5799:5805  _owner */\n      dup6\n        /* \"_lib/ERC20.sol\":5787:5806  _allowances[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"_lib/ERC20.sol\":5787:5816  _allowances[_owner][_spender] */\n      0x00\n        /* \"_lib/ERC20.sol\":5807:5815  _spender */\n      dup5\n        /* \"_lib/ERC20.sol\":5787:5816  _allowances[_owner][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"_lib/ERC20.sol\":5787:5826  _allowances[_owner][_spender] = _amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"_lib/ERC20.sol\":5859:5867  _spender */\n      dup2\n        /* \"_lib/ERC20.sol\":5842:5877  Approval(_owner, _spender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":5851:5857  _owner */\n      dup4\n        /* \"_lib/ERC20.sol\":5842:5877  Approval(_owner, _spender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"_lib/ERC20.sol\":5869:5876  _amount */\n      dup4\n        /* \"_lib/ERC20.sol\":5842:5877  Approval(_owner, _spender, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"_lib/ERC20.sol\":5546:5885  function _approve(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"_lib/SafeMath.sol\":773:957  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_60:\n        /* \"_lib/SafeMath.sol\":831:838  uint256 */\n      0x00\n        /* \"_lib/SafeMath.sol\":864:865  a */\n      dup3\n        /* \"_lib/SafeMath.sol\":859:860  b */\n      dup3\n        /* \"_lib/SafeMath.sol\":859:865  b <= a */\n      gt\n      iszero\n        /* \"_lib/SafeMath.sol\":851:900  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_76\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_76:\n        /* \"_lib/SafeMath.sol\":911:920  uint256 c */\n      0x00\n        /* \"_lib/SafeMath.sol\":927:928  b */\n      dup3\n        /* \"_lib/SafeMath.sol\":923:924  a */\n      dup5\n        /* \"_lib/SafeMath.sol\":923:928  a - b */\n      sub\n        /* \"_lib/SafeMath.sol\":911:928  uint256 c = a - b */\n      swap1\n      pop\n        /* \"_lib/SafeMath.sol\":948:949  c */\n      dup1\n        /* \"_lib/SafeMath.sol\":941:949  return c */\n      swap2\n      pop\n      pop\n        /* \"_lib/SafeMath.sol\":773:957  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"_lib/ERC20.sol\":4652:5104  function _transfer(\r... */\n    tag_62:\n        /* \"_lib/ERC20.sol\":4795:4796  0 */\n      0x00\n        /* \"_lib/ERC20.sol\":4778:4797  _from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":4778:4783  _from */\n      dup4\n        /* \"_lib/ERC20.sol\":4778:4797  _from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"_lib/ERC20.sol\":4770:4817  require(_from != address(0), \"transfer from 0\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x7472616e736665722066726f6d20300000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_78:\n        /* \"_lib/ERC20.sol\":4851:4852  0 */\n      0x00\n        /* \"_lib/ERC20.sol\":4836:4853  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":4836:4839  _to */\n      dup3\n        /* \"_lib/ERC20.sol\":4836:4853  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"_lib/ERC20.sol\":4828:4871  require(_to != address(0), \"transfer to 0\") */\n      tag_79\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x7472616e7366657220746f203000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_79:\n        /* \"_lib/ERC20.sol\":4905:4911  0xdead */\n      0xdead\n        /* \"_lib/ERC20.sol\":4890:4912  _to != address(0xdead) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":4890:4893  _to */\n      dup3\n        /* \"_lib/ERC20.sol\":4890:4912  _to != address(0xdead) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"_lib/ERC20.sol\":4882:4935  require(_to != address(0xdead), \"transfer to 0xdead\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x7472616e7366657220746f203078646561640000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"_lib/ERC20.sol\":4967:4996  _balances[_from].sub(_amount) */\n      tag_81\n        /* \"_lib/ERC20.sol\":4988:4995  _amount */\n      dup2\n        /* \"_lib/ERC20.sol\":4967:4976  _balances */\n      0x00\n        /* \"_lib/ERC20.sol\":4967:4983  _balances[_from] */\n      dup1\n        /* \"_lib/ERC20.sol\":4977:4982  _from */\n      dup7\n        /* \"_lib/ERC20.sol\":4967:4983  _balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"_lib/ERC20.sol\":4967:4987  _balances[_from].sub */\n      tag_60\n      swap1\n        /* \"_lib/ERC20.sol\":4967:4996  _balances[_from].sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_81:\n        /* \"_lib/ERC20.sol\":4948:4957  _balances */\n      0x00\n        /* \"_lib/ERC20.sol\":4948:4964  _balances[_from] */\n      dup1\n        /* \"_lib/ERC20.sol\":4958:4963  _from */\n      dup6\n        /* \"_lib/ERC20.sol\":4948:4964  _balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"_lib/ERC20.sol\":4948:4996  _balances[_from] = _balances[_from].sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"_lib/ERC20.sol\":5024:5051  _balances[_to].add(_amount) */\n      tag_82\n        /* \"_lib/ERC20.sol\":5043:5050  _amount */\n      dup2\n        /* \"_lib/ERC20.sol\":5024:5033  _balances */\n      0x00\n        /* \"_lib/ERC20.sol\":5024:5038  _balances[_to] */\n      dup1\n        /* \"_lib/ERC20.sol\":5034:5037  _to */\n      dup6\n        /* \"_lib/ERC20.sol\":5024:5038  _balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"_lib/ERC20.sol\":5024:5042  _balances[_to].add */\n      tag_83\n      swap1\n        /* \"_lib/ERC20.sol\":5024:5051  _balances[_to].add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_82:\n        /* \"_lib/ERC20.sol\":5007:5016  _balances */\n      0x00\n        /* \"_lib/ERC20.sol\":5007:5021  _balances[_to] */\n      dup1\n        /* \"_lib/ERC20.sol\":5017:5020  _to */\n      dup5\n        /* \"_lib/ERC20.sol\":5007:5021  _balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"_lib/ERC20.sol\":5007:5051  _balances[_to] = _balances[_to].add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"_lib/ERC20.sol\":5083:5086  _to */\n      dup2\n        /* \"_lib/ERC20.sol\":5067:5096  Transfer(_from, _to, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":5076:5081  _from */\n      dup4\n        /* \"_lib/ERC20.sol\":5067:5096  Transfer(_from, _to, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"_lib/ERC20.sol\":5088:5095  _amount */\n      dup4\n        /* \"_lib/ERC20.sol\":5067:5096  Transfer(_from, _to, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"_lib/ERC20.sol\":4652:5104  function _transfer(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"_lib/SafeMath.sol\":317:498  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_83:\n        /* \"_lib/SafeMath.sol\":375:382  uint256 */\n      0x00\n        /* \"_lib/SafeMath.sol\":395:404  uint256 c */\n      dup1\n        /* \"_lib/SafeMath.sol\":411:412  b */\n      dup3\n        /* \"_lib/SafeMath.sol\":407:408  a */\n      dup5\n        /* \"_lib/SafeMath.sol\":407:412  a + b */\n      add\n        /* \"_lib/SafeMath.sol\":395:412  uint256 c = a + b */\n      swap1\n      pop\n        /* \"_lib/SafeMath.sol\":436:437  a */\n      dup4\n        /* \"_lib/SafeMath.sol\":431:432  c */\n      dup2\n        /* \"_lib/SafeMath.sol\":431:437  c >= a */\n      lt\n      iszero\n        /* \"_lib/SafeMath.sol\":423:469  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_85\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_85:\n        /* \"_lib/SafeMath.sol\":489:490  c */\n      dup1\n        /* \"_lib/SafeMath.sol\":482:490  return c */\n      swap2\n      pop\n      pop\n        /* \"_lib/SafeMath.sol\":317:498  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122003d781075401c8c4954bd0a10f8369a9b582ebb7db4d2913f03ed832ff9613ef64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620011b6380380620011b6833981810160405260808110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660018202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019080838360005b83811015620000c3578082015181840152602081019050620000a6565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011557600080fd5b838201915060208201858111156200012c57600080fd5b82518660018202830111640100000000821117156200014a57600080fd5b8083526020830192505050908051906020019080838360005b838110156200018057808201518184015260208101905062000163565b50505050905090810190601f168015620001ae5780820380516001836020036101000a031916815260200191505b5060405260200180519060200190929190805190602001909291905050508360039080519060200190620001e492919062000278565b508260049080519060200190620001fd92919062000278565b5081600560006101000a81548160ff021916908360ff1602179055508160ff16600a0a8102905080600281905550806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050506200031e565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002bb57805160ff1916838001178555620002ec565b82800160010185558215620002ec579182015b82811115620002eb578251825591602001919060010190620002ce565b5b509050620002fb9190620002ff565b5090565b5b808211156200031a57600081600090555060010162000300565b5090565b610e88806200032e6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461022157806370a082311461024257806395d89b411461029a578063a9059cbb1461031d578063dd62ed3e1461038157610093565b806306fdde0314610098578063095ea7b31461011b57806318160ddd1461017f57806323b872dd1461019d575b600080fd5b6100a06103f9565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100e05780820151818401526020810190506100c5565b50505050905090810190601f16801561010d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101676004803603604081101561013157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610497565b60405180821515815260200191505060405180910390f35b6101876104b5565b6040518082815260200191505060405180910390f35b610209600480360360608110156101b357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506104bf565b60405180821515815260200191505060405180910390f35b6102296105f0565b604051808260ff16815260200191505060405180910390f35b6102846004803603602081101561025857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610603565b6040518082815260200191505060405180910390f35b6102a261064b565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102e25780820151818401526020810190506102c7565b50505050905090810190601f16801561030f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103696004803603604081101561033357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106e9565b60405180821515815260200191505060405180910390f35b6103e36004803603604081101561039757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610707565b6040518082815260200191505060405180910390f35b60038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561048f5780601f106104645761010080835404028352916020019161048f565b820191906000526020600020905b81548152906001019060200180831161047257829003601f168201915b505050505081565b60006104ab6104a461078e565b8484610796565b6001905092915050565b6000600254905090565b60008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415801561052a5750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b61053357600080fd5b6105da8461053f61078e565b6105d585600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061058c61078e565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546109c790919063ffffffff16565b610796565b6105e5848484610a50565b600190509392505050565b600560009054906101000a900460ff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106e15780601f106106b6576101008083540402835291602001916106e1565b820191906000526020600020905b8154815290600101906020018083116106c457829003601f168201915b505050505081565b60006106fd6106f661078e565b8484610a50565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610839576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f617070726f76652066726f6d203000000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f617070726f766520746f2030000000000000000000000000000000000000000081525060200191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600082821115610a3f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610af3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f7472616e736665722066726f6d2030000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b96576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f7472616e7366657220746f20300000000000000000000000000000000000000081525060200191505060405180910390fd5b61dead73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c3a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f7472616e7366657220746f20307864656164000000000000000000000000000081525060200191505060405180910390fd5b610c8b816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546109c790919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d1e816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610dca90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600080828401905083811015610e48576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fea264697066735822122003d781075401c8c4954bd0a10f8369a9b582ebb7db4d2913f03ed832ff9613ef64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x11B6 CODESIZE SUB DUP1 PUSH3 0x11B6 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x80 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xC3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xA6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xF1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x180 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x163 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x1AE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP4 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1E4 SWAP3 SWAP2 SWAP1 PUSH3 0x278 JUMP JUMPDEST POP DUP3 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1FD SWAP3 SWAP2 SWAP1 PUSH3 0x278 JUMP JUMPDEST POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0xFF AND PUSH1 0xA EXP DUP2 MUL SWAP1 POP DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP POP PUSH3 0x31E JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x2BB JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2EC JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2EC JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2EB JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2CE JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x2FB SWAP2 SWAP1 PUSH3 0x2FF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x31A JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x300 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0xE88 DUP1 PUSH3 0x32E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x381 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x10D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x167 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x497 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x229 PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x284 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x603 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH2 0x64B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2C7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x30F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x369 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x707 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x48F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x464 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x48F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x472 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AB PUSH2 0x4A4 PUSH2 0x78E JUMP JUMPDEST DUP5 DUP5 PUSH2 0x796 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x52A JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x533 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5DA DUP5 PUSH2 0x53F PUSH2 0x78E JUMP JUMPDEST PUSH2 0x5D5 DUP6 PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x58C PUSH2 0x78E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x9C7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x796 JUMP JUMPDEST PUSH2 0x5E5 DUP5 DUP5 DUP5 PUSH2 0xA50 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x6E1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6B6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6E1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6C4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FD PUSH2 0x6F6 PUSH2 0x78E JUMP JUMPDEST DUP5 DUP5 PUSH2 0xA50 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x839 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x617070726F76652066726F6D2030000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x617070726F766520746F20300000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xA3F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAF3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E736665722066726F6D20300000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB96 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E7366657220746F203000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDEAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC3A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E7366657220746F203078646561640000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC8B DUP2 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x9C7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xD1E DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xDCA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xE48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB 0xD7 DUP2 SMOD SLOAD ADD 0xC8 0xC4 SWAP6 0x4B 0xD0 LOG1 0xF DUP4 PUSH10 0xA9B582EBB7DB4D2913F0 RETURNDATACOPY 0xD8 ORIGIN SELFDESTRUCT SWAP7 SGT 0xEF PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "139:6978:2:-:0;;;1552:357;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1710:5;1703:4;:12;;;;;;;;;;;;:::i;:::-;;1735:7;1726:6;:16;;;;;;;;;;;;:::i;:::-;;1764:9;1753:8;;:20;;;;;;;;;;;;;;;;;;1816:9;1808:18;;1804:2;:22;1794:7;:32;1784:42;;1852:7;1837:12;:22;;;;1894:7;1870:9;:21;1880:10;1870:21;;;;;;;;;;;;;;;:31;;;;1552:357;;;;139:6978;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461022157806370a082311461024257806395d89b411461029a578063a9059cbb1461031d578063dd62ed3e1461038157610093565b806306fdde0314610098578063095ea7b31461011b57806318160ddd1461017f57806323b872dd1461019d575b600080fd5b6100a06103f9565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100e05780820151818401526020810190506100c5565b50505050905090810190601f16801561010d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101676004803603604081101561013157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610497565b60405180821515815260200191505060405180910390f35b6101876104b5565b6040518082815260200191505060405180910390f35b610209600480360360608110156101b357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506104bf565b60405180821515815260200191505060405180910390f35b6102296105f0565b604051808260ff16815260200191505060405180910390f35b6102846004803603602081101561025857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610603565b6040518082815260200191505060405180910390f35b6102a261064b565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102e25780820151818401526020810190506102c7565b50505050905090810190601f16801561030f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103696004803603604081101561033357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106e9565b60405180821515815260200191505060405180910390f35b6103e36004803603604081101561039757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610707565b6040518082815260200191505060405180910390f35b60038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561048f5780601f106104645761010080835404028352916020019161048f565b820191906000526020600020905b81548152906001019060200180831161047257829003601f168201915b505050505081565b60006104ab6104a461078e565b8484610796565b6001905092915050565b6000600254905090565b60008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415801561052a5750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b61053357600080fd5b6105da8461053f61078e565b6105d585600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061058c61078e565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546109c790919063ffffffff16565b610796565b6105e5848484610a50565b600190509392505050565b600560009054906101000a900460ff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106e15780601f106106b6576101008083540402835291602001916106e1565b820191906000526020600020905b8154815290600101906020018083116106c457829003601f168201915b505050505081565b60006106fd6106f661078e565b8484610a50565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610839576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f617070726f76652066726f6d203000000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f617070726f766520746f2030000000000000000000000000000000000000000081525060200191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600082821115610a3f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610af3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f7472616e736665722066726f6d2030000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b96576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f7472616e7366657220746f20300000000000000000000000000000000000000081525060200191505060405180910390fd5b61dead73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c3a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f7472616e7366657220746f20307864656164000000000000000000000000000081525060200191505060405180910390fd5b610c8b816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546109c790919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d1e816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610dca90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600080828401905083811015610e48576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fea264697066735822122003d781075401c8c4954bd0a10f8369a9b582ebb7db4d2913f03ed832ff9613ef64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x381 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x10D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x167 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x497 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x229 PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x284 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x603 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH2 0x64B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2C7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x30F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x369 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x707 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x48F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x464 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x48F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x472 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AB PUSH2 0x4A4 PUSH2 0x78E JUMP JUMPDEST DUP5 DUP5 PUSH2 0x796 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x52A JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x533 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5DA DUP5 PUSH2 0x53F PUSH2 0x78E JUMP JUMPDEST PUSH2 0x5D5 DUP6 PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x58C PUSH2 0x78E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x9C7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x796 JUMP JUMPDEST PUSH2 0x5E5 DUP5 DUP5 DUP5 PUSH2 0xA50 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x6E1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6B6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6E1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6C4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FD PUSH2 0x6F6 PUSH2 0x78E JUMP JUMPDEST DUP5 DUP5 PUSH2 0xA50 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x839 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x617070726F76652066726F6D2030000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x617070726F766520746F20300000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xA3F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAF3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E736665722066726F6D20300000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB96 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E7366657220746F203000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDEAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC3A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E7366657220746F203078646561640000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC8B DUP2 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x9C7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xD1E DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xDCA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xE48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB 0xD7 DUP2 SMOD SLOAD ADD 0xC8 0xC4 SWAP6 0x4B 0xD0 LOG1 0xF DUP4 PUSH10 0xA9B582EBB7DB4D2913F0 RETURNDATACOPY 0xD8 ORIGIN SELFDESTRUCT SWAP7 SGT 0xEF PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "139:6978:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;445:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3099:199;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1974:102;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3771:404;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1242:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2139:160;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;583:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2507:191;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2761:190;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;445:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3099:199::-;3205:4;3227:41;3236:12;:10;:12::i;:::-;3250:8;3260:7;3227:8;:41::i;:::-;3286:4;3279:11;;3099:199;;;;:::o;1974:102::-;2029:7;2056:12;;2049:19;;1974:102;:::o;3771:404::-;3899:4;3941:1;3924:19;;:5;:19;;;;:40;;;;;3962:1;3947:17;;:3;:17;;;;3924:40;3916:49;;;;;;3978:126;4001:5;4021:12;:10;:12::i;:::-;4048:45;4085:7;4048:11;:18;4060:5;4048:18;;;;;;;;;;;;;;;:32;4067:12;:10;:12::i;:::-;4048:32;;;;;;;;;;;;;;;;:36;;:45;;;;:::i;:::-;3978:8;:126::i;:::-;4115:30;4125:5;4132:3;4137:7;4115:9;:30::i;:::-;4163:4;4156:11;;3771:404;;;;;:::o;1242:21::-;;;;;;;;;;;;;:::o;2139:160::-;2242:7;2274:9;:17;2284:6;2274:17;;;;;;;;;;;;;;;;2267:24;;2139:160;;;:::o;583:20::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2507:191::-;2609:4;2631:37;2641:12;:10;:12::i;:::-;2655:3;2660:7;2631:9;:37::i;:::-;2686:4;2679:11;;2507:191;;;;:::o;2761:190::-;2882:7;2914:11;:19;2926:6;2914:19;;;;;;;;;;;;;;;:29;2934:8;2914:29;;;;;;;;;;;;;;;;2907:36;;2761:190;;;;:::o;605:106:1:-;658:15;693:10;686:17;;605:106;:::o;5546:339:2:-;5695:1;5677:20;;:6;:20;;;;5669:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5755:1;5735:22;;:8;:22;;;;5727:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5819:7;5787:11;:19;5799:6;5787:19;;;;;;;;;;;;;;;:29;5807:8;5787:29;;;;;;;;;;;;;;;:39;;;;5859:8;5842:35;;5851:6;5842:35;;;5869:7;5842:35;;;;;;;;;;;;;;;;;;5546:339;;;:::o;773:184:5:-;831:7;864:1;859;:6;;851:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;911:9;927:1;923;:5;911:17;;948:1;941:8;;;773:184;;;;:::o;4652:452:2:-;4795:1;4778:19;;:5;:19;;;;4770:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4851:1;4836:17;;:3;:17;;;;4828:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4905:6;4890:22;;:3;:22;;;;4882:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4967:29;4988:7;4967:9;:16;4977:5;4967:16;;;;;;;;;;;;;;;;:20;;:29;;;;:::i;:::-;4948:9;:16;4958:5;4948:16;;;;;;;;;;;;;;;:48;;;;5024:27;5043:7;5024:9;:14;5034:3;5024:14;;;;;;;;;;;;;;;;:18;;:27;;;;:::i;:::-;5007:9;:14;5017:3;5007:14;;;;;;;;;;;;;;;:44;;;;5083:3;5067:29;;5076:5;5067:29;;;5088:7;5067:29;;;;;;;;;;;;;;;;;;4652:452;;;:::o;317:181:5:-;375:7;395:9;411:1;407;:5;395:17;;436:1;431;:6;;423:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;489:1;482:8;;;317:181;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "744000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1409",
								"approve(address,uint256)": "22536",
								"balanceOf(address)": "1218",
								"decimals()": "1047",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1058",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "100000000"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "100000000"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "100000000"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "100000000"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1710,
									"end": 1715,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1707,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1735,
									"end": 1742,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1726,
									"end": 1732,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1764,
									"end": 1773,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1761,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1753,
									"end": 1761,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1816,
									"end": 1825,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1808,
									"end": 1826,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 1808,
									"end": 1826,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1804,
									"end": 1806,
									"name": "PUSH",
									"source": 2,
									"value": "A"
								},
								{
									"begin": 1804,
									"end": 1826,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1794,
									"end": 1801,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1794,
									"end": 1826,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1784,
									"end": 1826,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1784,
									"end": 1826,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1852,
									"end": 1859,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1837,
									"end": 1849,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1837,
									"end": 1859,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1837,
									"end": 1859,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1837,
									"end": 1859,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1837,
									"end": 1859,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1894,
									"end": 1901,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1879,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1880,
									"end": 1890,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1901,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1901,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1901,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1901,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122003d781075401c8c4954bd0a10f8369a9b582ebb7db4d2913f03ed832ff9613ef64736f6c634300060c0033",
									".code": [
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "95D89B41"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "6FDDE03"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3205,
											"end": 3209,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3227,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3236,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3236,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3236,
											"end": 3248,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3236,
											"end": 3248,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3236,
											"end": 3248,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3250,
											"end": 3258,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3260,
											"end": 3267,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3227,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3227,
											"end": 3268,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3227,
											"end": 3268,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3227,
											"end": 3268,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3286,
											"end": 3290,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3279,
											"end": 3290,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3279,
											"end": 3290,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2068,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2056,
											"end": 2068,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2049,
											"end": 2068,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2049,
											"end": 2068,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3899,
											"end": 3903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3942,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3943,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3924,
											"end": 3943,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3929,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3943,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3924,
											"end": 3943,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3943,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3943,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3964,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3964,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3964,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3924,
											"end": 3964,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3962,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3947,
											"end": 3964,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3947,
											"end": 3964,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3947,
											"end": 3950,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3947,
											"end": 3964,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3947,
											"end": 3964,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3947,
											"end": 3964,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3947,
											"end": 3964,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3964,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3924,
											"end": 3964,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3916,
											"end": 3965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3916,
											"end": 3965,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3916,
											"end": 3965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3916,
											"end": 3965,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3916,
											"end": 3965,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3916,
											"end": 3965,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3916,
											"end": 3965,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3978,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4001,
											"end": 4006,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4021,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4021,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4021,
											"end": 4033,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4021,
											"end": 4033,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4021,
											"end": 4033,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4085,
											"end": 4092,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4059,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4060,
											"end": 4065,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4067,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4067,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4067,
											"end": 4079,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4067,
											"end": 4079,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4067,
											"end": 4079,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4048,
											"end": 4084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3978,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3978,
											"end": 4104,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3978,
											"end": 4104,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3978,
											"end": 4104,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4115,
											"end": 4145,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4125,
											"end": 4130,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4132,
											"end": 4135,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4137,
											"end": 4144,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4115,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 4115,
											"end": 4145,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4115,
											"end": 4145,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4115,
											"end": 4145,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4167,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4156,
											"end": 4167,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4156,
											"end": 4167,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2290,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2267,
											"end": 2291,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2267,
											"end": 2291,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2609,
											"end": 2613,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2631,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2641,
											"end": 2653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2641,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2641,
											"end": 2653,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2641,
											"end": 2653,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2641,
											"end": 2653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2658,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2660,
											"end": 2667,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2631,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2631,
											"end": 2668,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2631,
											"end": 2668,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2631,
											"end": 2668,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2686,
											"end": 2690,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2679,
											"end": 2690,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2679,
											"end": 2690,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2882,
											"end": 2889,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2914,
											"end": 2925,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2932,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2934,
											"end": 2942,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2907,
											"end": 2943,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2907,
											"end": 2943,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 605,
											"end": 711,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 605,
											"end": 711,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 658,
											"end": 673,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 693,
											"end": 703,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 686,
											"end": 703,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 686,
											"end": 703,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 605,
											"end": 711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 605,
											"end": 711,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5546,
											"end": 5885,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 5546,
											"end": 5885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5696,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5677,
											"end": 5697,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5677,
											"end": 5697,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5683,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5697,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5677,
											"end": 5697,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5697,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5697,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH",
											"source": 2,
											"value": "E"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH",
											"source": 2,
											"value": "617070726F76652066726F6D2030000000000000000000000000000000000000"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5735,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5735,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5743,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5735,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5757,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5757,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH",
											"source": 2,
											"value": "617070726F766520746F20300000000000000000000000000000000000000000"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5819,
											"end": 5826,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5798,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5805,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5815,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5826,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5826,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5826,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5826,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5859,
											"end": 5867,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5851,
											"end": 5857,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 5869,
											"end": 5876,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 5546,
											"end": 5885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5546,
											"end": 5885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5546,
											"end": 5885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5546,
											"end": 5885,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 773,
											"end": 957,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 773,
											"end": 957,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 831,
											"end": 838,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 864,
											"end": 865,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 859,
											"end": 860,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 859,
											"end": 865,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 859,
											"end": 865,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "1E"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 911,
											"end": 920,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 927,
											"end": 928,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 923,
											"end": 924,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 923,
											"end": 928,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 911,
											"end": 928,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 911,
											"end": 928,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 948,
											"end": 949,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 941,
											"end": 949,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 941,
											"end": 949,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 941,
											"end": 949,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 773,
											"end": 957,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 773,
											"end": 957,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 773,
											"end": 957,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 773,
											"end": 957,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 773,
											"end": 957,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4652,
											"end": 5104,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 4652,
											"end": 5104,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4795,
											"end": 4796,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4778,
											"end": 4797,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4778,
											"end": 4797,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4778,
											"end": 4783,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4778,
											"end": 4797,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4778,
											"end": 4797,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4778,
											"end": 4797,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4778,
											"end": 4797,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH",
											"source": 2,
											"value": "F"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH",
											"source": 2,
											"value": "7472616E736665722066726F6D20300000000000000000000000000000000000"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4851,
											"end": 4852,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4836,
											"end": 4853,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4836,
											"end": 4853,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4836,
											"end": 4839,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4836,
											"end": 4853,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4836,
											"end": 4853,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4836,
											"end": 4853,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4836,
											"end": 4853,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH",
											"source": 2,
											"value": "D"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH",
											"source": 2,
											"value": "7472616E7366657220746F203000000000000000000000000000000000000000"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4905,
											"end": 4911,
											"name": "PUSH",
											"source": 2,
											"value": "DEAD"
										},
										{
											"begin": 4890,
											"end": 4912,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4890,
											"end": 4912,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4890,
											"end": 4893,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4890,
											"end": 4912,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4890,
											"end": 4912,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4890,
											"end": 4912,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4890,
											"end": 4912,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH",
											"source": 2,
											"value": "7472616E7366657220746F203078646561640000000000000000000000000000"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4988,
											"end": 4995,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4976,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4977,
											"end": 4982,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4967,
											"end": 4987,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4996,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4967,
											"end": 4996,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4996,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4967,
											"end": 4996,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4967,
											"end": 4996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4957,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4958,
											"end": 4963,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4996,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4996,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 5043,
											"end": 5050,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5034,
											"end": 5037,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5042,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 5024,
											"end": 5042,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5051,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5051,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5051,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5024,
											"end": 5051,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5051,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5024,
											"end": 5051,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 5024,
											"end": 5051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5016,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5017,
											"end": 5020,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5051,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5051,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5051,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5051,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5083,
											"end": 5086,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5081,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 5088,
											"end": 5095,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 4652,
											"end": 5104,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4652,
											"end": 5104,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4652,
											"end": 5104,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4652,
											"end": 5104,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 317,
											"end": 498,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 317,
											"end": 498,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 375,
											"end": 382,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 395,
											"end": 404,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 407,
											"end": 408,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 407,
											"end": 412,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 395,
											"end": 412,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 395,
											"end": 412,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 436,
											"end": 437,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 431,
											"end": 432,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 431,
											"end": 437,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 431,
											"end": 437,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "1B"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 489,
											"end": 490,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 482,
											"end": 490,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 482,
											"end": 490,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 482,
											"end": 490,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 317,
											"end": 498,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 317,
											"end": 498,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 317,
											"end": 498,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 317,
											"end": 498,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 317,
											"end": 498,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_supply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `_spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {_name} and {_symbol}, {_decimals} To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `_to` cannot be the zero address. - the caller must have a balance of at least `_amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `_from` and `_to` cannot be the zero address. - `_from` must have a balance of at least `_amount`. - the caller must have allowance for `_from`'s tokens of at least `_amount`.\"}},\"stateVariables\":{\"decimals\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name\":{\"details\":\"Returns the name of the token.\"},\"symbol\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"_lib/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"_lib/Context.sol\":{\"keccak256\":\"0x77ec8b534124690b04754bc03aaa982479b91b9f7508bed54455c161e93a02e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf08de24c3951531b87b85a75157d4b26ddcb8952452672f9da9f63c06982e9f\",\"dweb:/ipfs/QmaUzytpjpYHNTXw3Hy4cdKmNoU5PWpyMZBhorK69pk8sA\"]},\"_lib/ERC20.sol\":{\"keccak256\":\"0x2ce16e09e444519aec6a0e1f355325dfe2af844ea539ae8f8a7d53a2daf6d844\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb89e49b22ff4dd4d67fe590e95ce997d8a5a83db5ca8a246086dd4a56f01a72\",\"dweb:/ipfs/QmfZbMN1MNau96zL4xS1EtA9gVyNRWPwZCWwGVVeNG8uNF\"]},\"_lib/IERC20.sol\":{\"keccak256\":\"0x943e16fe1fdaa84c7329da3fa5aab8ce507ff7b6776a3925e97ffc0beef9692a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7727696ef766547aaa34152d06a443c5c8924fa363f47e51335d0e3d619c194\",\"dweb:/ipfs/QmRYgfYhpyjHaQjSJMG5fDdDGbQA9eXCGhuSRnwGfoSyCD\"]},\"_lib/SafeMath.sol\":{\"keccak256\":\"0xe1bb41b0568cdd4364bb5fcba4fd6065df59c3ea8147e040fb9c978bc3a89af5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e4192a8253ea1f04e97ac1ac3df25dc77719696b0bee70b3af1a4a56edcb5b\",\"dweb:/ipfs/QmaQ4TkRxpXxjtKKewy2oAgJXFbdqSwacBUMrNaSgZ72jt\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"_lib/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP. From https://github.com/OpenZeppelin/openzeppelin-contracts",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP. From https://github.com/OpenZeppelin/openzeppelin-contracts\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"_lib/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"_lib/IERC20.sol\":{\"keccak256\":\"0x943e16fe1fdaa84c7329da3fa5aab8ce507ff7b6776a3925e97ffc0beef9692a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7727696ef766547aaa34152d06a443c5c8924fa363f47e51335d0e3d619c194\",\"dweb:/ipfs/QmRYgfYhpyjHaQjSJMG5fDdDGbQA9eXCGhuSRnwGfoSyCD\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"_lib/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"_lib/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"_lib/Context.sol\":{\"keccak256\":\"0x77ec8b534124690b04754bc03aaa982479b91b9f7508bed54455c161e93a02e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf08de24c3951531b87b85a75157d4b26ddcb8952452672f9da9f63c06982e9f\",\"dweb:/ipfs/QmaUzytpjpYHNTXw3Hy4cdKmNoU5PWpyMZBhorK69pk8sA\"]},\"_lib/Ownable.sol\":{\"keccak256\":\"0x9bb16a0785f0f888e4b470311e02af5bb72f0663d7be20eb7a60902e29e35406\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://014bf309648c0793be70899bc260d7094e17de223ed8eaebae9327643623cf93\",\"dweb:/ipfs/QmR4LhypLf6CVNvqxgDDAJ4E9E5h3wqV6RT8g7jERZdVLT\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"_lib/SafeMath.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"_lib/SafeMath.sol\":4604:5299  library Math {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"_lib/SafeMath.sol\":4604:5299  library Math {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206e04663ba7d4d7996cc8dbe663d4baffa3d9e7d95afee582dd0a49334044b9fb64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206e04663ba7d4d7996cc8dbe663d4baffa3d9e7d95afee582dd0a49334044b9fb64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x4663BA7D4D7996CC8DBE663D4BAFF LOG3 0xD9 0xE7 0xD9 GAS INVALID 0xE5 DUP3 0xDD EXP 0x49 CALLER BLOCKHASH DIFFICULTY 0xB9 0xFB PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "4604:695:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206e04663ba7d4d7996cc8dbe663d4baffa3d9e7d95afee582dd0a49334044b9fb64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x4663BA7D4D7996CC8DBE663D4BAFF LOG3 0xD9 0xE7 0xD9 GAS INVALID 0xE5 DUP3 0xDD EXP 0x49 CALLER BLOCKHASH DIFFICULTY 0xB9 0xFB PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "4604:695:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4604,
									"end": 5299,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "INVALID",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206e04663ba7d4d7996cc8dbe663d4baffa3d9e7d95afee582dd0a49334044b9fb64736f6c634300060c0033",
									".code": [
										{
											"begin": 4604,
											"end": 5299,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 4604,
											"end": 5299,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 4604,
											"end": 5299,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4604,
											"end": 5299,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4604,
											"end": 5299,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4604,
											"end": 5299,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4604,
											"end": 5299,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4604,
											"end": 5299,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4604,
											"end": 5299,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"_lib/SafeMath.sol\":\"Math\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"_lib/SafeMath.sol\":{\"keccak256\":\"0xe1bb41b0568cdd4364bb5fcba4fd6065df59c3ea8147e040fb9c978bc3a89af5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e4192a8253ea1f04e97ac1ac3df25dc77719696b0bee70b3af1a4a56edcb5b\",\"dweb:/ipfs/QmaQ4TkRxpXxjtKKewy2oAgJXFbdqSwacBUMrNaSgZ72jt\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"_lib/SafeMath.sol\":62:3091  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"_lib/SafeMath.sol\":62:3091  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122068b375269c1d6f3484f11227346ae9d0b15e0fea769d778896867163d1544b3e64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122068b375269c1d6f3484f11227346ae9d0b15e0fea769d778896867163d1544b3e64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0xB375269C1D6F3484F1 SLT 0x27 CALLVALUE PUSH11 0xE9D0B15E0FEA769D778896 DUP7 PUSH18 0x63D1544B3E64736F6C634300060C00330000 ",
							"sourceMap": "62:3029:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122068b375269c1d6f3484f11227346ae9d0b15e0fea769d778896867163d1544b3e64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0xB375269C1D6F3484F1 SLT 0x27 CALLVALUE PUSH11 0xE9D0B15E0FEA769D778896 DUP7 PUSH18 0x63D1544B3E64736F6C634300060C00330000 ",
							"sourceMap": "62:3029:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 62,
									"end": 3091,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "INVALID",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122068b375269c1d6f3484f11227346ae9d0b15e0fea769d778896867163d1544b3e64736f6c634300060c0033",
									".code": [
										{
											"begin": 62,
											"end": 3091,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 62,
											"end": 3091,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 62,
											"end": 3091,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 62,
											"end": 3091,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 62,
											"end": 3091,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 62,
											"end": 3091,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 62,
											"end": 3091,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 62,
											"end": 3091,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 62,
											"end": 3091,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"_lib/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"_lib/SafeMath.sol\":{\"keccak256\":\"0xe1bb41b0568cdd4364bb5fcba4fd6065df59c3ea8147e040fb9c978bc3a89af5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e4192a8253ea1f04e97ac1ac3df25dc77719696b0bee70b3af1a4a56edcb5b\",\"dweb:/ipfs/QmaQ4TkRxpXxjtKKewy2oAgJXFbdqSwacBUMrNaSgZ72jt\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMathExt": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"_lib/SafeMath.sol\":3095:4600  library SafeMathExt {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"_lib/SafeMath.sol\":3095:4600  library SafeMathExt {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a626b76c907f888293c32fb457a49bf6f694e941ef3e36c80569f4fce9e6ce4e64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a626b76c907f888293c32fb457a49bf6f694e941ef3e36c80569f4fce9e6ce4e64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 0x26 0xB7 PUSH13 0x907F888293C32FB457A49BF6F6 SWAP5 0xE9 COINBASE 0xEF RETURNDATACOPY CALLDATASIZE 0xC8 SDIV PUSH10 0xF4FCE9E6CE4E64736F6C PUSH4 0x4300060C STOP CALLER ",
							"sourceMap": "3095:1505:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a626b76c907f888293c32fb457a49bf6f694e941ef3e36c80569f4fce9e6ce4e64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 0x26 0xB7 PUSH13 0x907F888293C32FB457A49BF6F6 SWAP5 0xE9 COINBASE 0xEF RETURNDATACOPY CALLDATASIZE 0xC8 SDIV PUSH10 0xF4FCE9E6CE4E64736F6C PUSH4 0x4300060C STOP CALLER ",
							"sourceMap": "3095:1505:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add128(uint128,uint128)": "infinite",
								"add64(uint64,uint64)": "infinite",
								"safe128(uint256)": "infinite",
								"safe16(uint256)": "infinite",
								"safe32(uint256)": "infinite",
								"safe64(uint256)": "infinite",
								"sub128(uint128,uint128)": "infinite",
								"sub64(uint64,uint64)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3095,
									"end": 4600,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "INVALID",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a626b76c907f888293c32fb457a49bf6f694e941ef3e36c80569f4fce9e6ce4e64736f6c634300060c0033",
									".code": [
										{
											"begin": 3095,
											"end": 4600,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 4600,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 4600,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 4600,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3095,
											"end": 4600,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3095,
											"end": 4600,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 4600,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 4600,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 4600,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"_lib/SafeMath.sol\":\"SafeMathExt\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"_lib/SafeMath.sol\":{\"keccak256\":\"0xe1bb41b0568cdd4364bb5fcba4fd6065df59c3ea8147e040fb9c978bc3a89af5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e4192a8253ea1f04e97ac1ac3df25dc77719696b0bee70b3af1a4a56edcb5b\",\"dweb:/ipfs/QmaQ4TkRxpXxjtKKewy2oAgJXFbdqSwacBUMrNaSgZ72jt\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"BasicCoin/PokerToken.sol": {
				"ast": {
					"absolutePath": "BasicCoin/PokerToken.sol",
					"exportedSymbols": {
						"EnumerableSet": [
							481
						],
						"PokerToken": [
							1007
						]
					},
					"id": 1008,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:0"
						},
						{
							"absolutePath": "_lib/SafeMath.sol",
							"file": "../_lib/SafeMath.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 1008,
							"sourceUnit": 2010,
							"src": "62:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "_lib/ERC20.sol",
							"file": "../_lib/ERC20.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 1008,
							"sourceUnit": 1465,
							"src": "94:27:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "_lib/Ownable.sol",
							"file": "../_lib/Ownable.sol",
							"id": 4,
							"nodeType": "ImportDirective",
							"scope": 1008,
							"sourceUnit": 1619,
							"src": "123:29:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 481,
							"linearizedBaseContracts": [
								481
							],
							"name": "EnumerableSet",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSet.Set",
									"id": 12,
									"members": [
										{
											"constant": false,
											"id": 7,
											"mutability": "mutable",
											"name": "_values",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 12,
											"src": "690:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 5,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "690:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 6,
												"length": null,
												"nodeType": "ArrayTypeName",
												"src": "690:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 11,
											"mutability": "mutable",
											"name": "_indexes",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 12,
											"src": "843:36:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 10,
												"keyType": {
													"id": 8,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "851:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "843:27:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueType": {
													"id": 9,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "862:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Set",
									"nodeType": "StructDefinition",
									"scope": 481,
									"src": "634:253:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "1134:345:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1149:22:0",
													"subExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 23,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "1160:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$12_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															{
																"argumentTypes": null,
																"id": 24,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "1165:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Set_$12_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 22,
															"name": "_contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "1150:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$12_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 25,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1150:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 50,
													"nodeType": "Block",
													"src": "1433:39:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1455:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 21,
															"id": 49,
															"nodeType": "Return",
															"src": "1448:12:0"
														}
													]
												},
												"id": 51,
												"nodeType": "IfStatement",
												"src": "1145:327:0",
												"trueBody": {
													"id": 47,
													"nodeType": "Block",
													"src": "1173:254:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 32,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 17,
																		"src": "1205:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 27,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 15,
																			"src": "1188:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$12_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 30,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 7,
																		"src": "1188:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 31,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1188:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes32_$returns$__$",
																		"typeString": "function (bytes32)"
																	}
																},
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1188:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 34,
															"nodeType": "ExpressionStatement",
															"src": "1188:23:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 43,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 35,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 15,
																			"src": "1349:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$12_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 38,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 11,
																		"src": "1349:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 39,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 37,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 17,
																		"src": "1362:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1349:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 40,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 15,
																			"src": "1371:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$12_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 41,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 7,
																		"src": "1371:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 42,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1371:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1349:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 44,
															"nodeType": "ExpressionStatement",
															"src": "1349:40:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 45,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1411:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 21,
															"id": 46,
															"nodeType": "Return",
															"src": "1404:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 13,
										"nodeType": "StructuredDocumentation",
										"src": "895:164:0",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 53,
												"src": "1079:15:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$12_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 14,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 12,
													"src": "1079:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$12_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 53,
												"src": "1096:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 16,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1096:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1078:32:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 53,
												"src": "1128:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 19,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1128:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1127:6:0"
									},
									"scope": 481,
									"src": "1065:414:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "1727:1485:0",
										"statements": [
											{
												"assignments": [
													64
												],
												"declarations": [
													{
														"constant": false,
														"id": 64,
														"mutability": "mutable",
														"name": "valueIndex",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 132,
														"src": "1839:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 63,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1839:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 69,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 65,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "1860:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$12_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 66,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_indexes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 11,
														"src": "1860:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 68,
													"indexExpression": {
														"argumentTypes": null,
														"id": 67,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 58,
														"src": "1873:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1860:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1839:40:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 70,
														"name": "valueIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 64,
														"src": "1896:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 71,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1910:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1896:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 130,
													"nodeType": "Block",
													"src": "3166:39:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3188:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 62,
															"id": 129,
															"nodeType": "Return",
															"src": "3181:12:0"
														}
													]
												},
												"id": 131,
												"nodeType": "IfStatement",
												"src": "1892:1313:0",
												"trueBody": {
													"id": 127,
													"nodeType": "Block",
													"src": "1913:1247:0",
													"statements": [
														{
															"assignments": [
																74
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 74,
																	"mutability": "mutable",
																	"name": "toDeleteIndex",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 127,
																	"src": "2271:21:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 73,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2271:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 78,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 77,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 75,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "2295:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 76,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2308:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2295:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2271:38:0"
														},
														{
															"assignments": [
																80
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 80,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 127,
																	"src": "2324:17:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 79,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2324:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 86,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 85,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 81,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 56,
																			"src": "2344:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$12_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 82,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 7,
																		"src": "2344:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 83,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2344:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 84,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2365:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2344:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2324:42:0"
														},
														{
															"assignments": [
																88
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 88,
																	"mutability": "mutable",
																	"name": "lastvalue",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 127,
																	"src": "2611:17:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 87,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2611:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 93,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 89,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 56,
																		"src": "2631:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Set_$12_storage_ptr",
																			"typeString": "struct EnumerableSet.Set storage pointer"
																		}
																	},
																	"id": 90,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_values",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 7,
																	"src": "2631:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																		"typeString": "bytes32[] storage ref"
																	}
																},
																"id": 92,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 91,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 80,
																	"src": "2643:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2631:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2611:42:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 94,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 56,
																			"src": "2748:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$12_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 97,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 7,
																		"src": "2748:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 98,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 96,
																		"name": "toDeleteIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 74,
																		"src": "2760:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2748:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 99,
																	"name": "lastvalue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 88,
																	"src": "2777:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "2748:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 101,
															"nodeType": "ExpressionStatement",
															"src": "2748:38:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 102,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 56,
																			"src": "2854:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$12_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 105,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 11,
																		"src": "2854:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 106,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 104,
																		"name": "lastvalue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 88,
																		"src": "2867:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2854:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 107,
																		"name": "toDeleteIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 74,
																		"src": "2880:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 108,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2896:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "2880:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2854:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 111,
															"nodeType": "ExpressionStatement",
															"src": "2854:43:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 112,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 56,
																			"src": "3006:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$12_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 115,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 7,
																		"src": "3006:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "3006:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3006:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "ExpressionStatement",
															"src": "3006:17:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "3094:26:0",
																"subExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 119,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 56,
																			"src": "3101:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$12_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 120,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 11,
																		"src": "3101:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 122,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 121,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 58,
																		"src": "3114:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3101:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 124,
															"nodeType": "ExpressionStatement",
															"src": "3094:26:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 125,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3144:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 62,
															"id": 126,
															"nodeType": "Return",
															"src": "3137:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "1487:162:0",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 133,
												"src": "1672:15:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$12_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 55,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 12,
													"src": "1672:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$12_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 133,
												"src": "1689:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 57,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1689:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1671:32:0"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 133,
												"src": "1721:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 60,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1721:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1720:6:0"
									},
									"scope": 481,
									"src": "1655:1557:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 150,
										"nodeType": "Block",
										"src": "3409:50:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 143,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 136,
																"src": "3427:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$12_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															"id": 144,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_indexes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 11,
															"src": "3427:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 146,
														"indexExpression": {
															"argumentTypes": null,
															"id": 145,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "3440:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3427:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3450:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3427:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 142,
												"id": 149,
												"nodeType": "Return",
												"src": "3420:31:0"
											}
										]
									},
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "3220:72:0",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 151,
												"src": "3317:15:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$12_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 135,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 12,
													"src": "3317:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$12_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 151,
												"src": "3334:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 137,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3334:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3316:32:0"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 151,
												"src": "3398:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 140,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3398:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3397:6:0"
									},
									"scope": 481,
									"src": "3298:161:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "3610:44:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 159,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "3628:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$12_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 160,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "3628:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3628:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 158,
												"id": 162,
												"nodeType": "Return",
												"src": "3621:25:0"
											}
										]
									},
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "3467:72:0",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 164,
												"src": "3562:15:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$12_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 153,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 12,
													"src": "3562:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$12_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3561:17:0"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 164,
												"src": "3601:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3601:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3600:9:0"
									},
									"scope": 481,
									"src": "3545:109:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "4116:165:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 175,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 167,
																		"src": "4149:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Set_$12_storage_ptr",
																			"typeString": "struct EnumerableSet.Set storage pointer"
																		}
																	},
																	"id": 176,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_values",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 7,
																	"src": "4149:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																		"typeString": "bytes32[] storage ref"
																	}
																},
																"id": 177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4149:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"id": 178,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 169,
																"src": "4170:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4149:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473",
															"id": 180,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4190:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb",
																"typeString": "literal_string \"EnumerableSet: index out of bounds\""
															},
															"value": "EnumerableSet: index out of bounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb",
																"typeString": "literal_string \"EnumerableSet: index out of bounds\""
															}
														],
														"id": 174,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4127:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4127:110:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "4127:110:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 183,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "4255:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$12_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 184,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "4255:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 186,
													"indexExpression": {
														"argumentTypes": null,
														"id": 185,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "4267:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4255:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 173,
												"id": 187,
												"nodeType": "Return",
												"src": "4248:25:0"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3662:340:0",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 189,
												"src": "4021:15:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$12_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 166,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 12,
													"src": "4021:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$12_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 189,
												"src": "4038:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4038:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4020:32:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 189,
												"src": "4102:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 171,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4102:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4101:9:0"
									},
									"scope": 481,
									"src": "4008:273:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableSet.Bytes32Set",
									"id": 192,
									"members": [
										{
											"constant": false,
											"id": 191,
											"mutability": "mutable",
											"name": "_inner",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 192,
											"src": "4339:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$12_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"contractScope": null,
												"id": 190,
												"name": "Set",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 12,
												"src": "4339:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$12_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Bytes32Set",
									"nodeType": "StructDefinition",
									"scope": 481,
									"src": "4310:47:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "4634:49:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 203,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 195,
																"src": "4657:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$192_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 204,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 191,
															"src": "4657:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$12_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"id": 205,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "4669:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$12_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 202,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "4652:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$12_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4652:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 201,
												"id": 207,
												"nodeType": "Return",
												"src": "4645:30:0"
											}
										]
									},
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "4365:164:0",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 209,
												"src": "4548:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$192_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 194,
													"name": "Bytes32Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 192,
													"src": "4548:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$192_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 209,
												"src": "4572:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 196,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4572:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4547:39:0"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 209,
												"src": "4623:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 199,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4623:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4622:6:0"
									},
									"scope": 481,
									"src": "4535:148:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 225,
										"nodeType": "Block",
										"src": "4961:52:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 220,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 212,
																"src": "4987:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$192_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 221,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 191,
															"src": "4987:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$12_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"id": 222,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "4999:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$12_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 219,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "4979:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$12_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4979:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 218,
												"id": 224,
												"nodeType": "Return",
												"src": "4972:33:0"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "4691:162:0",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 226,
												"src": "4875:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$192_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 211,
													"name": "Bytes32Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 192,
													"src": "4875:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$192_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 226,
												"src": "4899:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 213,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4899:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4874:39:0"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 226,
												"src": "4950:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 216,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4950:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4949:6:0"
									},
									"scope": 481,
									"src": "4859:154:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "5217:54:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 237,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 229,
																"src": "5245:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$192_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 238,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 191,
															"src": "5245:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$12_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"id": 239,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "5257:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$12_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 236,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "5235:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$12_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5235:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 235,
												"id": 241,
												"nodeType": "Return",
												"src": "5228:35:0"
											}
										]
									},
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "5021:72:0",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 243,
												"src": "5117:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$192_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 228,
													"name": "Bytes32Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 192,
													"src": "5117:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$192_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 243,
												"src": "5141:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 230,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5141:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5116:39:0"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 243,
												"src": "5206:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 233,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5206:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5205:6:0"
									},
									"scope": 481,
									"src": "5099:172:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "5429:45:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 252,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "5455:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$192_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 253,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 191,
															"src": "5455:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$12_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$12_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 251,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "5447:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$12_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5447:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 250,
												"id": 255,
												"nodeType": "Return",
												"src": "5440:26:0"
											}
										]
									},
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "5279:72:0",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 257,
												"src": "5373:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$192_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 245,
													"name": "Bytes32Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 192,
													"src": "5373:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$192_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5372:24:0"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 257,
												"src": "5420:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5420:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5419:9:0"
									},
									"scope": 481,
									"src": "5357:117:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "5943:48:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 268,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 260,
																"src": "5965:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$192_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 269,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 191,
															"src": "5965:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$12_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"id": 270,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "5977:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$12_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 267,
														"name": "_at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 189,
														"src": "5961:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$12_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5961:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 266,
												"id": 272,
												"nodeType": "Return",
												"src": "5954:29:0"
											}
										]
									},
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "5482:340:0",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 274,
												"src": "5840:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$192_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 259,
													"name": "Bytes32Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 192,
													"src": "5840:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$192_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 274,
												"src": "5864:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5864:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5839:39:0"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 274,
												"src": "5929:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 264,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5929:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5928:9:0"
									},
									"scope": 481,
									"src": "5828:163:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.AddressSet",
									"id": 277,
									"members": [
										{
											"constant": false,
											"id": 276,
											"mutability": "mutable",
											"name": "_inner",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 277,
											"src": "6049:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$12_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"contractScope": null,
												"id": 275,
												"name": "Set",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 12,
												"src": "6049:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$12_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nodeType": "StructDefinition",
									"scope": 481,
									"src": "6020:47:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "6344:67:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 288,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 280,
																"src": "6367:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$277_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 289,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 276,
															"src": "6367:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$12_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 294,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 282,
																			"src": "6395:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6387:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 292,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "6387:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6387:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 291,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6379:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 290,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6379:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6379:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$12_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 287,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "6362:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$12_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6362:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 286,
												"id": 298,
												"nodeType": "Return",
												"src": "6355:48:0"
											}
										]
									},
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "6075:164:0",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 300,
												"src": "6258:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$277_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 279,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 277,
													"src": "6258:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$277_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 300,
												"src": "6282:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6282:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6257:39:0"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 300,
												"src": "6333:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 284,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6333:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6332:6:0"
									},
									"scope": 481,
									"src": "6245:166:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 322,
										"nodeType": "Block",
										"src": "6689:70:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 311,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 303,
																"src": "6715:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$277_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 312,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 276,
															"src": "6715:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$12_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 317,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 305,
																			"src": "6743:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6735:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 315,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "6735:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6735:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 314,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6727:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 313,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6727:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6727:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$12_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 310,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "6707:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$12_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6707:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 309,
												"id": 321,
												"nodeType": "Return",
												"src": "6700:51:0"
											}
										]
									},
									"documentation": {
										"id": 301,
										"nodeType": "StructuredDocumentation",
										"src": "6419:162:0",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 323,
												"src": "6603:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$277_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 302,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 277,
													"src": "6603:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$277_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 323,
												"src": "6627:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6627:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6602:39:0"
									},
									"returnParameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 323,
												"src": "6678:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 307,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6678:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6677:6:0"
									},
									"scope": 481,
									"src": "6587:172:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "6963:72:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 334,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 326,
																"src": "6991:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$277_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 335,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 276,
															"src": "6991:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$12_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 340,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 328,
																			"src": "7019:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7011:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 338,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "7011:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7011:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 337,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7003:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 336,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "7003:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7003:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$12_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 333,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "6981:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$12_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6981:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 332,
												"id": 344,
												"nodeType": "Return",
												"src": "6974:53:0"
											}
										]
									},
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "6767:72:0",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 346,
												"src": "6863:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$277_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 325,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 277,
													"src": "6863:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$277_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 346,
												"src": "6887:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6887:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6862:39:0"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 346,
												"src": "6952:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 330,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6952:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6951:6:0"
									},
									"scope": 481,
									"src": "6845:190:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "7193:45:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 355,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "7219:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$277_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 356,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 276,
															"src": "7219:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$12_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$12_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 354,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "7211:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$12_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7211:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 353,
												"id": 358,
												"nodeType": "Return",
												"src": "7204:26:0"
											}
										]
									},
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "7043:72:0",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 360,
												"src": "7137:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$277_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 348,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 277,
													"src": "7137:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$277_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7136:24:0"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 360,
												"src": "7184:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7184:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7183:9:0"
									},
									"scope": 481,
									"src": "7121:117:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "7707:66:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 375,
																				"name": "set",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 363,
																				"src": "7745:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_AddressSet_$277_storage_ptr",
																					"typeString": "struct EnumerableSet.AddressSet storage pointer"
																				}
																			},
																			"id": 376,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "_inner",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 276,
																			"src": "7745:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$12_storage",
																				"typeString": "struct EnumerableSet.Set storage ref"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 377,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 365,
																			"src": "7757:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_struct$_Set_$12_storage",
																				"typeString": "struct EnumerableSet.Set storage ref"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 374,
																		"name": "_at",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 189,
																		"src": "7741:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$12_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																			"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																		}
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7741:22:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 373,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7733:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 372,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7733:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7733:31:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 371,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7725:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 370,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7725:7:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7725:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 369,
												"id": 381,
												"nodeType": "Return",
												"src": "7718:47:0"
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "7246:340:0",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 383,
												"src": "7604:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$277_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 362,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 277,
													"src": "7604:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$277_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 383,
												"src": "7628:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7628:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7603:39:0"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 383,
												"src": "7693:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7693:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7692:9:0"
									},
									"scope": 481,
									"src": "7592:181:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.UintSet",
									"id": 386,
									"members": [
										{
											"constant": false,
											"id": 385,
											"mutability": "mutable",
											"name": "_inner",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 386,
											"src": "7825:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$12_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"contractScope": null,
												"id": 384,
												"name": "Set",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 12,
												"src": "7825:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$12_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "UintSet",
									"nodeType": "StructDefinition",
									"scope": 481,
									"src": "7799:44:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 405,
										"nodeType": "Block",
										"src": "8094:58:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 397,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "8117:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$386_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 398,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 385,
															"src": "8117:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$12_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 401,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 391,
																	"src": "8137:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 400,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8129:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 399,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8129:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8129:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$12_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 396,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "8112:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$12_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8112:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 395,
												"id": 404,
												"nodeType": "Return",
												"src": "8105:39:0"
											}
										]
									},
									"documentation": {
										"id": 387,
										"nodeType": "StructuredDocumentation",
										"src": "7851:164:0",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 406,
												"src": "8034:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$386_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 388,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 386,
													"src": "8034:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$386_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 406,
												"src": "8055:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8055:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8033:36:0"
									},
									"returnParameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 406,
												"src": "8088:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 393,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8088:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8087:6:0"
									},
									"scope": 481,
									"src": "8021:131:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "8427:61:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 417,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 409,
																"src": "8453:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$386_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 418,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 385,
															"src": "8453:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$12_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 421,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "8473:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8465:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 419,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8465:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8465:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$12_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 416,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "8445:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$12_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8445:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 415,
												"id": 424,
												"nodeType": "Return",
												"src": "8438:42:0"
											}
										]
									},
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "8160:162:0",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 426,
												"src": "8344:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$386_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 408,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 386,
													"src": "8344:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$386_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 426,
												"src": "8365:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8365:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8343:36:0"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 426,
												"src": "8416:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 413,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8416:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8415:6:0"
									},
									"scope": 481,
									"src": "8328:160:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "8689:63:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 437,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 429,
																"src": "8717:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$386_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 385,
															"src": "8717:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$12_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 441,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "8737:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 440,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8729:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 439,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8729:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8729:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$12_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 436,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "8707:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$12_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8707:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 435,
												"id": 444,
												"nodeType": "Return",
												"src": "8700:44:0"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "8496:72:0",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 446,
												"src": "8592:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$386_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 428,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 386,
													"src": "8592:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$386_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 446,
												"src": "8613:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8613:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8591:36:0"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 446,
												"src": "8678:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8678:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8677:6:0"
									},
									"scope": 481,
									"src": "8574:178:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "8907:45:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 455,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 449,
																"src": "8933:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$386_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 456,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 385,
															"src": "8933:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$12_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$12_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 454,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "8925:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$12_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8925:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 453,
												"id": 458,
												"nodeType": "Return",
												"src": "8918:26:0"
											}
										]
									},
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "8760:72:0",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 460,
												"src": "8854:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$386_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 448,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 386,
													"src": "8854:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$386_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8853:21:0"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 460,
												"src": "8898:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8898:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8897:9:0"
									},
									"scope": 481,
									"src": "8838:114:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "9418:57:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 473,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 463,
																		"src": "9448:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$386_storage_ptr",
																			"typeString": "struct EnumerableSet.UintSet storage pointer"
																		}
																	},
																	"id": 474,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 385,
																	"src": "9448:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Set_$12_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 475,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 465,
																	"src": "9460:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Set_$12_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 472,
																"name": "_at",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 189,
																"src": "9444:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$12_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																}
															},
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9444:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 471,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9436:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 470,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9436:7:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9436:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 469,
												"id": 478,
												"nodeType": "Return",
												"src": "9429:38:0"
											}
										]
									},
									"documentation": {
										"id": 461,
										"nodeType": "StructuredDocumentation",
										"src": "8960:340:0",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 480,
												"src": "9318:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$386_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 462,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 386,
													"src": "9318:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$386_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 480,
												"src": "9339:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9339:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9317:36:0"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 480,
												"src": "9404:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9404:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9403:9:0"
									},
									"scope": 481,
									"src": "9306:169:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1008,
							"src": "156:9322:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 482,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1464,
										"src": "9505:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$1464",
											"typeString": "contract ERC20"
										}
									},
									"id": 483,
									"nodeType": "InheritanceSpecifier",
									"src": "9505:5:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 484,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1618,
										"src": "9512:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$1618",
											"typeString": "contract Ownable"
										}
									},
									"id": 485,
									"nodeType": "InheritanceSpecifier",
									"src": "9512:7:0"
								}
							],
							"contractDependencies": [
								1030,
								1464,
								1542,
								1618
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1007,
							"linearizedBaseContracts": [
								1007,
								1618,
								1464,
								1030,
								1542
							],
							"name": "PokerToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 488,
									"libraryName": {
										"contractScope": null,
										"id": 486,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1756,
										"src": "9533:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1756",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "9527:27:0",
									"typeName": {
										"id": 487,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9546:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 491,
									"libraryName": {
										"contractScope": null,
										"id": 489,
										"name": "EnumerableSet",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 481,
										"src": "9568:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_EnumerableSet_$481",
											"typeString": "library EnumerableSet"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "9562:49:0",
									"typeName": {
										"contractScope": null,
										"id": 490,
										"name": "EnumerableSet.AddressSet",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 277,
										"src": "9586:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$277_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									}
								},
								{
									"constant": false,
									"id": 493,
									"mutability": "mutable",
									"name": "_minters",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1007,
									"src": "9617:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_AddressSet_$277_storage",
										"typeString": "struct EnumerableSet.AddressSet"
									},
									"typeName": {
										"contractScope": null,
										"id": 492,
										"name": "EnumerableSet.AddressSet",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 277,
										"src": "9617:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$277_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "9098f2a7",
									"id": 497,
									"mutability": "mutable",
									"name": "yearMintLimit",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1007,
									"src": "9665:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 496,
										"keyType": {
											"id": 494,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "9673:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "9665:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 495,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "9684:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "092654a0",
									"id": 501,
									"mutability": "mutable",
									"name": "contractMintLimit",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1007,
									"src": "9720:52:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 500,
										"keyType": {
											"id": 498,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "9728:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "9720:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 499,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "9739:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e235a4a6",
									"id": 507,
									"mutability": "mutable",
									"name": "recordContractLimit",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1007,
									"src": "9779:74:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 506,
										"keyType": {
											"id": 502,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "9787:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "9779:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(uint256 => uint256))"
										},
										"valueType": {
											"id": 505,
											"keyType": {
												"id": 503,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "9806:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "9798:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueType": {
												"id": 504,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "9817:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e1665f56",
									"id": 514,
									"mutability": "mutable",
									"name": "YEAR_MINT_NUM",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1007,
									"src": "9860:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 508,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9860:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000"
										},
										"id": 513,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "31303030303030303030",
											"id": 509,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "9891:10:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											},
											"value": "1000000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"argumentTypes": null,
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 512,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"argumentTypes": null,
												"hexValue": "3130",
												"id": 510,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "9904:2:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"argumentTypes": null,
												"hexValue": "3138",
												"id": 511,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "9908:2:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "9904:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "9891:19:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "9971:2:0",
										"statements": []
									},
									"documentation": null,
									"id": 524,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"hexValue": "504f4b4552",
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9946:7:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_353d80d0c238f1d81c29171711f6cf48c257657292709f7a116a2d57282b8825",
														"typeString": "literal_string \"POKER\""
													},
													"value": "POKER"
												},
												{
													"argumentTypes": null,
													"hexValue": "504f4b4552",
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9955:7:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_353d80d0c238f1d81c29171711f6cf48c257657292709f7a116a2d57282b8825",
														"typeString": "literal_string \"POKER\""
													},
													"value": "POKER"
												},
												{
													"argumentTypes": null,
													"hexValue": "3138",
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9964:2:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												{
													"argumentTypes": null,
													"hexValue": "30",
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9968:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												}
											],
											"id": 521,
											"modifierName": {
												"argumentTypes": null,
												"id": 516,
												"name": "ERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1464,
												"src": "9940:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_ERC20_$1464_$",
													"typeString": "type(contract ERC20)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "9940:30:0"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9930:2:0"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9971:0:0"
									},
									"scope": 1007,
									"src": "9919:54:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 535,
										"nodeType": "Block",
										"src": "10021:45:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 530,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "10038:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "10038:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 532,
															"name": "amount_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "10050:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 529,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1463,
														"src": "10032:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10032:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 534,
												"nodeType": "ExpressionStatement",
												"src": "10032:26:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "42966c68",
									"id": 536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "amount_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 536,
												"src": "9995:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9995:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9994:17:0"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10021:0:0"
									},
									"scope": 1007,
									"src": "9981:85:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "10114:302:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 547,
																		"name": "amount_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 538,
																		"src": "10176:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 542,
																			"name": "yearMintLimit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 497,
																			"src": "10147:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																				"typeString": "mapping(uint256 => uint256)"
																			}
																		},
																		"id": 545,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 543,
																				"name": "getYear",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 922,
																				"src": "10161:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																					"typeString": "function () view returns (uint256)"
																				}
																			},
																			"id": 544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10161:9:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10147:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1646,
																	"src": "10147:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10147:37:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 549,
																"name": "YEAR_MINT_NUM",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 514,
																"src": "10188:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10147:54:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "506f6b6572546f6b656e3a20796561724d696e744c696d6974",
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10216:27:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dbc62d22c4f6719f5dcf99df07440102ca2781fa5ed86b25b2d0ea7b410acfaf",
																"typeString": "literal_string \"PokerToken: yearMintLimit\""
															},
															"value": "PokerToken: yearMintLimit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dbc62d22c4f6719f5dcf99df07440102ca2781fa5ed86b25b2d0ea7b410acfaf",
																"typeString": "literal_string \"PokerToken: yearMintLimit\""
															}
														],
														"id": 541,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "10125:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10125:129:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 553,
												"nodeType": "ExpressionStatement",
												"src": "10125:129:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 554,
														"name": "isOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1617,
														"src": "10269:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10269:9:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 576,
												"nodeType": "IfStatement",
												"src": "10265:144:0",
												"trueBody": {
													"id": 575,
													"nodeType": "Block",
													"src": "10280:129:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 557,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1582,
																			"src": "10301:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10301:7:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 559,
																		"name": "amount_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 538,
																		"src": "10310:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 556,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1407,
																	"src": "10295:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10295:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 561,
															"nodeType": "ExpressionStatement",
															"src": "10295:23:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 562,
																		"name": "yearMintLimit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 497,
																		"src": "10333:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 565,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 563,
																			"name": "getYear",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 922,
																			"src": "10347:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10347:9:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10333:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 571,
																			"name": "amount_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 538,
																			"src": "10389:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 566,
																				"name": "yearMintLimit",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 497,
																				"src": "10360:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"argumentTypes": null,
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 567,
																					"name": "getYear",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 922,
																					"src": "10374:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																						"typeString": "function () view returns (uint256)"
																					}
																				},
																				"id": 568,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10374:9:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10360:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 570,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1646,
																		"src": "10360:28:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10360:37:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10333:64:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 574,
															"nodeType": "ExpressionStatement",
															"src": "10333:64:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"functionSelector": "a0712d68",
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "amount_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 578,
												"src": "10088:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10088:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10087:17:0"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10114:0:0"
									},
									"scope": 1007,
									"src": "10074:342:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "10533:594:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 595,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "10595:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 590,
																			"name": "yearMintLimit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 497,
																			"src": "10566:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																				"typeString": "mapping(uint256 => uint256)"
																			}
																		},
																		"id": 593,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 591,
																				"name": "getYear",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 922,
																				"src": "10580:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																					"typeString": "function () view returns (uint256)"
																				}
																			},
																			"id": 592,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10580:9:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10566:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1646,
																	"src": "10566:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10566:37:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 597,
																"name": "YEAR_MINT_NUM",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 514,
																"src": "10607:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10566:54:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "506f6b6572546f6b656e3a20796561724d696e744c696d6974",
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10635:27:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dbc62d22c4f6719f5dcf99df07440102ca2781fa5ed86b25b2d0ea7b410acfaf",
																"typeString": "literal_string \"PokerToken: yearMintLimit\""
															},
															"value": "PokerToken: yearMintLimit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dbc62d22c4f6719f5dcf99df07440102ca2781fa5ed86b25b2d0ea7b410acfaf",
																"typeString": "literal_string \"PokerToken: yearMintLimit\""
															}
														],
														"id": 589,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "10544:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10544:129:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 601,
												"nodeType": "ExpressionStatement",
												"src": "10544:129:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 603,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "10690:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 604,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "10695:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 602,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1407,
														"src": "10684:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10684:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 606,
												"nodeType": "ExpressionStatement",
												"src": "10684:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 607,
															"name": "yearMintLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "10714:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 610,
														"indexExpression": {
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 608,
																"name": "getYear",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 922,
																"src": "10728:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10728:9:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10714:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 616,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "10770:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 611,
																	"name": "yearMintLimit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 497,
																	"src": "10741:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 614,
																"indexExpression": {
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 612,
																		"name": "getYear",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 922,
																		"src": "10755:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10755:9:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10741:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1646,
															"src": "10741:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 617,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10741:37:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10714:64:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "10714:64:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 620,
																"name": "recordContractLimit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "10789:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 625,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 621,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "10809:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "10809:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10789:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 626,
														"indexExpression": {
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 623,
																"name": "getYear",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 922,
																"src": "10821:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10821:9:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10789:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 635,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "10905:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 627,
																		"name": "recordContractLimit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 507,
																		"src": "10834:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(uint256 => uint256))"
																		}
																	},
																	"id": 630,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 628,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "10868:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "10868:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10834:55:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 633,
																"indexExpression": {
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 631,
																		"name": "getYear",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 922,
																		"src": "10890:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10890:9:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10834:66:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1646,
															"src": "10834:70:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 636,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10834:79:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10789:124:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 638,
												"nodeType": "ExpressionStatement",
												"src": "10789:124:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 640,
																		"name": "recordContractLimit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 507,
																		"src": "10946:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(uint256 => uint256))"
																		}
																	},
																	"id": 643,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 641,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "10966:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "10966:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10946:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 646,
																"indexExpression": {
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 644,
																		"name": "getYear",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 922,
																		"src": "10978:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 645,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10978:9:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10946:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 647,
																	"name": "contractMintLimit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 501,
																	"src": "11009:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 650,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 648,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "11027:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "11027:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11009:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10946:92:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "506f6b6572546f6b656e3a207265636f7264436f6e74726163744c696d6974",
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11053:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_15d6340e0e9c39d3a42075a05b32d871097bc49518f89ea11574382adfbc5777",
																"typeString": "literal_string \"PokerToken: recordContractLimit\""
															},
															"value": "PokerToken: recordContractLimit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_15d6340e0e9c39d3a42075a05b32d871097bc49518f89ea11574382adfbc5777",
																"typeString": "literal_string \"PokerToken: recordContractLimit\""
															}
														],
														"id": 639,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "10924:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10924:173:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 654,
												"nodeType": "ExpressionStatement",
												"src": "10924:173:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11115:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 588,
												"id": 656,
												"nodeType": "Return",
												"src": "11108:11:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "40c10f19",
									"id": 658,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 585,
											"modifierName": {
												"argumentTypes": null,
												"id": 584,
												"name": "onlyMinter",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 780,
												"src": "10493:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10493:10:0"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 658,
												"src": "10438:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10438:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 658,
												"src": "10451:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10451:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10437:30:0"
									},
									"returnParameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 658,
												"src": "10522:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 586,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10522:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10521:6:0"
									},
									"scope": 1007,
									"src": "10424:703:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 690,
										"nodeType": "Block",
										"src": "11255:242:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 670,
																"name": "_addMinter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 660,
																"src": "11288:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11310:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11302:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 671,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11302:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 674,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11302:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "11288:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "506f6b6572546f6b656e3a205f6164644d696e74657220697320746865207a65726f2061646472657373",
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11327:44:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cb9d3212f00552d8be41e69b0ea5b8e9499f587c01d683168aa870e2f69a84ce",
																"typeString": "literal_string \"PokerToken: _addMinter is the zero address\""
															},
															"value": "PokerToken: _addMinter is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cb9d3212f00552d8be41e69b0ea5b8e9499f587c01d683168aa870e2f69a84ce",
																"typeString": "literal_string \"PokerToken: _addMinter is the zero address\""
															}
														],
														"id": 669,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "11266:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11266:116:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 678,
												"nodeType": "ExpressionStatement",
												"src": "11266:116:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 680,
															"name": "_addMinter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "11412:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 681,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "11424:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 679,
														"name": "setContractMintNum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 954,
														"src": "11393:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11393:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 683,
												"nodeType": "ExpressionStatement",
												"src": "11393:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 686,
															"name": "_minters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "11468:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$277_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														{
															"argumentTypes": null,
															"id": 687,
															"name": "_addMinter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "11478:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_AddressSet_$277_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 684,
															"name": "EnumerableSet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "11450:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_EnumerableSet_$481_$",
																"typeString": "type(library EnumerableSet)"
															}
														},
														"id": 685,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 300,
														"src": "11450:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$277_storage_ptr_$_t_address_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11450:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 668,
												"id": 689,
												"nodeType": "Return",
												"src": "11443:46:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "761248b4",
									"id": 691,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 665,
											"modifierName": {
												"argumentTypes": null,
												"id": 664,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1595,
												"src": "11216:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "11216:9:0"
										}
									],
									"name": "addMinter",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "_addMinter",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 691,
												"src": "11154:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11154:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 691,
												"src": "11174:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11174:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11153:37:0"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 691,
												"src": "11244:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 666,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11244:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11243:6:0"
									},
									"scope": 1007,
									"src": "11135:362:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 716,
										"nodeType": "Block",
										"src": "11576:195:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 701,
																"name": "_delMinter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "11609:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 704,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11631:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11623:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 702,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11623:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11623:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "11609:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "506f6b6572546f6b656e3a205f64656c4d696e74657220697320746865207a65726f2061646472657373",
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11648:44:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_214d6a2bcbc2880da3f1409c020bc73ea2584b13faa007de23ec5ca8b186aba0",
																"typeString": "literal_string \"PokerToken: _delMinter is the zero address\""
															},
															"value": "PokerToken: _delMinter is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_214d6a2bcbc2880da3f1409c020bc73ea2584b13faa007de23ec5ca8b186aba0",
																"typeString": "literal_string \"PokerToken: _delMinter is the zero address\""
															}
														],
														"id": 700,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "11587:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11587:116:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "11587:116:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 712,
															"name": "_minters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "11742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$277_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														{
															"argumentTypes": null,
															"id": 713,
															"name": "_delMinter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "11752:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_AddressSet_$277_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 710,
															"name": "EnumerableSet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "11721:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_EnumerableSet_$481_$",
																"typeString": "type(library EnumerableSet)"
															}
														},
														"id": 711,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 323,
														"src": "11721:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$277_storage_ptr_$_t_address_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11721:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 699,
												"id": 715,
												"nodeType": "Return",
												"src": "11714:49:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "23338b88",
									"id": 717,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 696,
											"modifierName": {
												"argumentTypes": null,
												"id": 695,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1595,
												"src": "11551:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "11551:9:0"
										}
									],
									"name": "delMinter",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "_delMinter",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 717,
												"src": "11524:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11524:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11523:20:0"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 717,
												"src": "11570:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 697,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11570:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11569:6:0"
									},
									"scope": 1007,
									"src": "11505:266:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 727,
										"nodeType": "Block",
										"src": "11836:56:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 724,
															"name": "_minters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "11875:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$277_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_AddressSet_$277_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 722,
															"name": "EnumerableSet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "11854:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_EnumerableSet_$481_$",
																"typeString": "type(library EnumerableSet)"
															}
														},
														"id": 723,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 360,
														"src": "11854:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$277_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
														}
													},
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11854:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 721,
												"id": 726,
												"nodeType": "Return",
												"src": "11847:37:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "0323aac7",
									"id": 728,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMinterLength",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11803:2:0"
									},
									"returnParameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 728,
												"src": "11827:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11827:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11826:9:0"
									},
									"scope": 1007,
									"src": "11779:113:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 741,
										"nodeType": "Block",
										"src": "11962:67:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 737,
															"name": "_minters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "12003:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$277_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														{
															"argumentTypes": null,
															"id": 738,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "12013:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_AddressSet_$277_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 735,
															"name": "EnumerableSet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "11980:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_EnumerableSet_$481_$",
																"typeString": "type(library EnumerableSet)"
															}
														},
														"id": 736,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "contains",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 346,
														"src": "11980:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$277_storage_ptr_$_t_address_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
														}
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11980:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 734,
												"id": 740,
												"nodeType": "Return",
												"src": "11973:48:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "aa271e1a",
									"id": 742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isMinter",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 742,
												"src": "11918:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11918:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11917:17:0"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 742,
												"src": "11956:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 732,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11956:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11955:6:0"
									},
									"scope": 1007,
									"src": "11900:129:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 767,
										"nodeType": "Block",
										"src": "12112:183:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 752,
																"name": "_index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "12145:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 756,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 753,
																		"name": "getMinterLength",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 728,
																		"src": "12155:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12155:17:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12175:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "12155:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12145:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "506f6b6572546f6b656e3a20696e646578206f7574206f6620626f756e6473",
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12191:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45d620a48d0dec96e6ed5eba874825ecbc94e97c8738f959c3faf40f474ebf42",
																"typeString": "literal_string \"PokerToken: index out of bounds\""
															},
															"value": "PokerToken: index out of bounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45d620a48d0dec96e6ed5eba874825ecbc94e97c8738f959c3faf40f474ebf42",
																"typeString": "literal_string \"PokerToken: index out of bounds\""
															}
														],
														"id": 751,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "12123:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12123:112:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 760,
												"nodeType": "ExpressionStatement",
												"src": "12123:112:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 763,
															"name": "_minters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "12270:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$277_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														{
															"argumentTypes": null,
															"id": 764,
															"name": "_index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "12280:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_AddressSet_$277_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 761,
															"name": "EnumerableSet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "12253:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_EnumerableSet_$481_$",
																"typeString": "type(library EnumerableSet)"
															}
														},
														"id": 762,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "at",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 383,
														"src": "12253:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$277_storage_ptr_$_t_uint256_$returns$_t_address_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12253:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 750,
												"id": 766,
												"nodeType": "Return",
												"src": "12246:41:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "5b7121f8",
									"id": 768,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 747,
											"modifierName": {
												"argumentTypes": null,
												"id": 746,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1595,
												"src": "12084:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "12084:9:0"
										}
									],
									"name": "getMinter",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "_index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 768,
												"src": "12056:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12056:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12055:16:0"
									},
									"returnParameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 768,
												"src": "12103:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12103:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12102:9:0"
									},
									"scope": 1007,
									"src": "12037:258:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 779,
										"nodeType": "Block",
										"src": "12360:88:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 772,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "12388:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "12388:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 771,
																"name": "isMinter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 742,
																"src": "12379:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12379:20:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "63616c6c6572206973206e6f7420746865206d696e746572",
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12401:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88d7da1b299470dcb9c6dd03b0ef4b745f350eaaf6e449f222d35091be3be430",
																"typeString": "literal_string \"caller is not the minter\""
															},
															"value": "caller is not the minter"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_88d7da1b299470dcb9c6dd03b0ef4b745f350eaaf6e449f222d35091be3be430",
																"typeString": "literal_string \"caller is not the minter\""
															}
														],
														"id": 770,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "12371:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12371:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 777,
												"nodeType": "ExpressionStatement",
												"src": "12371:57:0"
											},
											{
												"id": 778,
												"nodeType": "PlaceholderStatement",
												"src": "12439:1:0"
											}
										]
									},
									"documentation": null,
									"id": 780,
									"name": "onlyMinter",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12357:2:0"
									},
									"src": "12338:110:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 787,
									"mutability": "constant",
									"name": "SECONDS_PER_DAY",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1007,
									"src": "12456:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 781,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12456:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"id": 786,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"commonType": {
												"typeIdentifier": "t_rational_1440_by_1",
												"typeString": "int_const 1440"
											},
											"id": 784,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"argumentTypes": null,
												"hexValue": "3234",
												"id": 782,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "12491:2:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_24_by_1",
													"typeString": "int_const 24"
												},
												"value": "24"
											},
											"nodeType": "BinaryOperation",
											"operator": "*",
											"rightExpression": {
												"argumentTypes": null,
												"hexValue": "3630",
												"id": 783,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "12496:2:0",
												"subdenomination": null,
												"typeDescriptions": {
													"typeIdentifier": "t_rational_60_by_1",
													"typeString": "int_const 60"
												},
												"value": "60"
											},
											"src": "12491:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1440_by_1",
												"typeString": "int_const 1440"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "3630",
											"id": 785,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "12501:2:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_60_by_1",
												"typeString": "int_const 60"
											},
											"value": "60"
										},
										"src": "12491:12:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 792,
									"mutability": "constant",
									"name": "SECONDS_PER_HOUR",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1007,
									"src": "12510:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 788,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12510:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_3600_by_1",
											"typeString": "int_const 3600"
										},
										"id": 791,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "3630",
											"id": 789,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "12546:2:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_60_by_1",
												"typeString": "int_const 60"
											},
											"value": "60"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "3630",
											"id": 790,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "12551:2:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_60_by_1",
												"typeString": "int_const 60"
											},
											"value": "60"
										},
										"src": "12546:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3600_by_1",
											"typeString": "int_const 3600"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 795,
									"mutability": "constant",
									"name": "SECONDS_PER_MINUTE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1007,
									"src": "12560:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 793,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12560:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3630",
										"id": 794,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12598:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_60_by_1",
											"typeString": "int_const 60"
										},
										"value": "60"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 798,
									"mutability": "constant",
									"name": "OFFSET19700101",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1007,
									"src": "12607:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 796,
										"name": "int256",
										"nodeType": "ElementaryTypeName",
										"src": "12607:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "32343430353838",
										"id": 797,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "12640:7:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2440588_by_1",
											"typeString": "int_const 2440588"
										},
										"value": "2440588"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 921,
										"nodeType": "Block",
										"src": "12710:606:0",
										"statements": [
											{
												"assignments": [
													804
												],
												"declarations": [
													{
														"constant": false,
														"id": 804,
														"mutability": "mutable",
														"name": "timestamp",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 921,
														"src": "12721:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 803,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12721:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 807,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 805,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -4,
														"src": "12741:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "12741:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12721:35:0"
											},
											{
												"assignments": [
													809
												],
												"declarations": [
													{
														"constant": false,
														"id": 809,
														"mutability": "mutable",
														"name": "_days",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 921,
														"src": "12767:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 808,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12767:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 813,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 810,
														"name": "timestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 804,
														"src": "12783:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 811,
														"name": "SECONDS_PER_DAY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "12795:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12783:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12767:43:0"
											},
											{
												"assignments": [
													815
												],
												"declarations": [
													{
														"constant": false,
														"id": 815,
														"mutability": "mutable",
														"name": "__days",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 921,
														"src": "12821:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 814,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "12821:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 820,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 818,
															"name": "_days",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 809,
															"src": "12844:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 817,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12837:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														},
														"typeName": {
															"id": 816,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "12837:6:0",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12837:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12821:29:0"
											},
											{
												"assignments": [
													822
												],
												"declarations": [
													{
														"constant": false,
														"id": 822,
														"mutability": "mutable",
														"name": "L",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 921,
														"src": "12863:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 821,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "12863:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 828,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 825,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 823,
															"name": "__days",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "12874:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "3638353639",
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12883:5:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_68569_by_1",
																"typeString": "int_const 68569"
															},
															"value": "68569"
														},
														"src": "12874:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 826,
														"name": "OFFSET19700101",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "12891:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "12874:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12863:42:0"
											},
											{
												"assignments": [
													830
												],
												"declarations": [
													{
														"constant": false,
														"id": 830,
														"mutability": "mutable",
														"name": "N",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 921,
														"src": "12916:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 829,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "12916:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 837,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 833,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "34",
																	"id": 831,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12928:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 832,
																	"name": "L",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 822,
																	"src": "12932:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "12928:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 834,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "12927:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "313436303937",
														"id": 835,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12937:6:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_146097_by_1",
															"typeString": "int_const 146097"
														},
														"value": "146097"
													},
													"src": "12927:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12916:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 838,
														"name": "L",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "12954:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 848,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 839,
															"name": "L",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "12958:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 844,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 842,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"hexValue": "313436303937",
																				"id": 840,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12963:6:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_146097_by_1",
																					"typeString": "int_const 146097"
																				},
																				"value": "146097"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 841,
																				"name": "N",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 830,
																				"src": "12972:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "12963:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "33",
																			"id": 843,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12976:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"src": "12963:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 845,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12962:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "34",
																"id": 846,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12981:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																},
																"value": "4"
															},
															"src": "12962:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "12958:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "12954:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "12954:28:0"
											},
											{
												"assignments": [
													852
												],
												"declarations": [
													{
														"constant": false,
														"id": 852,
														"mutability": "mutable",
														"name": "_year",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 921,
														"src": "12993:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 851,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "12993:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 862,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "34303030",
																	"id": 853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13009:4:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4000_by_1",
																		"typeString": "int_const 4000"
																	},
																	"value": "4000"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 856,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 854,
																				"name": "L",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 822,
																				"src": "13017:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 855,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13021:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "13017:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 857,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "13016:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "13009:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 859,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "13008:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31343631303031",
														"id": 860,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13027:7:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1461001_by_1",
															"typeString": "int_const 1461001"
														},
														"value": "1461001"
													},
													"src": "13008:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12993:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 863,
														"name": "L",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "13045:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 873,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 864,
																"name": "L",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 822,
																"src": "13049:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 867,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"hexValue": "31343631",
																				"id": 865,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13054:4:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1461_by_1",
																					"typeString": "int_const 1461"
																				},
																				"value": "1461"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 866,
																				"name": "_year",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 852,
																				"src": "13061:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "13054:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 868,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "13053:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "34",
																	"id": 869,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13070:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "13053:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "13049:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "3331",
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13074:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_31_by_1",
																"typeString": "int_const 31"
															},
															"value": "31"
														},
														"src": "13049:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "13045:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 875,
												"nodeType": "ExpressionStatement",
												"src": "13045:31:0"
											},
											{
												"assignments": [
													877
												],
												"declarations": [
													{
														"constant": false,
														"id": 877,
														"mutability": "mutable",
														"name": "_month",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 921,
														"src": "13087:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 876,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "13087:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 884,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 880,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "3830",
																	"id": 878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13104:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_80_by_1",
																		"typeString": "int_const 80"
																	},
																	"value": "80"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 879,
																	"name": "L",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 822,
																	"src": "13109:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "13104:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 881,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "13103:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "32343437",
														"id": 882,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13114:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2447_by_1",
															"typeString": "int_const 2447"
														},
														"value": "2447"
													},
													"src": "13103:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13087:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 885,
														"name": "L",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "13175:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 888,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 886,
															"name": "_month",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "13179:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "3131",
															"id": 887,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13188:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_11_by_1",
																"typeString": "int_const 11"
															},
															"value": "11"
														},
														"src": "13179:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "13175:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 890,
												"nodeType": "ExpressionStatement",
												"src": "13175:15:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 891,
														"name": "_month",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "13201:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 898,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 892,
																"name": "_month",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 877,
																"src": "13210:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "32",
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13219:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "13210:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 897,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "3132",
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13223:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_12_by_1",
																	"typeString": "int_const 12"
																},
																"value": "12"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"id": 896,
																"name": "L",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 822,
																"src": "13228:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "13223:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "13210:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "13201:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 900,
												"nodeType": "ExpressionStatement",
												"src": "13201:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 901,
														"name": "_year",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 852,
														"src": "13240:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 911,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "313030",
																	"id": 902,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13248:3:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 905,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 903,
																				"name": "N",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 830,
																				"src": "13255:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "3439",
																				"id": 904,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13259:2:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_49_by_1",
																					"typeString": "int_const 49"
																				},
																				"value": "49"
																			},
																			"src": "13255:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 906,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "13254:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "13248:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"argumentTypes": null,
																"id": 908,
																"name": "_year",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 852,
																"src": "13265:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "13248:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"id": 910,
															"name": "L",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "13273:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "13248:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "13240:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 913,
												"nodeType": "ExpressionStatement",
												"src": "13240:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 914,
														"name": "year",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 801,
														"src": "13287:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 917,
																"name": "_year",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 852,
																"src": "13302:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13294:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 915,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "13294:7:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 918,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13294:14:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13287:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 920,
												"nodeType": "ExpressionStatement",
												"src": "13287:21:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "fd08921b",
									"id": 922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getYear",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12672:2:0"
									},
									"returnParameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "year",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 922,
												"src": "12696:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12696:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12695:14:0"
									},
									"scope": 1007,
									"src": "12656:660:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 935,
										"nodeType": "Block",
										"src": "13368:79:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 927,
														"name": "isOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1617,
														"src": "13383:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13383:9:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 934,
												"nodeType": "IfStatement",
												"src": "13379:61:0",
												"trueBody": {
													"id": 933,
													"nodeType": "Block",
													"src": "13394:46:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 929,
																	"name": "YEAR_MINT_NUM",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "13409:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 930,
																	"name": "num",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 924,
																	"src": "13425:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13409:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 932,
															"nodeType": "ExpressionStatement",
															"src": "13409:19:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"functionSelector": "599a1c3a",
									"id": 936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setYearMintNum",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "num",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 936,
												"src": "13348:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13348:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13347:13:0"
									},
									"returnParameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13368:0:0"
									},
									"scope": 1007,
									"src": "13324:123:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 953,
										"nodeType": "Block",
										"src": "13516:88:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 943,
														"name": "isOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1617,
														"src": "13531:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13531:9:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 952,
												"nodeType": "IfStatement",
												"src": "13527:70:0",
												"trueBody": {
													"id": 951,
													"nodeType": "Block",
													"src": "13542:55:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 949,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 945,
																		"name": "contractMintLimit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 501,
																		"src": "13557:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 947,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 946,
																		"name": "ads",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 938,
																		"src": "13575:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "13557:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 948,
																	"name": "num",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 940,
																	"src": "13582:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13557:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 950,
															"nodeType": "ExpressionStatement",
															"src": "13557:28:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"functionSelector": "b56a711c",
									"id": 954,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setContractMintNum",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "ads",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 954,
												"src": "13483:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13483:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "num",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 954,
												"src": "13496:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13496:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13482:26:0"
									},
									"returnParameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13516:0:0"
									},
									"scope": 1007,
									"src": "13455:149:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 959,
									"mutability": "mutable",
									"name": "batchAmount",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1007,
									"src": "13612:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 955,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "13612:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"id": 958,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "3130",
											"id": 956,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "13634:2:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "3138",
											"id": 957,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "13638:2:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18_by_1",
												"typeString": "int_const 18"
											},
											"value": "18"
										},
										"src": "13634:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 991,
										"nodeType": "Block",
										"src": "13710:262:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 965,
														"name": "isOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1617,
														"src": "13725:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13725:9:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 990,
												"nodeType": "IfStatement",
												"src": "13721:244:0",
												"trueBody": {
													"id": 989,
													"nodeType": "Block",
													"src": "13736:229:0",
													"statements": [
														{
															"body": {
																"id": 987,
																"nodeType": "Block",
																"src": "13796:158:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 979,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": -15,
																						"src": "13825:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 980,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": null,
																					"src": "13825:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 981,
																						"name": "holders",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 962,
																						"src": "13837:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																							"typeString": "address[] memory"
																						}
																					},
																					"id": 983,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 982,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 968,
																						"src": "13845:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "13837:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 984,
																					"name": "batchAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 959,
																					"src": "13849:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 978,
																				"name": "_transfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1316,
																				"src": "13815:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 985,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13815:46:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 986,
																		"nodeType": "ExpressionStatement",
																		"src": "13815:46:0"
																	}
																]
															},
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 974,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 971,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 968,
																	"src": "13771:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 972,
																		"name": "holders",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 962,
																		"src": "13775:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 973,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "13775:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13771:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 988,
															"initializationExpression": {
																"assignments": [
																	968
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 968,
																		"mutability": "mutable",
																		"name": "i",
																		"nodeType": "VariableDeclaration",
																		"overrides": null,
																		"scope": 988,
																		"src": "13756:9:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 967,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "13756:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"value": null,
																		"visibility": "internal"
																	}
																],
																"id": 970,
																"initialValue": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 969,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13768:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "13756:13:0"
															},
															"loopExpression": {
																"expression": {
																	"argumentTypes": null,
																	"id": 976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "13791:3:0",
																	"subExpression": {
																		"argumentTypes": null,
																		"id": 975,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 968,
																		"src": "13791:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 977,
																"nodeType": "ExpressionStatement",
																"src": "13791:3:0"
															},
															"nodeType": "ForStatement",
															"src": "13751:203:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"functionSelector": "230614fb",
									"id": 992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "batchTransferToken",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "holders",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 992,
												"src": "13677:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 960,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "13677:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 961,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "13677:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13676:26:0"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13710:0:0"
									},
									"scope": 1007,
									"src": "13649:323:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1005,
										"nodeType": "Block",
										"src": "14024:77:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 997,
														"name": "isOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1617,
														"src": "14039:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14039:9:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1004,
												"nodeType": "IfStatement",
												"src": "14035:59:0",
												"trueBody": {
													"id": 1003,
													"nodeType": "Block",
													"src": "14050:44:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 999,
																	"name": "batchAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 959,
																	"src": "14065:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 1000,
																	"name": "num",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 994,
																	"src": "14079:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14065:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1002,
															"nodeType": "ExpressionStatement",
															"src": "14065:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"functionSelector": "db6783b8",
									"id": 1006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setBatchAmount",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "num",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1006,
												"src": "14004:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14004:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14003:13:0"
									},
									"returnParameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14024:0:0"
									},
									"scope": 1007,
									"src": "13980:121:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1008,
							"src": "9482:4622:0"
						}
					],
					"src": "35:14071:0"
				},
				"id": 0
			},
			"_lib/Context.sol": {
				"ast": {
					"absolutePath": "_lib/Context.sol",
					"exportedSymbols": {
						"Context": [
							1030
						]
					},
					"id": 1031,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1009,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1030,
							"linearizedBaseContracts": [
								1030
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1017,
										"nodeType": "Block",
										"src": "675:36:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1014,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "693:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "693:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 1013,
												"id": 1016,
												"nodeType": "Return",
												"src": "686:17:1"
											}
										]
									},
									"documentation": null,
									"id": 1018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "624:2:1"
									},
									"returnParameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1018,
												"src": "658:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "657:17:1"
									},
									"scope": 1030,
									"src": "605:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "784:168:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1023,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "795:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$1030",
														"typeString": "contract Context"
													}
												},
												"id": 1024,
												"nodeType": "ExpressionStatement",
												"src": "795:4:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1025,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "936:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "936:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1022,
												"id": 1027,
												"nodeType": "Return",
												"src": "929:15:1"
											}
										]
									},
									"documentation": null,
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "736:2:1"
									},
									"returnParameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1029,
												"src": "770:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1020,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "770:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "769:14:1"
									},
									"scope": 1030,
									"src": "719:233:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1031,
							"src": "572:383:1"
						}
					],
					"src": "35:920:1"
				},
				"id": 1
			},
			"_lib/ERC20.sol": {
				"ast": {
					"absolutePath": "_lib/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							1464
						]
					},
					"id": 1465,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1032,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:2"
						},
						{
							"absolutePath": "_lib/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 1033,
							"nodeType": "ImportDirective",
							"scope": 1465,
							"sourceUnit": 2010,
							"src": "62:24:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "_lib/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 1034,
							"nodeType": "ImportDirective",
							"scope": 1465,
							"sourceUnit": 1543,
							"src": "88:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "_lib/Context.sol",
							"file": "./Context.sol",
							"id": 1035,
							"nodeType": "ImportDirective",
							"scope": 1465,
							"sourceUnit": 1031,
							"src": "112:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1036,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1542,
										"src": "157:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1542",
											"typeString": "contract IERC20"
										}
									},
									"id": 1037,
									"nodeType": "InheritanceSpecifier",
									"src": "157:6:2"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1038,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1030,
										"src": "165:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$1030",
											"typeString": "contract Context"
										}
									},
									"id": 1039,
									"nodeType": "InheritanceSpecifier",
									"src": "165:7:2"
								}
							],
							"contractDependencies": [
								1030,
								1542
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1464,
							"linearizedBaseContracts": [
								1464,
								1030,
								1542
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1042,
									"libraryName": {
										"contractScope": null,
										"id": 1040,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1756,
										"src": "186:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1756",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "180:27:2",
									"typeName": {
										"id": 1041,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "199:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 1046,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1464,
									"src": "215:46:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1045,
										"keyType": {
											"id": 1043,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "223:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "215:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1044,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "234:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1052,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1464,
									"src": "268:68:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1051,
										"keyType": {
											"id": 1047,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "276:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "268:47:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 1050,
											"keyType": {
												"id": 1048,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "295:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "287:27:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 1049,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "306:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1054,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1464,
									"src": "345:29:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1053,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "345:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1055,
										"nodeType": "StructuredDocumentation",
										"src": "383:56:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1057,
									"mutability": "mutable",
									"name": "name",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1464,
									"src": "445:18:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1056,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "445:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "472:105:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 1060,
									"mutability": "mutable",
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1464,
									"src": "583:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1059,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "583:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1061,
										"nodeType": "StructuredDocumentation",
										"src": "612:624:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 1063,
									"mutability": "mutable",
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1464,
									"src": "1242:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1062,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1242:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1109,
										"nodeType": "Block",
										"src": "1692:217:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1075,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1057,
														"src": "1703:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1076,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "1710:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1703:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1078,
												"nodeType": "ExpressionStatement",
												"src": "1703:12:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1079,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "1726:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1080,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1068,
														"src": "1735:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1726:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "1726:16:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1083,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1063,
														"src": "1753:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1084,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1070,
														"src": "1764:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1753:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1086,
												"nodeType": "ExpressionStatement",
												"src": "1753:20:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1087,
														"name": "_supply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "1784:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1095,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1088,
															"name": "_supply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1072,
															"src": "1794:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "3130",
																"id": 1089,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1804:2:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1092,
																		"name": "_decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1070,
																		"src": "1816:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 1091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1808:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1090,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1808:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1093,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1808:18:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1804:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1794:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1784:42:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1097,
												"nodeType": "ExpressionStatement",
												"src": "1784:42:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1098,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "1837:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1099,
														"name": "_supply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "1852:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1837:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1101,
												"nodeType": "ExpressionStatement",
												"src": "1837:22:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1102,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1046,
															"src": "1870:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1105,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1103,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "1880:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1880:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1870:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1106,
														"name": "_supply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "1894:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1870:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1108,
												"nodeType": "ExpressionStatement",
												"src": "1870:31:2"
											}
										]
									},
									"documentation": {
										"id": 1064,
										"nodeType": "StructuredDocumentation",
										"src": "1272:274:2",
										"text": " @dev Sets the values for {_name} and {_symbol}, {_decimals}\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."
									},
									"id": 1110,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "_name",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1110,
												"src": "1574:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1065,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1574:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "_symbol",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1110,
												"src": "1604:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1067,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1604:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "_decimals",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1110,
												"src": "1636:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1069,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1636:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "_supply",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1110,
												"src": "1662:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1662:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1563:121:2"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1692:0:2"
									},
									"scope": 1464,
									"src": "1552:357:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1473
									],
									"body": {
										"id": 1119,
										"nodeType": "Block",
										"src": "2038:38:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1117,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1054,
													"src": "2056:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1116,
												"id": 1118,
												"nodeType": "Return",
												"src": "2049:19:2"
											}
										]
									},
									"documentation": {
										"id": 1111,
										"nodeType": "StructuredDocumentation",
										"src": "1917:51:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 1120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1113,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2011:8:2"
									},
									"parameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1994:2:2"
									},
									"returnParameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1120,
												"src": "2029:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2029:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2028:9:2"
									},
									"scope": 1464,
									"src": "1974:102:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1481
									],
									"body": {
										"id": 1133,
										"nodeType": "Block",
										"src": "2256:43:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1129,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "2274:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1131,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1130,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1123,
														"src": "2284:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2274:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1128,
												"id": 1132,
												"nodeType": "Return",
												"src": "2267:24:2"
											}
										]
									},
									"documentation": {
										"id": 1121,
										"nodeType": "StructuredDocumentation",
										"src": "2084:49:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 1134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1125,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2215:8:2"
									},
									"parameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1134,
												"src": "2158:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2158:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2157:16:2"
									},
									"returnParameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1134,
												"src": "2242:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2242:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2241:9:2"
									},
									"scope": 1464,
									"src": "2139:160:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1491
									],
									"body": {
										"id": 1154,
										"nodeType": "Block",
										"src": "2620:78:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1146,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1018,
																"src": "2641:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2641:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1148,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "2655:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1149,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1139,
															"src": "2660:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1145,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1316,
														"src": "2631:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2631:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1151,
												"nodeType": "ExpressionStatement",
												"src": "2631:37:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2686:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1144,
												"id": 1153,
												"nodeType": "Return",
												"src": "2679:11:2"
											}
										]
									},
									"documentation": {
										"id": 1135,
										"nodeType": "StructuredDocumentation",
										"src": "2307:194:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `_to` cannot be the zero address.\n - the caller must have a balance of at least `_amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 1155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1141,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2582:8:2"
									},
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1155,
												"src": "2525:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2525:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1155,
												"src": "2538:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2538:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2524:30:2"
									},
									"returnParameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1155,
												"src": "2609:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1142,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2609:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2608:6:2"
									},
									"scope": 1464,
									"src": "2507:191:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1501
									],
									"body": {
										"id": 1172,
										"nodeType": "Block",
										"src": "2896:55:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1166,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1052,
															"src": "2914:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1168,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1167,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1158,
															"src": "2926:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2914:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1170,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1169,
														"name": "_spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1160,
														"src": "2934:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2914:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1165,
												"id": 1171,
												"nodeType": "Return",
												"src": "2907:36:2"
											}
										]
									},
									"documentation": {
										"id": 1156,
										"nodeType": "StructuredDocumentation",
										"src": "2706:49:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 1173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1162,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2855:8:2"
									},
									"parameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1173,
												"src": "2780:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2780:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1173,
												"src": "2796:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2796:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2779:34:2"
									},
									"returnParameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1173,
												"src": "2882:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2881:9:2"
									},
									"scope": 1464,
									"src": "2761:190:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1511
									],
									"body": {
										"id": 1193,
										"nodeType": "Block",
										"src": "3216:82:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1185,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1018,
																"src": "3236:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3236:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1187,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "3250:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1188,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "3260:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1184,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1361,
														"src": "3227:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3227:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1190,
												"nodeType": "ExpressionStatement",
												"src": "3227:41:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3286:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1183,
												"id": 1192,
												"nodeType": "Return",
												"src": "3279:11:2"
											}
										]
									},
									"documentation": {
										"id": 1174,
										"nodeType": "StructuredDocumentation",
										"src": "2959:134:2",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `_spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 1194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1180,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3178:8:2"
									},
									"parameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1194,
												"src": "3116:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3116:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1194,
												"src": "3134:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3134:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3115:35:2"
									},
									"returnParameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1194,
												"src": "3205:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1181,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3205:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3204:6:2"
									},
									"scope": 1464,
									"src": "3099:199:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1523
									],
									"body": {
										"id": 1246,
										"nodeType": "Block",
										"src": "3905:270:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1208,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1197,
																	"src": "3924:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1211,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3941:1:2",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3933:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1209,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3933:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3933:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "3924:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1214,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1199,
																	"src": "3947:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1217,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3962:1:2",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3954:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1215,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3954:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3954:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "3947:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3924:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1207,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3916:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3916:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1222,
												"nodeType": "ExpressionStatement",
												"src": "3916:49:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1224,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "4001:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1225,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1018,
																"src": "4021:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4021:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1234,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1201,
																	"src": "4085:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1227,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1052,
																			"src": "4048:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1229,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1228,
																			"name": "_from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1197,
																			"src": "4060:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4048:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1232,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1230,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1018,
																			"src": "4067:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 1231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4067:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4048:32:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1672,
																"src": "4048:36:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4048:45:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1223,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1361,
														"src": "3978:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3978:126:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1237,
												"nodeType": "ExpressionStatement",
												"src": "3978:126:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1239,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "4125:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1240,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "4132:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1241,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "4137:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1238,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1316,
														"src": "4115:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4115:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1243,
												"nodeType": "ExpressionStatement",
												"src": "4115:30:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4163:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1206,
												"id": 1245,
												"nodeType": "Return",
												"src": "4156:11:2"
											}
										]
									},
									"documentation": {
										"id": 1195,
										"nodeType": "StructuredDocumentation",
										"src": "3306:459:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `_from` and `_to` cannot be the zero address.\n - `_from` must have a balance of at least `_amount`.\n - the caller must have allowance for `_from`'s tokens of at least\n `_amount`."
									},
									"functionSelector": "23b872dd",
									"id": 1247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1203,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3881:8:2"
									},
									"parameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1247,
												"src": "3803:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3803:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1247,
												"src": "3827:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3827:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1247,
												"src": "3849:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3792:79:2"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1247,
												"src": "3899:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1204,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3899:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3898:6:2"
									},
									"scope": 1464,
									"src": "3771:404:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1315,
										"nodeType": "Block",
										"src": "4759:345:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1258,
																"name": "_from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1250,
																"src": "4778:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1261,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4795:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4787:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1259,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4787:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1262,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4787:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "4778:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "7472616e736665722066726f6d2030",
															"id": 1264,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4799:17:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_088211d17706da49ecdf58f6ac409477cc9130fd43883e0443984cdf77b1dbc9",
																"typeString": "literal_string \"transfer from 0\""
															},
															"value": "transfer from 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_088211d17706da49ecdf58f6ac409477cc9130fd43883e0443984cdf77b1dbc9",
																"typeString": "literal_string \"transfer from 0\""
															}
														],
														"id": 1257,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4770:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4770:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1266,
												"nodeType": "ExpressionStatement",
												"src": "4770:47:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1268,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1252,
																"src": "4836:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4851:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4843:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1269,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4843:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1272,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4843:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "4836:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "7472616e7366657220746f2030",
															"id": 1274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4855:15:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01bc61e3f4d850e3eb22a5a0ac43476dcc54e69adac1202623178f29549b4b44",
																"typeString": "literal_string \"transfer to 0\""
															},
															"value": "transfer to 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01bc61e3f4d850e3eb22a5a0ac43476dcc54e69adac1202623178f29549b4b44",
																"typeString": "literal_string \"transfer to 0\""
															}
														],
														"id": 1267,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4828:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4828:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1276,
												"nodeType": "ExpressionStatement",
												"src": "4828:43:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1278,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1252,
																"src": "4890:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "307864656164",
																		"id": 1281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4905:6:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_57005_by_1",
																			"typeString": "int_const 57005"
																		},
																		"value": "0xdead"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_57005_by_1",
																			"typeString": "int_const 57005"
																		}
																	],
																	"id": 1280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4897:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1279,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4897:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1282,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4897:15:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "4890:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "7472616e7366657220746f20307864656164",
															"id": 1284,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4914:20:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0f76b0e999ef8392e30c214f6024bd49c272969cba01c2b93095d2fe0bf18da5",
																"typeString": "literal_string \"transfer to 0xdead\""
															},
															"value": "transfer to 0xdead"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0f76b0e999ef8392e30c214f6024bd49c272969cba01c2b93095d2fe0bf18da5",
																"typeString": "literal_string \"transfer to 0xdead\""
															}
														],
														"id": 1277,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4882:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4882:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1286,
												"nodeType": "ExpressionStatement",
												"src": "4882:53:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1287,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1046,
															"src": "4948:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1289,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1288,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1250,
															"src": "4958:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4948:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1294,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1254,
																"src": "4988:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1290,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1046,
																	"src": "4967:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1292,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1291,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1250,
																	"src": "4977:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4967:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1672,
															"src": "4967:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1295,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4967:29:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4948:48:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1297,
												"nodeType": "ExpressionStatement",
												"src": "4948:48:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1298,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1046,
															"src": "5007:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1300,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1299,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1252,
															"src": "5017:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5007:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1305,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1254,
																"src": "5043:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1301,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1046,
																	"src": "5024:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1303,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1302,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1252,
																	"src": "5034:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5024:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1646,
															"src": "5024:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5024:27:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5007:44:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1308,
												"nodeType": "ExpressionStatement",
												"src": "5007:44:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1310,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1250,
															"src": "5076:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1311,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1252,
															"src": "5083:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1312,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "5088:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1309,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1532,
														"src": "5067:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5067:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1314,
												"nodeType": "EmitStatement",
												"src": "5062:34:2"
											}
										]
									},
									"documentation": {
										"id": 1248,
										"nodeType": "StructuredDocumentation",
										"src": "4183:463:2",
										"text": " @dev Moves tokens `_amount` from `_from` to `_to`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `_from` cannot be the zero address.\n - `_to` cannot be the zero address.\n - `_from` must have a balance of at least `_amount`."
									},
									"id": 1316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1316,
												"src": "4681:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4681:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1316,
												"src": "4705:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4705:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1316,
												"src": "4727:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4727:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4670:79:2"
									},
									"returnParameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4759:0:2"
									},
									"scope": 1464,
									"src": "4652:452:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1360,
										"nodeType": "Block",
										"src": "5658:227:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1327,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1319,
																"src": "5677:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5695:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5687:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1328,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5687:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1331,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5687:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "5677:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "617070726f76652066726f6d2030",
															"id": 1333,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5699:16:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7be6a29a82c9e54f3748332e2433ff641b96e589a0c2b257be32ecb8594857aa",
																"typeString": "literal_string \"approve from 0\""
															},
															"value": "approve from 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7be6a29a82c9e54f3748332e2433ff641b96e589a0c2b257be32ecb8594857aa",
																"typeString": "literal_string \"approve from 0\""
															}
														],
														"id": 1326,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5669:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5669:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1335,
												"nodeType": "ExpressionStatement",
												"src": "5669:47:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1337,
																"name": "_spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1321,
																"src": "5735:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5755:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5747:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1338,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5747:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1341,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5747:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "5735:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "617070726f766520746f2030",
															"id": 1343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:14:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9735ec0b566eec43aef8e55c8869448c5c3b0e1f23c26343eec9ec39a891c8b4",
																"typeString": "literal_string \"approve to 0\""
															},
															"value": "approve to 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9735ec0b566eec43aef8e55c8869448c5c3b0e1f23c26343eec9ec39a891c8b4",
																"typeString": "literal_string \"approve to 0\""
															}
														],
														"id": 1336,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5727:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5727:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1345,
												"nodeType": "ExpressionStatement",
												"src": "5727:47:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1346,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1052,
																"src": "5787:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1349,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1347,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1319,
																"src": "5799:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5787:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1350,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1348,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1321,
															"src": "5807:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5787:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1351,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1323,
														"src": "5819:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5787:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1353,
												"nodeType": "ExpressionStatement",
												"src": "5787:39:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1355,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "5851:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1356,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1321,
															"src": "5859:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1357,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1323,
															"src": "5869:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1354,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1541,
														"src": "5842:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5842:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1359,
												"nodeType": "EmitStatement",
												"src": "5837:40:2"
											}
										]
									},
									"documentation": {
										"id": 1317,
										"nodeType": "StructuredDocumentation",
										"src": "5112:428:2",
										"text": " @dev Sets `amount` as the allowance of `_spender` over the `_owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `_owner` cannot be the zero address.\n - `_spender` cannot be the zero address."
									},
									"id": 1361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1361,
												"src": "5574:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5574:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1361,
												"src": "5599:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5599:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1361,
												"src": "5626:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5626:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5563:85:2"
									},
									"returnParameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5658:0:2"
									},
									"scope": 1464,
									"src": "5546:339:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1406,
										"nodeType": "Block",
										"src": "6218:216:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1370,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1364,
																"src": "6237:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6252:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6244:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1371,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6244:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1374,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6244:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6237:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6d696e7420746f2030",
															"id": 1376,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6256:11:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_341351e35cc1cea7d00a25dee4c4c0513a1d39ea1954597cbb7cb19fe6a8a930",
																"typeString": "literal_string \"mint to 0\""
															},
															"value": "mint to 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_341351e35cc1cea7d00a25dee4c4c0513a1d39ea1954597cbb7cb19fe6a8a930",
																"typeString": "literal_string \"mint to 0\""
															}
														],
														"id": 1369,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6229:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6229:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1378,
												"nodeType": "ExpressionStatement",
												"src": "6229:39:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1379,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "6281:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1382,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1366,
																"src": "6313:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1380,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1054,
																"src": "6296:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1646,
															"src": "6296:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6296:25:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6281:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1385,
												"nodeType": "ExpressionStatement",
												"src": "6281:40:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1386,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1046,
															"src": "6332:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1388,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1387,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "6342:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6332:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1393,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1366,
																"src": "6368:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1389,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1046,
																	"src": "6349:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1391,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1390,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1364,
																	"src": "6359:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6349:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1646,
															"src": "6349:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1394,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6349:27:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6332:44:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1396,
												"nodeType": "ExpressionStatement",
												"src": "6332:44:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6409:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1399,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6401:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1398,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6401:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1401,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6401:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1402,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "6413:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1403,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1366,
															"src": "6418:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1397,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1532,
														"src": "6392:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6392:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1405,
												"nodeType": "EmitStatement",
												"src": "6387:39:2"
											}
										]
									},
									"documentation": {
										"id": 1362,
										"nodeType": "StructuredDocumentation",
										"src": "5893:265:2",
										"text": "@dev Creates `_amount` tokens and assigns them to `_to`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `to` cannot be the zero address."
									},
									"id": 1407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1407,
												"src": "6179:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6179:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1407,
												"src": "6192:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6192:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6178:30:2"
									},
									"returnParameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6218:0:2"
									},
									"scope": 1464,
									"src": "6164:270:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1462,
										"nodeType": "Block",
										"src": "6819:295:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1416,
																"name": "_from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1410,
																"src": "6838:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6855:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6847:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1417,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6847:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6847:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6838:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6275726e2066726f6d2030",
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6859:13:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_787b4790c0cc1d5398d1165119b3cd89324d059eed4a4e3b5563167482dac8b9",
																"typeString": "literal_string \"burn from 0\""
															},
															"value": "burn from 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_787b4790c0cc1d5398d1165119b3cd89324d059eed4a4e3b5563167482dac8b9",
																"typeString": "literal_string \"burn from 0\""
															}
														],
														"id": 1415,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6830:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6830:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1424,
												"nodeType": "ExpressionStatement",
												"src": "6830:43:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1426,
																"name": "_from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1410,
																"src": "6892:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "307864656164",
																		"id": 1429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6909:6:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_57005_by_1",
																			"typeString": "int_const 57005"
																		},
																		"value": "0xdead"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_57005_by_1",
																			"typeString": "int_const 57005"
																		}
																	],
																	"id": 1428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6901:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1427,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6901:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1430,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6901:15:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6892:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6275726e2066726f6d20307864656164",
															"id": 1432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6918:18:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6b25ae7242490c676be63d6d4b6e88a8900efbe5296fb7f67d86b6a7c21cf04a",
																"typeString": "literal_string \"burn from 0xdead\""
															},
															"value": "burn from 0xdead"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6b25ae7242490c676be63d6d4b6e88a8900efbe5296fb7f67d86b6a7c21cf04a",
																"typeString": "literal_string \"burn from 0xdead\""
															}
														],
														"id": 1425,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6884:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6884:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1434,
												"nodeType": "ExpressionStatement",
												"src": "6884:53:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1435,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1046,
															"src": "6950:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1437,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1436,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1410,
															"src": "6960:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6950:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1442,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1412,
																"src": "6990:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1438,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1046,
																	"src": "6969:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1440,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1439,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1410,
																	"src": "6979:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6969:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1672,
															"src": "6969:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1443,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6969:29:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6950:48:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1445,
												"nodeType": "ExpressionStatement",
												"src": "6950:48:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1446,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "7009:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1449,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1412,
																"src": "7041:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1447,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1054,
																"src": "7024:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1672,
															"src": "7024:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1450,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7024:25:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7009:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1452,
												"nodeType": "ExpressionStatement",
												"src": "7009:40:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1454,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1410,
															"src": "7074:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "307864656164",
																	"id": 1457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7089:6:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_57005_by_1",
																		"typeString": "int_const 57005"
																	},
																	"value": "0xdead"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_57005_by_1",
																		"typeString": "int_const 57005"
																	}
																],
																"id": 1456,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7081:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1455,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7081:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1458,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7081:15:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1459,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1412,
															"src": "7098:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1453,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1532,
														"src": "7065:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7065:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1461,
												"nodeType": "EmitStatement",
												"src": "7060:46:2"
											}
										]
									},
									"documentation": {
										"id": 1408,
										"nodeType": "StructuredDocumentation",
										"src": "6442:315:2",
										"text": " @dev Destroys `_amount` tokens from `_from`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `_from` cannot be the zero address.\n - `_from` must have at least `_amount` tokens."
									},
									"id": 1463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1463,
												"src": "6778:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6778:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1463,
												"src": "6793:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6793:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6777:32:2"
									},
									"returnParameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6819:0:2"
									},
									"scope": 1464,
									"src": "6763:351:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1465,
							"src": "139:6978:2"
						}
					],
					"src": "35:7084:2"
				},
				"id": 2
			},
			"_lib/IERC20.sol": {
				"ast": {
					"absolutePath": "_lib/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1542
						]
					},
					"id": 1543,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1466,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1467,
								"nodeType": "StructuredDocumentation",
								"src": "62:136:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP.\n From https://github.com/OpenZeppelin/openzeppelin-contracts"
							},
							"fullyImplemented": false,
							"id": 1542,
							"linearizedBaseContracts": [
								1542
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 1468,
										"nodeType": "StructuredDocumentation",
										"src": "222:64:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1473,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "310:2:3"
									},
									"returnParameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1473,
												"src": "336:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "336:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "335:9:3"
									},
									"scope": 1542,
									"src": "290:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1474,
										"nodeType": "StructuredDocumentation",
										"src": "351:70:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1481,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1481,
												"src": "444:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "444:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "443:17:3"
									},
									"returnParameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1481,
												"src": "484:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "484:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "483:9:3"
									},
									"scope": 1542,
									"src": "425:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1482,
										"nodeType": "StructuredDocumentation",
										"src": "499:203:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1491,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1491,
												"src": "724:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "724:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1491,
												"src": "743:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "743:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "723:35:3"
									},
									"returnParameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1491,
												"src": "777:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1488,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "777:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "776:6:3"
									},
									"scope": 1542,
									"src": "706:77:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1492,
										"nodeType": "StructuredDocumentation",
										"src": "789:258:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1501,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1501,
												"src": "1070:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1070:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1501,
												"src": "1085:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1085:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1069:32:3"
									},
									"returnParameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1501,
												"src": "1125:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1124:9:3"
									},
									"scope": 1542,
									"src": "1051:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1502,
										"nodeType": "StructuredDocumentation",
										"src": "1140:629:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1511,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1511,
												"src": "1790:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1790:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1511,
												"src": "1807:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1807:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1789:33:3"
									},
									"returnParameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1511,
												"src": "1841:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1508,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1841:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1840:6:3"
									},
									"scope": 1542,
									"src": "1773:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1512,
										"nodeType": "StructuredDocumentation",
										"src": "1853:288:3",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1523,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1523,
												"src": "2173:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2173:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1523,
												"src": "2194:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2194:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1523,
												"src": "2218:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2218:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2166:71:3"
									},
									"returnParameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1523,
												"src": "2256:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1520,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2256:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2255:6:3"
									},
									"scope": 1542,
									"src": "2145:117:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1524,
										"nodeType": "StructuredDocumentation",
										"src": "2268:153:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 1532,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1526,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1532,
												"src": "2440:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1528,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1532,
												"src": "2462:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2462:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1530,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1532,
												"src": "2482:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2482:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2439:57:3"
									},
									"src": "2425:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1533,
										"nodeType": "StructuredDocumentation",
										"src": "2503:145:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 1541,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1541,
												"src": "2667:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1537,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1541,
												"src": "2690:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2690:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1539,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1541,
												"src": "2715:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2715:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2666:63:3"
									},
									"src": "2652:78:3"
								}
							],
							"scope": 1543,
							"src": "200:2533:3"
						}
					],
					"src": "35:2702:3"
				},
				"id": 3
			},
			"_lib/Ownable.sol": {
				"ast": {
					"absolutePath": "_lib/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							1618
						]
					},
					"id": 1619,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1544,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:4"
						},
						{
							"absolutePath": "_lib/Context.sol",
							"file": "./Context.sol",
							"id": 1545,
							"nodeType": "ImportDirective",
							"scope": 1619,
							"sourceUnit": 1031,
							"src": "62:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1546,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1030,
										"src": "118:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$1030",
											"typeString": "contract Context"
										}
									},
									"id": 1547,
									"nodeType": "InheritanceSpecifier",
									"src": "118:7:4"
								}
							],
							"contractDependencies": [
								1030
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1618,
							"linearizedBaseContracts": [
								1618,
								1030
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1549,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1618,
									"src": "133:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1548,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "133:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1555,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1551,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1555,
												"src": "191:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "191:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1553,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1555,
												"src": "222:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "190:57:4"
									},
									"src": "164:84:4"
								},
								{
									"body": {
										"id": 1572,
										"nodeType": "Block",
										"src": "378:96:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1559,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1549,
														"src": "389:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1560,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1018,
															"src": "398:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																"typeString": "function () view returns (address payable)"
															}
														},
														"id": 1561,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "398:12:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "389:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1563,
												"nodeType": "ExpressionStatement",
												"src": "389:21:4"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1567,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "455:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1566,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "447:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1565,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "447:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1568,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "447:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1569,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1549,
															"src": "459:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1564,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1555,
														"src": "426:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "426:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1571,
												"nodeType": "EmitStatement",
												"src": "421:45:4"
											}
										]
									},
									"documentation": {
										"id": 1556,
										"nodeType": "StructuredDocumentation",
										"src": "256:93:4",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 1573,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "366:2:4"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "378:0:4"
									},
									"scope": 1618,
									"src": "355:119:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1581,
										"nodeType": "Block",
										"src": "602:32:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1579,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1549,
													"src": "620:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1578,
												"id": 1580,
												"nodeType": "Return",
												"src": "613:13:4"
											}
										]
									},
									"documentation": {
										"id": 1574,
										"nodeType": "StructuredDocumentation",
										"src": "482:67:4",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "569:2:4"
									},
									"returnParameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1577,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1582,
												"src": "593:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "593:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "592:9:4"
									},
									"scope": 1618,
									"src": "555:79:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1594,
										"nodeType": "Block",
										"src": "748:75:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1586,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1018,
																	"src": "767:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 1587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "767:12:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1588,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1549,
																"src": "783:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "767:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6e6f74206f776e6572",
															"id": 1590,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "791:11:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
																"typeString": "literal_string \"not owner\""
															},
															"value": "not owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
																"typeString": "literal_string \"not owner\""
															}
														],
														"id": 1585,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "759:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "759:44:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1592,
												"nodeType": "ExpressionStatement",
												"src": "759:44:4"
											},
											{
												"id": 1593,
												"nodeType": "PlaceholderStatement",
												"src": "814:1:4"
											}
										]
									},
									"documentation": {
										"id": 1583,
										"nodeType": "StructuredDocumentation",
										"src": "642:79:4",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1595,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "745:2:4"
									},
									"src": "727:96:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1616,
										"nodeType": "Block",
										"src": "880:117:4",
										"statements": [
											{
												"assignments": [
													1601
												],
												"declarations": [
													{
														"constant": false,
														"id": 1601,
														"mutability": "mutable",
														"name": "flag",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1616,
														"src": "891:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1600,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "891:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1606,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1602,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1018,
															"src": "903:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																"typeString": "function () view returns (address payable)"
															}
														},
														"id": 1603,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "903:12:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1604,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1549,
														"src": "919:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "903:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "891:34:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1608,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1601,
																"src": "944:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 1609,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "950:4:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "944:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6e6f74206f776e6572",
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "955:11:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
																"typeString": "literal_string \"not owner\""
															},
															"value": "not owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
																"typeString": "literal_string \"not owner\""
															}
														],
														"id": 1607,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "936:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1613,
												"nodeType": "ExpressionStatement",
												"src": "936:31:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1614,
													"name": "flag",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1601,
													"src": "985:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1599,
												"id": 1615,
												"nodeType": "Return",
												"src": "978:11:4"
											}
										]
									},
									"documentation": null,
									"functionSelector": "8f32d59b",
									"id": 1617,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOwner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "851:2:4"
									},
									"returnParameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1617,
												"src": "875:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1597,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "875:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "874:6:4"
									},
									"scope": 1618,
									"src": "835:162:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1619,
							"src": "89:913:4"
						}
					],
					"src": "35:969:4"
				},
				"id": 4
			},
			"_lib/SafeMath.sol": {
				"ast": {
					"absolutePath": "_lib/SafeMath.sol",
					"exportedSymbols": {
						"Math": [
							2009
						],
						"SafeMath": [
							1756
						],
						"SafeMathExt": [
							1937
						]
					},
					"id": 2010,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1620,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1756,
							"linearizedBaseContracts": [
								1756
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1645,
										"nodeType": "Block",
										"src": "384:114:5",
										"statements": [
											{
												"assignments": [
													1631
												],
												"declarations": [
													{
														"constant": false,
														"id": 1631,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1645,
														"src": "395:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1630,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "395:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1635,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1632,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1623,
														"src": "407:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1633,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1625,
														"src": "411:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "407:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "395:17:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1637,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1631,
																"src": "431:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1638,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1623,
																"src": "436:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "431:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 1640,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "439:29:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 1636,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "423:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "423:46:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1642,
												"nodeType": "ExpressionStatement",
												"src": "423:46:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1643,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1631,
													"src": "489:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1629,
												"id": 1644,
												"nodeType": "Return",
												"src": "482:8:5"
											}
										]
									},
									"documentation": {
										"id": 1621,
										"nodeType": "StructuredDocumentation",
										"src": "86:225:5",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1646,
												"src": "330:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "330:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1646,
												"src": "341:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "341:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "329:22:5"
									},
									"returnParameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1646,
												"src": "375:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "375:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "374:9:5"
									},
									"scope": 1756,
									"src": "317:181:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1671,
										"nodeType": "Block",
										"src": "840:117:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1657,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1651,
																"src": "859:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1658,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1649,
																"src": "864:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "859:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 1660,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "867:32:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 1656,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "851:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "851:49:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1662,
												"nodeType": "ExpressionStatement",
												"src": "851:49:5"
											},
											{
												"assignments": [
													1664
												],
												"declarations": [
													{
														"constant": false,
														"id": 1664,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1671,
														"src": "911:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1663,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "911:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1668,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1665,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1649,
														"src": "923:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1666,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1651,
														"src": "927:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "923:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "911:17:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1669,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1664,
													"src": "948:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1655,
												"id": 1670,
												"nodeType": "Return",
												"src": "941:8:5"
											}
										]
									},
									"documentation": {
										"id": 1647,
										"nodeType": "StructuredDocumentation",
										"src": "506:261:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1672,
												"src": "786:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "786:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1672,
												"src": "797:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "785:22:5"
									},
									"returnParameters": {
										"id": 1655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1654,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1672,
												"src": "831:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "830:9:5"
									},
									"scope": 1756,
									"src": "773:184:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1706,
										"nodeType": "Block",
										"src": "1275:403:5",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1682,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1675,
														"src": "1510:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1683,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1515:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1510:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1688,
												"nodeType": "IfStatement",
												"src": "1506:47:5",
												"trueBody": {
													"id": 1687,
													"nodeType": "Block",
													"src": "1518:35:5",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1685,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1540:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1681,
															"id": 1686,
															"nodeType": "Return",
															"src": "1533:8:5"
														}
													]
												}
											},
											{
												"assignments": [
													1690
												],
												"declarations": [
													{
														"constant": false,
														"id": 1690,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1706,
														"src": "1565:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1689,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1565:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1694,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1691,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1675,
														"src": "1577:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1692,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1677,
														"src": "1581:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1577:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1565:17:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1696,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1690,
																	"src": "1601:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1697,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1675,
																	"src": "1605:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1601:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1699,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1677,
																"src": "1610:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 1701,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1613:35:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 1695,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1593:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1593:56:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1703,
												"nodeType": "ExpressionStatement",
												"src": "1593:56:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1704,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1690,
													"src": "1669:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1681,
												"id": 1705,
												"nodeType": "Return",
												"src": "1662:8:5"
											}
										]
									},
									"documentation": {
										"id": 1673,
										"nodeType": "StructuredDocumentation",
										"src": "965:237:5",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1707,
												"src": "1221:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1677,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1707,
												"src": "1232:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1232:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1220:22:5"
									},
									"returnParameters": {
										"id": 1681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1707,
												"src": "1266:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1266:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1265:9:5"
									},
									"scope": 1756,
									"src": "1208:470:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1732,
										"nodeType": "Block",
										"src": "2213:266:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1718,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1712,
																"src": "2299:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1719,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2303:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2299:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 1721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2306:28:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 1717,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2291:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2291:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1723,
												"nodeType": "ExpressionStatement",
												"src": "2291:44:5"
											},
											{
												"assignments": [
													1725
												],
												"declarations": [
													{
														"constant": false,
														"id": 1725,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1732,
														"src": "2346:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1724,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2346:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1729,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1726,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1710,
														"src": "2358:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1727,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1712,
														"src": "2362:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2358:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2346:17:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1730,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1725,
													"src": "2470:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1716,
												"id": 1731,
												"nodeType": "Return",
												"src": "2463:8:5"
											}
										]
									},
									"documentation": {
										"id": 1708,
										"nodeType": "StructuredDocumentation",
										"src": "1686:454:5",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1733,
												"src": "2159:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2159:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1733,
												"src": "2170:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2170:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2158:22:5"
									},
									"returnParameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1733,
												"src": "2204:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2204:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2203:9:5"
									},
									"scope": 1756,
									"src": "2146:333:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1754,
										"nodeType": "Block",
										"src": "3003:85:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1744,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1738,
																"src": "3022:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1745,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3027:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3022:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 1747,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3030:26:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 1743,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3014:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3014:43:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1749,
												"nodeType": "ExpressionStatement",
												"src": "3014:43:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1750,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1736,
														"src": "3075:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1751,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1738,
														"src": "3079:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3075:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1742,
												"id": 1753,
												"nodeType": "Return",
												"src": "3068:12:5"
											}
										]
									},
									"documentation": {
										"id": 1734,
										"nodeType": "StructuredDocumentation",
										"src": "2487:443:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1755,
												"src": "2949:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2949:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1755,
												"src": "2960:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2960:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2948:22:5"
									},
									"returnParameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1755,
												"src": "2994:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2994:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2993:9:5"
									},
									"scope": 1756,
									"src": "2936:152:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2010,
							"src": "62:3029:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1937,
							"linearizedBaseContracts": [
								1937
							],
							"name": "SafeMathExt",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1780,
										"nodeType": "Block",
										"src": "3192:113:5",
										"statements": [
											{
												"assignments": [
													1766
												],
												"declarations": [
													{
														"constant": false,
														"id": 1766,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1780,
														"src": "3203:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 1765,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "3203:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1770,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 1769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1767,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1758,
														"src": "3215:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1768,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1760,
														"src": "3219:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "3215:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3203:17:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															"id": 1774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1772,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1766,
																"src": "3239:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1773,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1758,
																"src": "3244:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "3239:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "75696e743132383a206164646974696f6e206f766572666c6f77",
															"id": 1775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3247:28:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c99ac7713d922e549dbfa2ca1a444e3009e7b3e2c0457def1559be2bff104a96",
																"typeString": "literal_string \"uint128: addition overflow\""
															},
															"value": "uint128: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c99ac7713d922e549dbfa2ca1a444e3009e7b3e2c0457def1559be2bff104a96",
																"typeString": "literal_string \"uint128: addition overflow\""
															}
														],
														"id": 1771,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3231:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3231:45:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1777,
												"nodeType": "ExpressionStatement",
												"src": "3231:45:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1778,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1766,
													"src": "3296:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 1764,
												"id": 1779,
												"nodeType": "Return",
												"src": "3289:8:5"
											}
										]
									},
									"documentation": null,
									"id": 1781,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add128",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1758,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1781,
												"src": "3138:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1757,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3138:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1760,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1781,
												"src": "3149:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1759,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3149:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3137:22:5"
									},
									"returnParameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1781,
												"src": "3183:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1762,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3183:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3182:9:5"
									},
									"scope": 1937,
									"src": "3122:183:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1805,
										"nodeType": "Block",
										"src": "3383:116:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															"id": 1793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1791,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1785,
																"src": "3402:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1792,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1783,
																"src": "3407:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "3402:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "75696e743132383a207375627472616374696f6e206f766572666c6f77",
															"id": 1794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3410:31:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_214bf26b84263a08b229ee18f74895fde1be3a33320f210ca0af7e474e7eca45",
																"typeString": "literal_string \"uint128: subtraction overflow\""
															},
															"value": "uint128: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_214bf26b84263a08b229ee18f74895fde1be3a33320f210ca0af7e474e7eca45",
																"typeString": "literal_string \"uint128: subtraction overflow\""
															}
														],
														"id": 1790,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3394:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:48:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1796,
												"nodeType": "ExpressionStatement",
												"src": "3394:48:5"
											},
											{
												"assignments": [
													1798
												],
												"declarations": [
													{
														"constant": false,
														"id": 1798,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1805,
														"src": "3453:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 1797,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "3453:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1802,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 1801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1799,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1783,
														"src": "3465:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1800,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1785,
														"src": "3469:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "3465:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3453:17:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1803,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1798,
													"src": "3490:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 1789,
												"id": 1804,
												"nodeType": "Return",
												"src": "3483:8:5"
											}
										]
									},
									"documentation": null,
									"id": 1806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub128",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1806,
												"src": "3329:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1782,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3329:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1806,
												"src": "3340:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1784,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3328:22:5"
									},
									"returnParameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1806,
												"src": "3374:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1787,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3374:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3373:9:5"
									},
									"scope": 1937,
									"src": "3313:186:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1830,
										"nodeType": "Block",
										"src": "3573:111:5",
										"statements": [
											{
												"assignments": [
													1816
												],
												"declarations": [
													{
														"constant": false,
														"id": 1816,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1830,
														"src": "3584:8:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 1815,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "3584:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1820,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 1819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1817,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1808,
														"src": "3595:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1818,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1810,
														"src": "3599:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "3595:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3584:16:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"id": 1824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1822,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1816,
																"src": "3619:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1823,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1808,
																"src": "3624:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "3619:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "75696e7436343a206164646974696f6e206f766572666c6f77",
															"id": 1825,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3627:27:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7675c39f44124aa9788d16e91930c0fa6aa81eb57a5f5d1f222c20d9527e3d87",
																"typeString": "literal_string \"uint64: addition overflow\""
															},
															"value": "uint64: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7675c39f44124aa9788d16e91930c0fa6aa81eb57a5f5d1f222c20d9527e3d87",
																"typeString": "literal_string \"uint64: addition overflow\""
															}
														],
														"id": 1821,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3611:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3611:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1827,
												"nodeType": "ExpressionStatement",
												"src": "3611:44:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1828,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1816,
													"src": "3675:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 1814,
												"id": 1829,
												"nodeType": "Return",
												"src": "3668:8:5"
											}
										]
									},
									"documentation": null,
									"id": 1831,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add64",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1831,
												"src": "3522:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1807,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3522:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1831,
												"src": "3532:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1809,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3532:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3521:20:5"
									},
									"returnParameters": {
										"id": 1814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1831,
												"src": "3565:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1812,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3565:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3564:8:5"
									},
									"scope": 1937,
									"src": "3507:177:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1855,
										"nodeType": "Block",
										"src": "3758:114:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"id": 1843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1841,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1835,
																"src": "3777:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1842,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1833,
																"src": "3782:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "3777:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "75696e7436343a207375627472616374696f6e206f766572666c6f77",
															"id": 1844,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3785:30:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_79791704ba5ccf52eae5c0e67d393b26febf6f2799eb0d958daaee578ba9781f",
																"typeString": "literal_string \"uint64: subtraction overflow\""
															},
															"value": "uint64: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_79791704ba5ccf52eae5c0e67d393b26febf6f2799eb0d958daaee578ba9781f",
																"typeString": "literal_string \"uint64: subtraction overflow\""
															}
														],
														"id": 1840,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3769:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3769:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1846,
												"nodeType": "ExpressionStatement",
												"src": "3769:47:5"
											},
											{
												"assignments": [
													1848
												],
												"declarations": [
													{
														"constant": false,
														"id": 1848,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1855,
														"src": "3827:8:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 1847,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "3827:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1852,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 1851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1849,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1833,
														"src": "3838:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1850,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1835,
														"src": "3842:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "3838:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3827:16:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1853,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1848,
													"src": "3863:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 1839,
												"id": 1854,
												"nodeType": "Return",
												"src": "3856:8:5"
											}
										]
									},
									"documentation": null,
									"id": 1856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub64",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1856,
												"src": "3707:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1832,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3707:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1856,
												"src": "3717:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1834,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3717:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3706:20:5"
									},
									"returnParameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1856,
												"src": "3750:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1837,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3750:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3749:8:5"
									},
									"scope": 1937,
									"src": "3692:180:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1875,
										"nodeType": "Block",
										"src": "3940:161:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1864,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1858,
																"src": "3973:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "307830313030303030303030303030303030303030303030303030303030303030303030",
																"id": 1865,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3977:36:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																	"typeString": "int_const 3402...(31 digits omitted)...1456"
																},
																"value": "0x0100000000000000000000000000000000"
															},
															"src": "3973:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "75696e743132383a206e756d626572206f766572666c6f77",
															"id": 1867,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4028:26:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a55ac4ef8ccd14ae33c9df525bfff93daf1b2199312485325ac861b80b5a6c04",
																"typeString": "literal_string \"uint128: number overflow\""
															},
															"value": "uint128: number overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a55ac4ef8ccd14ae33c9df525bfff93daf1b2199312485325ac861b80b5a6c04",
																"typeString": "literal_string \"uint128: number overflow\""
															}
														],
														"id": 1863,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3951:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3951:114:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1869,
												"nodeType": "ExpressionStatement",
												"src": "3951:114:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1872,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1858,
															"src": "4091:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1871,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4083:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint128_$",
															"typeString": "type(uint128)"
														},
														"typeName": {
															"id": 1870,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "4083:7:5",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4083:10:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 1862,
												"id": 1874,
												"nodeType": "Return",
												"src": "4076:17:5"
											}
										]
									},
									"documentation": null,
									"id": 1876,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe128",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1876,
												"src": "3897:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3897:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3896:11:5"
									},
									"returnParameters": {
										"id": 1862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1876,
												"src": "3931:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1860,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3931:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3930:9:5"
									},
									"scope": 1937,
									"src": "3880:221:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1895,
										"nodeType": "Block",
										"src": "4167:106:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1884,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1878,
																"src": "4186:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3078303130303030303030303030303030303030",
																"id": 1885,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4190:20:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18446744073709551616_by_1",
																	"typeString": "int_const 18446744073709551616"
																},
																"value": "0x010000000000000000"
															},
															"src": "4186:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "75696e7436343a206e756d626572206f766572666c6f77",
															"id": 1887,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4212:25:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_71a394c299de6cc8d998535a4904909b3af23ceccb6c6935d76929de286c9460",
																"typeString": "literal_string \"uint64: number overflow\""
															},
															"value": "uint64: number overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_71a394c299de6cc8d998535a4904909b3af23ceccb6c6935d76929de286c9460",
																"typeString": "literal_string \"uint64: number overflow\""
															}
														],
														"id": 1883,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4178:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4178:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1889,
												"nodeType": "ExpressionStatement",
												"src": "4178:60:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1892,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1878,
															"src": "4263:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1891,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4256:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 1890,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4256:6:5",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4256:9:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 1882,
												"id": 1894,
												"nodeType": "Return",
												"src": "4249:16:5"
											}
										]
									},
									"documentation": null,
									"id": 1896,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe64",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1878,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1896,
												"src": "4125:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4125:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4124:11:5"
									},
									"returnParameters": {
										"id": 1882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1881,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1896,
												"src": "4159:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1880,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4159:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4158:8:5"
									},
									"scope": 1937,
									"src": "4109:164:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1915,
										"nodeType": "Block",
										"src": "4339:98:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1904,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1898,
																"src": "4358:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "307830313030303030303030",
																"id": 1905,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4362:12:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																},
																"value": "0x0100000000"
															},
															"src": "4358:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "75696e7433323a206e756d626572206f766572666c6f77",
															"id": 1907,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4376:25:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b896ab161d2704c243b43595cba333aac88f946cbf2b30e564ab729c121cac8",
																"typeString": "literal_string \"uint32: number overflow\""
															},
															"value": "uint32: number overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b896ab161d2704c243b43595cba333aac88f946cbf2b30e564ab729c121cac8",
																"typeString": "literal_string \"uint32: number overflow\""
															}
														],
														"id": 1903,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4350:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4350:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1909,
												"nodeType": "ExpressionStatement",
												"src": "4350:52:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1912,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1898,
															"src": "4427:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1911,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4420:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": {
															"id": 1910,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "4420:6:5",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:9:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 1902,
												"id": 1914,
												"nodeType": "Return",
												"src": "4413:16:5"
											}
										]
									},
									"documentation": null,
									"id": 1916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe32",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1916,
												"src": "4297:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4297:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4296:11:5"
									},
									"returnParameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1916,
												"src": "4331:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1900,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4331:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4330:8:5"
									},
									"scope": 1937,
									"src": "4281:156:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1935,
										"nodeType": "Block",
										"src": "4503:94:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1924,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1918,
																"src": "4522:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3078303130303030",
																"id": 1925,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4526:8:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_65536_by_1",
																	"typeString": "int_const 65536"
																},
																"value": "0x010000"
															},
															"src": "4522:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "75696e7433323a206e756d626572206f766572666c6f77",
															"id": 1927,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4536:25:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b896ab161d2704c243b43595cba333aac88f946cbf2b30e564ab729c121cac8",
																"typeString": "literal_string \"uint32: number overflow\""
															},
															"value": "uint32: number overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b896ab161d2704c243b43595cba333aac88f946cbf2b30e564ab729c121cac8",
																"typeString": "literal_string \"uint32: number overflow\""
															}
														],
														"id": 1923,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4514:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4514:48:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1929,
												"nodeType": "ExpressionStatement",
												"src": "4514:48:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1932,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1918,
															"src": "4587:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1931,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4580:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint16_$",
															"typeString": "type(uint16)"
														},
														"typeName": {
															"id": 1930,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "4580:6:5",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4580:9:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 1922,
												"id": 1934,
												"nodeType": "Return",
												"src": "4573:16:5"
											}
										]
									},
									"documentation": null,
									"id": 1936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe16",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1936,
												"src": "4461:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4461:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4460:11:5"
									},
									"returnParameters": {
										"id": 1922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1936,
												"src": "4495:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1920,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4495:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4494:8:5"
									},
									"scope": 1937,
									"src": "4445:152:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2010,
							"src": "3095:1505:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2009,
							"linearizedBaseContracts": [
								2009
							],
							"name": "Math",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1954,
										"nodeType": "Block",
										"src": "4758:40:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1949,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1947,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1940,
															"src": "4776:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1948,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1942,
															"src": "4781:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4776:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"id": 1951,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1942,
														"src": "4789:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4776:14:5",
													"trueExpression": {
														"argumentTypes": null,
														"id": 1950,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1940,
														"src": "4785:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1946,
												"id": 1953,
												"nodeType": "Return",
												"src": "4769:21:5"
											}
										]
									},
									"documentation": {
										"id": 1938,
										"nodeType": "StructuredDocumentation",
										"src": "4624:61:5",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1940,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1955,
												"src": "4704:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4704:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1955,
												"src": "4715:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4715:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4703:22:5"
									},
									"returnParameters": {
										"id": 1946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1945,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1955,
												"src": "4749:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4749:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4748:9:5"
									},
									"scope": 2009,
									"src": "4691:107:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1972,
										"nodeType": "Block",
										"src": "4941:39:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1967,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1965,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1958,
															"src": "4959:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1966,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1960,
															"src": "4963:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4959:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"id": 1969,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1960,
														"src": "4971:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4959:13:5",
													"trueExpression": {
														"argumentTypes": null,
														"id": 1968,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1958,
														"src": "4967:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1964,
												"id": 1971,
												"nodeType": "Return",
												"src": "4952:20:5"
											}
										]
									},
									"documentation": {
										"id": 1956,
										"nodeType": "StructuredDocumentation",
										"src": "4806:62:5",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1973,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1958,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1973,
												"src": "4887:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1960,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1973,
												"src": "4898:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4898:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4886:22:5"
									},
									"returnParameters": {
										"id": 1964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1963,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1973,
												"src": "4932:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4932:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4931:9:5"
									},
									"scope": 2009,
									"src": "4874:106:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2007,
										"nodeType": "Block",
										"src": "5170:126:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1991,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1983,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1976,
																		"src": "5244:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 1984,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5248:1:5",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "5244:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1986,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5243:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1987,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1978,
																		"src": "5254:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 1988,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5258:1:5",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "5254:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1990,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5253:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5243:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2003,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2000,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1994,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 1992,
																							"name": "a",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1976,
																							"src": "5266:1:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "%",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "32",
																							"id": 1993,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "5270:1:5",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2_by_1",
																								"typeString": "int_const 2"
																							},
																							"value": "2"
																						},
																						"src": "5266:5:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1995,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5265:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1998,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 1996,
																							"name": "b",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1978,
																							"src": "5276:1:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "%",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "32",
																							"id": 1997,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "5280:1:5",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2_by_1",
																								"typeString": "int_const 2"
																							},
																							"value": "2"
																						},
																						"src": "5276:5:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1999,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5275:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5265:17:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2001,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5264:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 2002,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5286:1:5",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "5264:23:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2004,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5263:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5243:45:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1982,
												"id": 2006,
												"nodeType": "Return",
												"src": "5236:52:5"
											}
										]
									},
									"documentation": {
										"id": 1974,
										"nodeType": "StructuredDocumentation",
										"src": "4988:105:5",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2008,
												"src": "5116:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1978,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2008,
												"src": "5127:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5127:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5115:22:5"
									},
									"returnParameters": {
										"id": 1982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1981,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2008,
												"src": "5161:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5161:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5160:9:5"
									},
									"scope": 2009,
									"src": "5099:197:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2010,
							"src": "4604:695:5"
						}
					],
					"src": "35:5266:5"
				},
				"id": 5
			}
		}
	}
}