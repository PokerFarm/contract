{
	"id": "5b14f42b8b784b44425940fc81680a6f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"LP/LP.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.6;\r\n\r\nimport \"../_lib/SafeMath.sol\";\r\nimport \"../_lib/ERC20.sol\";\r\nimport \"../_lib/Ownable.sol\";\r\n\r\n\r\ninterface IPokerToken {\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address _owner) external view returns (uint256);\r\n\r\n    function transfer(address _to, uint256 _amount) external returns (bool);\r\n\r\n    function transferFrom(\r\n        address _from,\r\n        address _to,\r\n        uint256 _amount\r\n    ) external returns (bool);\r\n\r\n    function mint(address _to, uint256 _amount) external;\r\n\r\n    function burn(uint256 _amount) external;\r\n}\r\n\r\ninterface ILPToken {\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    function balanceOf(address _owner) external view returns (uint256);\r\n\r\n    function transfer(address _to, uint256 _amount) external returns (bool);\r\n\r\n    function transferFrom(\r\n        address _from,\r\n        address _to,\r\n        uint256 _amount\r\n    ) external returns (bool);\r\n}\r\n\r\ninterface IBurnCoin {\r\n    function burn(uint256 _amount) external;\r\n}\r\n\r\ncontract LP {\r\n    using SafeMath for uint256;\r\n    IPokerToken poker;\r\n    ILPToken lp;\r\n    IBurnCoin burnCoin;\r\n    address public owner;\r\n    address public newContractAddress;\r\n\r\n    constructor(\r\n        IPokerToken _poker,\r\n        ILPToken _lp,\r\n        IBurnCoin _burncoin\r\n    ) public {\r\n        poker = _poker;\r\n        owner = msg.sender;\r\n        lastUpdateTime = getTime();\r\n        burnCoin = _burncoin;\r\n        lp = _lp;\r\n    }\r\n\r\n    struct UserInfo {\r\n        uint256 shares;\r\n        uint256 lastDepositedTime;\r\n        uint256 lastUserActionTime;\r\n        uint256 coinAtlastUserAction;\r\n        uint256 coinPerShares;\r\n        uint256 rewardDebt;\r\n        uint256 rewards;\r\n        uint256 amount;\r\n    }\r\n    uint256 public accPerShare = 0;\r\n    uint256 public totalLpFee = 0;\r\n    uint256 public totalShares = 0;\r\n    uint256 public totalAmount = 0;\r\n    uint256 public lastUpdateTime = 0;\r\n    uint256 public withdrawFeePeriod = 7 days;       // 7 days\r\n    //uint256 public withdrawFeePeriod = 10 minutes; // 测试用\r\n    uint256 public stakingStartTime = 0;\r\n    bool public stakingSwitch = false;\r\n    uint256 decimals = 18;\r\n\r\n    uint256 constant ONE = 10**18;\r\n    function divFloor(uint256 target, uint256 d) internal pure returns (uint256) {\r\n        return target.mul(ONE).div(d);\r\n    }\r\n    function decimalMul(uint256 target, uint256 d) internal pure returns (uint256) {\r\n        return target.mul(d) / ONE;\r\n    }\r\n\r\n    mapping(address => UserInfo) public userInfo;\r\n\r\n    event Deposit(\r\n        address indexed sender,\r\n        uint256 amount,\r\n        uint256 shares,\r\n        uint256 lastDepositedTime\r\n    );\r\n    event Withdraw(address indexed sender, uint256 amount, uint256 shares);\r\n\r\n    function deposit(uint256 _amount) public {\r\n        require(_amount > 0, \"Nothing to deposit\");\r\n\r\n        updatePool();\r\n        uint256 bal = lpBalance();\r\n\r\n        UserInfo storage user = userInfo[msg.sender];\r\n\r\n        if (user.amount > 0) {\r\n            uint256 pending = decimalMul(user.amount, accPerShare).sub(\r\n                user.rewardDebt\r\n            );\r\n            //totalAmount = totalAmount.sub(pending);\r\n            user.rewards = user.rewards.add(pending);\r\n        }\r\n        else\r\n            user.rewards = 0;\r\n\r\n        lp.transferFrom(msg.sender, address(this), _amount);\r\n\r\n        uint256 currentShares = 0;\r\n        if (totalShares != 0) {\r\n            currentShares = (_amount.mul(totalShares)).div(bal);\r\n        } else {\r\n            currentShares = _amount.mul(getEther());\r\n        }\r\n\r\n        user.shares = user.shares.add(currentShares);\r\n        totalShares = totalShares.add(currentShares);\r\n        user.coinAtlastUserAction = user.rewards;\r\n\r\n        user.amount = user.amount.add(_amount);\r\n        user.rewardDebt = decimalMul(user.amount,accPerShare);\r\n\r\n        user.lastUserActionTime = getTime();\r\n        user.lastDepositedTime = getTime();\r\n\r\n        emit Deposit(msg.sender, _amount, currentShares, block.timestamp);\r\n    }\r\n\r\n    function withdraw(uint256 _shares) public {\r\n        UserInfo storage user = userInfo[msg.sender];\r\n        require(_shares > 0, \"Nothing to withdraw\");\r\n        require(_shares <= user.shares, \"Withdraw amount exceeds balance\");\r\n\r\n        updatePool();\r\n\r\n        //用户所有收益\r\n        uint256 userTotalAmount =  decimalMul(user.amount,accPerShare).sub(user.rewardDebt).add(user.rewards);\r\n        //份额计算赎回多少比例收益\r\n        uint256 withdrawAmount = userTotalAmount.mul(_shares).div(user.shares);\r\n\r\n        uint256 curLp = user.amount.mul(_shares).div(user.shares);\r\n        user.shares = user.shares.sub(_shares);\r\n        totalShares = totalShares.sub(_shares);\r\n\r\n        require(\r\n            totalAmount >= withdrawAmount,\r\n            \"Withdraw amount exceeds balance\"\r\n        );\r\n\r\n        totalAmount = totalAmount.sub(withdrawAmount);\r\n        \r\n        //历史收益\r\n        user.rewards = userTotalAmount.sub(withdrawAmount);\r\n\r\n        //手续费之前sub\r\n        user.amount = user.amount.sub(curLp);\r\n\r\n        if (getTime() < user.lastDepositedTime.add(withdrawFeePeriod)) {\r\n            uint256 fee = curLp.mul(100).div(10000);\r\n            curLp = curLp.sub(fee);\r\n            totalLpFee = totalLpFee.add(fee);\r\n        }\r\n\r\n        lp.transfer(address(msg.sender), curLp);\r\n        poker.transfer(msg.sender, withdrawAmount);\r\n\r\n        if (user.shares > 0) {\r\n            user.rewardDebt = decimalMul(user.amount,accPerShare);\r\n            user.coinPerShares = sharesPrice();\r\n            user.coinAtlastUserAction = user.rewards;\r\n        } else \r\n            user.coinPerShares = 0;\r\n\r\n        user.lastUserActionTime = block.timestamp;\r\n\r\n        emit Withdraw(msg.sender, withdrawAmount, _shares);\r\n    }\r\n\r\n    function lpBalance() public view returns (uint256) {\r\n        return lp.balanceOf(address(this)).sub(totalLpFee);\r\n    }\r\n\r\n    function updatePool() public {\r\n        uint256 curTime = getTime();\r\n        if (curTime <= lastUpdateTime) {\r\n            return;\r\n        }\r\n        uint256 lpb = lpBalance();\r\n        if (lpb <= 0) {\r\n            lastUpdateTime = curTime;\r\n            return;\r\n        }\r\n\r\n        uint256 multiplier = now - lastUpdateTime;\r\n        uint256 reward = multiplier.mul(getStakingCoinPerSec());\r\n        lastUpdateTime = curTime;\r\n        totalAmount = totalAmount.add(reward);\r\n        accPerShare = accPerShare.add(divFloor(reward,lpb));\r\n        poker.mint(address(this), reward);\r\n    }\r\n\r\n    function pendingCoin() external view returns (uint256) {\r\n        uint256 curTime = getTime();\r\n        if (lpBalance() <= 0) {\r\n            return 0;\r\n        }\r\n        uint256 multiplier = curTime - lastUpdateTime;\r\n        uint256 reward = multiplier.mul(getStakingCoinPerSec());\r\n        return reward;\r\n    }\r\n\r\n    function totalStakingAmount() public view returns (uint256) {\r\n        return this.pendingCoin().add(totalAmount);\r\n    }\r\n\r\n    function myBenefits() public view returns (uint256) {\r\n        if (totalShares == 0) \r\n            return 0;\r\n        UserInfo storage user = userInfo[msg.sender];\r\n        uint256 computePer = accPerShare.add(divFloor(this.pendingCoin(),lpBalance()));\r\n        uint256 ben = decimalMul(user.amount,computePer);\r\n\r\n        if (ben > user.rewardDebt)\r\n            return ben.sub(user.rewardDebt);\r\n        else\r\n            return 0;\r\n    }\r\n\r\n    function myValue() public view returns (uint256) {\r\n        uint256 computePer = accPerShare.add(divFloor(this.pendingCoin(),lpBalance()));\r\n        UserInfo storage user = userInfo[msg.sender];\r\n        if(user.shares == 0) return 0;\r\n        return decimalMul(user.amount,computePer).sub(user.rewardDebt).add(user.rewards);\r\n    }\r\n\r\n    function sharesPrice() public view returns (uint256) {\r\n        uint256 lpb = lpBalance();\r\n        if (lpb == 0) return 0;\r\n        uint256 computePer = accPerShare.add(divFloor(this.pendingCoin(),lpb));\r\n        return lpb.mul(getEther()).mul(computePer).div(totalShares);\r\n    }\r\n\r\n    // function getTime()\r\n    function getTime() public view returns (uint256) {\r\n        return now;\r\n    }\r\n\r\n    function getPkBalance() public view returns (uint256) {\r\n        return poker.balanceOf(address(this));\r\n    }\r\n\r\n    function getEther() public view returns (uint256) {\r\n        return 10**uint256(decimals);\r\n    }\r\n\r\n    //todo 当前是测试时间\r\n    function getStakingCoinPerSec() public view returns (uint256) {\r\n        uint256 sec = 24 * 3600;\r\n        uint256 curTime = getTime();\r\n        uint256 coin = 1;\r\n\r\n        if (stakingSwitch == false) {\r\n            uint256 maxCoin = 122300;\r\n            coin = maxCoin.mul((10**uint256(decimals))).div(sec);\r\n            return coin;\r\n        }\r\n\r\n        // 24 * 3600 * 7 * 2\r\n        if (curTime < (stakingStartTime + 60 * 5)) {\r\n            uint256 maxCoin = 2800000;\r\n            coin = maxCoin.mul((10**uint256(decimals))).div(sec);\r\n        }\r\n        // 24 * 3600 * 7 * 4\r\n        else if (curTime < (stakingStartTime + 60 * 10)) {\r\n            uint256 maxCoin = 1400000;\r\n            coin = maxCoin.mul((10**uint256(decimals))).div(sec);\r\n        } else {\r\n            uint256 maxCoin = 122300;\r\n            coin = maxCoin.mul((10**uint256(decimals))).div(sec);\r\n        }\r\n        return coin;\r\n    }\r\n\r\n    function setFeeAddress(address newAddress) public {\r\n        require(msg.sender == owner);\r\n        require(newAddress != address(0), \"set to 0\");\r\n        require(newAddress != address(0xdead), \"set to 0xdead\");\r\n        newContractAddress = newAddress;\r\n    }\r\n\r\n    function transferLpFee(uint256 amount) public {\r\n        require(msg.sender == owner);\r\n        require(newContractAddress != address(0), \"transfer to 0\");\r\n        require(totalLpFee >= amount, \"not enough\");\r\n\r\n        lp.transfer(newContractAddress, amount);\r\n    }\r\n\r\n    function setStakingSwitch(bool flag) public {\r\n        if (msg.sender == owner) {\r\n            if (flag) {\r\n                stakingStartTime = getTime();\r\n            } else {\r\n                stakingStartTime = 0;\r\n            }\r\n            stakingSwitch = flag;\r\n        }\r\n    }\r\n\r\n    function setLp(ILPToken _lp) public {\r\n        if (msg.sender == owner) {\r\n            lp = _lp;\r\n        }\r\n    }\r\n}\r\n"
			},
			"_lib/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.6;\r\n\r\nimport \"./Context.sol\";\r\n\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() internal {\r\n        _owner = _msgSender();\r\n        emit OwnershipTransferred(address(0), _owner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(_msgSender() == _owner, \"not owner\");\r\n        _;\r\n    }\r\n    \r\n    function isOwner() public view returns (bool){\r\n        bool flag = _msgSender() == _owner;\r\n        require(flag==true,\"not owner\");\r\n        return flag;\r\n    }\r\n\r\n}\r\n"
			},
			"_lib/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.6;\r\n\r\nimport \"./SafeMath.sol\";\r\nimport \"./IERC20.sol\";\r\nimport \"./Context.sol\";\r\n\r\ncontract ERC20 is IERC20, Context {\r\n    using SafeMath for uint256;\r\n\r\n    mapping(address => uint256) internal _balances;\r\n    mapping(address => mapping(address => uint256)) internal _allowances;\r\n\r\n    uint256 internal _totalSupply;\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    string public name;\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    string public symbol;\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\r\n     * called.\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    uint8 public decimals;\r\n\r\n    /**\r\n     * @dev Sets the values for {_name} and {_symbol}, {_decimals}\r\n     *\r\n     * To select a different value for {decimals}, use {_setupDecimals}.\r\n     *\r\n     * All three of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor(\r\n        string memory _name,\r\n        string memory _symbol,\r\n        uint8 _decimals,\r\n        uint256 _supply\r\n    ) public {\r\n        name = _name;\r\n        symbol = _symbol;\r\n        decimals = _decimals;\r\n        _supply = _supply * 10**uint256(_decimals);\r\n        _totalSupply = _supply;\r\n        _balances[msg.sender] = _supply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() external view override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address _owner)\r\n        external\r\n        view\r\n        override\r\n        returns (uint256)\r\n    {\r\n        return _balances[_owner];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `_to` cannot be the zero address.\r\n     * - the caller must have a balance of at least `_amount`.\r\n     */\r\n    function transfer(address _to, uint256 _amount)\r\n        external\r\n        override\r\n        returns (bool)\r\n    {\r\n        _transfer(_msgSender(), _to, _amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address _owner, address _spender)\r\n        external\r\n        view\r\n        override\r\n        returns (uint256)\r\n    {\r\n        return _allowances[_owner][_spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `_spender` cannot be the zero address.\r\n     */\r\n    function approve(address _spender, uint256 _amount)\r\n        external\r\n        override\r\n        returns (bool)\r\n    {\r\n        _approve(_msgSender(), _spender, _amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {ERC20}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `_from` and `_to` cannot be the zero address.\r\n     * - `_from` must have a balance of at least `_amount`.\r\n     * - the caller must have allowance for `_from`'s tokens of at least\r\n     * `_amount`.\r\n     */\r\n    function transferFrom(\r\n        address _from,\r\n        address _to,\r\n        uint256 _amount\r\n    ) external override returns (bool) {\r\n        require(_from != address(0) && _to != address(0));\r\n\r\n        _approve(\r\n            _from,\r\n            _msgSender(),\r\n            _allowances[_from][_msgSender()].sub(_amount)\r\n        );\r\n        _transfer(_from, _to, _amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves tokens `_amount` from `_from` to `_to`.\r\n     *\r\n     * This is internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `_from` cannot be the zero address.\r\n     * - `_to` cannot be the zero address.\r\n     * - `_from` must have a balance of at least `_amount`.\r\n     */\r\n    function _transfer(\r\n        address _from,\r\n        address _to,\r\n        uint256 _amount\r\n    ) internal {\r\n        require(_from != address(0), \"transfer from 0\");\r\n        require(_to != address(0), \"transfer to 0\");\r\n        require(_to != address(0xdead), \"transfer to 0xdead\");\r\n\r\n        _balances[_from] = _balances[_from].sub(_amount);\r\n        _balances[_to] = _balances[_to].add(_amount);\r\n        emit Transfer(_from, _to, _amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `_spender` over the `_owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `_owner` cannot be the zero address.\r\n     * - `_spender` cannot be the zero address.\r\n     */\r\n    function _approve(\r\n        address _owner,\r\n        address _spender,\r\n        uint256 _amount\r\n    ) internal {\r\n        require(_owner != address(0), \"approve from 0\");\r\n        require(_spender != address(0), \"approve to 0\");\r\n\r\n        _allowances[_owner][_spender] = _amount;\r\n        emit Approval(_owner, _spender, _amount);\r\n    }\r\n\r\n    /** @dev Creates `_amount` tokens and assigns them to `_to`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     */\r\n    function _mint(address _to, uint256 _amount) internal {\r\n        require(_to != address(0), \"mint to 0\");\r\n\r\n        _totalSupply = _totalSupply.add(_amount);\r\n        _balances[_to] = _balances[_to].add(_amount);\r\n        emit Transfer(address(0), _to, _amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `_amount` tokens from `_from`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `_from` cannot be the zero address.\r\n     * - `_from` must have at least `_amount` tokens.\r\n     */\r\n    function _burn(address _from, uint256 _amount) internal {\r\n        require(_from != address(0), \"burn from 0\");\r\n        require(_from != address(0xdead), \"burn from 0xdead\");\r\n\r\n        _balances[_from] = _balances[_from].sub(_amount);\r\n        _totalSupply = _totalSupply.sub(_amount);\r\n        emit Transfer(_from, address(0xdead), _amount);\r\n    }\r\n}\r\n"
			},
			"_lib/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.6;\r\n\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a, \"SafeMath: subtraction overflow\");\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers. Reverts on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Solidity only automatically asserts when dividing by 0\r\n        require(b > 0, \"SafeMath: division by zero\");\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b != 0, \"SafeMath: modulo by zero\");\r\n        return a % b;\r\n    }\r\n}\r\n\r\nlibrary SafeMathExt {\r\n    function add128(uint128 a, uint128 b) internal pure returns (uint128) {\r\n        uint128 c = a + b;\r\n        require(c >= a, \"uint128: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    function sub128(uint128 a, uint128 b) internal pure returns (uint128) {\r\n        require(b <= a, \"uint128: subtraction overflow\");\r\n        uint128 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    function add64(uint64 a, uint64 b) internal pure returns (uint64) {\r\n        uint64 c = a + b;\r\n        require(c >= a, \"uint64: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    function sub64(uint64 a, uint64 b) internal pure returns (uint64) {\r\n        require(b <= a, \"uint64: subtraction overflow\");\r\n        uint64 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    function safe128(uint256 a) internal pure returns (uint128) {\r\n        require(\r\n            a < 0x0100000000000000000000000000000000,\r\n            \"uint128: number overflow\"\r\n        );\r\n        return uint128(a);\r\n    }\r\n\r\n    function safe64(uint256 a) internal pure returns (uint64) {\r\n        require(a < 0x010000000000000000, \"uint64: number overflow\");\r\n        return uint64(a);\r\n    }\r\n\r\n    function safe32(uint256 a) internal pure returns (uint32) {\r\n        require(a < 0x0100000000, \"uint32: number overflow\");\r\n        return uint32(a);\r\n    }\r\n\r\n    function safe16(uint256 a) internal pure returns (uint16) {\r\n        require(a < 0x010000, \"uint32: number overflow\");\r\n        return uint16(a);\r\n    }\r\n}\r\n\r\nlibrary Math {\r\n    /**\r\n     * @dev Returns the largest of two numbers.\r\n     */\r\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a >= b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two numbers.\r\n     */\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two numbers. The result is rounded towards\r\n     * zero.\r\n     */\r\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // (a + b) / 2 can overflow, so we distribute\r\n        return (a / 2) + (b / 2) + (((a % 2) + (b % 2)) / 2);\r\n    }\r\n}\r\n"
			},
			"_lib/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.6;\r\n\r\n/*\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with GSN meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address payable) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes memory) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}"
			},
			"_lib/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.6.6;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n * From https://github.com/OpenZeppelin/openzeppelin-contracts\r\n */\r\ninterface IERC20 {\r\n  /**\r\n   * @dev Returns the amount of tokens in existence.\r\n   */\r\n  function totalSupply() external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Returns the amount of tokens owned by `account`.\r\n   */\r\n  function balanceOf(address account) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n  function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Returns the remaining number of tokens that `spender` will be\r\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n   * zero by default.\r\n   *\r\n   * This value changes when {approve} or {transferFrom} are called.\r\n   */\r\n  function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n  /**\r\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n   * that someone may use both the old and the new allowance by unfortunate\r\n   * transaction ordering. One possible solution to mitigate this race\r\n   * condition is to first reduce the spender's allowance to 0 and set the\r\n   * desired value afterwards:\r\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n   *\r\n   * Emits an {Approval} event.\r\n   */\r\n  function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n  /**\r\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n   * allowance mechanism. `amount` is then deducted from the caller's\r\n   * allowance.\r\n   *\r\n   * Returns a boolean value indicating whether the operation succeeded.\r\n   *\r\n   * Emits a {Transfer} event.\r\n   */\r\n  function transferFrom(\r\n    address sender,\r\n    address recipient,\r\n    uint256 amount\r\n  ) external returns (bool);\r\n\r\n  /**\r\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n   * another (`to`).\r\n   *\r\n   * Note that `value` may be zero.\r\n   */\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n  /**\r\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n   * a call to {approve}. `value` is the new allowance.\r\n   */\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"LP/LP.sol": {
				"IBurnCoin": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(uint256)": "42966c68"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"LP/LP.sol\":\"IBurnCoin\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"LP/LP.sol\":{\"keccak256\":\"0x51ad02051f4740b76e8b3ff9615014f48e8c8f07b38e832fc0d8af2194550e7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54e999c82dd136087d50cc5334166c90a5137c1ac8106f403a693c450105024d\",\"dweb:/ipfs/QmUBbRN6DkHB7qsKz7gLhUcE1nUMqBtqS1cwoAFETJXEwM\"]},\"_lib/Context.sol\":{\"keccak256\":\"0x77ec8b534124690b04754bc03aaa982479b91b9f7508bed54455c161e93a02e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf08de24c3951531b87b85a75157d4b26ddcb8952452672f9da9f63c06982e9f\",\"dweb:/ipfs/QmaUzytpjpYHNTXw3Hy4cdKmNoU5PWpyMZBhorK69pk8sA\"]},\"_lib/ERC20.sol\":{\"keccak256\":\"0x2ce16e09e444519aec6a0e1f355325dfe2af844ea539ae8f8a7d53a2daf6d844\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb89e49b22ff4dd4d67fe590e95ce997d8a5a83db5ca8a246086dd4a56f01a72\",\"dweb:/ipfs/QmfZbMN1MNau96zL4xS1EtA9gVyNRWPwZCWwGVVeNG8uNF\"]},\"_lib/IERC20.sol\":{\"keccak256\":\"0x943e16fe1fdaa84c7329da3fa5aab8ce507ff7b6776a3925e97ffc0beef9692a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7727696ef766547aaa34152d06a443c5c8924fa363f47e51335d0e3d619c194\",\"dweb:/ipfs/QmRYgfYhpyjHaQjSJMG5fDdDGbQA9eXCGhuSRnwGfoSyCD\"]},\"_lib/Ownable.sol\":{\"keccak256\":\"0x9bb16a0785f0f888e4b470311e02af5bb72f0663d7be20eb7a60902e29e35406\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://014bf309648c0793be70899bc260d7094e17de223ed8eaebae9327643623cf93\",\"dweb:/ipfs/QmR4LhypLf6CVNvqxgDDAJ4E9E5h3wqV6RT8g7jERZdVLT\"]},\"_lib/SafeMath.sol\":{\"keccak256\":\"0xe1bb41b0568cdd4364bb5fcba4fd6065df59c3ea8147e040fb9c978bc3a89af5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e4192a8253ea1f04e97ac1ac3df25dc77719696b0bee70b3af1a4a56edcb5b\",\"dweb:/ipfs/QmaQ4TkRxpXxjtKKewy2oAgJXFbdqSwacBUMrNaSgZ72jt\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ILPToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"LP/LP.sol\":\"ILPToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"LP/LP.sol\":{\"keccak256\":\"0x51ad02051f4740b76e8b3ff9615014f48e8c8f07b38e832fc0d8af2194550e7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54e999c82dd136087d50cc5334166c90a5137c1ac8106f403a693c450105024d\",\"dweb:/ipfs/QmUBbRN6DkHB7qsKz7gLhUcE1nUMqBtqS1cwoAFETJXEwM\"]},\"_lib/Context.sol\":{\"keccak256\":\"0x77ec8b534124690b04754bc03aaa982479b91b9f7508bed54455c161e93a02e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf08de24c3951531b87b85a75157d4b26ddcb8952452672f9da9f63c06982e9f\",\"dweb:/ipfs/QmaUzytpjpYHNTXw3Hy4cdKmNoU5PWpyMZBhorK69pk8sA\"]},\"_lib/ERC20.sol\":{\"keccak256\":\"0x2ce16e09e444519aec6a0e1f355325dfe2af844ea539ae8f8a7d53a2daf6d844\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb89e49b22ff4dd4d67fe590e95ce997d8a5a83db5ca8a246086dd4a56f01a72\",\"dweb:/ipfs/QmfZbMN1MNau96zL4xS1EtA9gVyNRWPwZCWwGVVeNG8uNF\"]},\"_lib/IERC20.sol\":{\"keccak256\":\"0x943e16fe1fdaa84c7329da3fa5aab8ce507ff7b6776a3925e97ffc0beef9692a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7727696ef766547aaa34152d06a443c5c8924fa363f47e51335d0e3d619c194\",\"dweb:/ipfs/QmRYgfYhpyjHaQjSJMG5fDdDGbQA9eXCGhuSRnwGfoSyCD\"]},\"_lib/Ownable.sol\":{\"keccak256\":\"0x9bb16a0785f0f888e4b470311e02af5bb72f0663d7be20eb7a60902e29e35406\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://014bf309648c0793be70899bc260d7094e17de223ed8eaebae9327643623cf93\",\"dweb:/ipfs/QmR4LhypLf6CVNvqxgDDAJ4E9E5h3wqV6RT8g7jERZdVLT\"]},\"_lib/SafeMath.sol\":{\"keccak256\":\"0xe1bb41b0568cdd4364bb5fcba4fd6065df59c3ea8147e040fb9c978bc3a89af5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e4192a8253ea1f04e97ac1ac3df25dc77719696b0bee70b3af1a4a56edcb5b\",\"dweb:/ipfs/QmaQ4TkRxpXxjtKKewy2oAgJXFbdqSwacBUMrNaSgZ72jt\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IPokerToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"mint(address,uint256)": "40c10f19",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"LP/LP.sol\":\"IPokerToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"LP/LP.sol\":{\"keccak256\":\"0x51ad02051f4740b76e8b3ff9615014f48e8c8f07b38e832fc0d8af2194550e7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54e999c82dd136087d50cc5334166c90a5137c1ac8106f403a693c450105024d\",\"dweb:/ipfs/QmUBbRN6DkHB7qsKz7gLhUcE1nUMqBtqS1cwoAFETJXEwM\"]},\"_lib/Context.sol\":{\"keccak256\":\"0x77ec8b534124690b04754bc03aaa982479b91b9f7508bed54455c161e93a02e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf08de24c3951531b87b85a75157d4b26ddcb8952452672f9da9f63c06982e9f\",\"dweb:/ipfs/QmaUzytpjpYHNTXw3Hy4cdKmNoU5PWpyMZBhorK69pk8sA\"]},\"_lib/ERC20.sol\":{\"keccak256\":\"0x2ce16e09e444519aec6a0e1f355325dfe2af844ea539ae8f8a7d53a2daf6d844\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb89e49b22ff4dd4d67fe590e95ce997d8a5a83db5ca8a246086dd4a56f01a72\",\"dweb:/ipfs/QmfZbMN1MNau96zL4xS1EtA9gVyNRWPwZCWwGVVeNG8uNF\"]},\"_lib/IERC20.sol\":{\"keccak256\":\"0x943e16fe1fdaa84c7329da3fa5aab8ce507ff7b6776a3925e97ffc0beef9692a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7727696ef766547aaa34152d06a443c5c8924fa363f47e51335d0e3d619c194\",\"dweb:/ipfs/QmRYgfYhpyjHaQjSJMG5fDdDGbQA9eXCGhuSRnwGfoSyCD\"]},\"_lib/Ownable.sol\":{\"keccak256\":\"0x9bb16a0785f0f888e4b470311e02af5bb72f0663d7be20eb7a60902e29e35406\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://014bf309648c0793be70899bc260d7094e17de223ed8eaebae9327643623cf93\",\"dweb:/ipfs/QmR4LhypLf6CVNvqxgDDAJ4E9E5h3wqV6RT8g7jERZdVLT\"]},\"_lib/SafeMath.sol\":{\"keccak256\":\"0xe1bb41b0568cdd4364bb5fcba4fd6065df59c3ea8147e040fb9c978bc3a89af5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e4192a8253ea1f04e97ac1ac3df25dc77719696b0bee70b3af1a4a56edcb5b\",\"dweb:/ipfs/QmaQ4TkRxpXxjtKKewy2oAgJXFbdqSwacBUMrNaSgZ72jt\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"LP": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IPokerToken",
									"name": "_poker",
									"type": "address"
								},
								{
									"internalType": "contract ILPToken",
									"name": "_lp",
									"type": "address"
								},
								{
									"internalType": "contract IBurnCoin",
									"name": "_burncoin",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lastDepositedTime",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "accPerShare",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getEther",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPkBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getStakingCoinPerSec",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastUpdateTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lpBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "myBenefits",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "myValue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "newContractAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pendingCoin",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "setFeeAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ILPToken",
									"name": "_lp",
									"type": "address"
								}
							],
							"name": "setLp",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "flag",
									"type": "bool"
								}
							],
							"name": "setStakingSwitch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sharesPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingSwitch",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalLpFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalShares",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStakingAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferLpFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "updatePool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastDepositedTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastUserActionTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "coinAtlastUserAction",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "coinPerShares",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardDebt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewards",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_shares",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawFeePeriod",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"LP/LP.sol\":1096:10384  contract LP {\r... */\n  mstore(0x40, 0x80)\n    /* \"LP/LP.sol\":1857:1858  0 */\n  0x00\n    /* \"LP/LP.sol\":1828:1858  uint256 public accPerShare = 0 */\n  0x05\n  sstore\n    /* \"LP/LP.sol\":1893:1894  0 */\n  0x00\n    /* \"LP/LP.sol\":1865:1894  uint256 public totalLpFee = 0 */\n  0x06\n  sstore\n    /* \"LP/LP.sol\":1930:1931  0 */\n  0x00\n    /* \"LP/LP.sol\":1901:1931  uint256 public totalShares = 0 */\n  0x07\n  sstore\n    /* \"LP/LP.sol\":1967:1968  0 */\n  0x00\n    /* \"LP/LP.sol\":1938:1968  uint256 public totalAmount = 0 */\n  0x08\n  sstore\n    /* \"LP/LP.sol\":2007:2008  0 */\n  0x00\n    /* \"LP/LP.sol\":1975:2008  uint256 public lastUpdateTime = 0 */\n  0x09\n  sstore\n    /* \"LP/LP.sol\":2050:2056  7 days */\n  0x093a80\n    /* \"LP/LP.sol\":2015:2056  uint256 public withdrawFeePeriod = 7 days */\n  0x0a\n  sstore\n    /* \"LP/LP.sol\":2180:2181  0 */\n  0x00\n    /* \"LP/LP.sol\":2146:2181  uint256 public stakingStartTime = 0 */\n  0x0b\n  sstore\n    /* \"LP/LP.sol\":2216:2221  false */\n  0x00\n    /* \"LP/LP.sol\":2188:2221  bool public stakingSwitch = false */\n  0x0c\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"LP/LP.sol\":2247:2249  18 */\n  0x12\n    /* \"LP/LP.sol\":2228:2249  uint256 decimals = 18 */\n  0x0d\n  sstore\n    /* \"LP/LP.sol\":1284:1541  constructor(\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x60\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"LP/LP.sol\":1411:1417  _poker */\n  dup3\n    /* \"LP/LP.sol\":1403:1408  poker */\n  0x00\n  dup1\n    /* \"LP/LP.sol\":1403:1417  poker = _poker */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"LP/LP.sol\":1436:1446  msg.sender */\n  caller\n    /* \"LP/LP.sol\":1428:1433  owner */\n  0x03\n  0x00\n    /* \"LP/LP.sol\":1428:1446  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"LP/LP.sol\":1474:1483  getTime() */\n  tag_5\n    /* \"LP/LP.sol\":1474:1481  getTime */\n  shl(0x20, tag_6)\n    /* \"LP/LP.sol\":1474:1483  getTime() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"LP/LP.sol\":1457:1471  lastUpdateTime */\n  0x09\n    /* \"LP/LP.sol\":1457:1483  lastUpdateTime = getTime() */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"LP/LP.sol\":1505:1514  _burncoin */\n  dup1\n    /* \"LP/LP.sol\":1494:1502  burnCoin */\n  0x02\n  0x00\n    /* \"LP/LP.sol\":1494:1514  burnCoin = _burncoin */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"LP/LP.sol\":1530:1533  _lp */\n  dup2\n    /* \"LP/LP.sol\":1525:1527  lp */\n  0x01\n  0x00\n    /* \"LP/LP.sol\":1525:1533  lp = _lp */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"LP/LP.sol\":1284:1541  constructor(\r... */\n  pop\n  pop\n  pop\n    /* \"LP/LP.sol\":1096:10384  contract LP {\r... */\n  jump(tag_7)\n    /* \"LP/LP.sol\":8170:8248  function getTime() public view returns (uint256) {\r... */\ntag_6:\n    /* \"LP/LP.sol\":8210:8217  uint256 */\n  0x00\n    /* \"LP/LP.sol\":8237:8240  now */\n  timestamp\n    /* \"LP/LP.sol\":8230:8240  return now */\n  swap1\n  pop\n    /* \"LP/LP.sol\":8170:8248  function getTime() public view returns (uint256) {\r... */\n  swap1\n  jump\t// out\n    /* \"LP/LP.sol\":1096:10384  contract LP {\r... */\ntag_7:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"LP/LP.sol\":1096:10384  contract LP {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8705fcd4\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xd2890a01\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xe3161ddd\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xe3161ddd\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xe6fa445d\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xf4c2baa9\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xfc3e532b\n      eq\n      tag_30\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0xd2890a01\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xde0ff7c5\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xdf10b4e6\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0xb6b55f25\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xb6b55f25\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xb8a3b366\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xc8f33c91\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xd201114a\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x8705fcd4\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x936b6cec\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x557ed1ba\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x6d3c832f\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x6d3c832f\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x77926869\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x7b27c1d1\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x81ad5718\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x557ed1ba\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6abfd183\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x6af04a57\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x2059f615\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x2059f615\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3a98ef39\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x47f1aae7\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x0b26b6a8\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1959a002\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1a39d8ef\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"LP/LP.sol\":9701:9969  function transferLpFee(uint256 amount) public {\r... */\n    tag_3:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_40\n      jump\t// in\n    tag_38:\n      stop\n        /* \"LP/LP.sol\":2557:2601  mapping(address => UserInfo) public userInfo */\n    tag_4:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_43\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup10\n      dup2\n      mstore\n      0x20\n      add\n      dup9\n      dup2\n      mstore\n      0x20\n      add\n      dup8\n      dup2\n      mstore\n      0x20\n      add\n      dup7\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"LP/LP.sol\":1938:1968  uint256 public totalAmount = 0 */\n    tag_5:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"LP/LP.sol\":5890:6010  function lpBalance() public view returns (uint256) {\r... */\n    tag_6:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"LP/LP.sol\":4118:5882  function withdraw(uint256 _shares) public {\r... */\n    tag_7:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_50\n      jump\t// in\n    tag_48:\n      stop\n        /* \"LP/LP.sol\":1901:1931  uint256 public totalShares = 0 */\n    tag_8:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"LP/LP.sol\":7514:7846  function myValue() public view returns (uint256) {\r... */\n    tag_9:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"LP/LP.sol\":8170:8248  function getTime() public view returns (uint256) {\r... */\n    tag_10:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"LP/LP.sol\":2146:2181  uint256 public stakingStartTime = 0 */\n    tag_11:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"LP/LP.sol\":1242:1275  address public newContractAddress */\n    tag_12:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"LP/LP.sol\":1865:1894  uint256 public totalLpFee = 0 */\n    tag_13:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"LP/LP.sol\":7854:8135  function sharesPrice() public view returns (uint256) {\r... */\n    tag_14:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"LP/LP.sol\":8256:8366  function getPkBalance() public view returns (uint256) {\r... */\n    tag_15:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"LP/LP.sol\":9977:10259  function setStakingSwitch(bool flag) public {\r... */\n    tag_16:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      iszero\n      iszero\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_69\n      jump\t// in\n    tag_67:\n      stop\n        /* \"LP/LP.sol\":9432:9693  function setFeeAddress(address newAddress) public {\r... */\n    tag_17:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_72\n      jump\t// in\n    tag_70:\n      stop\n        /* \"LP/LP.sol\":1215:1235  address public owner */\n    tag_18:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"LP/LP.sol\":7067:7506  function myBenefits() public view returns (uint256) {\r... */\n    tag_19:\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"LP/LP.sol\":2835:4110  function deposit(uint256 _amount) public {\r... */\n    tag_20:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_79\n      jump\t// in\n    tag_77:\n      stop\n        /* \"LP/LP.sol\":8513:9424  function getStakingCoinPerSec() public view returns (uint256) {\r... */\n    tag_21:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"LP/LP.sol\":1975:2008  uint256 public lastUpdateTime = 0 */\n    tag_22:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"LP/LP.sol\":6938:7059  function totalStakingAmount() public view returns (uint256) {\r... */\n    tag_23:\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"LP/LP.sol\":1828:1858  uint256 public accPerShare = 0 */\n    tag_24:\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"LP/LP.sol\":8374:8471  function getEther() public view returns (uint256) {\r... */\n    tag_25:\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"LP/LP.sol\":2015:2056  uint256 public withdrawFeePeriod = 7 days */\n    tag_26:\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"LP/LP.sol\":6018:6608  function updatePool() public {\r... */\n    tag_27:\n      tag_92\n      tag_93\n      jump\t// in\n    tag_92:\n      stop\n        /* \"LP/LP.sol\":2188:2221  bool public stakingSwitch = false */\n    tag_28:\n      tag_94\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"LP/LP.sol\":10267:10381  function setLp(ILPToken _lp) public {\r... */\n    tag_29:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_98\n      jump\t// in\n    tag_96:\n      stop\n        /* \"LP/LP.sol\":6616:6930  function pendingCoin() external view returns (uint256) {\r... */\n    tag_30:\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"LP/LP.sol\":9701:9969  function transferLpFee(uint256 amount) public {\r... */\n    tag_40:\n        /* \"LP/LP.sol\":9780:9785  owner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"LP/LP.sol\":9766:9785  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"LP/LP.sol\":9766:9776  msg.sender */\n      caller\n        /* \"LP/LP.sol\":9766:9785  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"LP/LP.sol\":9758:9786  require(msg.sender == owner) */\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n        /* \"LP/LP.sol\":9835:9836  0 */\n      0x00\n        /* \"LP/LP.sol\":9805:9837  newContractAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"LP/LP.sol\":9805:9823  newContractAddress */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"LP/LP.sol\":9805:9837  newContractAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"LP/LP.sol\":9797:9855  require(newContractAddress != address(0), \"transfer to 0\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x7472616e7366657220746f203000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n        /* \"LP/LP.sol\":9888:9894  amount */\n      dup1\n        /* \"LP/LP.sol\":9874:9884  totalLpFee */\n      sload(0x06)\n        /* \"LP/LP.sol\":9874:9894  totalLpFee >= amount */\n      lt\n      iszero\n        /* \"LP/LP.sol\":9866:9909  require(totalLpFee >= amount, \"not enough\") */\n      tag_104\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x6e6f7420656e6f75676800000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_104:\n        /* \"LP/LP.sol\":9922:9924  lp */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"LP/LP.sol\":9922:9933  lp.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"LP/LP.sol\":9934:9952  newContractAddress */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"LP/LP.sol\":9954:9960  amount */\n      dup4\n        /* \"LP/LP.sol\":9922:9961  lp.transfer(newContractAddress, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_107\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_107:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      pop\n        /* \"LP/LP.sol\":9701:9969  function transferLpFee(uint256 amount) public {\r... */\n      pop\n      jump\t// out\n        /* \"LP/LP.sol\":2557:2601  mapping(address => UserInfo) public userInfo */\n    tag_43:\n      mstore(0x20, 0x0e)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      dup1\n      0x05\n      add\n      sload\n      swap1\n      dup1\n      0x06\n      add\n      sload\n      swap1\n      dup1\n      0x07\n      add\n      sload\n      swap1\n      pop\n      dup9\n      jump\t// out\n        /* \"LP/LP.sol\":1938:1968  uint256 public totalAmount = 0 */\n    tag_45:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"LP/LP.sol\":5890:6010  function lpBalance() public view returns (uint256) {\r... */\n    tag_47:\n        /* \"LP/LP.sol\":5932:5939  uint256 */\n      0x00\n        /* \"LP/LP.sol\":5959:6002  lp.balanceOf(address(this)).sub(totalLpFee) */\n      tag_110\n        /* \"LP/LP.sol\":5991:6001  totalLpFee */\n      sload(0x06)\n        /* \"LP/LP.sol\":5959:5961  lp */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"LP/LP.sol\":5959:5971  lp.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"LP/LP.sol\":5980:5984  this */\n      address\n        /* \"LP/LP.sol\":5959:5986  lp.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_113\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_113:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"LP/LP.sol\":5959:5990  lp.balanceOf(address(this)).sub */\n      tag_115\n      swap1\n        /* \"LP/LP.sol\":5959:6002  lp.balanceOf(address(this)).sub(totalLpFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_110:\n        /* \"LP/LP.sol\":5952:6002  return lp.balanceOf(address(this)).sub(totalLpFee) */\n      swap1\n      pop\n        /* \"LP/LP.sol\":5890:6010  function lpBalance() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"LP/LP.sol\":4118:5882  function withdraw(uint256 _shares) public {\r... */\n    tag_50:\n        /* \"LP/LP.sol\":4171:4192  UserInfo storage user */\n      0x00\n        /* \"LP/LP.sol\":4195:4203  userInfo */\n      0x0e\n        /* \"LP/LP.sol\":4195:4215  userInfo[msg.sender] */\n      0x00\n        /* \"LP/LP.sol\":4204:4214  msg.sender */\n      caller\n        /* \"LP/LP.sol\":4195:4215  userInfo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"LP/LP.sol\":4171:4215  UserInfo storage user = userInfo[msg.sender] */\n      swap1\n      pop\n        /* \"LP/LP.sol\":4244:4245  0 */\n      0x00\n        /* \"LP/LP.sol\":4234:4241  _shares */\n      dup3\n        /* \"LP/LP.sol\":4234:4245  _shares > 0 */\n      gt\n        /* \"LP/LP.sol\":4226:4269  require(_shares > 0, \"Nothing to withdraw\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x13\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4e6f7468696e6720746f20776974686472617700000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_117:\n        /* \"LP/LP.sol\":4299:4303  user */\n      dup1\n        /* \"LP/LP.sol\":4299:4310  user.shares */\n      0x00\n      add\n      sload\n        /* \"LP/LP.sol\":4288:4295  _shares */\n      dup3\n        /* \"LP/LP.sol\":4288:4310  _shares <= user.shares */\n      gt\n      iszero\n        /* \"LP/LP.sol\":4280:4346  require(_shares <= user.shares, \"Withdraw amount exceeds balance\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x576974686472617720616d6f756e7420657863656564732062616c616e636500\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_118:\n        /* \"LP/LP.sol\":4359:4371  updatePool() */\n      tag_119\n        /* \"LP/LP.sol\":4359:4369  updatePool */\n      tag_93\n        /* \"LP/LP.sol\":4359:4371  updatePool() */\n      jump\t// in\n    tag_119:\n        /* \"LP/LP.sol\":4414:4437  uint256 userTotalAmount */\n      0x00\n        /* \"LP/LP.sol\":4441:4515  decimalMul(user.amount,accPerShare).sub(user.rewardDebt).add(user.rewards) */\n      tag_120\n        /* \"LP/LP.sol\":4502:4506  user */\n      dup3\n        /* \"LP/LP.sol\":4502:4514  user.rewards */\n      0x06\n      add\n      sload\n        /* \"LP/LP.sol\":4441:4497  decimalMul(user.amount,accPerShare).sub(user.rewardDebt) */\n      tag_121\n        /* \"LP/LP.sol\":4481:4485  user */\n      dup5\n        /* \"LP/LP.sol\":4481:4496  user.rewardDebt */\n      0x05\n      add\n      sload\n        /* \"LP/LP.sol\":4441:4476  decimalMul(user.amount,accPerShare) */\n      tag_122\n        /* \"LP/LP.sol\":4452:4456  user */\n      dup7\n        /* \"LP/LP.sol\":4452:4463  user.amount */\n      0x07\n      add\n      sload\n        /* \"LP/LP.sol\":4464:4475  accPerShare */\n      sload(0x05)\n        /* \"LP/LP.sol\":4441:4451  decimalMul */\n      tag_123\n        /* \"LP/LP.sol\":4441:4476  decimalMul(user.amount,accPerShare) */\n      jump\t// in\n    tag_122:\n        /* \"LP/LP.sol\":4441:4480  decimalMul(user.amount,accPerShare).sub */\n      tag_115\n      swap1\n        /* \"LP/LP.sol\":4441:4497  decimalMul(user.amount,accPerShare).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_121:\n        /* \"LP/LP.sol\":4441:4501  decimalMul(user.amount,accPerShare).sub(user.rewardDebt).add */\n      tag_124\n      swap1\n        /* \"LP/LP.sol\":4441:4515  decimalMul(user.amount,accPerShare).sub(user.rewardDebt).add(user.rewards) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_120:\n        /* \"LP/LP.sol\":4414:4515  uint256 userTotalAmount =  decimalMul(user.amount,accPerShare).sub(user.rewardDebt).add(user.rewards) */\n      swap1\n      pop\n        /* \"LP/LP.sol\":4574:4596  uint256 withdrawAmount */\n      0x00\n        /* \"LP/LP.sol\":4599:4644  userTotalAmount.mul(_shares).div(user.shares) */\n      tag_125\n        /* \"LP/LP.sol\":4632:4636  user */\n      dup4\n        /* \"LP/LP.sol\":4632:4643  user.shares */\n      0x00\n      add\n      sload\n        /* \"LP/LP.sol\":4599:4627  userTotalAmount.mul(_shares) */\n      tag_126\n        /* \"LP/LP.sol\":4619:4626  _shares */\n      dup7\n        /* \"LP/LP.sol\":4599:4614  userTotalAmount */\n      dup6\n        /* \"LP/LP.sol\":4599:4618  userTotalAmount.mul */\n      tag_127\n      swap1\n        /* \"LP/LP.sol\":4599:4627  userTotalAmount.mul(_shares) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_126:\n        /* \"LP/LP.sol\":4599:4631  userTotalAmount.mul(_shares).div */\n      tag_128\n      swap1\n        /* \"LP/LP.sol\":4599:4644  userTotalAmount.mul(_shares).div(user.shares) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_125:\n        /* \"LP/LP.sol\":4574:4644  uint256 withdrawAmount = userTotalAmount.mul(_shares).div(user.shares) */\n      swap1\n      pop\n        /* \"LP/LP.sol\":4657:4670  uint256 curLp */\n      0x00\n        /* \"LP/LP.sol\":4673:4714  user.amount.mul(_shares).div(user.shares) */\n      tag_129\n        /* \"LP/LP.sol\":4702:4706  user */\n      dup5\n        /* \"LP/LP.sol\":4702:4713  user.shares */\n      0x00\n      add\n      sload\n        /* \"LP/LP.sol\":4673:4697  user.amount.mul(_shares) */\n      tag_130\n        /* \"LP/LP.sol\":4689:4696  _shares */\n      dup8\n        /* \"LP/LP.sol\":4673:4677  user */\n      dup8\n        /* \"LP/LP.sol\":4673:4684  user.amount */\n      0x07\n      add\n      sload\n        /* \"LP/LP.sol\":4673:4688  user.amount.mul */\n      tag_127\n      swap1\n        /* \"LP/LP.sol\":4673:4697  user.amount.mul(_shares) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_130:\n        /* \"LP/LP.sol\":4673:4701  user.amount.mul(_shares).div */\n      tag_128\n      swap1\n        /* \"LP/LP.sol\":4673:4714  user.amount.mul(_shares).div(user.shares) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_129:\n        /* \"LP/LP.sol\":4657:4714  uint256 curLp = user.amount.mul(_shares).div(user.shares) */\n      swap1\n      pop\n        /* \"LP/LP.sol\":4739:4763  user.shares.sub(_shares) */\n      tag_131\n        /* \"LP/LP.sol\":4755:4762  _shares */\n      dup6\n        /* \"LP/LP.sol\":4739:4743  user */\n      dup6\n        /* \"LP/LP.sol\":4739:4750  user.shares */\n      0x00\n      add\n      sload\n        /* \"LP/LP.sol\":4739:4754  user.shares.sub */\n      tag_115\n      swap1\n        /* \"LP/LP.sol\":4739:4763  user.shares.sub(_shares) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_131:\n        /* \"LP/LP.sol\":4725:4729  user */\n      dup5\n        /* \"LP/LP.sol\":4725:4736  user.shares */\n      0x00\n      add\n        /* \"LP/LP.sol\":4725:4763  user.shares = user.shares.sub(_shares) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"LP/LP.sol\":4788:4812  totalShares.sub(_shares) */\n      tag_132\n        /* \"LP/LP.sol\":4804:4811  _shares */\n      dup6\n        /* \"LP/LP.sol\":4788:4799  totalShares */\n      sload(0x07)\n        /* \"LP/LP.sol\":4788:4803  totalShares.sub */\n      tag_115\n      swap1\n        /* \"LP/LP.sol\":4788:4812  totalShares.sub(_shares) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_132:\n        /* \"LP/LP.sol\":4774:4785  totalShares */\n      0x07\n        /* \"LP/LP.sol\":4774:4812  totalShares = totalShares.sub(_shares) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"LP/LP.sol\":4862:4876  withdrawAmount */\n      dup2\n        /* \"LP/LP.sol\":4847:4858  totalAmount */\n      sload(0x08)\n        /* \"LP/LP.sol\":4847:4876  totalAmount >= withdrawAmount */\n      lt\n      iszero\n        /* \"LP/LP.sol\":4825:4935  require(\r... */\n      tag_133\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x576974686472617720616d6f756e7420657863656564732062616c616e636500\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_133:\n        /* \"LP/LP.sol\":4962:4993  totalAmount.sub(withdrawAmount) */\n      tag_134\n        /* \"LP/LP.sol\":4978:4992  withdrawAmount */\n      dup3\n        /* \"LP/LP.sol\":4962:4973  totalAmount */\n      sload(0x08)\n        /* \"LP/LP.sol\":4962:4977  totalAmount.sub */\n      tag_115\n      swap1\n        /* \"LP/LP.sol\":4962:4993  totalAmount.sub(withdrawAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_134:\n        /* \"LP/LP.sol\":4948:4959  totalAmount */\n      0x08\n        /* \"LP/LP.sol\":4948:4993  totalAmount = totalAmount.sub(withdrawAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"LP/LP.sol\":5053:5088  userTotalAmount.sub(withdrawAmount) */\n      tag_135\n        /* \"LP/LP.sol\":5073:5087  withdrawAmount */\n      dup3\n        /* \"LP/LP.sol\":5053:5068  userTotalAmount */\n      dup5\n        /* \"LP/LP.sol\":5053:5072  userTotalAmount.sub */\n      tag_115\n      swap1\n        /* \"LP/LP.sol\":5053:5088  userTotalAmount.sub(withdrawAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_135:\n        /* \"LP/LP.sol\":5038:5042  user */\n      dup5\n        /* \"LP/LP.sol\":5038:5050  user.rewards */\n      0x06\n      add\n        /* \"LP/LP.sol\":5038:5088  user.rewards = userTotalAmount.sub(withdrawAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"LP/LP.sol\":5145:5167  user.amount.sub(curLp) */\n      tag_136\n        /* \"LP/LP.sol\":5161:5166  curLp */\n      dup2\n        /* \"LP/LP.sol\":5145:5149  user */\n      dup6\n        /* \"LP/LP.sol\":5145:5156  user.amount */\n      0x07\n      add\n      sload\n        /* \"LP/LP.sol\":5145:5160  user.amount.sub */\n      tag_115\n      swap1\n        /* \"LP/LP.sol\":5145:5167  user.amount.sub(curLp) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_136:\n        /* \"LP/LP.sol\":5131:5135  user */\n      dup5\n        /* \"LP/LP.sol\":5131:5142  user.amount */\n      0x07\n      add\n        /* \"LP/LP.sol\":5131:5167  user.amount = user.amount.sub(curLp) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"LP/LP.sol\":5196:5241  user.lastDepositedTime.add(withdrawFeePeriod) */\n      tag_137\n        /* \"LP/LP.sol\":5223:5240  withdrawFeePeriod */\n      sload(0x0a)\n        /* \"LP/LP.sol\":5196:5200  user */\n      dup6\n        /* \"LP/LP.sol\":5196:5218  user.lastDepositedTime */\n      0x01\n      add\n      sload\n        /* \"LP/LP.sol\":5196:5222  user.lastDepositedTime.add */\n      tag_124\n      swap1\n        /* \"LP/LP.sol\":5196:5241  user.lastDepositedTime.add(withdrawFeePeriod) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_137:\n        /* \"LP/LP.sol\":5184:5193  getTime() */\n      tag_138\n        /* \"LP/LP.sol\":5184:5191  getTime */\n      tag_56\n        /* \"LP/LP.sol\":5184:5193  getTime() */\n      jump\t// in\n    tag_138:\n        /* \"LP/LP.sol\":5184:5241  getTime() < user.lastDepositedTime.add(withdrawFeePeriod) */\n      lt\n        /* \"LP/LP.sol\":5180:5393  if (getTime() < user.lastDepositedTime.add(withdrawFeePeriod)) {\r... */\n      iszero\n      tag_139\n      jumpi\n        /* \"LP/LP.sol\":5258:5269  uint256 fee */\n      0x00\n        /* \"LP/LP.sol\":5272:5297  curLp.mul(100).div(10000) */\n      tag_140\n        /* \"LP/LP.sol\":5291:5296  10000 */\n      0x2710\n        /* \"LP/LP.sol\":5272:5286  curLp.mul(100) */\n      tag_141\n        /* \"LP/LP.sol\":5282:5285  100 */\n      0x64\n        /* \"LP/LP.sol\":5272:5277  curLp */\n      dup6\n        /* \"LP/LP.sol\":5272:5281  curLp.mul */\n      tag_127\n      swap1\n        /* \"LP/LP.sol\":5272:5286  curLp.mul(100) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_141:\n        /* \"LP/LP.sol\":5272:5290  curLp.mul(100).div */\n      tag_128\n      swap1\n        /* \"LP/LP.sol\":5272:5297  curLp.mul(100).div(10000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_140:\n        /* \"LP/LP.sol\":5258:5297  uint256 fee = curLp.mul(100).div(10000) */\n      swap1\n      pop\n        /* \"LP/LP.sol\":5320:5334  curLp.sub(fee) */\n      tag_142\n        /* \"LP/LP.sol\":5330:5333  fee */\n      dup2\n        /* \"LP/LP.sol\":5320:5325  curLp */\n      dup4\n        /* \"LP/LP.sol\":5320:5329  curLp.sub */\n      tag_115\n      swap1\n        /* \"LP/LP.sol\":5320:5334  curLp.sub(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_142:\n        /* \"LP/LP.sol\":5312:5334  curLp = curLp.sub(fee) */\n      swap2\n      pop\n        /* \"LP/LP.sol\":5362:5381  totalLpFee.add(fee) */\n      tag_143\n        /* \"LP/LP.sol\":5377:5380  fee */\n      dup2\n        /* \"LP/LP.sol\":5362:5372  totalLpFee */\n      sload(0x06)\n        /* \"LP/LP.sol\":5362:5376  totalLpFee.add */\n      tag_124\n      swap1\n        /* \"LP/LP.sol\":5362:5381  totalLpFee.add(fee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_143:\n        /* \"LP/LP.sol\":5349:5359  totalLpFee */\n      0x06\n        /* \"LP/LP.sol\":5349:5381  totalLpFee = totalLpFee.add(fee) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"LP/LP.sol\":5180:5393  if (getTime() < user.lastDepositedTime.add(withdrawFeePeriod)) {\r... */\n      pop\n    tag_139:\n        /* \"LP/LP.sol\":5405:5407  lp */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"LP/LP.sol\":5405:5416  lp.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"LP/LP.sol\":5425:5435  msg.sender */\n      caller\n        /* \"LP/LP.sol\":5438:5443  curLp */\n      dup4\n        /* \"LP/LP.sol\":5405:5444  lp.transfer(address(msg.sender), curLp) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_144\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_144:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_146\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_146:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_147\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_147:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      pop\n        /* \"LP/LP.sol\":5455:5460  poker */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"LP/LP.sol\":5455:5469  poker.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"LP/LP.sol\":5470:5480  msg.sender */\n      caller\n        /* \"LP/LP.sol\":5482:5496  withdrawAmount */\n      dup5\n        /* \"LP/LP.sol\":5455:5497  poker.transfer(msg.sender, withdrawAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_148\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_148:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_150\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_150:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_151\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_151:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      pop\n        /* \"LP/LP.sol\":5528:5529  0 */\n      0x00\n        /* \"LP/LP.sol\":5514:5518  user */\n      dup5\n        /* \"LP/LP.sol\":5514:5525  user.shares */\n      0x00\n      add\n      sload\n        /* \"LP/LP.sol\":5514:5529  user.shares > 0 */\n      gt\n        /* \"LP/LP.sol\":5510:5757  if (user.shares > 0) {\r... */\n      iszero\n      tag_152\n      jumpi\n        /* \"LP/LP.sol\":5564:5599  decimalMul(user.amount,accPerShare) */\n      tag_153\n        /* \"LP/LP.sol\":5575:5579  user */\n      dup5\n        /* \"LP/LP.sol\":5575:5586  user.amount */\n      0x07\n      add\n      sload\n        /* \"LP/LP.sol\":5587:5598  accPerShare */\n      sload(0x05)\n        /* \"LP/LP.sol\":5564:5574  decimalMul */\n      tag_123\n        /* \"LP/LP.sol\":5564:5599  decimalMul(user.amount,accPerShare) */\n      jump\t// in\n    tag_153:\n        /* \"LP/LP.sol\":5546:5550  user */\n      dup5\n        /* \"LP/LP.sol\":5546:5561  user.rewardDebt */\n      0x05\n      add\n        /* \"LP/LP.sol\":5546:5599  user.rewardDebt = decimalMul(user.amount,accPerShare) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"LP/LP.sol\":5635:5648  sharesPrice() */\n      tag_154\n        /* \"LP/LP.sol\":5635:5646  sharesPrice */\n      tag_64\n        /* \"LP/LP.sol\":5635:5648  sharesPrice() */\n      jump\t// in\n    tag_154:\n        /* \"LP/LP.sol\":5614:5618  user */\n      dup5\n        /* \"LP/LP.sol\":5614:5632  user.coinPerShares */\n      0x04\n      add\n        /* \"LP/LP.sol\":5614:5648  user.coinPerShares = sharesPrice() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"LP/LP.sol\":5691:5695  user */\n      dup4\n        /* \"LP/LP.sol\":5691:5703  user.rewards */\n      0x06\n      add\n      sload\n        /* \"LP/LP.sol\":5663:5667  user */\n      dup5\n        /* \"LP/LP.sol\":5663:5688  user.coinAtlastUserAction */\n      0x03\n      add\n        /* \"LP/LP.sol\":5663:5703  user.coinAtlastUserAction = user.rewards */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"LP/LP.sol\":5510:5757  if (user.shares > 0) {\r... */\n      jump(tag_155)\n    tag_152:\n        /* \"LP/LP.sol\":5756:5757  0 */\n      0x00\n        /* \"LP/LP.sol\":5735:5739  user */\n      dup5\n        /* \"LP/LP.sol\":5735:5753  user.coinPerShares */\n      0x04\n      add\n        /* \"LP/LP.sol\":5735:5757  user.coinPerShares = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"LP/LP.sol\":5510:5757  if (user.shares > 0) {\r... */\n    tag_155:\n        /* \"LP/LP.sol\":5796:5811  block.timestamp */\n      timestamp\n        /* \"LP/LP.sol\":5770:5774  user */\n      dup5\n        /* \"LP/LP.sol\":5770:5793  user.lastUserActionTime */\n      0x02\n      add\n        /* \"LP/LP.sol\":5770:5811  user.lastUserActionTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"LP/LP.sol\":5838:5848  msg.sender */\n      caller\n        /* \"LP/LP.sol\":5829:5874  Withdraw(msg.sender, withdrawAmount, _shares) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n        /* \"LP/LP.sol\":5850:5864  withdrawAmount */\n      dup4\n        /* \"LP/LP.sol\":5866:5873  _shares */\n      dup8\n        /* \"LP/LP.sol\":5829:5874  Withdraw(msg.sender, withdrawAmount, _shares) */\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"LP/LP.sol\":4118:5882  function withdraw(uint256 _shares) public {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"LP/LP.sol\":1901:1931  uint256 public totalShares = 0 */\n    tag_52:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"LP/LP.sol\":7514:7846  function myValue() public view returns (uint256) {\r... */\n    tag_54:\n        /* \"LP/LP.sol\":7554:7561  uint256 */\n      0x00\n        /* \"LP/LP.sol\":7574:7592  uint256 computePer */\n      dup1\n        /* \"LP/LP.sol\":7595:7652  accPerShare.add(divFloor(this.pendingCoin(),lpBalance())) */\n      tag_157\n        /* \"LP/LP.sol\":7611:7651  divFloor(this.pendingCoin(),lpBalance()) */\n      tag_158\n        /* \"LP/LP.sol\":7620:7624  this */\n      address\n        /* \"LP/LP.sol\":7620:7636  this.pendingCoin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfc3e532b\n        /* \"LP/LP.sol\":7620:7638  this.pendingCoin() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_159\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_159:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_161\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_161:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_162\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_162:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"LP/LP.sol\":7639:7650  lpBalance() */\n      tag_163\n        /* \"LP/LP.sol\":7639:7648  lpBalance */\n      tag_47\n        /* \"LP/LP.sol\":7639:7650  lpBalance() */\n      jump\t// in\n    tag_163:\n        /* \"LP/LP.sol\":7611:7619  divFloor */\n      tag_164\n        /* \"LP/LP.sol\":7611:7651  divFloor(this.pendingCoin(),lpBalance()) */\n      jump\t// in\n    tag_158:\n        /* \"LP/LP.sol\":7595:7606  accPerShare */\n      sload(0x05)\n        /* \"LP/LP.sol\":7595:7610  accPerShare.add */\n      tag_124\n      swap1\n        /* \"LP/LP.sol\":7595:7652  accPerShare.add(divFloor(this.pendingCoin(),lpBalance())) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_157:\n        /* \"LP/LP.sol\":7574:7652  uint256 computePer = accPerShare.add(divFloor(this.pendingCoin(),lpBalance())) */\n      swap1\n      pop\n        /* \"LP/LP.sol\":7663:7684  UserInfo storage user */\n      0x00\n        /* \"LP/LP.sol\":7687:7695  userInfo */\n      0x0e\n        /* \"LP/LP.sol\":7687:7707  userInfo[msg.sender] */\n      0x00\n        /* \"LP/LP.sol\":7696:7706  msg.sender */\n      caller\n        /* \"LP/LP.sol\":7687:7707  userInfo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"LP/LP.sol\":7663:7707  UserInfo storage user = userInfo[msg.sender] */\n      swap1\n      pop\n        /* \"LP/LP.sol\":7736:7737  0 */\n      0x00\n        /* \"LP/LP.sol\":7721:7725  user */\n      dup2\n        /* \"LP/LP.sol\":7721:7732  user.shares */\n      0x00\n      add\n      sload\n        /* \"LP/LP.sol\":7721:7737  user.shares == 0 */\n      eq\n        /* \"LP/LP.sol\":7718:7747  if(user.shares == 0) return 0 */\n      iszero\n      tag_165\n      jumpi\n        /* \"LP/LP.sol\":7746:7747  0 */\n      0x00\n        /* \"LP/LP.sol\":7739:7747  return 0 */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_156)\n        /* \"LP/LP.sol\":7718:7747  if(user.shares == 0) return 0 */\n    tag_165:\n        /* \"LP/LP.sol\":7765:7838  decimalMul(user.amount,computePer).sub(user.rewardDebt).add(user.rewards) */\n      tag_166\n        /* \"LP/LP.sol\":7825:7829  user */\n      dup2\n        /* \"LP/LP.sol\":7825:7837  user.rewards */\n      0x06\n      add\n      sload\n        /* \"LP/LP.sol\":7765:7820  decimalMul(user.amount,computePer).sub(user.rewardDebt) */\n      tag_167\n        /* \"LP/LP.sol\":7804:7808  user */\n      dup4\n        /* \"LP/LP.sol\":7804:7819  user.rewardDebt */\n      0x05\n      add\n      sload\n        /* \"LP/LP.sol\":7765:7799  decimalMul(user.amount,computePer) */\n      tag_168\n        /* \"LP/LP.sol\":7776:7780  user */\n      dup6\n        /* \"LP/LP.sol\":7776:7787  user.amount */\n      0x07\n      add\n      sload\n        /* \"LP/LP.sol\":7788:7798  computePer */\n      dup8\n        /* \"LP/LP.sol\":7765:7775  decimalMul */\n      tag_123\n        /* \"LP/LP.sol\":7765:7799  decimalMul(user.amount,computePer) */\n      jump\t// in\n    tag_168:\n        /* \"LP/LP.sol\":7765:7803  decimalMul(user.amount,computePer).sub */\n      tag_115\n      swap1\n        /* \"LP/LP.sol\":7765:7820  decimalMul(user.amount,computePer).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_167:\n        /* \"LP/LP.sol\":7765:7824  decimalMul(user.amount,computePer).sub(user.rewardDebt).add */\n      tag_124\n      swap1\n        /* \"LP/LP.sol\":7765:7838  decimalMul(user.amount,computePer).sub(user.rewardDebt).add(user.rewards) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_166:\n        /* \"LP/LP.sol\":7758:7838  return decimalMul(user.amount,computePer).sub(user.rewardDebt).add(user.rewards) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"LP/LP.sol\":7514:7846  function myValue() public view returns (uint256) {\r... */\n    tag_156:\n      swap1\n      jump\t// out\n        /* \"LP/LP.sol\":8170:8248  function getTime() public view returns (uint256) {\r... */\n    tag_56:\n        /* \"LP/LP.sol\":8210:8217  uint256 */\n      0x00\n        /* \"LP/LP.sol\":8237:8240  now */\n      timestamp\n        /* \"LP/LP.sol\":8230:8240  return now */\n      swap1\n      pop\n        /* \"LP/LP.sol\":8170:8248  function getTime() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"LP/LP.sol\":2146:2181  uint256 public stakingStartTime = 0 */\n    tag_58:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"LP/LP.sol\":1242:1275  address public newContractAddress */\n    tag_60:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"LP/LP.sol\":1865:1894  uint256 public totalLpFee = 0 */\n    tag_62:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"LP/LP.sol\":7854:8135  function sharesPrice() public view returns (uint256) {\r... */\n    tag_64:\n        /* \"LP/LP.sol\":7898:7905  uint256 */\n      0x00\n        /* \"LP/LP.sol\":7918:7929  uint256 lpb */\n      dup1\n        /* \"LP/LP.sol\":7932:7943  lpBalance() */\n      tag_171\n        /* \"LP/LP.sol\":7932:7941  lpBalance */\n      tag_47\n        /* \"LP/LP.sol\":7932:7943  lpBalance() */\n      jump\t// in\n    tag_171:\n        /* \"LP/LP.sol\":7918:7943  uint256 lpb = lpBalance() */\n      swap1\n      pop\n        /* \"LP/LP.sol\":7965:7966  0 */\n      0x00\n        /* \"LP/LP.sol\":7958:7961  lpb */\n      dup2\n        /* \"LP/LP.sol\":7958:7966  lpb == 0 */\n      eq\n        /* \"LP/LP.sol\":7954:7976  if (lpb == 0) return 0 */\n      iszero\n      tag_172\n      jumpi\n        /* \"LP/LP.sol\":7975:7976  0 */\n      0x00\n        /* \"LP/LP.sol\":7968:7976  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_170)\n        /* \"LP/LP.sol\":7954:7976  if (lpb == 0) return 0 */\n    tag_172:\n        /* \"LP/LP.sol\":7987:8005  uint256 computePer */\n      0x00\n        /* \"LP/LP.sol\":8008:8057  accPerShare.add(divFloor(this.pendingCoin(),lpb)) */\n      tag_173\n        /* \"LP/LP.sol\":8024:8056  divFloor(this.pendingCoin(),lpb) */\n      tag_174\n        /* \"LP/LP.sol\":8033:8037  this */\n      address\n        /* \"LP/LP.sol\":8033:8049  this.pendingCoin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfc3e532b\n        /* \"LP/LP.sol\":8033:8051  this.pendingCoin() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_175\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_175:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_177\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_177:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_178\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_178:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"LP/LP.sol\":8052:8055  lpb */\n      dup5\n        /* \"LP/LP.sol\":8024:8032  divFloor */\n      tag_164\n        /* \"LP/LP.sol\":8024:8056  divFloor(this.pendingCoin(),lpb) */\n      jump\t// in\n    tag_174:\n        /* \"LP/LP.sol\":8008:8019  accPerShare */\n      sload(0x05)\n        /* \"LP/LP.sol\":8008:8023  accPerShare.add */\n      tag_124\n      swap1\n        /* \"LP/LP.sol\":8008:8057  accPerShare.add(divFloor(this.pendingCoin(),lpb)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_173:\n        /* \"LP/LP.sol\":7987:8057  uint256 computePer = accPerShare.add(divFloor(this.pendingCoin(),lpb)) */\n      swap1\n      pop\n        /* \"LP/LP.sol\":8075:8127  lpb.mul(getEther()).mul(computePer).div(totalShares) */\n      tag_179\n        /* \"LP/LP.sol\":8115:8126  totalShares */\n      sload(0x07)\n        /* \"LP/LP.sol\":8075:8110  lpb.mul(getEther()).mul(computePer) */\n      tag_180\n        /* \"LP/LP.sol\":8099:8109  computePer */\n      dup4\n        /* \"LP/LP.sol\":8075:8094  lpb.mul(getEther()) */\n      tag_181\n        /* \"LP/LP.sol\":8083:8093  getEther() */\n      tag_182\n        /* \"LP/LP.sol\":8083:8091  getEther */\n      tag_89\n        /* \"LP/LP.sol\":8083:8093  getEther() */\n      jump\t// in\n    tag_182:\n        /* \"LP/LP.sol\":8075:8078  lpb */\n      dup8\n        /* \"LP/LP.sol\":8075:8082  lpb.mul */\n      tag_127\n      swap1\n        /* \"LP/LP.sol\":8075:8094  lpb.mul(getEther()) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_181:\n        /* \"LP/LP.sol\":8075:8098  lpb.mul(getEther()).mul */\n      tag_127\n      swap1\n        /* \"LP/LP.sol\":8075:8110  lpb.mul(getEther()).mul(computePer) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_180:\n        /* \"LP/LP.sol\":8075:8114  lpb.mul(getEther()).mul(computePer).div */\n      tag_128\n      swap1\n        /* \"LP/LP.sol\":8075:8127  lpb.mul(getEther()).mul(computePer).div(totalShares) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_179:\n        /* \"LP/LP.sol\":8068:8127  return lpb.mul(getEther()).mul(computePer).div(totalShares) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"LP/LP.sol\":7854:8135  function sharesPrice() public view returns (uint256) {\r... */\n    tag_170:\n      swap1\n      jump\t// out\n        /* \"LP/LP.sol\":8256:8366  function getPkBalance() public view returns (uint256) {\r... */\n    tag_66:\n        /* \"LP/LP.sol\":8301:8308  uint256 */\n      0x00\n        /* \"LP/LP.sol\":8328:8333  poker */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"LP/LP.sol\":8328:8343  poker.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"LP/LP.sol\":8352:8356  this */\n      address\n        /* \"LP/LP.sol\":8328:8358  poker.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_184\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_184:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_186\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_186:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_187\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_187:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"LP/LP.sol\":8321:8358  return poker.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"LP/LP.sol\":8256:8366  function getPkBalance() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"LP/LP.sol\":9977:10259  function setStakingSwitch(bool flag) public {\r... */\n    tag_69:\n        /* \"LP/LP.sol\":10050:10055  owner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"LP/LP.sol\":10036:10055  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"LP/LP.sol\":10036:10046  msg.sender */\n      caller\n        /* \"LP/LP.sol\":10036:10055  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"LP/LP.sol\":10032:10252  if (msg.sender == owner) {\r... */\n      iszero\n      tag_189\n      jumpi\n        /* \"LP/LP.sol\":10076:10080  flag */\n      dup1\n        /* \"LP/LP.sol\":10072:10206  if (flag) {\r... */\n      iszero\n      tag_190\n      jumpi\n        /* \"LP/LP.sol\":10120:10129  getTime() */\n      tag_191\n        /* \"LP/LP.sol\":10120:10127  getTime */\n      tag_56\n        /* \"LP/LP.sol\":10120:10129  getTime() */\n      jump\t// in\n    tag_191:\n        /* \"LP/LP.sol\":10101:10117  stakingStartTime */\n      0x0b\n        /* \"LP/LP.sol\":10101:10129  stakingStartTime = getTime() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"LP/LP.sol\":10072:10206  if (flag) {\r... */\n      jump(tag_192)\n    tag_190:\n        /* \"LP/LP.sol\":10189:10190  0 */\n      0x00\n        /* \"LP/LP.sol\":10170:10186  stakingStartTime */\n      0x0b\n        /* \"LP/LP.sol\":10170:10190  stakingStartTime = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"LP/LP.sol\":10072:10206  if (flag) {\r... */\n    tag_192:\n        /* \"LP/LP.sol\":10236:10240  flag */\n      dup1\n        /* \"LP/LP.sol\":10220:10233  stakingSwitch */\n      0x0c\n      0x00\n        /* \"LP/LP.sol\":10220:10240  stakingSwitch = flag */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"LP/LP.sol\":10032:10252  if (msg.sender == owner) {\r... */\n    tag_189:\n        /* \"LP/LP.sol\":9977:10259  function setStakingSwitch(bool flag) public {\r... */\n      pop\n      jump\t// out\n        /* \"LP/LP.sol\":9432:9693  function setFeeAddress(address newAddress) public {\r... */\n    tag_72:\n        /* \"LP/LP.sol\":9515:9520  owner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"LP/LP.sol\":9501:9520  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"LP/LP.sol\":9501:9511  msg.sender */\n      caller\n        /* \"LP/LP.sol\":9501:9520  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"LP/LP.sol\":9493:9521  require(msg.sender == owner) */\n      tag_194\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_194:\n        /* \"LP/LP.sol\":9562:9563  0 */\n      0x00\n        /* \"LP/LP.sol\":9540:9564  newAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"LP/LP.sol\":9540:9550  newAddress */\n      dup2\n        /* \"LP/LP.sol\":9540:9564  newAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"LP/LP.sol\":9532:9577  require(newAddress != address(0), \"set to 0\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x08\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x73657420746f2030000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_195:\n        /* \"LP/LP.sol\":9618:9624  0xdead */\n      0xdead\n        /* \"LP/LP.sol\":9596:9625  newAddress != address(0xdead) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"LP/LP.sol\":9596:9606  newAddress */\n      dup2\n        /* \"LP/LP.sol\":9596:9625  newAddress != address(0xdead) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"LP/LP.sol\":9588:9643  require(newAddress != address(0xdead), \"set to 0xdead\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x73657420746f2030786465616400000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_196:\n        /* \"LP/LP.sol\":9675:9685  newAddress */\n      dup1\n        /* \"LP/LP.sol\":9654:9672  newContractAddress */\n      0x04\n      0x00\n        /* \"LP/LP.sol\":9654:9685  newContractAddress = newAddress */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"LP/LP.sol\":9432:9693  function setFeeAddress(address newAddress) public {\r... */\n      pop\n      jump\t// out\n        /* \"LP/LP.sol\":1215:1235  address public owner */\n    tag_74:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"LP/LP.sol\":7067:7506  function myBenefits() public view returns (uint256) {\r... */\n    tag_76:\n        /* \"LP/LP.sol\":7110:7117  uint256 */\n      0x00\n        /* \"LP/LP.sol\":7149:7150  0 */\n      dup1\n        /* \"LP/LP.sol\":7134:7145  totalShares */\n      sload(0x07)\n        /* \"LP/LP.sol\":7134:7150  totalShares == 0 */\n      eq\n        /* \"LP/LP.sol\":7130:7174  if (totalShares == 0) \r... */\n      iszero\n      tag_198\n      jumpi\n        /* \"LP/LP.sol\":7173:7174  0 */\n      0x00\n        /* \"LP/LP.sol\":7166:7174  return 0 */\n      swap1\n      pop\n      jump(tag_197)\n        /* \"LP/LP.sol\":7130:7174  if (totalShares == 0) \r... */\n    tag_198:\n        /* \"LP/LP.sol\":7185:7206  UserInfo storage user */\n      0x00\n        /* \"LP/LP.sol\":7209:7217  userInfo */\n      0x0e\n        /* \"LP/LP.sol\":7209:7229  userInfo[msg.sender] */\n      0x00\n        /* \"LP/LP.sol\":7218:7228  msg.sender */\n      caller\n        /* \"LP/LP.sol\":7209:7229  userInfo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"LP/LP.sol\":7185:7229  UserInfo storage user = userInfo[msg.sender] */\n      swap1\n      pop\n        /* \"LP/LP.sol\":7240:7258  uint256 computePer */\n      0x00\n        /* \"LP/LP.sol\":7261:7318  accPerShare.add(divFloor(this.pendingCoin(),lpBalance())) */\n      tag_199\n        /* \"LP/LP.sol\":7277:7317  divFloor(this.pendingCoin(),lpBalance()) */\n      tag_200\n        /* \"LP/LP.sol\":7286:7290  this */\n      address\n        /* \"LP/LP.sol\":7286:7302  this.pendingCoin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfc3e532b\n        /* \"LP/LP.sol\":7286:7304  this.pendingCoin() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_201\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_201:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_203\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_203:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_204\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_204:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"LP/LP.sol\":7305:7316  lpBalance() */\n      tag_205\n        /* \"LP/LP.sol\":7305:7314  lpBalance */\n      tag_47\n        /* \"LP/LP.sol\":7305:7316  lpBalance() */\n      jump\t// in\n    tag_205:\n        /* \"LP/LP.sol\":7277:7285  divFloor */\n      tag_164\n        /* \"LP/LP.sol\":7277:7317  divFloor(this.pendingCoin(),lpBalance()) */\n      jump\t// in\n    tag_200:\n        /* \"LP/LP.sol\":7261:7272  accPerShare */\n      sload(0x05)\n        /* \"LP/LP.sol\":7261:7276  accPerShare.add */\n      tag_124\n      swap1\n        /* \"LP/LP.sol\":7261:7318  accPerShare.add(divFloor(this.pendingCoin(),lpBalance())) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_199:\n        /* \"LP/LP.sol\":7240:7318  uint256 computePer = accPerShare.add(divFloor(this.pendingCoin(),lpBalance())) */\n      swap1\n      pop\n        /* \"LP/LP.sol\":7329:7340  uint256 ben */\n      0x00\n        /* \"LP/LP.sol\":7343:7377  decimalMul(user.amount,computePer) */\n      tag_206\n        /* \"LP/LP.sol\":7354:7358  user */\n      dup4\n        /* \"LP/LP.sol\":7354:7365  user.amount */\n      0x07\n      add\n      sload\n        /* \"LP/LP.sol\":7366:7376  computePer */\n      dup4\n        /* \"LP/LP.sol\":7343:7353  decimalMul */\n      tag_123\n        /* \"LP/LP.sol\":7343:7377  decimalMul(user.amount,computePer) */\n      jump\t// in\n    tag_206:\n        /* \"LP/LP.sol\":7329:7377  uint256 ben = decimalMul(user.amount,computePer) */\n      swap1\n      pop\n        /* \"LP/LP.sol\":7400:7404  user */\n      dup3\n        /* \"LP/LP.sol\":7400:7415  user.rewardDebt */\n      0x05\n      add\n      sload\n        /* \"LP/LP.sol\":7394:7397  ben */\n      dup2\n        /* \"LP/LP.sol\":7394:7415  ben > user.rewardDebt */\n      gt\n        /* \"LP/LP.sol\":7390:7498  if (ben > user.rewardDebt)\r... */\n      iszero\n      tag_207\n      jumpi\n        /* \"LP/LP.sol\":7437:7461  ben.sub(user.rewardDebt) */\n      tag_208\n        /* \"LP/LP.sol\":7445:7449  user */\n      dup4\n        /* \"LP/LP.sol\":7445:7460  user.rewardDebt */\n      0x05\n      add\n      sload\n        /* \"LP/LP.sol\":7437:7440  ben */\n      dup3\n        /* \"LP/LP.sol\":7437:7444  ben.sub */\n      tag_115\n      swap1\n        /* \"LP/LP.sol\":7437:7461  ben.sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_208:\n        /* \"LP/LP.sol\":7430:7461  return ben.sub(user.rewardDebt) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_197)\n        /* \"LP/LP.sol\":7390:7498  if (ben > user.rewardDebt)\r... */\n    tag_207:\n        /* \"LP/LP.sol\":7497:7498  0 */\n      0x00\n        /* \"LP/LP.sol\":7490:7498  return 0 */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"LP/LP.sol\":7067:7506  function myBenefits() public view returns (uint256) {\r... */\n    tag_197:\n      swap1\n      jump\t// out\n        /* \"LP/LP.sol\":2835:4110  function deposit(uint256 _amount) public {\r... */\n    tag_79:\n        /* \"LP/LP.sol\":2905:2906  0 */\n      0x00\n        /* \"LP/LP.sol\":2895:2902  _amount */\n      dup2\n        /* \"LP/LP.sol\":2895:2906  _amount > 0 */\n      gt\n        /* \"LP/LP.sol\":2887:2929  require(_amount > 0, \"Nothing to deposit\") */\n      tag_211\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4e6f7468696e6720746f206465706f7369740000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_211:\n        /* \"LP/LP.sol\":2942:2954  updatePool() */\n      tag_212\n        /* \"LP/LP.sol\":2942:2952  updatePool */\n      tag_93\n        /* \"LP/LP.sol\":2942:2954  updatePool() */\n      jump\t// in\n    tag_212:\n        /* \"LP/LP.sol\":2965:2976  uint256 bal */\n      0x00\n        /* \"LP/LP.sol\":2979:2990  lpBalance() */\n      tag_213\n        /* \"LP/LP.sol\":2979:2988  lpBalance */\n      tag_47\n        /* \"LP/LP.sol\":2979:2990  lpBalance() */\n      jump\t// in\n    tag_213:\n        /* \"LP/LP.sol\":2965:2990  uint256 bal = lpBalance() */\n      swap1\n      pop\n        /* \"LP/LP.sol\":3003:3024  UserInfo storage user */\n      0x00\n        /* \"LP/LP.sol\":3027:3035  userInfo */\n      0x0e\n        /* \"LP/LP.sol\":3027:3047  userInfo[msg.sender] */\n      0x00\n        /* \"LP/LP.sol\":3036:3046  msg.sender */\n      caller\n        /* \"LP/LP.sol\":3027:3047  userInfo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"LP/LP.sol\":3003:3047  UserInfo storage user = userInfo[msg.sender] */\n      swap1\n      pop\n        /* \"LP/LP.sol\":3078:3079  0 */\n      0x00\n        /* \"LP/LP.sol\":3064:3068  user */\n      dup2\n        /* \"LP/LP.sol\":3064:3075  user.amount */\n      0x07\n      add\n      sload\n        /* \"LP/LP.sol\":3064:3079  user.amount > 0 */\n      gt\n        /* \"LP/LP.sol\":3060:3369  if (user.amount > 0) {\r... */\n      iszero\n      tag_214\n      jumpi\n        /* \"LP/LP.sol\":3096:3111  uint256 pending */\n      0x00\n        /* \"LP/LP.sol\":3114:3203  decimalMul(user.amount, accPerShare).sub(\r... */\n      tag_215\n        /* \"LP/LP.sol\":3173:3177  user */\n      dup3\n        /* \"LP/LP.sol\":3173:3188  user.rewardDebt */\n      0x05\n      add\n      sload\n        /* \"LP/LP.sol\":3114:3150  decimalMul(user.amount, accPerShare) */\n      tag_216\n        /* \"LP/LP.sol\":3125:3129  user */\n      dup5\n        /* \"LP/LP.sol\":3125:3136  user.amount */\n      0x07\n      add\n      sload\n        /* \"LP/LP.sol\":3138:3149  accPerShare */\n      sload(0x05)\n        /* \"LP/LP.sol\":3114:3124  decimalMul */\n      tag_123\n        /* \"LP/LP.sol\":3114:3150  decimalMul(user.amount, accPerShare) */\n      jump\t// in\n    tag_216:\n        /* \"LP/LP.sol\":3114:3154  decimalMul(user.amount, accPerShare).sub */\n      tag_115\n      swap1\n        /* \"LP/LP.sol\":3114:3203  decimalMul(user.amount, accPerShare).sub(\r... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_215:\n        /* \"LP/LP.sol\":3096:3203  uint256 pending = decimalMul(user.amount, accPerShare).sub(\r... */\n      swap1\n      pop\n        /* \"LP/LP.sol\":3288:3313  user.rewards.add(pending) */\n      tag_217\n        /* \"LP/LP.sol\":3305:3312  pending */\n      dup2\n        /* \"LP/LP.sol\":3288:3292  user */\n      dup4\n        /* \"LP/LP.sol\":3288:3300  user.rewards */\n      0x06\n      add\n      sload\n        /* \"LP/LP.sol\":3288:3304  user.rewards.add */\n      tag_124\n      swap1\n        /* \"LP/LP.sol\":3288:3313  user.rewards.add(pending) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_217:\n        /* \"LP/LP.sol\":3273:3277  user */\n      dup3\n        /* \"LP/LP.sol\":3273:3285  user.rewards */\n      0x06\n      add\n        /* \"LP/LP.sol\":3273:3313  user.rewards = user.rewards.add(pending) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"LP/LP.sol\":3060:3369  if (user.amount > 0) {\r... */\n      pop\n      jump(tag_218)\n    tag_214:\n        /* \"LP/LP.sol\":3368:3369  0 */\n      0x00\n        /* \"LP/LP.sol\":3353:3357  user */\n      dup2\n        /* \"LP/LP.sol\":3353:3365  user.rewards */\n      0x06\n      add\n        /* \"LP/LP.sol\":3353:3369  user.rewards = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"LP/LP.sol\":3060:3369  if (user.amount > 0) {\r... */\n    tag_218:\n        /* \"LP/LP.sol\":3382:3384  lp */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"LP/LP.sol\":3382:3397  lp.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"LP/LP.sol\":3398:3408  msg.sender */\n      caller\n        /* \"LP/LP.sol\":3418:3422  this */\n      address\n        /* \"LP/LP.sol\":3425:3432  _amount */\n      dup7\n        /* \"LP/LP.sol\":3382:3433  lp.transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_219\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_219:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_221\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_221:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_222\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_222:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      pop\n        /* \"LP/LP.sol\":3446:3467  uint256 currentShares */\n      0x00\n        /* \"LP/LP.sol\":3501:3502  0 */\n      dup1\n        /* \"LP/LP.sol\":3486:3497  totalShares */\n      sload(0x07)\n        /* \"LP/LP.sol\":3486:3502  totalShares != 0 */\n      eq\n        /* \"LP/LP.sol\":3482:3654  if (totalShares != 0) {\r... */\n      tag_223\n      jumpi\n        /* \"LP/LP.sol\":3535:3570  (_amount.mul(totalShares)).div(bal) */\n      tag_224\n        /* \"LP/LP.sol\":3566:3569  bal */\n      dup4\n        /* \"LP/LP.sol\":3536:3560  _amount.mul(totalShares) */\n      tag_225\n        /* \"LP/LP.sol\":3548:3559  totalShares */\n      sload(0x07)\n        /* \"LP/LP.sol\":3536:3543  _amount */\n      dup8\n        /* \"LP/LP.sol\":3536:3547  _amount.mul */\n      tag_127\n      swap1\n        /* \"LP/LP.sol\":3536:3560  _amount.mul(totalShares) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_225:\n        /* \"LP/LP.sol\":3535:3565  (_amount.mul(totalShares)).div */\n      tag_128\n      swap1\n        /* \"LP/LP.sol\":3535:3570  (_amount.mul(totalShares)).div(bal) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_224:\n        /* \"LP/LP.sol\":3519:3570  currentShares = (_amount.mul(totalShares)).div(bal) */\n      swap1\n      pop\n        /* \"LP/LP.sol\":3482:3654  if (totalShares != 0) {\r... */\n      jump(tag_226)\n    tag_223:\n        /* \"LP/LP.sol\":3619:3642  _amount.mul(getEther()) */\n      tag_227\n        /* \"LP/LP.sol\":3631:3641  getEther() */\n      tag_228\n        /* \"LP/LP.sol\":3631:3639  getEther */\n      tag_89\n        /* \"LP/LP.sol\":3631:3641  getEther() */\n      jump\t// in\n    tag_228:\n        /* \"LP/LP.sol\":3619:3626  _amount */\n      dup6\n        /* \"LP/LP.sol\":3619:3630  _amount.mul */\n      tag_127\n      swap1\n        /* \"LP/LP.sol\":3619:3642  _amount.mul(getEther()) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_227:\n        /* \"LP/LP.sol\":3603:3642  currentShares = _amount.mul(getEther()) */\n      swap1\n      pop\n        /* \"LP/LP.sol\":3482:3654  if (totalShares != 0) {\r... */\n    tag_226:\n        /* \"LP/LP.sol\":3680:3710  user.shares.add(currentShares) */\n      tag_229\n        /* \"LP/LP.sol\":3696:3709  currentShares */\n      dup2\n        /* \"LP/LP.sol\":3680:3684  user */\n      dup4\n        /* \"LP/LP.sol\":3680:3691  user.shares */\n      0x00\n      add\n      sload\n        /* \"LP/LP.sol\":3680:3695  user.shares.add */\n      tag_124\n      swap1\n        /* \"LP/LP.sol\":3680:3710  user.shares.add(currentShares) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_229:\n        /* \"LP/LP.sol\":3666:3670  user */\n      dup3\n        /* \"LP/LP.sol\":3666:3677  user.shares */\n      0x00\n      add\n        /* \"LP/LP.sol\":3666:3710  user.shares = user.shares.add(currentShares) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"LP/LP.sol\":3735:3765  totalShares.add(currentShares) */\n      tag_230\n        /* \"LP/LP.sol\":3751:3764  currentShares */\n      dup2\n        /* \"LP/LP.sol\":3735:3746  totalShares */\n      sload(0x07)\n        /* \"LP/LP.sol\":3735:3750  totalShares.add */\n      tag_124\n      swap1\n        /* \"LP/LP.sol\":3735:3765  totalShares.add(currentShares) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_230:\n        /* \"LP/LP.sol\":3721:3732  totalShares */\n      0x07\n        /* \"LP/LP.sol\":3721:3765  totalShares = totalShares.add(currentShares) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"LP/LP.sol\":3804:3808  user */\n      dup2\n        /* \"LP/LP.sol\":3804:3816  user.rewards */\n      0x06\n      add\n      sload\n        /* \"LP/LP.sol\":3776:3780  user */\n      dup3\n        /* \"LP/LP.sol\":3776:3801  user.coinAtlastUserAction */\n      0x03\n      add\n        /* \"LP/LP.sol\":3776:3816  user.coinAtlastUserAction = user.rewards */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"LP/LP.sol\":3843:3867  user.amount.add(_amount) */\n      tag_231\n        /* \"LP/LP.sol\":3859:3866  _amount */\n      dup5\n        /* \"LP/LP.sol\":3843:3847  user */\n      dup4\n        /* \"LP/LP.sol\":3843:3854  user.amount */\n      0x07\n      add\n      sload\n        /* \"LP/LP.sol\":3843:3858  user.amount.add */\n      tag_124\n      swap1\n        /* \"LP/LP.sol\":3843:3867  user.amount.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_231:\n        /* \"LP/LP.sol\":3829:3833  user */\n      dup3\n        /* \"LP/LP.sol\":3829:3840  user.amount */\n      0x07\n      add\n        /* \"LP/LP.sol\":3829:3867  user.amount = user.amount.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"LP/LP.sol\":3896:3931  decimalMul(user.amount,accPerShare) */\n      tag_232\n        /* \"LP/LP.sol\":3907:3911  user */\n      dup3\n        /* \"LP/LP.sol\":3907:3918  user.amount */\n      0x07\n      add\n      sload\n        /* \"LP/LP.sol\":3919:3930  accPerShare */\n      sload(0x05)\n        /* \"LP/LP.sol\":3896:3906  decimalMul */\n      tag_123\n        /* \"LP/LP.sol\":3896:3931  decimalMul(user.amount,accPerShare) */\n      jump\t// in\n    tag_232:\n        /* \"LP/LP.sol\":3878:3882  user */\n      dup3\n        /* \"LP/LP.sol\":3878:3893  user.rewardDebt */\n      0x05\n      add\n        /* \"LP/LP.sol\":3878:3931  user.rewardDebt = decimalMul(user.amount,accPerShare) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"LP/LP.sol\":3970:3979  getTime() */\n      tag_233\n        /* \"LP/LP.sol\":3970:3977  getTime */\n      tag_56\n        /* \"LP/LP.sol\":3970:3979  getTime() */\n      jump\t// in\n    tag_233:\n        /* \"LP/LP.sol\":3944:3948  user */\n      dup3\n        /* \"LP/LP.sol\":3944:3967  user.lastUserActionTime */\n      0x02\n      add\n        /* \"LP/LP.sol\":3944:3979  user.lastUserActionTime = getTime() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"LP/LP.sol\":4015:4024  getTime() */\n      tag_234\n        /* \"LP/LP.sol\":4015:4022  getTime */\n      tag_56\n        /* \"LP/LP.sol\":4015:4024  getTime() */\n      jump\t// in\n    tag_234:\n        /* \"LP/LP.sol\":3990:3994  user */\n      dup3\n        /* \"LP/LP.sol\":3990:4012  user.lastDepositedTime */\n      0x01\n      add\n        /* \"LP/LP.sol\":3990:4024  user.lastDepositedTime = getTime() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"LP/LP.sol\":4050:4060  msg.sender */\n      caller\n        /* \"LP/LP.sol\":4042:4102  Deposit(msg.sender, _amount, currentShares, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x36af321ec8d3c75236829c5317affd40ddb308863a1236d2d277a4025cccee1e\n        /* \"LP/LP.sol\":4062:4069  _amount */\n      dup6\n        /* \"LP/LP.sol\":4071:4084  currentShares */\n      dup4\n        /* \"LP/LP.sol\":4086:4101  block.timestamp */\n      timestamp\n        /* \"LP/LP.sol\":4042:4102  Deposit(msg.sender, _amount, currentShares, block.timestamp) */\n      mload(0x40)\n      dup1\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"LP/LP.sol\":2835:4110  function deposit(uint256 _amount) public {\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"LP/LP.sol\":8513:9424  function getStakingCoinPerSec() public view returns (uint256) {\r... */\n    tag_81:\n        /* \"LP/LP.sol\":8566:8573  uint256 */\n      0x00\n        /* \"LP/LP.sol\":8586:8597  uint256 sec */\n      dup1\n        /* \"LP/LP.sol\":8600:8609  24 * 3600 */\n      0x015180\n        /* \"LP/LP.sol\":8586:8609  uint256 sec = 24 * 3600 */\n      swap1\n      pop\n        /* \"LP/LP.sol\":8620:8635  uint256 curTime */\n      0x00\n        /* \"LP/LP.sol\":8638:8647  getTime() */\n      tag_236\n        /* \"LP/LP.sol\":8638:8645  getTime */\n      tag_56\n        /* \"LP/LP.sol\":8638:8647  getTime() */\n      jump\t// in\n    tag_236:\n        /* \"LP/LP.sol\":8620:8647  uint256 curTime = getTime() */\n      swap1\n      pop\n        /* \"LP/LP.sol\":8658:8670  uint256 coin */\n      0x00\n        /* \"LP/LP.sol\":8673:8674  1 */\n      0x01\n        /* \"LP/LP.sol\":8658:8674  uint256 coin = 1 */\n      swap1\n      pop\n        /* \"LP/LP.sol\":8708:8713  false */\n      0x00\n        /* \"LP/LP.sol\":8691:8713  stakingSwitch == false */\n      iszero\n      iszero\n        /* \"LP/LP.sol\":8691:8704  stakingSwitch */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"LP/LP.sol\":8691:8713  stakingSwitch == false */\n      iszero\n      iszero\n      eq\n        /* \"LP/LP.sol\":8687:8859  if (stakingSwitch == false) {\r... */\n      iszero\n      tag_237\n      jumpi\n        /* \"LP/LP.sol\":8730:8745  uint256 maxCoin */\n      0x00\n        /* \"LP/LP.sol\":8748:8754  122300 */\n      0x01ddbc\n        /* \"LP/LP.sol\":8730:8754  uint256 maxCoin = 122300 */\n      swap1\n      pop\n        /* \"LP/LP.sol\":8776:8821  maxCoin.mul((10**uint256(decimals))).div(sec) */\n      tag_238\n        /* \"LP/LP.sol\":8817:8820  sec */\n      dup5\n        /* \"LP/LP.sol\":8776:8812  maxCoin.mul((10**uint256(decimals))) */\n      tag_239\n        /* \"LP/LP.sol\":8801:8809  decimals */\n      sload(0x0d)\n        /* \"LP/LP.sol\":8789:8791  10 */\n      0x0a\n        /* \"LP/LP.sol\":8789:8810  10**uint256(decimals) */\n      exp\n        /* \"LP/LP.sol\":8776:8783  maxCoin */\n      dup5\n        /* \"LP/LP.sol\":8776:8787  maxCoin.mul */\n      tag_127\n      swap1\n        /* \"LP/LP.sol\":8776:8812  maxCoin.mul((10**uint256(decimals))) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_239:\n        /* \"LP/LP.sol\":8776:8816  maxCoin.mul((10**uint256(decimals))).div */\n      tag_128\n      swap1\n        /* \"LP/LP.sol\":8776:8821  maxCoin.mul((10**uint256(decimals))).div(sec) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_238:\n        /* \"LP/LP.sol\":8769:8821  coin = maxCoin.mul((10**uint256(decimals))).div(sec) */\n      swap2\n      pop\n        /* \"LP/LP.sol\":8843:8847  coin */\n      dup2\n        /* \"LP/LP.sol\":8836:8847  return coin */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_235)\n        /* \"LP/LP.sol\":8687:8859  if (stakingSwitch == false) {\r... */\n    tag_237:\n        /* \"LP/LP.sol\":8935:8941  60 * 5 */\n      0x012c\n        /* \"LP/LP.sol\":8916:8932  stakingStartTime */\n      sload(0x0b)\n        /* \"LP/LP.sol\":8916:8941  stakingStartTime + 60 * 5 */\n      add\n        /* \"LP/LP.sol\":8905:8912  curTime */\n      dup3\n        /* \"LP/LP.sol\":8905:8942  curTime < (stakingStartTime + 60 * 5) */\n      lt\n        /* \"LP/LP.sol\":8901:9395  if (curTime < (stakingStartTime + 60 * 5)) {\r... */\n      iszero\n      tag_240\n      jumpi\n        /* \"LP/LP.sol\":8959:8974  uint256 maxCoin */\n      0x00\n        /* \"LP/LP.sol\":8977:8984  2800000 */\n      0x2ab980\n        /* \"LP/LP.sol\":8959:8984  uint256 maxCoin = 2800000 */\n      swap1\n      pop\n        /* \"LP/LP.sol\":9006:9051  maxCoin.mul((10**uint256(decimals))).div(sec) */\n      tag_241\n        /* \"LP/LP.sol\":9047:9050  sec */\n      dup5\n        /* \"LP/LP.sol\":9006:9042  maxCoin.mul((10**uint256(decimals))) */\n      tag_242\n        /* \"LP/LP.sol\":9031:9039  decimals */\n      sload(0x0d)\n        /* \"LP/LP.sol\":9019:9021  10 */\n      0x0a\n        /* \"LP/LP.sol\":9019:9040  10**uint256(decimals) */\n      exp\n        /* \"LP/LP.sol\":9006:9013  maxCoin */\n      dup5\n        /* \"LP/LP.sol\":9006:9017  maxCoin.mul */\n      tag_127\n      swap1\n        /* \"LP/LP.sol\":9006:9042  maxCoin.mul((10**uint256(decimals))) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_242:\n        /* \"LP/LP.sol\":9006:9046  maxCoin.mul((10**uint256(decimals))).div */\n      tag_128\n      swap1\n        /* \"LP/LP.sol\":9006:9051  maxCoin.mul((10**uint256(decimals))).div(sec) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_241:\n        /* \"LP/LP.sol\":8999:9051  coin = maxCoin.mul((10**uint256(decimals))).div(sec) */\n      swap2\n      pop\n        /* \"LP/LP.sol\":8901:9395  if (curTime < (stakingStartTime + 60 * 5)) {\r... */\n      pop\n      jump(tag_243)\n    tag_240:\n        /* \"LP/LP.sol\":9142:9149  60 * 10 */\n      0x0258\n        /* \"LP/LP.sol\":9123:9139  stakingStartTime */\n      sload(0x0b)\n        /* \"LP/LP.sol\":9123:9149  stakingStartTime + 60 * 10 */\n      add\n        /* \"LP/LP.sol\":9112:9119  curTime */\n      dup3\n        /* \"LP/LP.sol\":9112:9150  curTime < (stakingStartTime + 60 * 10) */\n      lt\n        /* \"LP/LP.sol\":9108:9395  if (curTime < (stakingStartTime + 60 * 10)) {\r... */\n      iszero\n      tag_244\n      jumpi\n        /* \"LP/LP.sol\":9167:9182  uint256 maxCoin */\n      0x00\n        /* \"LP/LP.sol\":9185:9192  1400000 */\n      0x155cc0\n        /* \"LP/LP.sol\":9167:9192  uint256 maxCoin = 1400000 */\n      swap1\n      pop\n        /* \"LP/LP.sol\":9214:9259  maxCoin.mul((10**uint256(decimals))).div(sec) */\n      tag_245\n        /* \"LP/LP.sol\":9255:9258  sec */\n      dup5\n        /* \"LP/LP.sol\":9214:9250  maxCoin.mul((10**uint256(decimals))) */\n      tag_246\n        /* \"LP/LP.sol\":9239:9247  decimals */\n      sload(0x0d)\n        /* \"LP/LP.sol\":9227:9229  10 */\n      0x0a\n        /* \"LP/LP.sol\":9227:9248  10**uint256(decimals) */\n      exp\n        /* \"LP/LP.sol\":9214:9221  maxCoin */\n      dup5\n        /* \"LP/LP.sol\":9214:9225  maxCoin.mul */\n      tag_127\n      swap1\n        /* \"LP/LP.sol\":9214:9250  maxCoin.mul((10**uint256(decimals))) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_246:\n        /* \"LP/LP.sol\":9214:9254  maxCoin.mul((10**uint256(decimals))).div */\n      tag_128\n      swap1\n        /* \"LP/LP.sol\":9214:9259  maxCoin.mul((10**uint256(decimals))).div(sec) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_245:\n        /* \"LP/LP.sol\":9207:9259  coin = maxCoin.mul((10**uint256(decimals))).div(sec) */\n      swap2\n      pop\n        /* \"LP/LP.sol\":9108:9395  if (curTime < (stakingStartTime + 60 * 10)) {\r... */\n      pop\n      jump(tag_247)\n    tag_244:\n        /* \"LP/LP.sol\":9292:9307  uint256 maxCoin */\n      0x00\n        /* \"LP/LP.sol\":9310:9316  122300 */\n      0x01ddbc\n        /* \"LP/LP.sol\":9292:9316  uint256 maxCoin = 122300 */\n      swap1\n      pop\n        /* \"LP/LP.sol\":9338:9383  maxCoin.mul((10**uint256(decimals))).div(sec) */\n      tag_248\n        /* \"LP/LP.sol\":9379:9382  sec */\n      dup5\n        /* \"LP/LP.sol\":9338:9374  maxCoin.mul((10**uint256(decimals))) */\n      tag_249\n        /* \"LP/LP.sol\":9363:9371  decimals */\n      sload(0x0d)\n        /* \"LP/LP.sol\":9351:9353  10 */\n      0x0a\n        /* \"LP/LP.sol\":9351:9372  10**uint256(decimals) */\n      exp\n        /* \"LP/LP.sol\":9338:9345  maxCoin */\n      dup5\n        /* \"LP/LP.sol\":9338:9349  maxCoin.mul */\n      tag_127\n      swap1\n        /* \"LP/LP.sol\":9338:9374  maxCoin.mul((10**uint256(decimals))) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_249:\n        /* \"LP/LP.sol\":9338:9378  maxCoin.mul((10**uint256(decimals))).div */\n      tag_128\n      swap1\n        /* \"LP/LP.sol\":9338:9383  maxCoin.mul((10**uint256(decimals))).div(sec) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_248:\n        /* \"LP/LP.sol\":9331:9383  coin = maxCoin.mul((10**uint256(decimals))).div(sec) */\n      swap2\n      pop\n        /* \"LP/LP.sol\":9108:9395  if (curTime < (stakingStartTime + 60 * 10)) {\r... */\n      pop\n    tag_247:\n        /* \"LP/LP.sol\":8901:9395  if (curTime < (stakingStartTime + 60 * 5)) {\r... */\n    tag_243:\n        /* \"LP/LP.sol\":9412:9416  coin */\n      dup1\n        /* \"LP/LP.sol\":9405:9416  return coin */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"LP/LP.sol\":8513:9424  function getStakingCoinPerSec() public view returns (uint256) {\r... */\n    tag_235:\n      swap1\n      jump\t// out\n        /* \"LP/LP.sol\":1975:2008  uint256 public lastUpdateTime = 0 */\n    tag_83:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"LP/LP.sol\":6938:7059  function totalStakingAmount() public view returns (uint256) {\r... */\n    tag_85:\n        /* \"LP/LP.sol\":6989:6996  uint256 */\n      0x00\n        /* \"LP/LP.sol\":7016:7051  this.pendingCoin().add(totalAmount) */\n      tag_251\n        /* \"LP/LP.sol\":7039:7050  totalAmount */\n      sload(0x08)\n        /* \"LP/LP.sol\":7016:7020  this */\n      address\n        /* \"LP/LP.sol\":7016:7032  this.pendingCoin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfc3e532b\n        /* \"LP/LP.sol\":7016:7034  this.pendingCoin() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_252\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_252:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_254\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_254:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_255\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_255:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"LP/LP.sol\":7016:7038  this.pendingCoin().add */\n      tag_124\n      swap1\n        /* \"LP/LP.sol\":7016:7051  this.pendingCoin().add(totalAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_251:\n        /* \"LP/LP.sol\":7009:7051  return this.pendingCoin().add(totalAmount) */\n      swap1\n      pop\n        /* \"LP/LP.sol\":6938:7059  function totalStakingAmount() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"LP/LP.sol\":1828:1858  uint256 public accPerShare = 0 */\n    tag_87:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"LP/LP.sol\":8374:8471  function getEther() public view returns (uint256) {\r... */\n    tag_89:\n        /* \"LP/LP.sol\":8415:8422  uint256 */\n      0x00\n        /* \"LP/LP.sol\":8454:8462  decimals */\n      sload(0x0d)\n        /* \"LP/LP.sol\":8442:8444  10 */\n      0x0a\n        /* \"LP/LP.sol\":8442:8463  10**uint256(decimals) */\n      exp\n        /* \"LP/LP.sol\":8435:8463  return 10**uint256(decimals) */\n      swap1\n      pop\n        /* \"LP/LP.sol\":8374:8471  function getEther() public view returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"LP/LP.sol\":2015:2056  uint256 public withdrawFeePeriod = 7 days */\n    tag_91:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"LP/LP.sol\":6018:6608  function updatePool() public {\r... */\n    tag_93:\n        /* \"LP/LP.sol\":6058:6073  uint256 curTime */\n      0x00\n        /* \"LP/LP.sol\":6076:6085  getTime() */\n      tag_258\n        /* \"LP/LP.sol\":6076:6083  getTime */\n      tag_56\n        /* \"LP/LP.sol\":6076:6085  getTime() */\n      jump\t// in\n    tag_258:\n        /* \"LP/LP.sol\":6058:6085  uint256 curTime = getTime() */\n      swap1\n      pop\n        /* \"LP/LP.sol\":6111:6125  lastUpdateTime */\n      sload(0x09)\n        /* \"LP/LP.sol\":6100:6107  curTime */\n      dup2\n        /* \"LP/LP.sol\":6100:6125  curTime <= lastUpdateTime */\n      gt\n        /* \"LP/LP.sol\":6096:6160  if (curTime <= lastUpdateTime) {\r... */\n      tag_259\n      jumpi\n        /* \"LP/LP.sol\":6142:6149  return; */\n      pop\n      jump(tag_257)\n        /* \"LP/LP.sol\":6096:6160  if (curTime <= lastUpdateTime) {\r... */\n    tag_259:\n        /* \"LP/LP.sol\":6170:6181  uint256 lpb */\n      0x00\n        /* \"LP/LP.sol\":6184:6195  lpBalance() */\n      tag_260\n        /* \"LP/LP.sol\":6184:6193  lpBalance */\n      tag_47\n        /* \"LP/LP.sol\":6184:6195  lpBalance() */\n      jump\t// in\n    tag_260:\n        /* \"LP/LP.sol\":6170:6195  uint256 lpb = lpBalance() */\n      swap1\n      pop\n        /* \"LP/LP.sol\":6217:6218  0 */\n      0x00\n        /* \"LP/LP.sol\":6210:6213  lpb */\n      dup2\n        /* \"LP/LP.sol\":6210:6218  lpb <= 0 */\n      gt\n        /* \"LP/LP.sol\":6206:6292  if (lpb <= 0) {\r... */\n      tag_261\n      jumpi\n        /* \"LP/LP.sol\":6252:6259  curTime */\n      dup2\n        /* \"LP/LP.sol\":6235:6249  lastUpdateTime */\n      0x09\n        /* \"LP/LP.sol\":6235:6259  lastUpdateTime = curTime */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"LP/LP.sol\":6274:6281  return; */\n      pop\n      pop\n      jump(tag_257)\n        /* \"LP/LP.sol\":6206:6292  if (lpb <= 0) {\r... */\n    tag_261:\n        /* \"LP/LP.sol\":6304:6322  uint256 multiplier */\n      0x00\n        /* \"LP/LP.sol\":6331:6345  lastUpdateTime */\n      sload(0x09)\n        /* \"LP/LP.sol\":6325:6328  now */\n      timestamp\n        /* \"LP/LP.sol\":6325:6345  now - lastUpdateTime */\n      sub\n        /* \"LP/LP.sol\":6304:6345  uint256 multiplier = now - lastUpdateTime */\n      swap1\n      pop\n        /* \"LP/LP.sol\":6356:6370  uint256 reward */\n      0x00\n        /* \"LP/LP.sol\":6373:6411  multiplier.mul(getStakingCoinPerSec()) */\n      tag_262\n        /* \"LP/LP.sol\":6388:6410  getStakingCoinPerSec() */\n      tag_263\n        /* \"LP/LP.sol\":6388:6408  getStakingCoinPerSec */\n      tag_81\n        /* \"LP/LP.sol\":6388:6410  getStakingCoinPerSec() */\n      jump\t// in\n    tag_263:\n        /* \"LP/LP.sol\":6373:6383  multiplier */\n      dup4\n        /* \"LP/LP.sol\":6373:6387  multiplier.mul */\n      tag_127\n      swap1\n        /* \"LP/LP.sol\":6373:6411  multiplier.mul(getStakingCoinPerSec()) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_262:\n        /* \"LP/LP.sol\":6356:6411  uint256 reward = multiplier.mul(getStakingCoinPerSec()) */\n      swap1\n      pop\n        /* \"LP/LP.sol\":6439:6446  curTime */\n      dup4\n        /* \"LP/LP.sol\":6422:6436  lastUpdateTime */\n      0x09\n        /* \"LP/LP.sol\":6422:6446  lastUpdateTime = curTime */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"LP/LP.sol\":6471:6494  totalAmount.add(reward) */\n      tag_264\n        /* \"LP/LP.sol\":6487:6493  reward */\n      dup2\n        /* \"LP/LP.sol\":6471:6482  totalAmount */\n      sload(0x08)\n        /* \"LP/LP.sol\":6471:6486  totalAmount.add */\n      tag_124\n      swap1\n        /* \"LP/LP.sol\":6471:6494  totalAmount.add(reward) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_264:\n        /* \"LP/LP.sol\":6457:6468  totalAmount */\n      0x08\n        /* \"LP/LP.sol\":6457:6494  totalAmount = totalAmount.add(reward) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"LP/LP.sol\":6519:6556  accPerShare.add(divFloor(reward,lpb)) */\n      tag_265\n        /* \"LP/LP.sol\":6535:6555  divFloor(reward,lpb) */\n      tag_266\n        /* \"LP/LP.sol\":6544:6550  reward */\n      dup3\n        /* \"LP/LP.sol\":6551:6554  lpb */\n      dup6\n        /* \"LP/LP.sol\":6535:6543  divFloor */\n      tag_164\n        /* \"LP/LP.sol\":6535:6555  divFloor(reward,lpb) */\n      jump\t// in\n    tag_266:\n        /* \"LP/LP.sol\":6519:6530  accPerShare */\n      sload(0x05)\n        /* \"LP/LP.sol\":6519:6534  accPerShare.add */\n      tag_124\n      swap1\n        /* \"LP/LP.sol\":6519:6556  accPerShare.add(divFloor(reward,lpb)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_265:\n        /* \"LP/LP.sol\":6505:6516  accPerShare */\n      0x05\n        /* \"LP/LP.sol\":6505:6556  accPerShare = accPerShare.add(divFloor(reward,lpb)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"LP/LP.sol\":6567:6572  poker */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"LP/LP.sol\":6567:6577  poker.mint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x40c10f19\n        /* \"LP/LP.sol\":6586:6590  this */\n      address\n        /* \"LP/LP.sol\":6593:6599  reward */\n      dup4\n        /* \"LP/LP.sol\":6567:6600  poker.mint(address(this), reward) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_267\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_267:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_269\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_269:\n      pop\n      pop\n      pop\n      pop\n        /* \"LP/LP.sol\":6018:6608  function updatePool() public {\r... */\n      pop\n      pop\n      pop\n      pop\n    tag_257:\n      jump\t// out\n        /* \"LP/LP.sol\":2188:2221  bool public stakingSwitch = false */\n    tag_95:\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"LP/LP.sol\":10267:10381  function setLp(ILPToken _lp) public {\r... */\n    tag_98:\n        /* \"LP/LP.sol\":10332:10337  owner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"LP/LP.sol\":10318:10337  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"LP/LP.sol\":10318:10328  msg.sender */\n      caller\n        /* \"LP/LP.sol\":10318:10337  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"LP/LP.sol\":10314:10374  if (msg.sender == owner) {\r... */\n      iszero\n      tag_271\n      jumpi\n        /* \"LP/LP.sol\":10359:10362  _lp */\n      dup1\n        /* \"LP/LP.sol\":10354:10356  lp */\n      0x01\n      0x00\n        /* \"LP/LP.sol\":10354:10362  lp = _lp */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"LP/LP.sol\":10314:10374  if (msg.sender == owner) {\r... */\n    tag_271:\n        /* \"LP/LP.sol\":10267:10381  function setLp(ILPToken _lp) public {\r... */\n      pop\n      jump\t// out\n        /* \"LP/LP.sol\":6616:6930  function pendingCoin() external view returns (uint256) {\r... */\n    tag_100:\n        /* \"LP/LP.sol\":6662:6669  uint256 */\n      0x00\n        /* \"LP/LP.sol\":6682:6697  uint256 curTime */\n      dup1\n        /* \"LP/LP.sol\":6700:6709  getTime() */\n      tag_273\n        /* \"LP/LP.sol\":6700:6707  getTime */\n      tag_56\n        /* \"LP/LP.sol\":6700:6709  getTime() */\n      jump\t// in\n    tag_273:\n        /* \"LP/LP.sol\":6682:6709  uint256 curTime = getTime() */\n      swap1\n      pop\n        /* \"LP/LP.sol\":6739:6740  0 */\n      0x00\n        /* \"LP/LP.sol\":6724:6735  lpBalance() */\n      tag_274\n        /* \"LP/LP.sol\":6724:6733  lpBalance */\n      tag_47\n        /* \"LP/LP.sol\":6724:6735  lpBalance() */\n      jump\t// in\n    tag_274:\n        /* \"LP/LP.sol\":6724:6740  lpBalance() <= 0 */\n      gt\n        /* \"LP/LP.sol\":6720:6777  if (lpBalance() <= 0) {\r... */\n      tag_275\n      jumpi\n        /* \"LP/LP.sol\":6764:6765  0 */\n      0x00\n        /* \"LP/LP.sol\":6757:6765  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_272)\n        /* \"LP/LP.sol\":6720:6777  if (lpBalance() <= 0) {\r... */\n    tag_275:\n        /* \"LP/LP.sol\":6787:6805  uint256 multiplier */\n      0x00\n        /* \"LP/LP.sol\":6818:6832  lastUpdateTime */\n      sload(0x09)\n        /* \"LP/LP.sol\":6808:6815  curTime */\n      dup3\n        /* \"LP/LP.sol\":6808:6832  curTime - lastUpdateTime */\n      sub\n        /* \"LP/LP.sol\":6787:6832  uint256 multiplier = curTime - lastUpdateTime */\n      swap1\n      pop\n        /* \"LP/LP.sol\":6843:6857  uint256 reward */\n      0x00\n        /* \"LP/LP.sol\":6860:6898  multiplier.mul(getStakingCoinPerSec()) */\n      tag_276\n        /* \"LP/LP.sol\":6875:6897  getStakingCoinPerSec() */\n      tag_277\n        /* \"LP/LP.sol\":6875:6895  getStakingCoinPerSec */\n      tag_81\n        /* \"LP/LP.sol\":6875:6897  getStakingCoinPerSec() */\n      jump\t// in\n    tag_277:\n        /* \"LP/LP.sol\":6860:6870  multiplier */\n      dup4\n        /* \"LP/LP.sol\":6860:6874  multiplier.mul */\n      tag_127\n      swap1\n        /* \"LP/LP.sol\":6860:6898  multiplier.mul(getStakingCoinPerSec()) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_276:\n        /* \"LP/LP.sol\":6843:6898  uint256 reward = multiplier.mul(getStakingCoinPerSec()) */\n      swap1\n      pop\n        /* \"LP/LP.sol\":6916:6922  reward */\n      dup1\n        /* \"LP/LP.sol\":6909:6922  return reward */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"LP/LP.sol\":6616:6930  function pendingCoin() external view returns (uint256) {\r... */\n    tag_272:\n      swap1\n      jump\t// out\n        /* \"_lib/SafeMath.sol\":773:957  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_115:\n        /* \"_lib/SafeMath.sol\":831:838  uint256 */\n      0x00\n        /* \"_lib/SafeMath.sol\":864:865  a */\n      dup3\n        /* \"_lib/SafeMath.sol\":859:860  b */\n      dup3\n        /* \"_lib/SafeMath.sol\":859:865  b <= a */\n      gt\n      iszero\n        /* \"_lib/SafeMath.sol\":851:900  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_279\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_279:\n        /* \"_lib/SafeMath.sol\":911:920  uint256 c */\n      0x00\n        /* \"_lib/SafeMath.sol\":927:928  b */\n      dup3\n        /* \"_lib/SafeMath.sol\":923:924  a */\n      dup5\n        /* \"_lib/SafeMath.sol\":923:928  a - b */\n      sub\n        /* \"_lib/SafeMath.sol\":911:928  uint256 c = a - b */\n      swap1\n      pop\n        /* \"_lib/SafeMath.sol\":948:949  c */\n      dup1\n        /* \"_lib/SafeMath.sol\":941:949  return c */\n      swap2\n      pop\n      pop\n        /* \"_lib/SafeMath.sol\":773:957  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"LP/LP.sol\":2425:2549  function decimalMul(uint256 target, uint256 d) internal pure returns (uint256) {\r... */\n    tag_123:\n        /* \"LP/LP.sol\":2495:2502  uint256 */\n      0x00\n        /* \"LP/LP.sol\":2281:2287  10**18 */\n      0x0de0b6b3a7640000\n        /* \"LP/LP.sol\":2522:2535  target.mul(d) */\n      tag_281\n        /* \"LP/LP.sol\":2533:2534  d */\n      dup4\n        /* \"LP/LP.sol\":2522:2528  target */\n      dup6\n        /* \"LP/LP.sol\":2522:2532  target.mul */\n      tag_127\n      swap1\n        /* \"LP/LP.sol\":2522:2535  target.mul(d) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_281:\n        /* \"LP/LP.sol\":2522:2541  target.mul(d) / ONE */\n      dup2\n      tag_282\n      jumpi\n      invalid\n    tag_282:\n      div\n        /* \"LP/LP.sol\":2515:2541  return target.mul(d) / ONE */\n      swap1\n      pop\n        /* \"LP/LP.sol\":2425:2549  function decimalMul(uint256 target, uint256 d) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"_lib/SafeMath.sol\":317:498  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_124:\n        /* \"_lib/SafeMath.sol\":375:382  uint256 */\n      0x00\n        /* \"_lib/SafeMath.sol\":395:404  uint256 c */\n      dup1\n        /* \"_lib/SafeMath.sol\":411:412  b */\n      dup3\n        /* \"_lib/SafeMath.sol\":407:408  a */\n      dup5\n        /* \"_lib/SafeMath.sol\":407:412  a + b */\n      add\n        /* \"_lib/SafeMath.sol\":395:412  uint256 c = a + b */\n      swap1\n      pop\n        /* \"_lib/SafeMath.sol\":436:437  a */\n      dup4\n        /* \"_lib/SafeMath.sol\":431:432  c */\n      dup2\n        /* \"_lib/SafeMath.sol\":431:437  c >= a */\n      lt\n      iszero\n        /* \"_lib/SafeMath.sol\":423:469  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_284\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_284:\n        /* \"_lib/SafeMath.sol\":489:490  c */\n      dup1\n        /* \"_lib/SafeMath.sol\":482:490  return c */\n      swap2\n      pop\n      pop\n        /* \"_lib/SafeMath.sol\":317:498  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"_lib/SafeMath.sol\":1208:1678  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_127:\n        /* \"_lib/SafeMath.sol\":1266:1273  uint256 */\n      0x00\n        /* \"_lib/SafeMath.sol\":1515:1516  0 */\n      dup1\n        /* \"_lib/SafeMath.sol\":1510:1511  a */\n      dup4\n        /* \"_lib/SafeMath.sol\":1510:1516  a == 0 */\n      eq\n        /* \"_lib/SafeMath.sol\":1506:1553  if (a == 0) {\r... */\n      iszero\n      tag_286\n      jumpi\n        /* \"_lib/SafeMath.sol\":1540:1541  0 */\n      0x00\n        /* \"_lib/SafeMath.sol\":1533:1541  return 0 */\n      swap1\n      pop\n      jump(tag_285)\n        /* \"_lib/SafeMath.sol\":1506:1553  if (a == 0) {\r... */\n    tag_286:\n        /* \"_lib/SafeMath.sol\":1565:1574  uint256 c */\n      0x00\n        /* \"_lib/SafeMath.sol\":1581:1582  b */\n      dup3\n        /* \"_lib/SafeMath.sol\":1577:1578  a */\n      dup5\n        /* \"_lib/SafeMath.sol\":1577:1582  a * b */\n      mul\n        /* \"_lib/SafeMath.sol\":1565:1582  uint256 c = a * b */\n      swap1\n      pop\n        /* \"_lib/SafeMath.sol\":1610:1611  b */\n      dup3\n        /* \"_lib/SafeMath.sol\":1605:1606  a */\n      dup5\n        /* \"_lib/SafeMath.sol\":1601:1602  c */\n      dup3\n        /* \"_lib/SafeMath.sol\":1601:1606  c / a */\n      dup2\n      tag_287\n      jumpi\n      invalid\n    tag_287:\n      div\n        /* \"_lib/SafeMath.sol\":1601:1611  c / a == b */\n      eq\n        /* \"_lib/SafeMath.sol\":1593:1649  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_288\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_288:\n        /* \"_lib/SafeMath.sol\":1669:1670  c */\n      dup1\n        /* \"_lib/SafeMath.sol\":1662:1670  return c */\n      swap2\n      pop\n      pop\n        /* \"_lib/SafeMath.sol\":1208:1678  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_285:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"_lib/SafeMath.sol\":2146:2479  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_128:\n        /* \"_lib/SafeMath.sol\":2204:2211  uint256 */\n      0x00\n        /* \"_lib/SafeMath.sol\":2303:2304  0 */\n      dup1\n        /* \"_lib/SafeMath.sol\":2299:2300  b */\n      dup3\n        /* \"_lib/SafeMath.sol\":2299:2304  b > 0 */\n      gt\n        /* \"_lib/SafeMath.sol\":2291:2335  require(b > 0, \"SafeMath: division by zero\") */\n      tag_290\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_290:\n        /* \"_lib/SafeMath.sol\":2346:2355  uint256 c */\n      0x00\n        /* \"_lib/SafeMath.sol\":2362:2363  b */\n      dup3\n        /* \"_lib/SafeMath.sol\":2358:2359  a */\n      dup5\n        /* \"_lib/SafeMath.sol\":2358:2363  a / b */\n      dup2\n      tag_291\n      jumpi\n      invalid\n    tag_291:\n      div\n        /* \"_lib/SafeMath.sol\":2346:2363  uint256 c = a / b */\n      swap1\n      pop\n        /* \"_lib/SafeMath.sol\":2470:2471  c */\n      dup1\n        /* \"_lib/SafeMath.sol\":2463:2471  return c */\n      swap2\n      pop\n      pop\n        /* \"_lib/SafeMath.sol\":2146:2479  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"LP/LP.sol\":2294:2419  function divFloor(uint256 target, uint256 d) internal pure returns (uint256) {\r... */\n    tag_164:\n        /* \"LP/LP.sol\":2362:2369  uint256 */\n      0x00\n        /* \"LP/LP.sol\":2389:2411  target.mul(ONE).div(d) */\n      tag_293\n        /* \"LP/LP.sol\":2409:2410  d */\n      dup3\n        /* \"LP/LP.sol\":2389:2404  target.mul(ONE) */\n      tag_294\n        /* \"LP/LP.sol\":2281:2287  10**18 */\n      0x0de0b6b3a7640000\n        /* \"LP/LP.sol\":2389:2395  target */\n      dup7\n        /* \"LP/LP.sol\":2389:2399  target.mul */\n      tag_127\n      swap1\n        /* \"LP/LP.sol\":2389:2404  target.mul(ONE) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_294:\n        /* \"LP/LP.sol\":2389:2408  target.mul(ONE).div */\n      tag_128\n      swap1\n        /* \"LP/LP.sol\":2389:2411  target.mul(ONE).div(d) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_293:\n        /* \"LP/LP.sol\":2382:2411  return target.mul(ONE).div(d) */\n      swap1\n      pop\n        /* \"LP/LP.sol\":2294:2419  function divFloor(uint256 target, uint256 d) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n\n    auxdata: 0xa26469706673582212204bf5e2c7d008fb9482ac42cb4a3af994e6aa6163c699b03f871ff510a0bee3a864736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526000600555600060065560006007556000600855600060095562093a80600a556000600b556000600c60006101000a81548160ff0219169083151502179055506012600d5534801561005557600080fd5b5060405161236c38038061236c8339818101604052606081101561007857600080fd5b81019080805190602001909291908051906020019092919080519060200190929190505050826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061012c6101bc60201b60201c565b60098190555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506101c4565b600042905090565b612199806101d36000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c80638705fcd4116100f9578063d2890a0111610097578063e3161ddd11610071578063e3161ddd14610598578063e6fa445d146105a2578063f4c2baa9146105c2578063fc3e532b14610606576101c4565b8063d2890a011461053e578063de0ff7c51461055c578063df10b4e61461057a576101c4565b8063b6b55f25116100d3578063b6b55f25146104b6578063b8a3b366146104e4578063c8f33c9114610502578063d201114a14610520576101c4565b80638705fcd4146104205780638da5cb5b14610464578063936b6cec14610498576101c4565b8063557ed1ba116101665780636d3c832f116101405780636d3c832f1461039657806377926869146103b45780637b27c1d1146103d257806381ad5718146103f0576101c4565b8063557ed1ba146103265780636abfd183146103445780636af04a5714610362576101c4565b80632059f615116101a25780632059f6151461029e5780632e1a7d4d146102bc5780633a98ef39146102ea57806347f1aae714610308576101c4565b80630b26b6a8146101c95780631959a002146101f75780631a39d8ef14610280575b600080fd5b6101f5600480360360208110156101df57600080fd5b8101908080359060200190929190505050610624565b005b6102396004803603602081101561020d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108af565b604051808981526020018881526020018781526020018681526020018581526020018481526020018381526020018281526020019850505050505050505060405180910390f35b6102886108f7565b6040518082815260200191505060405180910390f35b6102a66108fd565b6040518082815260200191505060405180910390f35b6102e8600480360360208110156102d257600080fd5b81019080803590602001909291905050506109dc565b005b6102f2610f95565b6040518082815260200191505060405180910390f35b610310610f9b565b6040518082815260200191505060405180910390f35b61032e6110e2565b6040518082815260200191505060405180910390f35b61034c6110ea565b6040518082815260200191505060405180910390f35b61036a6110f0565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61039e611116565b6040518082815260200191505060405180910390f35b6103bc61111c565b6040518082815260200191505060405180910390f35b6103da611226565b6040518082815260200191505060405180910390f35b61041e6004803603602081101561040657600080fd5b810190808035151590602001909291905050506112f0565b005b6104626004803603602081101561043657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611386565b005b61046c61156b565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104a0611591565b6040518082815260200191505060405180910390f35b6104e2600480360360208110156104cc57600080fd5b81019080803590602001909291905050506116dc565b005b6104ec611a55565b6040518082815260200191505060405180910390f35b61050a611b9d565b6040518082815260200191505060405180910390f35b610528611ba3565b6040518082815260200191505060405180910390f35b610546611c3f565b6040518082815260200191505060405180910390f35b610564611c45565b6040518082815260200191505060405180910390f35b610582611c52565b6040518082815260200191505060405180910390f35b6105a0611c58565b005b6105aa611db2565b60405180821515815260200191505060405180910390f35b610604600480360360208110156105d857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611dc5565b005b61060e611e60565b6040518082815260200191505060405180910390f35b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461067e57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610743576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f7472616e7366657220746f20300000000000000000000000000000000000000081525060200191505060405180910390fd5b8060065410156107bb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f6e6f7420656e6f7567680000000000000000000000000000000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561087057600080fd5b505af1158015610884573d6000803e3d6000fd5b505050506040513d602081101561089a57600080fd5b81019080805190602001909291905050505050565b600e6020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154908060050154908060060154908060070154905088565b60085481565b60006109d7600654600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561098e57600080fd5b505afa1580156109a2573d6000803e3d6000fd5b505050506040513d60208110156109b857600080fd5b8101908080519060200190929190505050611eb790919063ffffffff16565b905090565b6000600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008211610a95576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f4e6f7468696e6720746f2077697468647261770000000000000000000000000081525060200191505060405180910390fd5b8060000154821115610b0f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f576974686472617720616d6f756e7420657863656564732062616c616e63650081525060200191505060405180910390fd5b610b17611c58565b6000610b558260060154610b478460050154610b398660070154600554611f40565b611eb790919063ffffffff16565b611f6e90919063ffffffff16565b90506000610b828360000154610b748685611ff690919063ffffffff16565b61207c90919063ffffffff16565b90506000610bb38460000154610ba5878760070154611ff690919063ffffffff16565b61207c90919063ffffffff16565b9050610bcc858560000154611eb790919063ffffffff16565b8460000181905550610be985600754611eb790919063ffffffff16565b600781905550816008541015610c67576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f576974686472617720616d6f756e7420657863656564732062616c616e63650081525060200191505060405180910390fd5b610c7c82600854611eb790919063ffffffff16565b600881905550610c958284611eb790919063ffffffff16565b8460060181905550610cb4818560070154611eb790919063ffffffff16565b8460070181905550610cd5600a548560010154611f6e90919063ffffffff16565b610cdd6110e2565b1015610d41576000610d0d612710610cff606485611ff690919063ffffffff16565b61207c90919063ffffffff16565b9050610d228183611eb790919063ffffffff16565b9150610d3981600654611f6e90919063ffffffff16565b600681905550505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610dd457600080fd5b505af1158015610de8573d6000803e3d6000fd5b505050506040513d6020811015610dfe57600080fd5b81019080805190602001909291905050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610ea157600080fd5b505af1158015610eb5573d6000803e3d6000fd5b505050506040513d6020811015610ecb57600080fd5b810190808051906020019092919050505050600084600001541115610f2457610efa8460070154600554611f40565b8460050181905550610f0a61111c565b846004018190555083600601548460030181905550610f2f565b600084600401819055505b4284600201819055503373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5688387604051808381526020018281526020019250505060405180910390a25050505050565b60075481565b6000806110436110323073ffffffffffffffffffffffffffffffffffffffff1663fc3e532b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610fea57600080fd5b505afa158015610ffe573d6000803e3d6000fd5b505050506040513d602081101561101457600080fd5b810190808051906020019092919050505061102d6108fd565b61210b565b600554611f6e90919063ffffffff16565b90506000600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000816000015414156110a0576000925050506110df565b6110da81600601546110cc83600501546110be856007015487611f40565b611eb790919063ffffffff16565b611f6e90919063ffffffff16565b925050505b90565b600042905090565b600b5481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b6000806111276108fd565b9050600081141561113c576000915050611223565b60006111dc6111cb3073ffffffffffffffffffffffffffffffffffffffff1663fc3e532b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561118a57600080fd5b505afa15801561119e573d6000803e3d6000fd5b505050506040513d60208110156111b457600080fd5b81019080805190602001909291905050508461210b565b600554611f6e90919063ffffffff16565b905061121e600754611210836112026111f3611c45565b87611ff690919063ffffffff16565b611ff690919063ffffffff16565b61207c90919063ffffffff16565b925050505b90565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156112b057600080fd5b505afa1580156112c4573d6000803e3d6000fd5b505050506040513d60208110156112da57600080fd5b8101908080519060200190929190505050905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561138357801561135f576113546110e2565b600b81905550611368565b6000600b819055505b80600c60006101000a81548160ff0219169083151502179055505b50565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146113e057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611483576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260088152602001807f73657420746f203000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b61dead73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611527576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f73657420746f203078646561640000000000000000000000000000000000000081525060200191505060405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060075414156115a657600090506116d9565b6000600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600061169061167f3073ffffffffffffffffffffffffffffffffffffffff1663fc3e532b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561163757600080fd5b505afa15801561164b573d6000803e3d6000fd5b505050506040513d602081101561166157600080fd5b810190808051906020019092919050505061167a6108fd565b61210b565b600554611f6e90919063ffffffff16565b905060006116a2836007015483611f40565b905082600501548111156116d1576116c7836005015482611eb790919063ffffffff16565b93505050506116d9565b600093505050505b90565b60008111611752576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4e6f7468696e6720746f206465706f736974000000000000000000000000000081525060200191505060405180910390fd5b61175a611c58565b60006117646108fd565b90506000600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000816007015411156118055760006117de82600501546117d08460070154600554611f40565b611eb790919063ffffffff16565b90506117f7818360060154611f6e90919063ffffffff16565b826006018190555050611810565b600081600601819055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156118c157600080fd5b505af11580156118d5573d6000803e3d6000fd5b505050506040513d60208110156118eb57600080fd5b810190808051906020019092919050505050600080600754146119365761192f8361192160075487611ff690919063ffffffff16565b61207c90919063ffffffff16565b9050611953565b611950611941611c45565b85611ff690919063ffffffff16565b90505b61196a818360000154611f6e90919063ffffffff16565b826000018190555061198781600754611f6e90919063ffffffff16565b600781905550816006015482600301819055506119b1848360070154611f6e90919063ffffffff16565b82600701819055506119c98260070154600554611f40565b82600501819055506119d96110e2565b82600201819055506119e96110e2565b82600101819055503373ffffffffffffffffffffffffffffffffffffffff167f36af321ec8d3c75236829c5317affd40ddb308863a1236d2d277a4025cccee1e85834260405180848152602001838152602001828152602001935050505060405180910390a250505050565b6000806201518090506000611a686110e2565b905060006001905060001515600c60009054906101000a900460ff1615151415611acc5760006201ddbc9050611abe84611ab0600d54600a0a84611ff690919063ffffffff16565b61207c90919063ffffffff16565b915081945050505050611b9a565b61012c600b5401821015611b14576000622ab9809050611b0c84611afe600d54600a0a84611ff690919063ffffffff16565b61207c90919063ffffffff16565b915050611b93565b610258600b5401821015611b5c57600062155cc09050611b5484611b46600d54600a0a84611ff690919063ffffffff16565b61207c90919063ffffffff16565b915050611b92565b60006201ddbc9050611b8e84611b80600d54600a0a84611ff690919063ffffffff16565b61207c90919063ffffffff16565b9150505b5b8093505050505b90565b60095481565b6000611c3a6008543073ffffffffffffffffffffffffffffffffffffffff1663fc3e532b6040518163ffffffff1660e01b815260040160206040518083038186803b158015611bf157600080fd5b505afa158015611c05573d6000803e3d6000fd5b505050506040513d6020811015611c1b57600080fd5b8101908080519060200190929190505050611f6e90919063ffffffff16565b905090565b60055481565b6000600d54600a0a905090565b600a5481565b6000611c626110e2565b90506009548111611c735750611db0565b6000611c7d6108fd565b905060008111611c9557816009819055505050611db0565b6000600954420390506000611cba611cab611a55565b83611ff690919063ffffffff16565b905083600981905550611cd881600854611f6e90919063ffffffff16565b600881905550611cfc611ceb828561210b565b600554611f6e90919063ffffffff16565b60058190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1930836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b158015611d9357600080fd5b505af1158015611da7573d6000803e3d6000fd5b50505050505050505b565b600c60009054906101000a900460ff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415611e5d5780600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b600080611e6b6110e2565b90506000611e776108fd565b11611e86576000915050611eb4565b6000600954820390506000611eab611e9c611a55565b83611ff690919063ffffffff16565b90508093505050505b90565b600082821115611f2f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b6000670de0b6b3a7640000611f5e8385611ff690919063ffffffff16565b81611f6557fe5b04905092915050565b600080828401905083811015611fec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000808314156120095760009050612076565b600082840290508284828161201a57fe5b0414612071576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806121436021913960400191505060405180910390fd5b809150505b92915050565b60008082116120f3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b60008284816120fe57fe5b0490508091505092915050565b600061213a8261212c670de0b6b3a764000086611ff690919063ffffffff16565b61207c90919063ffffffff16565b90509291505056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a26469706673582212204bf5e2c7d008fb9482ac42cb4a3af994e6aa6163c699b03f871ff510a0bee3a864736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x5 SSTORE PUSH1 0x0 PUSH1 0x6 SSTORE PUSH1 0x0 PUSH1 0x7 SSTORE PUSH1 0x0 PUSH1 0x8 SSTORE PUSH1 0x0 PUSH1 0x9 SSTORE PUSH3 0x93A80 PUSH1 0xA SSTORE PUSH1 0x0 PUSH1 0xB SSTORE PUSH1 0x0 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x12 PUSH1 0xD SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x236C CODESIZE SUB DUP1 PUSH2 0x236C DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP3 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x12C PUSH2 0x1BC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH2 0x1C4 JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2199 DUP1 PUSH2 0x1D3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8705FCD4 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xD2890A01 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE3161DDD GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE3161DDD EQ PUSH2 0x598 JUMPI DUP1 PUSH4 0xE6FA445D EQ PUSH2 0x5A2 JUMPI DUP1 PUSH4 0xF4C2BAA9 EQ PUSH2 0x5C2 JUMPI DUP1 PUSH4 0xFC3E532B EQ PUSH2 0x606 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0xD2890A01 EQ PUSH2 0x53E JUMPI DUP1 PUSH4 0xDE0FF7C5 EQ PUSH2 0x55C JUMPI DUP1 PUSH4 0xDF10B4E6 EQ PUSH2 0x57A JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0xB6B55F25 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x4B6 JUMPI DUP1 PUSH4 0xB8A3B366 EQ PUSH2 0x4E4 JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x502 JUMPI DUP1 PUSH4 0xD201114A EQ PUSH2 0x520 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x8705FCD4 EQ PUSH2 0x420 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x464 JUMPI DUP1 PUSH4 0x936B6CEC EQ PUSH2 0x498 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x557ED1BA GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x6D3C832F GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x6D3C832F EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0x77926869 EQ PUSH2 0x3B4 JUMPI DUP1 PUSH4 0x7B27C1D1 EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0x81AD5718 EQ PUSH2 0x3F0 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x557ED1BA EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0x6ABFD183 EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0x6AF04A57 EQ PUSH2 0x362 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x2059F615 GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x2059F615 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x3A98EF39 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0x47F1AAE7 EQ PUSH2 0x308 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0xB26B6A8 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x1959A002 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x1A39D8EF EQ PUSH2 0x280 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x624 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x20D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP9 POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x288 PUSH2 0x8F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH2 0x8FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9DC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F2 PUSH2 0xF95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x310 PUSH2 0xF9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32E PUSH2 0x10E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34C PUSH2 0x10EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36A PUSH2 0x10F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39E PUSH2 0x1116 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BC PUSH2 0x111C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DA PUSH2 0x1226 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x406 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x12F0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x462 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x436 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1386 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46C PUSH2 0x156B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A0 PUSH2 0x1591 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x16DC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4EC PUSH2 0x1A55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x50A PUSH2 0x1B9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x528 PUSH2 0x1BA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x546 PUSH2 0x1C3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x564 PUSH2 0x1C45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x582 PUSH2 0x1C52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A0 PUSH2 0x1C58 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5AA PUSH2 0x1DB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x604 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1DC5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x60E PUSH2 0x1E60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x67E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x743 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E7366657220746F203000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 SLOAD LT ISZERO PUSH2 0x7BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6E6F7420656E6F75676800000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x870 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x884 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x89A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 POP DUP9 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D7 PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x98E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1EB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 GT PUSH2 0xA95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F7468696E6720746F20776974686472617700000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 ADD SLOAD DUP3 GT ISZERO PUSH2 0xB0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x576974686472617720616D6F756E7420657863656564732062616C616E636500 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB17 PUSH2 0x1C58 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB55 DUP3 PUSH1 0x6 ADD SLOAD PUSH2 0xB47 DUP5 PUSH1 0x5 ADD SLOAD PUSH2 0xB39 DUP7 PUSH1 0x7 ADD SLOAD PUSH1 0x5 SLOAD PUSH2 0x1F40 JUMP JUMPDEST PUSH2 0x1EB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB82 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0xB74 DUP7 DUP6 PUSH2 0x1FF6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x207C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xBB3 DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0xBA5 DUP8 DUP8 PUSH1 0x7 ADD SLOAD PUSH2 0x1FF6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x207C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xBCC DUP6 DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x1EB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xBE9 DUP6 PUSH1 0x7 SLOAD PUSH2 0x1EB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x8 SLOAD LT ISZERO PUSH2 0xC67 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x576974686472617720616D6F756E7420657863656564732062616C616E636500 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC7C DUP3 PUSH1 0x8 SLOAD PUSH2 0x1EB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0xC95 DUP3 DUP5 PUSH2 0x1EB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xCB4 DUP2 DUP6 PUSH1 0x7 ADD SLOAD PUSH2 0x1EB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x7 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xCD5 PUSH1 0xA SLOAD DUP6 PUSH1 0x1 ADD SLOAD PUSH2 0x1F6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xCDD PUSH2 0x10E2 JUMP JUMPDEST LT ISZERO PUSH2 0xD41 JUMPI PUSH1 0x0 PUSH2 0xD0D PUSH2 0x2710 PUSH2 0xCFF PUSH1 0x64 DUP6 PUSH2 0x1FF6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x207C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xD22 DUP2 DUP4 PUSH2 0x1EB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0xD39 DUP2 PUSH1 0x6 SLOAD PUSH2 0x1F6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDE8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEB5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xECB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP PUSH1 0x0 DUP5 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0xF24 JUMPI PUSH2 0xEFA DUP5 PUSH1 0x7 ADD SLOAD PUSH1 0x5 SLOAD PUSH2 0x1F40 JUMP JUMPDEST DUP5 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xF0A PUSH2 0x111C JUMP JUMPDEST DUP5 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x6 ADD SLOAD DUP5 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xF2F JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP JUMPDEST TIMESTAMP DUP5 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP4 DUP8 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1043 PUSH2 0x1032 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFC3E532B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFFE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1014 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x102D PUSH2 0x8FD JUMP JUMPDEST PUSH2 0x210B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x1F6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x10A0 JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x10DF JUMP JUMPDEST PUSH2 0x10DA DUP2 PUSH1 0x6 ADD SLOAD PUSH2 0x10CC DUP4 PUSH1 0x5 ADD SLOAD PUSH2 0x10BE DUP6 PUSH1 0x7 ADD SLOAD DUP8 PUSH2 0x1F40 JUMP JUMPDEST PUSH2 0x1EB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1127 PUSH2 0x8FD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x113C JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x1223 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11DC PUSH2 0x11CB ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFC3E532B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x118A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x119E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP5 PUSH2 0x210B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x1F6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x121E PUSH1 0x7 SLOAD PUSH2 0x1210 DUP4 PUSH2 0x1202 PUSH2 0x11F3 PUSH2 0x1C45 JUMP JUMPDEST DUP8 PUSH2 0x1FF6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1FF6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x207C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1383 JUMPI DUP1 ISZERO PUSH2 0x135F JUMPI PUSH2 0x1354 PUSH2 0x10E2 JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB DUP2 SWAP1 SSTORE POP JUMPDEST DUP1 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1483 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x73657420746F2030000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDEAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1527 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x73657420746F2030786465616400000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 SLOAD EQ ISZERO PUSH2 0x15A6 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x16D9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1690 PUSH2 0x167F ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFC3E532B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1637 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x164B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1661 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x167A PUSH2 0x8FD JUMP JUMPDEST PUSH2 0x210B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x1F6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x16A2 DUP4 PUSH1 0x7 ADD SLOAD DUP4 PUSH2 0x1F40 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x5 ADD SLOAD DUP2 GT ISZERO PUSH2 0x16D1 JUMPI PUSH2 0x16C7 DUP4 PUSH1 0x5 ADD SLOAD DUP3 PUSH2 0x1EB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0x16D9 JUMP JUMPDEST PUSH1 0x0 SWAP4 POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1752 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F7468696E6720746F206465706F7369740000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x175A PUSH2 0x1C58 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1764 PUSH2 0x8FD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x7 ADD SLOAD GT ISZERO PUSH2 0x1805 JUMPI PUSH1 0x0 PUSH2 0x17DE DUP3 PUSH1 0x5 ADD SLOAD PUSH2 0x17D0 DUP5 PUSH1 0x7 ADD SLOAD PUSH1 0x5 SLOAD PUSH2 0x1F40 JUMP JUMPDEST PUSH2 0x1EB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x17F7 DUP2 DUP4 PUSH1 0x6 ADD SLOAD PUSH2 0x1F6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP POP PUSH2 0x1810 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18D5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x18EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP PUSH1 0x0 DUP1 PUSH1 0x7 SLOAD EQ PUSH2 0x1936 JUMPI PUSH2 0x192F DUP4 PUSH2 0x1921 PUSH1 0x7 SLOAD DUP8 PUSH2 0x1FF6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x207C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x1950 PUSH2 0x1941 PUSH2 0x1C45 JUMP JUMPDEST DUP6 PUSH2 0x1FF6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x196A DUP2 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x1F6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1987 DUP2 PUSH1 0x7 SLOAD PUSH2 0x1F6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 ADD SLOAD DUP3 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x19B1 DUP5 DUP4 PUSH1 0x7 ADD SLOAD PUSH2 0x1F6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x7 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x19C9 DUP3 PUSH1 0x7 ADD SLOAD PUSH1 0x5 SLOAD PUSH2 0x1F40 JUMP JUMPDEST DUP3 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x19D9 PUSH2 0x10E2 JUMP JUMPDEST DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x19E9 PUSH2 0x10E2 JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x36AF321EC8D3C75236829C5317AFFD40DDB308863A1236D2D277A4025CCCEE1E DUP6 DUP4 TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x15180 SWAP1 POP PUSH1 0x0 PUSH2 0x1A68 PUSH2 0x10E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x1ACC JUMPI PUSH1 0x0 PUSH3 0x1DDBC SWAP1 POP PUSH2 0x1ABE DUP5 PUSH2 0x1AB0 PUSH1 0xD SLOAD PUSH1 0xA EXP DUP5 PUSH2 0x1FF6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x207C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP DUP2 SWAP5 POP POP POP POP POP PUSH2 0x1B9A JUMP JUMPDEST PUSH2 0x12C PUSH1 0xB SLOAD ADD DUP3 LT ISZERO PUSH2 0x1B14 JUMPI PUSH1 0x0 PUSH3 0x2AB980 SWAP1 POP PUSH2 0x1B0C DUP5 PUSH2 0x1AFE PUSH1 0xD SLOAD PUSH1 0xA EXP DUP5 PUSH2 0x1FF6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x207C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1B93 JUMP JUMPDEST PUSH2 0x258 PUSH1 0xB SLOAD ADD DUP3 LT ISZERO PUSH2 0x1B5C JUMPI PUSH1 0x0 PUSH3 0x155CC0 SWAP1 POP PUSH2 0x1B54 DUP5 PUSH2 0x1B46 PUSH1 0xD SLOAD PUSH1 0xA EXP DUP5 PUSH2 0x1FF6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x207C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1B92 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1DDBC SWAP1 POP PUSH2 0x1B8E DUP5 PUSH2 0x1B80 PUSH1 0xD SLOAD PUSH1 0xA EXP DUP5 PUSH2 0x1FF6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x207C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP JUMPDEST JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C3A PUSH1 0x8 SLOAD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFC3E532B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C05 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1F6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD SLOAD PUSH1 0xA EXP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C62 PUSH2 0x10E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x9 SLOAD DUP2 GT PUSH2 0x1C73 JUMPI POP PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C7D PUSH2 0x8FD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x1C95 JUMPI DUP2 PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD TIMESTAMP SUB SWAP1 POP PUSH1 0x0 PUSH2 0x1CBA PUSH2 0x1CAB PUSH2 0x1A55 JUMP JUMPDEST DUP4 PUSH2 0x1FF6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH2 0x1CD8 DUP2 PUSH1 0x8 SLOAD PUSH2 0x1F6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x1CFC PUSH2 0x1CEB DUP3 DUP6 PUSH2 0x210B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x1F6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 ADDRESS DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1DA7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMPDEST JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1E5D JUMPI DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1E6B PUSH2 0x10E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1E77 PUSH2 0x8FD JUMP JUMPDEST GT PUSH2 0x1E86 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x1EB4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD DUP3 SUB SWAP1 POP PUSH1 0x0 PUSH2 0x1EAB PUSH2 0x1E9C PUSH2 0x1A55 JUMP JUMPDEST DUP4 PUSH2 0x1FF6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1F2F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1F5E DUP4 DUP6 PUSH2 0x1FF6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x1F65 JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1FEC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x2009 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x2076 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x201A JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x2071 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2143 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x20F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP2 PUSH2 0x20FE JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x213A DUP3 PUSH2 0x212C PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x1FF6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x207C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID MSTORE8 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77A26469706673582212 KECCAK256 0x4B CREATE2 0xE2 0xC7 0xD0 ADDMOD 0xFB SWAP5 DUP3 0xAC TIMESTAMP 0xCB 0x4A GASPRICE 0xF9 SWAP5 0xE6 0xAA PUSH2 0x63C6 SWAP10 0xB0 EXTCODEHASH DUP8 0x1F CREATE2 LT LOG0 0xBE 0xE3 0xA8 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "1096:9288:0:-:0;;;1857:1;1828:30;;1893:1;1865:29;;1930:1;1901:30;;1967:1;1938:30;;2007:1;1975:33;;2050:6;2015:41;;2180:1;2146:35;;2216:5;2188:33;;;;;;;;;;;;;;;;;;;;2247:2;2228:21;;1284:257;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1411:6;1403:5;;:14;;;;;;;;;;;;;;;;;;1436:10;1428:5;;:18;;;;;;;;;;;;;;;;;;1474:9;:7;;;:9;;:::i;:::-;1457:14;:26;;;;1505:9;1494:8;;:20;;;;;;;;;;;;;;;;;;1530:3;1525:2;;:8;;;;;;;;;;;;;;;;;;1284:257;;;1096:9288;;8170:78;8210:7;8237:3;8230:10;;8170:78;:::o;1096:9288::-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101c45760003560e01c80638705fcd4116100f9578063d2890a0111610097578063e3161ddd11610071578063e3161ddd14610598578063e6fa445d146105a2578063f4c2baa9146105c2578063fc3e532b14610606576101c4565b8063d2890a011461053e578063de0ff7c51461055c578063df10b4e61461057a576101c4565b8063b6b55f25116100d3578063b6b55f25146104b6578063b8a3b366146104e4578063c8f33c9114610502578063d201114a14610520576101c4565b80638705fcd4146104205780638da5cb5b14610464578063936b6cec14610498576101c4565b8063557ed1ba116101665780636d3c832f116101405780636d3c832f1461039657806377926869146103b45780637b27c1d1146103d257806381ad5718146103f0576101c4565b8063557ed1ba146103265780636abfd183146103445780636af04a5714610362576101c4565b80632059f615116101a25780632059f6151461029e5780632e1a7d4d146102bc5780633a98ef39146102ea57806347f1aae714610308576101c4565b80630b26b6a8146101c95780631959a002146101f75780631a39d8ef14610280575b600080fd5b6101f5600480360360208110156101df57600080fd5b8101908080359060200190929190505050610624565b005b6102396004803603602081101561020d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108af565b604051808981526020018881526020018781526020018681526020018581526020018481526020018381526020018281526020019850505050505050505060405180910390f35b6102886108f7565b6040518082815260200191505060405180910390f35b6102a66108fd565b6040518082815260200191505060405180910390f35b6102e8600480360360208110156102d257600080fd5b81019080803590602001909291905050506109dc565b005b6102f2610f95565b6040518082815260200191505060405180910390f35b610310610f9b565b6040518082815260200191505060405180910390f35b61032e6110e2565b6040518082815260200191505060405180910390f35b61034c6110ea565b6040518082815260200191505060405180910390f35b61036a6110f0565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61039e611116565b6040518082815260200191505060405180910390f35b6103bc61111c565b6040518082815260200191505060405180910390f35b6103da611226565b6040518082815260200191505060405180910390f35b61041e6004803603602081101561040657600080fd5b810190808035151590602001909291905050506112f0565b005b6104626004803603602081101561043657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611386565b005b61046c61156b565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104a0611591565b6040518082815260200191505060405180910390f35b6104e2600480360360208110156104cc57600080fd5b81019080803590602001909291905050506116dc565b005b6104ec611a55565b6040518082815260200191505060405180910390f35b61050a611b9d565b6040518082815260200191505060405180910390f35b610528611ba3565b6040518082815260200191505060405180910390f35b610546611c3f565b6040518082815260200191505060405180910390f35b610564611c45565b6040518082815260200191505060405180910390f35b610582611c52565b6040518082815260200191505060405180910390f35b6105a0611c58565b005b6105aa611db2565b60405180821515815260200191505060405180910390f35b610604600480360360208110156105d857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611dc5565b005b61060e611e60565b6040518082815260200191505060405180910390f35b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461067e57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610743576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f7472616e7366657220746f20300000000000000000000000000000000000000081525060200191505060405180910390fd5b8060065410156107bb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f6e6f7420656e6f7567680000000000000000000000000000000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561087057600080fd5b505af1158015610884573d6000803e3d6000fd5b505050506040513d602081101561089a57600080fd5b81019080805190602001909291905050505050565b600e6020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154908060050154908060060154908060070154905088565b60085481565b60006109d7600654600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561098e57600080fd5b505afa1580156109a2573d6000803e3d6000fd5b505050506040513d60208110156109b857600080fd5b8101908080519060200190929190505050611eb790919063ffffffff16565b905090565b6000600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008211610a95576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f4e6f7468696e6720746f2077697468647261770000000000000000000000000081525060200191505060405180910390fd5b8060000154821115610b0f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f576974686472617720616d6f756e7420657863656564732062616c616e63650081525060200191505060405180910390fd5b610b17611c58565b6000610b558260060154610b478460050154610b398660070154600554611f40565b611eb790919063ffffffff16565b611f6e90919063ffffffff16565b90506000610b828360000154610b748685611ff690919063ffffffff16565b61207c90919063ffffffff16565b90506000610bb38460000154610ba5878760070154611ff690919063ffffffff16565b61207c90919063ffffffff16565b9050610bcc858560000154611eb790919063ffffffff16565b8460000181905550610be985600754611eb790919063ffffffff16565b600781905550816008541015610c67576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f576974686472617720616d6f756e7420657863656564732062616c616e63650081525060200191505060405180910390fd5b610c7c82600854611eb790919063ffffffff16565b600881905550610c958284611eb790919063ffffffff16565b8460060181905550610cb4818560070154611eb790919063ffffffff16565b8460070181905550610cd5600a548560010154611f6e90919063ffffffff16565b610cdd6110e2565b1015610d41576000610d0d612710610cff606485611ff690919063ffffffff16565b61207c90919063ffffffff16565b9050610d228183611eb790919063ffffffff16565b9150610d3981600654611f6e90919063ffffffff16565b600681905550505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610dd457600080fd5b505af1158015610de8573d6000803e3d6000fd5b505050506040513d6020811015610dfe57600080fd5b81019080805190602001909291905050505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610ea157600080fd5b505af1158015610eb5573d6000803e3d6000fd5b505050506040513d6020811015610ecb57600080fd5b810190808051906020019092919050505050600084600001541115610f2457610efa8460070154600554611f40565b8460050181905550610f0a61111c565b846004018190555083600601548460030181905550610f2f565b600084600401819055505b4284600201819055503373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5688387604051808381526020018281526020019250505060405180910390a25050505050565b60075481565b6000806110436110323073ffffffffffffffffffffffffffffffffffffffff1663fc3e532b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610fea57600080fd5b505afa158015610ffe573d6000803e3d6000fd5b505050506040513d602081101561101457600080fd5b810190808051906020019092919050505061102d6108fd565b61210b565b600554611f6e90919063ffffffff16565b90506000600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000816000015414156110a0576000925050506110df565b6110da81600601546110cc83600501546110be856007015487611f40565b611eb790919063ffffffff16565b611f6e90919063ffffffff16565b925050505b90565b600042905090565b600b5481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b6000806111276108fd565b9050600081141561113c576000915050611223565b60006111dc6111cb3073ffffffffffffffffffffffffffffffffffffffff1663fc3e532b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561118a57600080fd5b505afa15801561119e573d6000803e3d6000fd5b505050506040513d60208110156111b457600080fd5b81019080805190602001909291905050508461210b565b600554611f6e90919063ffffffff16565b905061121e600754611210836112026111f3611c45565b87611ff690919063ffffffff16565b611ff690919063ffffffff16565b61207c90919063ffffffff16565b925050505b90565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156112b057600080fd5b505afa1580156112c4573d6000803e3d6000fd5b505050506040513d60208110156112da57600080fd5b8101908080519060200190929190505050905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561138357801561135f576113546110e2565b600b81905550611368565b6000600b819055505b80600c60006101000a81548160ff0219169083151502179055505b50565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146113e057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611483576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260088152602001807f73657420746f203000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b61dead73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611527576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f73657420746f203078646561640000000000000000000000000000000000000081525060200191505060405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060075414156115a657600090506116d9565b6000600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600061169061167f3073ffffffffffffffffffffffffffffffffffffffff1663fc3e532b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561163757600080fd5b505afa15801561164b573d6000803e3d6000fd5b505050506040513d602081101561166157600080fd5b810190808051906020019092919050505061167a6108fd565b61210b565b600554611f6e90919063ffffffff16565b905060006116a2836007015483611f40565b905082600501548111156116d1576116c7836005015482611eb790919063ffffffff16565b93505050506116d9565b600093505050505b90565b60008111611752576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4e6f7468696e6720746f206465706f736974000000000000000000000000000081525060200191505060405180910390fd5b61175a611c58565b60006117646108fd565b90506000600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000816007015411156118055760006117de82600501546117d08460070154600554611f40565b611eb790919063ffffffff16565b90506117f7818360060154611f6e90919063ffffffff16565b826006018190555050611810565b600081600601819055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156118c157600080fd5b505af11580156118d5573d6000803e3d6000fd5b505050506040513d60208110156118eb57600080fd5b810190808051906020019092919050505050600080600754146119365761192f8361192160075487611ff690919063ffffffff16565b61207c90919063ffffffff16565b9050611953565b611950611941611c45565b85611ff690919063ffffffff16565b90505b61196a818360000154611f6e90919063ffffffff16565b826000018190555061198781600754611f6e90919063ffffffff16565b600781905550816006015482600301819055506119b1848360070154611f6e90919063ffffffff16565b82600701819055506119c98260070154600554611f40565b82600501819055506119d96110e2565b82600201819055506119e96110e2565b82600101819055503373ffffffffffffffffffffffffffffffffffffffff167f36af321ec8d3c75236829c5317affd40ddb308863a1236d2d277a4025cccee1e85834260405180848152602001838152602001828152602001935050505060405180910390a250505050565b6000806201518090506000611a686110e2565b905060006001905060001515600c60009054906101000a900460ff1615151415611acc5760006201ddbc9050611abe84611ab0600d54600a0a84611ff690919063ffffffff16565b61207c90919063ffffffff16565b915081945050505050611b9a565b61012c600b5401821015611b14576000622ab9809050611b0c84611afe600d54600a0a84611ff690919063ffffffff16565b61207c90919063ffffffff16565b915050611b93565b610258600b5401821015611b5c57600062155cc09050611b5484611b46600d54600a0a84611ff690919063ffffffff16565b61207c90919063ffffffff16565b915050611b92565b60006201ddbc9050611b8e84611b80600d54600a0a84611ff690919063ffffffff16565b61207c90919063ffffffff16565b9150505b5b8093505050505b90565b60095481565b6000611c3a6008543073ffffffffffffffffffffffffffffffffffffffff1663fc3e532b6040518163ffffffff1660e01b815260040160206040518083038186803b158015611bf157600080fd5b505afa158015611c05573d6000803e3d6000fd5b505050506040513d6020811015611c1b57600080fd5b8101908080519060200190929190505050611f6e90919063ffffffff16565b905090565b60055481565b6000600d54600a0a905090565b600a5481565b6000611c626110e2565b90506009548111611c735750611db0565b6000611c7d6108fd565b905060008111611c9557816009819055505050611db0565b6000600954420390506000611cba611cab611a55565b83611ff690919063ffffffff16565b905083600981905550611cd881600854611f6e90919063ffffffff16565b600881905550611cfc611ceb828561210b565b600554611f6e90919063ffffffff16565b60058190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1930836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b158015611d9357600080fd5b505af1158015611da7573d6000803e3d6000fd5b50505050505050505b565b600c60009054906101000a900460ff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415611e5d5780600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b600080611e6b6110e2565b90506000611e776108fd565b11611e86576000915050611eb4565b6000600954820390506000611eab611e9c611a55565b83611ff690919063ffffffff16565b90508093505050505b90565b600082821115611f2f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b6000670de0b6b3a7640000611f5e8385611ff690919063ffffffff16565b81611f6557fe5b04905092915050565b600080828401905083811015611fec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000808314156120095760009050612076565b600082840290508284828161201a57fe5b0414612071576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806121436021913960400191505060405180910390fd5b809150505b92915050565b60008082116120f3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b60008284816120fe57fe5b0490508091505092915050565b600061213a8261212c670de0b6b3a764000086611ff690919063ffffffff16565b61207c90919063ffffffff16565b90509291505056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a26469706673582212204bf5e2c7d008fb9482ac42cb4a3af994e6aa6163c699b03f871ff510a0bee3a864736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8705FCD4 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xD2890A01 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE3161DDD GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE3161DDD EQ PUSH2 0x598 JUMPI DUP1 PUSH4 0xE6FA445D EQ PUSH2 0x5A2 JUMPI DUP1 PUSH4 0xF4C2BAA9 EQ PUSH2 0x5C2 JUMPI DUP1 PUSH4 0xFC3E532B EQ PUSH2 0x606 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0xD2890A01 EQ PUSH2 0x53E JUMPI DUP1 PUSH4 0xDE0FF7C5 EQ PUSH2 0x55C JUMPI DUP1 PUSH4 0xDF10B4E6 EQ PUSH2 0x57A JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0xB6B55F25 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x4B6 JUMPI DUP1 PUSH4 0xB8A3B366 EQ PUSH2 0x4E4 JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x502 JUMPI DUP1 PUSH4 0xD201114A EQ PUSH2 0x520 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x8705FCD4 EQ PUSH2 0x420 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x464 JUMPI DUP1 PUSH4 0x936B6CEC EQ PUSH2 0x498 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x557ED1BA GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x6D3C832F GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x6D3C832F EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0x77926869 EQ PUSH2 0x3B4 JUMPI DUP1 PUSH4 0x7B27C1D1 EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0x81AD5718 EQ PUSH2 0x3F0 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x557ED1BA EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0x6ABFD183 EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0x6AF04A57 EQ PUSH2 0x362 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x2059F615 GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x2059F615 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x3A98EF39 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0x47F1AAE7 EQ PUSH2 0x308 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0xB26B6A8 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x1959A002 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x1A39D8EF EQ PUSH2 0x280 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x624 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x20D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP9 POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x288 PUSH2 0x8F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH2 0x8FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9DC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F2 PUSH2 0xF95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x310 PUSH2 0xF9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32E PUSH2 0x10E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34C PUSH2 0x10EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36A PUSH2 0x10F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39E PUSH2 0x1116 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BC PUSH2 0x111C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DA PUSH2 0x1226 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x406 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x12F0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x462 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x436 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1386 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46C PUSH2 0x156B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4A0 PUSH2 0x1591 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x16DC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4EC PUSH2 0x1A55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x50A PUSH2 0x1B9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x528 PUSH2 0x1BA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x546 PUSH2 0x1C3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x564 PUSH2 0x1C45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x582 PUSH2 0x1C52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A0 PUSH2 0x1C58 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5AA PUSH2 0x1DB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x604 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1DC5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x60E PUSH2 0x1E60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x67E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x743 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E7366657220746F203000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 SLOAD LT ISZERO PUSH2 0x7BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6E6F7420656E6F75676800000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x870 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x884 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x89A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 POP DUP9 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9D7 PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x98E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1EB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 GT PUSH2 0xA95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F7468696E6720746F20776974686472617700000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 ADD SLOAD DUP3 GT ISZERO PUSH2 0xB0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x576974686472617720616D6F756E7420657863656564732062616C616E636500 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB17 PUSH2 0x1C58 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB55 DUP3 PUSH1 0x6 ADD SLOAD PUSH2 0xB47 DUP5 PUSH1 0x5 ADD SLOAD PUSH2 0xB39 DUP7 PUSH1 0x7 ADD SLOAD PUSH1 0x5 SLOAD PUSH2 0x1F40 JUMP JUMPDEST PUSH2 0x1EB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB82 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0xB74 DUP7 DUP6 PUSH2 0x1FF6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x207C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xBB3 DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0xBA5 DUP8 DUP8 PUSH1 0x7 ADD SLOAD PUSH2 0x1FF6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x207C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xBCC DUP6 DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x1EB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xBE9 DUP6 PUSH1 0x7 SLOAD PUSH2 0x1EB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x8 SLOAD LT ISZERO PUSH2 0xC67 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x576974686472617720616D6F756E7420657863656564732062616C616E636500 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC7C DUP3 PUSH1 0x8 SLOAD PUSH2 0x1EB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0xC95 DUP3 DUP5 PUSH2 0x1EB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xCB4 DUP2 DUP6 PUSH1 0x7 ADD SLOAD PUSH2 0x1EB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x7 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xCD5 PUSH1 0xA SLOAD DUP6 PUSH1 0x1 ADD SLOAD PUSH2 0x1F6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xCDD PUSH2 0x10E2 JUMP JUMPDEST LT ISZERO PUSH2 0xD41 JUMPI PUSH1 0x0 PUSH2 0xD0D PUSH2 0x2710 PUSH2 0xCFF PUSH1 0x64 DUP6 PUSH2 0x1FF6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x207C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xD22 DUP2 DUP4 PUSH2 0x1EB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0xD39 DUP2 PUSH1 0x6 SLOAD PUSH2 0x1F6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDE8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xDFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEB5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xECB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP PUSH1 0x0 DUP5 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0xF24 JUMPI PUSH2 0xEFA DUP5 PUSH1 0x7 ADD SLOAD PUSH1 0x5 SLOAD PUSH2 0x1F40 JUMP JUMPDEST DUP5 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xF0A PUSH2 0x111C JUMP JUMPDEST DUP5 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x6 ADD SLOAD DUP5 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xF2F JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP JUMPDEST TIMESTAMP DUP5 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP4 DUP8 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1043 PUSH2 0x1032 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFC3E532B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFFE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1014 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x102D PUSH2 0x8FD JUMP JUMPDEST PUSH2 0x210B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x1F6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x10A0 JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x10DF JUMP JUMPDEST PUSH2 0x10DA DUP2 PUSH1 0x6 ADD SLOAD PUSH2 0x10CC DUP4 PUSH1 0x5 ADD SLOAD PUSH2 0x10BE DUP6 PUSH1 0x7 ADD SLOAD DUP8 PUSH2 0x1F40 JUMP JUMPDEST PUSH2 0x1EB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1127 PUSH2 0x8FD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x113C JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x1223 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11DC PUSH2 0x11CB ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFC3E532B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x118A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x119E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP5 PUSH2 0x210B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x1F6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x121E PUSH1 0x7 SLOAD PUSH2 0x1210 DUP4 PUSH2 0x1202 PUSH2 0x11F3 PUSH2 0x1C45 JUMP JUMPDEST DUP8 PUSH2 0x1FF6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1FF6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x207C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x12DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1383 JUMPI DUP1 ISZERO PUSH2 0x135F JUMPI PUSH2 0x1354 PUSH2 0x10E2 JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB DUP2 SWAP1 SSTORE POP JUMPDEST DUP1 PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x13E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1483 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x73657420746F2030000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDEAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1527 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x73657420746F2030786465616400000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 SLOAD EQ ISZERO PUSH2 0x15A6 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x16D9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x1690 PUSH2 0x167F ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFC3E532B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1637 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x164B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1661 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x167A PUSH2 0x8FD JUMP JUMPDEST PUSH2 0x210B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x1F6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x16A2 DUP4 PUSH1 0x7 ADD SLOAD DUP4 PUSH2 0x1F40 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x5 ADD SLOAD DUP2 GT ISZERO PUSH2 0x16D1 JUMPI PUSH2 0x16C7 DUP4 PUSH1 0x5 ADD SLOAD DUP3 PUSH2 0x1EB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP POP PUSH2 0x16D9 JUMP JUMPDEST PUSH1 0x0 SWAP4 POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1752 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F7468696E6720746F206465706F7369740000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x175A PUSH2 0x1C58 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1764 PUSH2 0x8FD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x7 ADD SLOAD GT ISZERO PUSH2 0x1805 JUMPI PUSH1 0x0 PUSH2 0x17DE DUP3 PUSH1 0x5 ADD SLOAD PUSH2 0x17D0 DUP5 PUSH1 0x7 ADD SLOAD PUSH1 0x5 SLOAD PUSH2 0x1F40 JUMP JUMPDEST PUSH2 0x1EB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x17F7 DUP2 DUP4 PUSH1 0x6 ADD SLOAD PUSH2 0x1F6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP POP PUSH2 0x1810 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18D5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x18EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP PUSH1 0x0 DUP1 PUSH1 0x7 SLOAD EQ PUSH2 0x1936 JUMPI PUSH2 0x192F DUP4 PUSH2 0x1921 PUSH1 0x7 SLOAD DUP8 PUSH2 0x1FF6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x207C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1953 JUMP JUMPDEST PUSH2 0x1950 PUSH2 0x1941 PUSH2 0x1C45 JUMP JUMPDEST DUP6 PUSH2 0x1FF6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x196A DUP2 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x1F6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1987 DUP2 PUSH1 0x7 SLOAD PUSH2 0x1F6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 ADD SLOAD DUP3 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x19B1 DUP5 DUP4 PUSH1 0x7 ADD SLOAD PUSH2 0x1F6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x7 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x19C9 DUP3 PUSH1 0x7 ADD SLOAD PUSH1 0x5 SLOAD PUSH2 0x1F40 JUMP JUMPDEST DUP3 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x19D9 PUSH2 0x10E2 JUMP JUMPDEST DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x19E9 PUSH2 0x10E2 JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x36AF321EC8D3C75236829C5317AFFD40DDB308863A1236D2D277A4025CCCEE1E DUP6 DUP4 TIMESTAMP PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x15180 SWAP1 POP PUSH1 0x0 PUSH2 0x1A68 PUSH2 0x10E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 ISZERO ISZERO PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x1ACC JUMPI PUSH1 0x0 PUSH3 0x1DDBC SWAP1 POP PUSH2 0x1ABE DUP5 PUSH2 0x1AB0 PUSH1 0xD SLOAD PUSH1 0xA EXP DUP5 PUSH2 0x1FF6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x207C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP DUP2 SWAP5 POP POP POP POP POP PUSH2 0x1B9A JUMP JUMPDEST PUSH2 0x12C PUSH1 0xB SLOAD ADD DUP3 LT ISZERO PUSH2 0x1B14 JUMPI PUSH1 0x0 PUSH3 0x2AB980 SWAP1 POP PUSH2 0x1B0C DUP5 PUSH2 0x1AFE PUSH1 0xD SLOAD PUSH1 0xA EXP DUP5 PUSH2 0x1FF6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x207C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1B93 JUMP JUMPDEST PUSH2 0x258 PUSH1 0xB SLOAD ADD DUP3 LT ISZERO PUSH2 0x1B5C JUMPI PUSH1 0x0 PUSH3 0x155CC0 SWAP1 POP PUSH2 0x1B54 DUP5 PUSH2 0x1B46 PUSH1 0xD SLOAD PUSH1 0xA EXP DUP5 PUSH2 0x1FF6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x207C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1B92 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1DDBC SWAP1 POP PUSH2 0x1B8E DUP5 PUSH2 0x1B80 PUSH1 0xD SLOAD PUSH1 0xA EXP DUP5 PUSH2 0x1FF6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x207C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP JUMPDEST JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C3A PUSH1 0x8 SLOAD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFC3E532B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C05 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1F6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD SLOAD PUSH1 0xA EXP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C62 PUSH2 0x10E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x9 SLOAD DUP2 GT PUSH2 0x1C73 JUMPI POP PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C7D PUSH2 0x8FD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x1C95 JUMPI DUP2 PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD TIMESTAMP SUB SWAP1 POP PUSH1 0x0 PUSH2 0x1CBA PUSH2 0x1CAB PUSH2 0x1A55 JUMP JUMPDEST DUP4 PUSH2 0x1FF6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH2 0x1CD8 DUP2 PUSH1 0x8 SLOAD PUSH2 0x1F6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x1CFC PUSH2 0x1CEB DUP3 DUP6 PUSH2 0x210B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x1F6E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 ADDRESS DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1DA7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMPDEST JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1E5D JUMPI DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1E6B PUSH2 0x10E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1E77 PUSH2 0x8FD JUMP JUMPDEST GT PUSH2 0x1E86 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x1EB4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD DUP3 SUB SWAP1 POP PUSH1 0x0 PUSH2 0x1EAB PUSH2 0x1E9C PUSH2 0x1A55 JUMP JUMPDEST DUP4 PUSH2 0x1FF6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1F2F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1F5E DUP4 DUP6 PUSH2 0x1FF6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH2 0x1F65 JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1FEC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x2009 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x2076 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x201A JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x2071 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2143 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x20F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP2 PUSH2 0x20FE JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x213A DUP3 PUSH2 0x212C PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x1FF6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x207C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID MSTORE8 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77A26469706673582212 KECCAK256 0x4B CREATE2 0xE2 0xC7 0xD0 ADDMOD 0xFB SWAP5 DUP3 0xAC TIMESTAMP 0xCB 0x4A GASPRICE 0xF9 SWAP5 0xE6 0xAA PUSH2 0x63C6 SWAP10 0xB0 EXTCODEHASH DUP8 0x1F CREATE2 LT LOG0 0xBE 0xE3 0xA8 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "1096:9288:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9701:268;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2557:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1938:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5890:120;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4118:1764;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1901:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7514:332;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8170:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2146:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1242:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1865:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7854:281;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8256:110;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9977:282;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9432:261;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1215:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;7067:439;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2835:1275;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8513:911;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1975:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6938:121;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1828:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8374:97;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2015:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6018:590;;;:::i;:::-;;2188:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;10267:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6616:314;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9701:268;9780:5;;;;;;;;;;;9766:19;;:10;:19;;;9758:28;;;;;;9835:1;9805:32;;:18;;;;;;;;;;;:32;;;;9797:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9888:6;9874:10;;:20;;9866:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9922:2;;;;;;;;;;;:11;;;9934:18;;;;;;;;;;;9954:6;9922:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9701:268;:::o;2557:44::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1938:30::-;;;;:::o;5890:120::-;5932:7;5959:43;5991:10;;5959:2;;;;;;;;;;;:12;;;5980:4;5959:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:31;;:43;;;;:::i;:::-;5952:50;;5890:120;:::o;4118:1764::-;4171:21;4195:8;:20;4204:10;4195:20;;;;;;;;;;;;;;;4171:44;;4244:1;4234:7;:11;4226:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4299:4;:11;;;4288:7;:22;;4280:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4359:12;:10;:12::i;:::-;4414:23;4441:74;4502:4;:12;;;4441:56;4481:4;:15;;;4441:35;4452:4;:11;;;4464;;4441:10;:35::i;:::-;:39;;:56;;;;:::i;:::-;:60;;:74;;;;:::i;:::-;4414:101;;4574:22;4599:45;4632:4;:11;;;4599:28;4619:7;4599:15;:19;;:28;;;;:::i;:::-;:32;;:45;;;;:::i;:::-;4574:70;;4657:13;4673:41;4702:4;:11;;;4673:24;4689:7;4673:4;:11;;;:15;;:24;;;;:::i;:::-;:28;;:41;;;;:::i;:::-;4657:57;;4739:24;4755:7;4739:4;:11;;;:15;;:24;;;;:::i;:::-;4725:4;:11;;:38;;;;4788:24;4804:7;4788:11;;:15;;:24;;;;:::i;:::-;4774:11;:38;;;;4862:14;4847:11;;:29;;4825:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4962:31;4978:14;4962:11;;:15;;:31;;;;:::i;:::-;4948:11;:45;;;;5053:35;5073:14;5053:15;:19;;:35;;;;:::i;:::-;5038:4;:12;;:50;;;;5145:22;5161:5;5145:4;:11;;;:15;;:22;;;;:::i;:::-;5131:4;:11;;:36;;;;5196:45;5223:17;;5196:4;:22;;;:26;;:45;;;;:::i;:::-;5184:9;:7;:9::i;:::-;:57;5180:213;;;5258:11;5272:25;5291:5;5272:14;5282:3;5272:5;:9;;:14;;;;:::i;:::-;:18;;:25;;;;:::i;:::-;5258:39;;5320:14;5330:3;5320:5;:9;;:14;;;;:::i;:::-;5312:22;;5362:19;5377:3;5362:10;;:14;;:19;;;;:::i;:::-;5349:10;:32;;;;5180:213;;5405:2;;;;;;;;;;;:11;;;5425:10;5438:5;5405:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5455:5;;;;;;;;;;:14;;;5470:10;5482:14;5455:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5528:1;5514:4;:11;;;:15;5510:247;;;5564:35;5575:4;:11;;;5587;;5564:10;:35::i;:::-;5546:4;:15;;:53;;;;5635:13;:11;:13::i;:::-;5614:4;:18;;:34;;;;5691:4;:12;;;5663:4;:25;;:40;;;;5510:247;;;5756:1;5735:4;:18;;:22;;;;5510:247;5796:15;5770:4;:23;;:41;;;;5838:10;5829:45;;;5850:14;5866:7;5829:45;;;;;;;;;;;;;;;;;;;;;;;;4118:1764;;;;;:::o;1901:30::-;;;;:::o;7514:332::-;7554:7;7574:18;7595:57;7611:40;7620:4;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7639:11;:9;:11::i;:::-;7611:8;:40::i;:::-;7595:11;;:15;;:57;;;;:::i;:::-;7574:78;;7663:21;7687:8;:20;7696:10;7687:20;;;;;;;;;;;;;;;7663:44;;7736:1;7721:4;:11;;;:16;7718:29;;;7746:1;7739:8;;;;;;7718:29;7765:73;7825:4;:12;;;7765:55;7804:4;:15;;;7765:34;7776:4;:11;;;7788:10;7765;:34::i;:::-;:38;;:55;;;;:::i;:::-;:59;;:73;;;;:::i;:::-;7758:80;;;;7514:332;;:::o;8170:78::-;8210:7;8237:3;8230:10;;8170:78;:::o;2146:35::-;;;;:::o;1242:33::-;;;;;;;;;;;;;:::o;1865:29::-;;;;:::o;7854:281::-;7898:7;7918:11;7932;:9;:11::i;:::-;7918:25;;7965:1;7958:3;:8;7954:22;;;7975:1;7968:8;;;;;7954:22;7987:18;8008:49;8024:32;8033:4;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8052:3;8024:8;:32::i;:::-;8008:11;;:15;;:49;;;;:::i;:::-;7987:70;;8075:52;8115:11;;8075:35;8099:10;8075:19;8083:10;:8;:10::i;:::-;8075:3;:7;;:19;;;;:::i;:::-;:23;;:35;;;;:::i;:::-;:39;;:52;;;;:::i;:::-;8068:59;;;;7854:281;;:::o;8256:110::-;8301:7;8328:5;;;;;;;;;;;:15;;;8352:4;8328:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8321:37;;8256:110;:::o;9977:282::-;10050:5;;;;;;;;;;;10036:19;;:10;:19;;;10032:220;;;10076:4;10072:134;;;10120:9;:7;:9::i;:::-;10101:16;:28;;;;10072:134;;;10189:1;10170:16;:20;;;;10072:134;10236:4;10220:13;;:20;;;;;;;;;;;;;;;;;;10032:220;9977:282;:::o;9432:261::-;9515:5;;;;;;;;;;;9501:19;;:10;:19;;;9493:28;;;;;;9562:1;9540:24;;:10;:24;;;;9532:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9618:6;9596:29;;:10;:29;;;;9588:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9675:10;9654:18;;:31;;;;;;;;;;;;;;;;;;9432:261;:::o;1215:20::-;;;;;;;;;;;;;:::o;7067:439::-;7110:7;7149:1;7134:11;;:16;7130:44;;;7173:1;7166:8;;;;7130:44;7185:21;7209:8;:20;7218:10;7209:20;;;;;;;;;;;;;;;7185:44;;7240:18;7261:57;7277:40;7286:4;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7305:11;:9;:11::i;:::-;7277:8;:40::i;:::-;7261:11;;:15;;:57;;;;:::i;:::-;7240:78;;7329:11;7343:34;7354:4;:11;;;7366:10;7343;:34::i;:::-;7329:48;;7400:4;:15;;;7394:3;:21;7390:108;;;7437:24;7445:4;:15;;;7437:3;:7;;:24;;;;:::i;:::-;7430:31;;;;;;;7390:108;7497:1;7490:8;;;;;7067:439;;:::o;2835:1275::-;2905:1;2895:7;:11;2887:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2942:12;:10;:12::i;:::-;2965:11;2979;:9;:11::i;:::-;2965:25;;3003:21;3027:8;:20;3036:10;3027:20;;;;;;;;;;;;;;;3003:44;;3078:1;3064:4;:11;;;:15;3060:309;;;3096:15;3114:89;3173:4;:15;;;3114:36;3125:4;:11;;;3138;;3114:10;:36::i;:::-;:40;;:89;;;;:::i;:::-;3096:107;;3288:25;3305:7;3288:4;:12;;;:16;;:25;;;;:::i;:::-;3273:4;:12;;:40;;;;3060:309;;;;3368:1;3353:4;:12;;:16;;;;3060:309;3382:2;;;;;;;;;;;:15;;;3398:10;3418:4;3425:7;3382:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3446:21;3501:1;3486:11;;:16;3482:172;;3535:35;3566:3;3536:24;3548:11;;3536:7;:11;;:24;;;;:::i;:::-;3535:30;;:35;;;;:::i;:::-;3519:51;;3482:172;;;3619:23;3631:10;:8;:10::i;:::-;3619:7;:11;;:23;;;;:::i;:::-;3603:39;;3482:172;3680:30;3696:13;3680:4;:11;;;:15;;:30;;;;:::i;:::-;3666:4;:11;;:44;;;;3735:30;3751:13;3735:11;;:15;;:30;;;;:::i;:::-;3721:11;:44;;;;3804:4;:12;;;3776:4;:25;;:40;;;;3843:24;3859:7;3843:4;:11;;;:15;;:24;;;;:::i;:::-;3829:4;:11;;:38;;;;3896:35;3907:4;:11;;;3919;;3896:10;:35::i;:::-;3878:4;:15;;:53;;;;3970:9;:7;:9::i;:::-;3944:4;:23;;:35;;;;4015:9;:7;:9::i;:::-;3990:4;:22;;:34;;;;4050:10;4042:60;;;4062:7;4071:13;4086:15;4042:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2835:1275;;;;:::o;8513:911::-;8566:7;8586:11;8600:9;8586:23;;8620:15;8638:9;:7;:9::i;:::-;8620:27;;8658:12;8673:1;8658:16;;8708:5;8691:22;;:13;;;;;;;;;;;:22;;;8687:172;;;8730:15;8748:6;8730:24;;8776:45;8817:3;8776:36;8801:8;;8789:2;:21;8776:7;:11;;:36;;;;:::i;:::-;:40;;:45;;;;:::i;:::-;8769:52;;8843:4;8836:11;;;;;;;;8687:172;8935:6;8916:16;;:25;8905:7;:37;8901:494;;;8959:15;8977:7;8959:25;;9006:45;9047:3;9006:36;9031:8;;9019:2;:21;9006:7;:11;;:36;;;;:::i;:::-;:40;;:45;;;;:::i;:::-;8999:52;;8901:494;;;;9142:7;9123:16;;:26;9112:7;:38;9108:287;;;9167:15;9185:7;9167:25;;9214:45;9255:3;9214:36;9239:8;;9227:2;:21;9214:7;:11;;:36;;;;:::i;:::-;:40;;:45;;;;:::i;:::-;9207:52;;9108:287;;;;9292:15;9310:6;9292:24;;9338:45;9379:3;9338:36;9363:8;;9351:2;:21;9338:7;:11;;:36;;;;:::i;:::-;:40;;:45;;;;:::i;:::-;9331:52;;9108:287;;8901:494;9412:4;9405:11;;;;;8513:911;;:::o;1975:33::-;;;;:::o;6938:121::-;6989:7;7016:35;7039:11;;7016:4;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:22;;:35;;;;:::i;:::-;7009:42;;6938:121;:::o;1828:30::-;;;;:::o;8374:97::-;8415:7;8454:8;;8442:2;:21;8435:28;;8374:97;:::o;2015:41::-;;;;:::o;6018:590::-;6058:15;6076:9;:7;:9::i;:::-;6058:27;;6111:14;;6100:7;:25;6096:64;;6142:7;;;6096:64;6170:11;6184;:9;:11::i;:::-;6170:25;;6217:1;6210:3;:8;6206:86;;6252:7;6235:14;:24;;;;6274:7;;;;6206:86;6304:18;6331:14;;6325:3;:20;6304:41;;6356:14;6373:38;6388:22;:20;:22::i;:::-;6373:10;:14;;:38;;;;:::i;:::-;6356:55;;6439:7;6422:14;:24;;;;6471:23;6487:6;6471:11;;:15;;:23;;;;:::i;:::-;6457:11;:37;;;;6519;6535:20;6544:6;6551:3;6535:8;:20::i;:::-;6519:11;;:15;;:37;;;;:::i;:::-;6505:11;:51;;;;6567:5;;;;;;;;;;:10;;;6586:4;6593:6;6567:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6018:590;;;;;:::o;2188:33::-;;;;;;;;;;;;;:::o;10267:114::-;10332:5;;;;;;;;;;;10318:19;;:10;:19;;;10314:60;;;10359:3;10354:2;;:8;;;;;;;;;;;;;;;;;;10314:60;10267:114;:::o;6616:314::-;6662:7;6682:15;6700:9;:7;:9::i;:::-;6682:27;;6739:1;6724:11;:9;:11::i;:::-;:16;6720:57;;6764:1;6757:8;;;;;6720:57;6787:18;6818:14;;6808:7;:24;6787:45;;6843:14;6860:38;6875:22;:20;:22::i;:::-;6860:10;:14;;:38;;;;:::i;:::-;6843:55;;6916:6;6909:13;;;;;6616:314;;:::o;773:184:5:-;831:7;864:1;859;:6;;851:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;911:9;927:1;923;:5;911:17;;948:1;941:8;;;773:184;;;;:::o;2425:124:0:-;2495:7;2281:6;2522:13;2533:1;2522:6;:10;;:13;;;;:::i;:::-;:19;;;;;;2515:26;;2425:124;;;;:::o;317:181:5:-;375:7;395:9;411:1;407;:5;395:17;;436:1;431;:6;;423:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;489:1;482:8;;;317:181;;;;:::o;1208:470::-;1266:7;1515:1;1510;:6;1506:47;;;1540:1;1533:8;;;;1506:47;1565:9;1581:1;1577;:5;1565:17;;1610:1;1605;1601;:5;;;;;;:10;1593:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1669:1;1662:8;;;1208:470;;;;;:::o;2146:333::-;2204:7;2303:1;2299;:5;2291:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2346:9;2362:1;2358;:5;;;;;;2346:17;;2470:1;2463:8;;;2146:333;;;;:::o;2294:125:0:-;2362:7;2389:22;2409:1;2389:15;2281:6;2389;:10;;:15;;;;:::i;:::-;:19;;:22;;;;:::i;:::-;2382:29;;2294:125;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1720200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"accPerShare()": "1050",
								"deposit(uint256)": "infinite",
								"getEther()": "2693",
								"getPkBalance()": "infinite",
								"getStakingCoinPerSec()": "infinite",
								"getTime()": "258",
								"lastUpdateTime()": "1094",
								"lpBalance()": "infinite",
								"myBenefits()": "infinite",
								"myValue()": "infinite",
								"newContractAddress()": "1137",
								"owner()": "1115",
								"pendingCoin()": "infinite",
								"setFeeAddress(address)": "22093",
								"setLp(address)": "22062",
								"setStakingSwitch(bool)": "42164",
								"sharesPrice()": "infinite",
								"stakingStartTime()": "1073",
								"stakingSwitch()": "1113",
								"totalAmount()": "1096",
								"totalLpFee()": "1050",
								"totalShares()": "1095",
								"totalStakingAmount()": "infinite",
								"transferLpFee(uint256)": "infinite",
								"updatePool()": "infinite",
								"userInfo(address)": "7076",
								"withdraw(uint256)": "infinite",
								"withdrawFeePeriod()": "1094"
							},
							"internal": {
								"decimalMul(uint256,uint256)": "infinite",
								"divFloor(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1096,
									"end": 10384,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1096,
									"end": 10384,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1096,
									"end": 10384,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1857,
									"end": 1858,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1828,
									"end": 1858,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1828,
									"end": 1858,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1893,
									"end": 1894,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1865,
									"end": 1894,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1865,
									"end": 1894,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1930,
									"end": 1931,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1901,
									"end": 1931,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1901,
									"end": 1931,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1967,
									"end": 1968,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1938,
									"end": 1968,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1938,
									"end": 1968,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2007,
									"end": 2008,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1975,
									"end": 2008,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1975,
									"end": 2008,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2050,
									"end": 2056,
									"name": "PUSH",
									"source": 0,
									"value": "93A80"
								},
								{
									"begin": 2015,
									"end": 2056,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 2015,
									"end": 2056,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2180,
									"end": 2181,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2146,
									"end": 2181,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 2146,
									"end": 2181,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2216,
									"end": 2221,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2188,
									"end": 2221,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 2188,
									"end": 2221,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2188,
									"end": 2221,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2188,
									"end": 2221,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2188,
									"end": 2221,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2188,
									"end": 2221,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2188,
									"end": 2221,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2188,
									"end": 2221,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2188,
									"end": 2221,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2188,
									"end": 2221,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2188,
									"end": 2221,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2188,
									"end": 2221,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2188,
									"end": 2221,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2188,
									"end": 2221,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2188,
									"end": 2221,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2188,
									"end": 2221,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2188,
									"end": 2221,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2188,
									"end": 2221,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2188,
									"end": 2221,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2188,
									"end": 2221,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2247,
									"end": 2249,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2228,
									"end": 2249,
									"name": "PUSH",
									"source": 0,
									"value": "D"
								},
								{
									"begin": 2228,
									"end": 2249,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1411,
									"end": 1417,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 1408,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 1408,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 1417,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1403,
									"end": 1417,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 1417,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 1417,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 1417,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 1417,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1403,
									"end": 1417,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 1417,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 1417,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 1417,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 1417,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 1417,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1403,
									"end": 1417,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 1417,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 1417,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 1417,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 1417,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 1417,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1436,
									"end": 1446,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1428,
									"end": 1433,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1428,
									"end": 1433,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1428,
									"end": 1446,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1428,
									"end": 1446,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1428,
									"end": 1446,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1428,
									"end": 1446,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1428,
									"end": 1446,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1428,
									"end": 1446,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1428,
									"end": 1446,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1428,
									"end": 1446,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1428,
									"end": 1446,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1428,
									"end": 1446,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1428,
									"end": 1446,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1428,
									"end": 1446,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1428,
									"end": 1446,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1428,
									"end": 1446,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1428,
									"end": 1446,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1428,
									"end": 1446,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1428,
									"end": 1446,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1428,
									"end": 1446,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1474,
									"end": 1483,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1474,
									"end": 1481,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1474,
									"end": 1481,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1474,
									"end": 1481,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1474,
									"end": 1483,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1474,
									"end": 1483,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1474,
									"end": 1483,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1474,
									"end": 1483,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1474,
									"end": 1483,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1457,
									"end": 1471,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1457,
									"end": 1483,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1457,
									"end": 1483,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1457,
									"end": 1483,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1457,
									"end": 1483,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 1514,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1494,
									"end": 1502,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1494,
									"end": 1502,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1494,
									"end": 1514,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1494,
									"end": 1514,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1494,
									"end": 1514,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1494,
									"end": 1514,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1494,
									"end": 1514,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1494,
									"end": 1514,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1494,
									"end": 1514,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1494,
									"end": 1514,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1494,
									"end": 1514,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1494,
									"end": 1514,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1494,
									"end": 1514,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1494,
									"end": 1514,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1494,
									"end": 1514,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1494,
									"end": 1514,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1494,
									"end": 1514,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1494,
									"end": 1514,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1494,
									"end": 1514,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1494,
									"end": 1514,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1530,
									"end": 1533,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1525,
									"end": 1527,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1525,
									"end": 1527,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1525,
									"end": 1533,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1525,
									"end": 1533,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1525,
									"end": 1533,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1525,
									"end": 1533,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1525,
									"end": 1533,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1525,
									"end": 1533,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1525,
									"end": 1533,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1525,
									"end": 1533,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1525,
									"end": 1533,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1525,
									"end": 1533,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1525,
									"end": 1533,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1525,
									"end": 1533,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1525,
									"end": 1533,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1525,
									"end": 1533,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1525,
									"end": 1533,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1525,
									"end": 1533,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1525,
									"end": 1533,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1525,
									"end": 1533,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1284,
									"end": 1541,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1096,
									"end": 10384,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1096,
									"end": 10384,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8170,
									"end": 8248,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 8170,
									"end": 8248,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8210,
									"end": 8217,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8237,
									"end": 8240,
									"name": "TIMESTAMP",
									"source": 0
								},
								{
									"begin": 8230,
									"end": 8240,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8230,
									"end": 8240,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8170,
									"end": 8248,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8170,
									"end": 8248,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 1096,
									"end": 10384,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1096,
									"end": 10384,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1096,
									"end": 10384,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1096,
									"end": 10384,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1096,
									"end": 10384,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1096,
									"end": 10384,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1096,
									"end": 10384,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1096,
									"end": 10384,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1096,
									"end": 10384,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204bf5e2c7d008fb9482ac42cb4a3af994e6aa6163c699b03f871ff510a0bee3a864736f6c634300060c0033",
									".code": [
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "8705FCD4"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "D2890A01"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "E3161DDD"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "E3161DDD"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "E6FA445D"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "F4C2BAA9"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "FC3E532B"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "D2890A01"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "DE0FF7C5"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "DF10B4E6"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "B6B55F25"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "B6B55F25"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "B8A3B366"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "C8F33C91"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "D201114A"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "8705FCD4"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "936B6CEC"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "557ED1BA"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "6D3C832F"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "6D3C832F"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "77926869"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "7B27C1D1"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "81AD5718"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "557ED1BA"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "6ABFD183"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "6AF04A57"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "2059F615"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "2059F615"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "2E1A7D4D"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "3A98EF39"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "47F1AAE7"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "B26B6A8"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "1959A002"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "1A39D8EF"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 10384,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9969,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9701,
											"end": 9969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 9701,
											"end": 9969,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9701,
											"end": 9969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9969,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9969,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9969,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9701,
											"end": 9969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9969,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9969,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 9701,
											"end": 9969,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9701,
											"end": 9969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9969,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9969,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 9701,
											"end": 9969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9969,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9969,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9701,
											"end": 9969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9969,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9969,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9701,
											"end": 9969,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9701,
											"end": 9969,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 9701,
											"end": 9969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9969,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 1968,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1938,
											"end": 1968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 1968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1938,
											"end": 1968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1938,
											"end": 1968,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1938,
											"end": 1968,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1938,
											"end": 1968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 1968,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1938,
											"end": 1968,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 1968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 1968,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 1968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 1968,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 1968,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1938,
											"end": 1968,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 1968,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 1968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 1968,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 1968,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1938,
											"end": 1968,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 1968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 1968,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 1968,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 1968,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 1968,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5890,
											"end": 6010,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5890,
											"end": 6010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5890,
											"end": 6010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 5890,
											"end": 6010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 5890,
											"end": 6010,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5890,
											"end": 6010,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 5890,
											"end": 6010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5890,
											"end": 6010,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5890,
											"end": 6010,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5890,
											"end": 6010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5890,
											"end": 6010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5890,
											"end": 6010,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5890,
											"end": 6010,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5890,
											"end": 6010,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5890,
											"end": 6010,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5890,
											"end": 6010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5890,
											"end": 6010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5890,
											"end": 6010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5890,
											"end": 6010,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5890,
											"end": 6010,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5890,
											"end": 6010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5890,
											"end": 6010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5890,
											"end": 6010,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5890,
											"end": 6010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5890,
											"end": 6010,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 5882,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4118,
											"end": 5882,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 5882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4118,
											"end": 5882,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4118,
											"end": 5882,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 5882,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 5882,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 5882,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4118,
											"end": 5882,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 5882,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 5882,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 5882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4118,
											"end": 5882,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 5882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4118,
											"end": 5882,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 5882,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 5882,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4118,
											"end": 5882,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 5882,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 5882,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 5882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 5882,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 5882,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 5882,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 5882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 5882,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4118,
											"end": 5882,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 5882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 5882,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 5882,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 5882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 5882,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 5882,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 5882,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 5882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4118,
											"end": 5882,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4118,
											"end": 5882,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4118,
											"end": 5882,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 5882,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1931,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1901,
											"end": 1931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1901,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1901,
											"end": 1931,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1901,
											"end": 1931,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1901,
											"end": 1931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1931,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1931,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1931,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1931,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1931,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1931,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1901,
											"end": 1931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1931,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1931,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1931,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1931,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1931,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1931,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1931,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7514,
											"end": 7846,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7514,
											"end": 7846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7514,
											"end": 7846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 7514,
											"end": 7846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 7514,
											"end": 7846,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7514,
											"end": 7846,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 7514,
											"end": 7846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7514,
											"end": 7846,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7514,
											"end": 7846,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7514,
											"end": 7846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7514,
											"end": 7846,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7514,
											"end": 7846,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7514,
											"end": 7846,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7514,
											"end": 7846,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7514,
											"end": 7846,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7514,
											"end": 7846,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7514,
											"end": 7846,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7514,
											"end": 7846,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7514,
											"end": 7846,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7514,
											"end": 7846,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7514,
											"end": 7846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7514,
											"end": 7846,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7514,
											"end": 7846,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7514,
											"end": 7846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7514,
											"end": 7846,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8170,
											"end": 8248,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 8170,
											"end": 8248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8170,
											"end": 8248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 8170,
											"end": 8248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 8170,
											"end": 8248,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8170,
											"end": 8248,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 8170,
											"end": 8248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8170,
											"end": 8248,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8170,
											"end": 8248,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8170,
											"end": 8248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8170,
											"end": 8248,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8170,
											"end": 8248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8170,
											"end": 8248,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8170,
											"end": 8248,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8170,
											"end": 8248,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8170,
											"end": 8248,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8170,
											"end": 8248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8170,
											"end": 8248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8170,
											"end": 8248,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8170,
											"end": 8248,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8170,
											"end": 8248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8170,
											"end": 8248,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8170,
											"end": 8248,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8170,
											"end": 8248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8170,
											"end": 8248,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2181,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2146,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2146,
											"end": 2181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2146,
											"end": 2181,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2146,
											"end": 2181,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2146,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2181,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2146,
											"end": 2181,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2181,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2181,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2181,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2181,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2181,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2146,
											"end": 2181,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2181,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2181,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2181,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2181,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2146,
											"end": 2181,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2181,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2181,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2181,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2181,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1275,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1242,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1242,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1242,
											"end": 1275,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1242,
											"end": 1275,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1242,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1275,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1242,
											"end": 1275,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1275,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1275,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1242,
											"end": 1275,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1275,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1275,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1275,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1242,
											"end": 1275,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1275,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1275,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1242,
											"end": 1275,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1275,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1275,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1275,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1894,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1865,
											"end": 1894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1865,
											"end": 1894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1865,
											"end": 1894,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1865,
											"end": 1894,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1865,
											"end": 1894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1894,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1865,
											"end": 1894,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1894,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1894,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1894,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1894,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1894,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1865,
											"end": 1894,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1894,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1894,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1865,
											"end": 1894,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1894,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1894,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1894,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1894,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7854,
											"end": 8135,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 7854,
											"end": 8135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7854,
											"end": 8135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 7854,
											"end": 8135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 7854,
											"end": 8135,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7854,
											"end": 8135,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 7854,
											"end": 8135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7854,
											"end": 8135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7854,
											"end": 8135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7854,
											"end": 8135,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7854,
											"end": 8135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7854,
											"end": 8135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7854,
											"end": 8135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7854,
											"end": 8135,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7854,
											"end": 8135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7854,
											"end": 8135,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7854,
											"end": 8135,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7854,
											"end": 8135,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7854,
											"end": 8135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7854,
											"end": 8135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7854,
											"end": 8135,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7854,
											"end": 8135,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7854,
											"end": 8135,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7854,
											"end": 8135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7854,
											"end": 8135,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8256,
											"end": 8366,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 8256,
											"end": 8366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8256,
											"end": 8366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 8256,
											"end": 8366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 8256,
											"end": 8366,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8256,
											"end": 8366,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 8256,
											"end": 8366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8256,
											"end": 8366,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8256,
											"end": 8366,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8256,
											"end": 8366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8256,
											"end": 8366,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8256,
											"end": 8366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8256,
											"end": 8366,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8256,
											"end": 8366,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8256,
											"end": 8366,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8256,
											"end": 8366,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8256,
											"end": 8366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8256,
											"end": 8366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8256,
											"end": 8366,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8256,
											"end": 8366,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8256,
											"end": 8366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8256,
											"end": 8366,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8256,
											"end": 8366,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8256,
											"end": 8366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8256,
											"end": 8366,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 10259,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 9977,
											"end": 10259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 10259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 9977,
											"end": 10259,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9977,
											"end": 10259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 10259,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 10259,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 10259,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9977,
											"end": 10259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 10259,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 10259,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 10259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 9977,
											"end": 10259,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 10259,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9977,
											"end": 10259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 10259,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 10259,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 9977,
											"end": 10259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 10259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 10259,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 10259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 10259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 10259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 10259,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 10259,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 10259,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 10259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 10259,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9977,
											"end": 10259,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 10259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 10259,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 10259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 10259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 10259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 10259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 10259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 10259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 9977,
											"end": 10259,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9977,
											"end": 10259,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 9977,
											"end": 10259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 10259,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 9432,
											"end": 9693,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 9432,
											"end": 9693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9432,
											"end": 9693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 9432,
											"end": 9693,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9432,
											"end": 9693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9432,
											"end": 9693,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9432,
											"end": 9693,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9432,
											"end": 9693,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9432,
											"end": 9693,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9432,
											"end": 9693,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9432,
											"end": 9693,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9432,
											"end": 9693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 9432,
											"end": 9693,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9432,
											"end": 9693,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9432,
											"end": 9693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9432,
											"end": 9693,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9432,
											"end": 9693,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 9432,
											"end": 9693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9432,
											"end": 9693,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9432,
											"end": 9693,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9432,
											"end": 9693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9432,
											"end": 9693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9432,
											"end": 9693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9432,
											"end": 9693,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 9432,
											"end": 9693,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9432,
											"end": 9693,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9432,
											"end": 9693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9432,
											"end": 9693,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9432,
											"end": 9693,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9432,
											"end": 9693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9432,
											"end": 9693,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9432,
											"end": 9693,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9432,
											"end": 9693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9432,
											"end": 9693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9432,
											"end": 9693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9432,
											"end": 9693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9432,
											"end": 9693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 9432,
											"end": 9693,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9432,
											"end": 9693,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 9432,
											"end": 9693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9432,
											"end": 9693,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1235,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1215,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1215,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1215,
											"end": 1235,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1215,
											"end": 1235,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1215,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1235,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1215,
											"end": 1235,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1235,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1235,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1215,
											"end": 1235,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1235,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1215,
											"end": 1235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1235,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1235,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1215,
											"end": 1235,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1235,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1235,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1235,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7067,
											"end": 7506,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 7067,
											"end": 7506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7067,
											"end": 7506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 7067,
											"end": 7506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 7067,
											"end": 7506,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7067,
											"end": 7506,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 7067,
											"end": 7506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7067,
											"end": 7506,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7067,
											"end": 7506,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7067,
											"end": 7506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7067,
											"end": 7506,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7067,
											"end": 7506,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7067,
											"end": 7506,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7067,
											"end": 7506,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7067,
											"end": 7506,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7067,
											"end": 7506,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7067,
											"end": 7506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7067,
											"end": 7506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7067,
											"end": 7506,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7067,
											"end": 7506,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7067,
											"end": 7506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7067,
											"end": 7506,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7067,
											"end": 7506,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7067,
											"end": 7506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7067,
											"end": 7506,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 4110,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2835,
											"end": 4110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 4110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2835,
											"end": 4110,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2835,
											"end": 4110,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 4110,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 4110,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 4110,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2835,
											"end": 4110,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 4110,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 4110,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 4110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2835,
											"end": 4110,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 4110,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2835,
											"end": 4110,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 4110,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 4110,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2835,
											"end": 4110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 4110,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 4110,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 4110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 4110,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 4110,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 4110,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 4110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 4110,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2835,
											"end": 4110,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 4110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 4110,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 4110,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 4110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 4110,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 4110,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 4110,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 4110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2835,
											"end": 4110,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2835,
											"end": 4110,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2835,
											"end": 4110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 4110,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 8513,
											"end": 9424,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 8513,
											"end": 9424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8513,
											"end": 9424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8513,
											"end": 9424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 8513,
											"end": 9424,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8513,
											"end": 9424,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8513,
											"end": 9424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8513,
											"end": 9424,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8513,
											"end": 9424,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8513,
											"end": 9424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8513,
											"end": 9424,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8513,
											"end": 9424,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8513,
											"end": 9424,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8513,
											"end": 9424,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8513,
											"end": 9424,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8513,
											"end": 9424,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8513,
											"end": 9424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8513,
											"end": 9424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8513,
											"end": 9424,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8513,
											"end": 9424,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8513,
											"end": 9424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8513,
											"end": 9424,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8513,
											"end": 9424,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8513,
											"end": 9424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8513,
											"end": 9424,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1975,
											"end": 2008,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1975,
											"end": 2008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1975,
											"end": 2008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1975,
											"end": 2008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1975,
											"end": 2008,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1975,
											"end": 2008,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1975,
											"end": 2008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1975,
											"end": 2008,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1975,
											"end": 2008,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1975,
											"end": 2008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1975,
											"end": 2008,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1975,
											"end": 2008,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1975,
											"end": 2008,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1975,
											"end": 2008,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1975,
											"end": 2008,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1975,
											"end": 2008,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1975,
											"end": 2008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1975,
											"end": 2008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1975,
											"end": 2008,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1975,
											"end": 2008,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1975,
											"end": 2008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1975,
											"end": 2008,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1975,
											"end": 2008,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1975,
											"end": 2008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1975,
											"end": 2008,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6938,
											"end": 7059,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 6938,
											"end": 7059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6938,
											"end": 7059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 6938,
											"end": 7059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 6938,
											"end": 7059,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6938,
											"end": 7059,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 6938,
											"end": 7059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6938,
											"end": 7059,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6938,
											"end": 7059,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6938,
											"end": 7059,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6938,
											"end": 7059,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6938,
											"end": 7059,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6938,
											"end": 7059,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6938,
											"end": 7059,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6938,
											"end": 7059,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6938,
											"end": 7059,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6938,
											"end": 7059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6938,
											"end": 7059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6938,
											"end": 7059,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6938,
											"end": 7059,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6938,
											"end": 7059,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6938,
											"end": 7059,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6938,
											"end": 7059,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6938,
											"end": 7059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6938,
											"end": 7059,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 1858,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1828,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 1858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1828,
											"end": 1858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1828,
											"end": 1858,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1828,
											"end": 1858,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1828,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 1858,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1858,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 1858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 1858,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 1858,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 1858,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 1858,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1828,
											"end": 1858,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 1858,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 1858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 1858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 1858,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1858,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 1858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 1858,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 1858,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 1858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 1858,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8374,
											"end": 8471,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 8374,
											"end": 8471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8374,
											"end": 8471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 8374,
											"end": 8471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 8374,
											"end": 8471,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8374,
											"end": 8471,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 8374,
											"end": 8471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8374,
											"end": 8471,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8374,
											"end": 8471,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8374,
											"end": 8471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8374,
											"end": 8471,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8374,
											"end": 8471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8374,
											"end": 8471,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8374,
											"end": 8471,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8374,
											"end": 8471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8374,
											"end": 8471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8374,
											"end": 8471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8374,
											"end": 8471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8374,
											"end": 8471,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8374,
											"end": 8471,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8374,
											"end": 8471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8374,
											"end": 8471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8374,
											"end": 8471,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8374,
											"end": 8471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8374,
											"end": 8471,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2056,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2015,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2015,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2015,
											"end": 2056,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2015,
											"end": 2056,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2015,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2056,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2015,
											"end": 2056,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2056,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2056,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2056,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2056,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2015,
											"end": 2056,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2056,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2056,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2056,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2056,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2015,
											"end": 2056,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2056,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2056,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2056,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6018,
											"end": 6608,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 6018,
											"end": 6608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6018,
											"end": 6608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 6018,
											"end": 6608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 6018,
											"end": 6608,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6018,
											"end": 6608,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 6018,
											"end": 6608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6018,
											"end": 6608,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2188,
											"end": 2221,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2188,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2188,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2188,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2188,
											"end": 2221,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2188,
											"end": 2221,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2188,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2188,
											"end": 2221,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2188,
											"end": 2221,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2188,
											"end": 2221,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2188,
											"end": 2221,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2188,
											"end": 2221,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2188,
											"end": 2221,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2188,
											"end": 2221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2188,
											"end": 2221,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2188,
											"end": 2221,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2188,
											"end": 2221,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2188,
											"end": 2221,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2188,
											"end": 2221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2188,
											"end": 2221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2188,
											"end": 2221,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2188,
											"end": 2221,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2188,
											"end": 2221,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2188,
											"end": 2221,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2188,
											"end": 2221,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2188,
											"end": 2221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2188,
											"end": 2221,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 10267,
											"end": 10381,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 10267,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10267,
											"end": 10381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 10267,
											"end": 10381,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10267,
											"end": 10381,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10267,
											"end": 10381,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10267,
											"end": 10381,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10267,
											"end": 10381,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10267,
											"end": 10381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10267,
											"end": 10381,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10267,
											"end": 10381,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10267,
											"end": 10381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 10267,
											"end": 10381,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10267,
											"end": 10381,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10267,
											"end": 10381,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10267,
											"end": 10381,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10267,
											"end": 10381,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 10267,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10267,
											"end": 10381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10267,
											"end": 10381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10267,
											"end": 10381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10267,
											"end": 10381,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10267,
											"end": 10381,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10267,
											"end": 10381,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 10267,
											"end": 10381,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10267,
											"end": 10381,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10267,
											"end": 10381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10267,
											"end": 10381,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10267,
											"end": 10381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10267,
											"end": 10381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10267,
											"end": 10381,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10267,
											"end": 10381,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10267,
											"end": 10381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10267,
											"end": 10381,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10267,
											"end": 10381,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10267,
											"end": 10381,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10267,
											"end": 10381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 10267,
											"end": 10381,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10267,
											"end": 10381,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 10267,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10267,
											"end": 10381,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 6616,
											"end": 6930,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 6616,
											"end": 6930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6616,
											"end": 6930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6616,
											"end": 6930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6616,
											"end": 6930,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6616,
											"end": 6930,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6616,
											"end": 6930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6616,
											"end": 6930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6616,
											"end": 6930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6616,
											"end": 6930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6616,
											"end": 6930,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6616,
											"end": 6930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6616,
											"end": 6930,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6616,
											"end": 6930,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6616,
											"end": 6930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6616,
											"end": 6930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6616,
											"end": 6930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6616,
											"end": 6930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6616,
											"end": 6930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6616,
											"end": 6930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6616,
											"end": 6930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6616,
											"end": 6930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6616,
											"end": 6930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6616,
											"end": 6930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6616,
											"end": 6930,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9969,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9701,
											"end": 9969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9780,
											"end": 9785,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9780,
											"end": 9785,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9780,
											"end": 9785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9780,
											"end": 9785,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9780,
											"end": 9785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9780,
											"end": 9785,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9780,
											"end": 9785,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9780,
											"end": 9785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9780,
											"end": 9785,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9780,
											"end": 9785,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9780,
											"end": 9785,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9766,
											"end": 9785,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9766,
											"end": 9785,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9766,
											"end": 9776,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9766,
											"end": 9785,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9766,
											"end": 9785,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9766,
											"end": 9785,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9758,
											"end": 9786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 9758,
											"end": 9786,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9758,
											"end": 9786,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9758,
											"end": 9786,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9758,
											"end": 9786,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9758,
											"end": 9786,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 9758,
											"end": 9786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9835,
											"end": 9836,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9805,
											"end": 9837,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9805,
											"end": 9837,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9805,
											"end": 9823,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9805,
											"end": 9823,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9805,
											"end": 9823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9805,
											"end": 9823,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9805,
											"end": 9823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9805,
											"end": 9823,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9805,
											"end": 9823,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9805,
											"end": 9823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9805,
											"end": 9823,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9805,
											"end": 9823,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9805,
											"end": 9823,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9805,
											"end": 9837,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9805,
											"end": 9837,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9805,
											"end": 9837,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9805,
											"end": 9837,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 9797,
											"end": 9855,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9855,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9797,
											"end": 9855,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9855,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9797,
											"end": 9855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9855,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9855,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9797,
											"end": 9855,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9855,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9797,
											"end": 9855,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9855,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9855,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9855,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9855,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9855,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 9797,
											"end": 9855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9855,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9855,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9797,
											"end": 9855,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9855,
											"name": "PUSH",
											"source": 0,
											"value": "7472616E7366657220746F203000000000000000000000000000000000000000"
										},
										{
											"begin": 9797,
											"end": 9855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9855,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9855,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9855,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9797,
											"end": 9855,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9855,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9855,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9855,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9855,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9797,
											"end": 9855,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9855,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9855,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9855,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9797,
											"end": 9855,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 9797,
											"end": 9855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9888,
											"end": 9894,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9874,
											"end": 9884,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9874,
											"end": 9884,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9874,
											"end": 9894,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9874,
											"end": 9894,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9866,
											"end": 9909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 9866,
											"end": 9909,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9866,
											"end": 9909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9866,
											"end": 9909,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9866,
											"end": 9909,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9866,
											"end": 9909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9866,
											"end": 9909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9866,
											"end": 9909,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9866,
											"end": 9909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9866,
											"end": 9909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9866,
											"end": 9909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9866,
											"end": 9909,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9866,
											"end": 9909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9866,
											"end": 9909,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9866,
											"end": 9909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9866,
											"end": 9909,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9866,
											"end": 9909,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9866,
											"end": 9909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9866,
											"end": 9909,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 9866,
											"end": 9909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9866,
											"end": 9909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9866,
											"end": 9909,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9866,
											"end": 9909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9866,
											"end": 9909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9866,
											"end": 9909,
											"name": "PUSH",
											"source": 0,
											"value": "6E6F7420656E6F75676800000000000000000000000000000000000000000000"
										},
										{
											"begin": 9866,
											"end": 9909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9866,
											"end": 9909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9866,
											"end": 9909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9866,
											"end": 9909,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9866,
											"end": 9909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9866,
											"end": 9909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9866,
											"end": 9909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9866,
											"end": 9909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9866,
											"end": 9909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9866,
											"end": 9909,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9866,
											"end": 9909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9866,
											"end": 9909,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9866,
											"end": 9909,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9866,
											"end": 9909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9866,
											"end": 9909,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9866,
											"end": 9909,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 9866,
											"end": 9909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9924,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9922,
											"end": 9924,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9922,
											"end": 9924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9924,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9924,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9922,
											"end": 9924,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9924,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9924,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9922,
											"end": 9924,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9933,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9922,
											"end": 9933,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9933,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 9934,
											"end": 9952,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9934,
											"end": 9952,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9934,
											"end": 9952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9934,
											"end": 9952,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9934,
											"end": 9952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9934,
											"end": 9952,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9934,
											"end": 9952,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9934,
											"end": 9952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9934,
											"end": 9952,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9934,
											"end": 9952,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9934,
											"end": 9952,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9954,
											"end": 9960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9922,
											"end": 9961,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 9969,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2557,
											"end": 2601,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1938,
											"end": 1968,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1938,
											"end": 1968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 1968,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1938,
											"end": 1968,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 1968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1938,
											"end": 1968,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5890,
											"end": 6010,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 5890,
											"end": 6010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5932,
											"end": 5939,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5959,
											"end": 6002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 5991,
											"end": 6001,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5991,
											"end": 6001,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5961,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5959,
											"end": 5961,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5959,
											"end": 5961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5961,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5961,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5959,
											"end": 5961,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5961,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5961,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5959,
											"end": 5961,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5971,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5959,
											"end": 5971,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5971,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 5980,
											"end": 5984,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 5990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 5959,
											"end": 5990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 6002,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 6002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 6002,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5959,
											"end": 6002,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5959,
											"end": 6002,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5959,
											"end": 6002,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 5959,
											"end": 6002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5952,
											"end": 6002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5952,
											"end": 6002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5890,
											"end": 6010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5890,
											"end": 6010,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4118,
											"end": 5882,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4118,
											"end": 5882,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4192,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4195,
											"end": 4203,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4204,
											"end": 4214,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4195,
											"end": 4215,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4244,
											"end": 4245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4234,
											"end": 4241,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4245,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 4226,
											"end": 4269,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4269,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4226,
											"end": 4269,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4269,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4226,
											"end": 4269,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4269,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4269,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4269,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4269,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4226,
											"end": 4269,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4269,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4269,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4269,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4269,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4269,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4269,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 4226,
											"end": 4269,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4269,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4269,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4226,
											"end": 4269,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4269,
											"name": "PUSH",
											"source": 0,
											"value": "4E6F7468696E6720746F20776974686472617700000000000000000000000000"
										},
										{
											"begin": 4226,
											"end": 4269,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4269,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4269,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4269,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4226,
											"end": 4269,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4269,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4269,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4269,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4269,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4226,
											"end": 4269,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4269,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4269,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4269,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4269,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 4226,
											"end": 4269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4299,
											"end": 4303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4299,
											"end": 4310,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4299,
											"end": 4310,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4299,
											"end": 4310,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4288,
											"end": 4295,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4288,
											"end": 4310,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4288,
											"end": 4310,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4346,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 4280,
											"end": 4346,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4346,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4280,
											"end": 4346,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4346,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4280,
											"end": 4346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4346,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4346,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4280,
											"end": 4346,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4346,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4280,
											"end": 4346,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4346,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4346,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4346,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4346,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4346,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4280,
											"end": 4346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4346,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4346,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4280,
											"end": 4346,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4346,
											"name": "PUSH",
											"source": 0,
											"value": "576974686472617720616D6F756E7420657863656564732062616C616E636500"
										},
										{
											"begin": 4280,
											"end": 4346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4346,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4346,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4280,
											"end": 4346,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4346,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4346,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4280,
											"end": 4346,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4346,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4346,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4346,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4346,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 4280,
											"end": 4346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4359,
											"end": 4371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 4359,
											"end": 4369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4359,
											"end": 4371,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4359,
											"end": 4371,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 4359,
											"end": 4371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4414,
											"end": 4437,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4441,
											"end": 4515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 4502,
											"end": 4506,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4502,
											"end": 4514,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4502,
											"end": 4514,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4502,
											"end": 4514,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4441,
											"end": 4497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 4481,
											"end": 4485,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4481,
											"end": 4496,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4481,
											"end": 4496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4481,
											"end": 4496,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4441,
											"end": 4476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 4452,
											"end": 4456,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4452,
											"end": 4463,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4452,
											"end": 4463,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4452,
											"end": 4463,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4475,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4464,
											"end": 4475,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4441,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 4441,
											"end": 4476,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4441,
											"end": 4476,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 4441,
											"end": 4476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4441,
											"end": 4480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4441,
											"end": 4480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4441,
											"end": 4497,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4441,
											"end": 4497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4441,
											"end": 4497,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4441,
											"end": 4497,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4441,
											"end": 4497,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4441,
											"end": 4497,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 4441,
											"end": 4497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4441,
											"end": 4501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 4441,
											"end": 4501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4441,
											"end": 4515,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4441,
											"end": 4515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4441,
											"end": 4515,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4441,
											"end": 4515,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4441,
											"end": 4515,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4441,
											"end": 4515,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 4441,
											"end": 4515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4414,
											"end": 4515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4414,
											"end": 4515,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4574,
											"end": 4596,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4599,
											"end": 4644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 4632,
											"end": 4636,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4632,
											"end": 4643,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4632,
											"end": 4643,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4632,
											"end": 4643,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4599,
											"end": 4627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 4619,
											"end": 4626,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4599,
											"end": 4614,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4599,
											"end": 4618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 4599,
											"end": 4618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4599,
											"end": 4627,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4599,
											"end": 4627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4599,
											"end": 4627,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4599,
											"end": 4627,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4599,
											"end": 4627,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4599,
											"end": 4627,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 4599,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4599,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 4599,
											"end": 4631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4599,
											"end": 4644,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4599,
											"end": 4644,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4599,
											"end": 4644,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4599,
											"end": 4644,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4599,
											"end": 4644,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4599,
											"end": 4644,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 4599,
											"end": 4644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4574,
											"end": 4644,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4574,
											"end": 4644,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4657,
											"end": 4670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4673,
											"end": 4714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 4702,
											"end": 4706,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4702,
											"end": 4713,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4702,
											"end": 4713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4702,
											"end": 4713,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4673,
											"end": 4697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 4689,
											"end": 4696,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4673,
											"end": 4677,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4673,
											"end": 4684,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4673,
											"end": 4684,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4673,
											"end": 4684,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4673,
											"end": 4688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 4673,
											"end": 4688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4673,
											"end": 4697,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4673,
											"end": 4697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4673,
											"end": 4697,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4673,
											"end": 4697,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4673,
											"end": 4697,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4673,
											"end": 4697,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 4673,
											"end": 4697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4673,
											"end": 4701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 4673,
											"end": 4701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4673,
											"end": 4714,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4673,
											"end": 4714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4673,
											"end": 4714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4673,
											"end": 4714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4673,
											"end": 4714,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4673,
											"end": 4714,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 4673,
											"end": 4714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4657,
											"end": 4714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4657,
											"end": 4714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4739,
											"end": 4763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 4755,
											"end": 4762,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4739,
											"end": 4743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4739,
											"end": 4750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4739,
											"end": 4750,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4739,
											"end": 4750,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4739,
											"end": 4754,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4739,
											"end": 4754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4739,
											"end": 4763,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4739,
											"end": 4763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4739,
											"end": 4763,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4739,
											"end": 4763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4739,
											"end": 4763,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4739,
											"end": 4763,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 4739,
											"end": 4763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4729,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4736,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4725,
											"end": 4736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4763,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4788,
											"end": 4812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 4804,
											"end": 4811,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4788,
											"end": 4799,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4788,
											"end": 4799,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4788,
											"end": 4803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4788,
											"end": 4803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4788,
											"end": 4812,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4788,
											"end": 4812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4788,
											"end": 4812,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4788,
											"end": 4812,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4788,
											"end": 4812,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4788,
											"end": 4812,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 4788,
											"end": 4812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4774,
											"end": 4785,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4774,
											"end": 4812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4774,
											"end": 4812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4774,
											"end": 4812,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4774,
											"end": 4812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4862,
											"end": 4876,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4847,
											"end": 4858,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4847,
											"end": 4858,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4847,
											"end": 4876,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4847,
											"end": 4876,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 4825,
											"end": 4935,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4935,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4825,
											"end": 4935,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4935,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4825,
											"end": 4935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4935,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4935,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4825,
											"end": 4935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4935,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4935,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4935,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4825,
											"end": 4935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4935,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4935,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4935,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4935,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4935,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4825,
											"end": 4935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4935,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4935,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4825,
											"end": 4935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4935,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4935,
											"name": "PUSH",
											"source": 0,
											"value": "576974686472617720616D6F756E7420657863656564732062616C616E636500"
										},
										{
											"begin": 4825,
											"end": 4935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4935,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4935,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4935,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4825,
											"end": 4935,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4935,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4935,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4935,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4935,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4825,
											"end": 4935,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4935,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4935,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4935,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4935,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4935,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 4825,
											"end": 4935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 4993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 4978,
											"end": 4992,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 4973,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4962,
											"end": 4973,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 4977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4962,
											"end": 4977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 4993,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 4993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 4993,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4962,
											"end": 4993,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4962,
											"end": 4993,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4962,
											"end": 4993,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 4962,
											"end": 4993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 4959,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4948,
											"end": 4993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 4993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 4993,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4948,
											"end": 4993,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5053,
											"end": 5088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 5073,
											"end": 5087,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5053,
											"end": 5068,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5053,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 5053,
											"end": 5072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5053,
											"end": 5088,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5053,
											"end": 5088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5053,
											"end": 5088,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5053,
											"end": 5088,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5053,
											"end": 5088,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5053,
											"end": 5088,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 5053,
											"end": 5088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5042,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5050,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5038,
											"end": 5050,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5088,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5088,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5038,
											"end": 5088,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5145,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 5161,
											"end": 5166,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5145,
											"end": 5149,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5145,
											"end": 5156,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5145,
											"end": 5156,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5145,
											"end": 5156,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5145,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 5145,
											"end": 5160,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5145,
											"end": 5167,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5145,
											"end": 5167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5145,
											"end": 5167,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5145,
											"end": 5167,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5145,
											"end": 5167,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5145,
											"end": 5167,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 5145,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5135,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5142,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5131,
											"end": 5142,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5167,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5131,
											"end": 5167,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 5223,
											"end": 5240,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 5223,
											"end": 5240,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5200,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5218,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5196,
											"end": 5218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5218,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 5196,
											"end": 5222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5241,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5241,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5196,
											"end": 5241,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5241,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5196,
											"end": 5241,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 5196,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5184,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 5184,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 5184,
											"end": 5193,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5184,
											"end": 5193,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 5184,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5184,
											"end": 5241,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5180,
											"end": 5393,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5180,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 5180,
											"end": 5393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5258,
											"end": 5269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5272,
											"end": 5297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 5291,
											"end": 5296,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 5272,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 5282,
											"end": 5285,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5272,
											"end": 5277,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5272,
											"end": 5281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 5272,
											"end": 5281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5272,
											"end": 5286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5272,
											"end": 5286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5272,
											"end": 5286,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5272,
											"end": 5286,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5272,
											"end": 5286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5272,
											"end": 5286,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 5272,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5272,
											"end": 5290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 5272,
											"end": 5290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5272,
											"end": 5297,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5272,
											"end": 5297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5272,
											"end": 5297,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5272,
											"end": 5297,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5272,
											"end": 5297,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5272,
											"end": 5297,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 5272,
											"end": 5297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5258,
											"end": 5297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5258,
											"end": 5297,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 5330,
											"end": 5333,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5325,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 5320,
											"end": 5329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5334,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5334,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5320,
											"end": 5334,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5334,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5320,
											"end": 5334,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 5320,
											"end": 5334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5312,
											"end": 5334,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5312,
											"end": 5334,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5362,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 5377,
											"end": 5380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5362,
											"end": 5372,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5362,
											"end": 5372,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5362,
											"end": 5376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 5362,
											"end": 5376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5362,
											"end": 5381,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5362,
											"end": 5381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5362,
											"end": 5381,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5362,
											"end": 5381,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5362,
											"end": 5381,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5362,
											"end": 5381,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 5362,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5349,
											"end": 5359,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5349,
											"end": 5381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5349,
											"end": 5381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5349,
											"end": 5381,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5349,
											"end": 5381,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5180,
											"end": 5393,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5180,
											"end": 5393,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 5180,
											"end": 5393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5407,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5405,
											"end": 5407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5405,
											"end": 5407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5407,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5407,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5405,
											"end": 5407,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5407,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5407,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5405,
											"end": 5407,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5416,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5405,
											"end": 5416,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5416,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 5425,
											"end": 5435,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5438,
											"end": 5443,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5460,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5455,
											"end": 5460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5460,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5460,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5455,
											"end": 5460,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5460,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5460,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5455,
											"end": 5460,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5469,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5455,
											"end": 5469,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5469,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 5470,
											"end": 5480,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5482,
											"end": 5496,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5455,
											"end": 5497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5528,
											"end": 5529,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5514,
											"end": 5518,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5514,
											"end": 5525,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5514,
											"end": 5525,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5514,
											"end": 5525,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5514,
											"end": 5529,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5510,
											"end": 5757,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5510,
											"end": 5757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 5510,
											"end": 5757,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5564,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 5575,
											"end": 5579,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5575,
											"end": 5586,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5575,
											"end": 5586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5575,
											"end": 5586,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5587,
											"end": 5598,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5587,
											"end": 5598,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5564,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 5564,
											"end": 5599,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5564,
											"end": 5599,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 5564,
											"end": 5599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5546,
											"end": 5550,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5546,
											"end": 5561,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5546,
											"end": 5561,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5546,
											"end": 5599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5546,
											"end": 5599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5546,
											"end": 5599,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5546,
											"end": 5599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5635,
											"end": 5648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 5635,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5635,
											"end": 5648,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5635,
											"end": 5648,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 5635,
											"end": 5648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5614,
											"end": 5618,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5614,
											"end": 5632,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5614,
											"end": 5632,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5614,
											"end": 5648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5614,
											"end": 5648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5614,
											"end": 5648,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5614,
											"end": 5648,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5691,
											"end": 5695,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5691,
											"end": 5703,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5691,
											"end": 5703,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5691,
											"end": 5703,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5663,
											"end": 5667,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5663,
											"end": 5688,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5663,
											"end": 5688,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5663,
											"end": 5703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5663,
											"end": 5703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5663,
											"end": 5703,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5663,
											"end": 5703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5510,
											"end": 5757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 5510,
											"end": 5757,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5510,
											"end": 5757,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 5510,
											"end": 5757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5756,
											"end": 5757,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5735,
											"end": 5739,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5735,
											"end": 5753,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5735,
											"end": 5753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5735,
											"end": 5757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5735,
											"end": 5757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5735,
											"end": 5757,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5735,
											"end": 5757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5510,
											"end": 5757,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 5510,
											"end": 5757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5796,
											"end": 5811,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5774,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5793,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5770,
											"end": 5793,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5811,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5811,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5811,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5838,
											"end": 5848,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 5874,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5829,
											"end": 5874,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 5874,
											"name": "PUSH",
											"source": 0,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 5850,
											"end": 5864,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5866,
											"end": 5873,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 5874,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5829,
											"end": 5874,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 5874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 5874,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 5874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 5874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 5874,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5829,
											"end": 5874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 5874,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 5874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 5874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 5874,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5829,
											"end": 5874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 5874,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 5874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 5874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 5874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 5874,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5829,
											"end": 5874,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 5874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 5874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 5874,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 5874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5829,
											"end": 5874,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 5882,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 5882,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 5882,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 5882,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 5882,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4118,
											"end": 5882,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1901,
											"end": 1931,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1901,
											"end": 1931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1931,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1901,
											"end": 1931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1931,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7514,
											"end": 7846,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 7514,
											"end": 7846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7554,
											"end": 7561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7574,
											"end": 7592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 7611,
											"end": 7651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 7620,
											"end": 7624,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7636,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7620,
											"end": 7636,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7636,
											"name": "PUSH",
											"source": 0,
											"value": "FC3E532B"
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7639,
											"end": 7650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 7639,
											"end": 7648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 7639,
											"end": 7650,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7639,
											"end": 7650,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 7639,
											"end": 7650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7611,
											"end": 7619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 7611,
											"end": 7651,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7611,
											"end": 7651,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 7611,
											"end": 7651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7606,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7595,
											"end": 7606,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 7595,
											"end": 7610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7652,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7652,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7595,
											"end": 7652,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7595,
											"end": 7652,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7595,
											"end": 7652,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 7595,
											"end": 7652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7663,
											"end": 7684,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7687,
											"end": 7695,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 7687,
											"end": 7707,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7696,
											"end": 7706,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7687,
											"end": 7707,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7687,
											"end": 7707,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7687,
											"end": 7707,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7687,
											"end": 7707,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7687,
											"end": 7707,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7687,
											"end": 7707,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7687,
											"end": 7707,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7687,
											"end": 7707,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7687,
											"end": 7707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7687,
											"end": 7707,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7687,
											"end": 7707,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7687,
											"end": 7707,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7687,
											"end": 7707,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7687,
											"end": 7707,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7687,
											"end": 7707,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7663,
											"end": 7707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7663,
											"end": 7707,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7736,
											"end": 7737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7721,
											"end": 7725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7721,
											"end": 7732,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7721,
											"end": 7732,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7721,
											"end": 7732,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7721,
											"end": 7737,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7718,
											"end": 7747,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7718,
											"end": 7747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 7718,
											"end": 7747,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7746,
											"end": 7747,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7739,
											"end": 7747,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7739,
											"end": 7747,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7739,
											"end": 7747,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7739,
											"end": 7747,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7739,
											"end": 7747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 7739,
											"end": 7747,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7718,
											"end": 7747,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 7718,
											"end": 7747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7765,
											"end": 7838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 7825,
											"end": 7829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7825,
											"end": 7837,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 7825,
											"end": 7837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7825,
											"end": 7837,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7765,
											"end": 7820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 7804,
											"end": 7808,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7804,
											"end": 7819,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7804,
											"end": 7819,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7804,
											"end": 7819,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7765,
											"end": 7799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 7776,
											"end": 7780,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7776,
											"end": 7787,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7776,
											"end": 7787,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7776,
											"end": 7787,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 7798,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7765,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 7765,
											"end": 7799,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7765,
											"end": 7799,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 7765,
											"end": 7799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7765,
											"end": 7803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 7765,
											"end": 7803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7765,
											"end": 7820,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7765,
											"end": 7820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7765,
											"end": 7820,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7765,
											"end": 7820,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7765,
											"end": 7820,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7765,
											"end": 7820,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 7765,
											"end": 7820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7765,
											"end": 7824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 7765,
											"end": 7824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7765,
											"end": 7838,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7765,
											"end": 7838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7765,
											"end": 7838,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7765,
											"end": 7838,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7765,
											"end": 7838,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7765,
											"end": 7838,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 7765,
											"end": 7838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7758,
											"end": 7838,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7758,
											"end": 7838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7758,
											"end": 7838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7758,
											"end": 7838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7514,
											"end": 7846,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 7514,
											"end": 7846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7514,
											"end": 7846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7514,
											"end": 7846,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8170,
											"end": 8248,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 8170,
											"end": 8248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8210,
											"end": 8217,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8237,
											"end": 8240,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 8230,
											"end": 8240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8230,
											"end": 8240,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8170,
											"end": 8248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8170,
											"end": 8248,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2146,
											"end": 2181,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2146,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2181,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 2146,
											"end": 2181,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2181,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2146,
											"end": 2181,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1242,
											"end": 1275,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1242,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1275,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1242,
											"end": 1275,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1275,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1275,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1242,
											"end": 1275,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1275,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1275,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1242,
											"end": 1275,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1275,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1242,
											"end": 1275,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1865,
											"end": 1894,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1865,
											"end": 1894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1894,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1865,
											"end": 1894,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1894,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1894,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7854,
											"end": 8135,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 7854,
											"end": 8135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7898,
											"end": 7905,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7918,
											"end": 7929,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7932,
											"end": 7943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 7932,
											"end": 7941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 7932,
											"end": 7943,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7932,
											"end": 7943,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 7932,
											"end": 7943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7918,
											"end": 7943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7918,
											"end": 7943,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7965,
											"end": 7966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7958,
											"end": 7961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7958,
											"end": 7966,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 7976,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 7976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 7954,
											"end": 7976,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7975,
											"end": 7976,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7968,
											"end": 7976,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7968,
											"end": 7976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7968,
											"end": 7976,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7968,
											"end": 7976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 7968,
											"end": 7976,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7954,
											"end": 7976,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 7954,
											"end": 7976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7987,
											"end": 8005,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8008,
											"end": 8057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 8024,
											"end": 8056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 8033,
											"end": 8037,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8049,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8033,
											"end": 8049,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8049,
											"name": "PUSH",
											"source": 0,
											"value": "FC3E532B"
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8052,
											"end": 8055,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8024,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 8024,
											"end": 8056,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8024,
											"end": 8056,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 8024,
											"end": 8056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8008,
											"end": 8019,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8008,
											"end": 8019,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8008,
											"end": 8023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 8008,
											"end": 8023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8008,
											"end": 8057,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8008,
											"end": 8057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8008,
											"end": 8057,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8008,
											"end": 8057,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8008,
											"end": 8057,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8008,
											"end": 8057,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 8008,
											"end": 8057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7987,
											"end": 8057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7987,
											"end": 8057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8075,
											"end": 8127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 8115,
											"end": 8126,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8115,
											"end": 8126,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8075,
											"end": 8110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 8099,
											"end": 8109,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8075,
											"end": 8094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 8083,
											"end": 8093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 8083,
											"end": 8091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 8083,
											"end": 8093,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8083,
											"end": 8093,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 8083,
											"end": 8093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8075,
											"end": 8078,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8075,
											"end": 8082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 8075,
											"end": 8082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8075,
											"end": 8094,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8075,
											"end": 8094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8075,
											"end": 8094,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8075,
											"end": 8094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8075,
											"end": 8094,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8075,
											"end": 8094,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 8075,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8075,
											"end": 8098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 8075,
											"end": 8098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8075,
											"end": 8110,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8075,
											"end": 8110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8075,
											"end": 8110,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8075,
											"end": 8110,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8075,
											"end": 8110,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8075,
											"end": 8110,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 8075,
											"end": 8110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8075,
											"end": 8114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 8075,
											"end": 8114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8075,
											"end": 8127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8075,
											"end": 8127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8075,
											"end": 8127,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8075,
											"end": 8127,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8075,
											"end": 8127,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8075,
											"end": 8127,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 8075,
											"end": 8127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8068,
											"end": 8127,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8068,
											"end": 8127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8068,
											"end": 8127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8068,
											"end": 8127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7854,
											"end": 8135,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 7854,
											"end": 8135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7854,
											"end": 8135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7854,
											"end": 8135,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8256,
											"end": 8366,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 8256,
											"end": 8366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8301,
											"end": 8308,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8328,
											"end": 8333,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8333,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8328,
											"end": 8333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8333,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8333,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8328,
											"end": 8333,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8333,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8333,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8328,
											"end": 8333,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8343,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8328,
											"end": 8343,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8343,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 8352,
											"end": 8356,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8328,
											"end": 8358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8321,
											"end": 8358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8321,
											"end": 8358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8256,
											"end": 8366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8256,
											"end": 8366,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9977,
											"end": 10259,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 9977,
											"end": 10259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10050,
											"end": 10055,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10050,
											"end": 10055,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10050,
											"end": 10055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10050,
											"end": 10055,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10050,
											"end": 10055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10050,
											"end": 10055,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10050,
											"end": 10055,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 10050,
											"end": 10055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10050,
											"end": 10055,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10050,
											"end": 10055,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10050,
											"end": 10055,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10055,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10036,
											"end": 10055,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10046,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10055,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10036,
											"end": 10055,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10036,
											"end": 10055,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10032,
											"end": 10252,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10032,
											"end": 10252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 10032,
											"end": 10252,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10076,
											"end": 10080,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10072,
											"end": 10206,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10072,
											"end": 10206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 10072,
											"end": 10206,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10120,
											"end": 10129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 10120,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 10120,
											"end": 10129,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10120,
											"end": 10129,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 10120,
											"end": 10129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10101,
											"end": 10117,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 10101,
											"end": 10129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10101,
											"end": 10129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10101,
											"end": 10129,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10101,
											"end": 10129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10072,
											"end": 10206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 10072,
											"end": 10206,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10072,
											"end": 10206,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 10072,
											"end": 10206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10189,
											"end": 10190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10170,
											"end": 10186,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 10170,
											"end": 10190,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10170,
											"end": 10190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10170,
											"end": 10190,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10170,
											"end": 10190,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10072,
											"end": 10206,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 10072,
											"end": 10206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10236,
											"end": 10240,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10220,
											"end": 10233,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 10220,
											"end": 10233,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10220,
											"end": 10240,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10220,
											"end": 10240,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 10220,
											"end": 10240,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10220,
											"end": 10240,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10220,
											"end": 10240,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10220,
											"end": 10240,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 10220,
											"end": 10240,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10220,
											"end": 10240,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10220,
											"end": 10240,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10220,
											"end": 10240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10220,
											"end": 10240,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10220,
											"end": 10240,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10220,
											"end": 10240,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10220,
											"end": 10240,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10220,
											"end": 10240,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10220,
											"end": 10240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10220,
											"end": 10240,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10220,
											"end": 10240,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10032,
											"end": 10252,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 10032,
											"end": 10252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 10259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9977,
											"end": 10259,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9432,
											"end": 9693,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 9432,
											"end": 9693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9515,
											"end": 9520,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9515,
											"end": 9520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9515,
											"end": 9520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9515,
											"end": 9520,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9515,
											"end": 9520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9515,
											"end": 9520,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9515,
											"end": 9520,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9515,
											"end": 9520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9515,
											"end": 9520,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9515,
											"end": 9520,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9515,
											"end": 9520,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9501,
											"end": 9520,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9501,
											"end": 9520,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9501,
											"end": 9511,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9501,
											"end": 9520,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9501,
											"end": 9520,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9501,
											"end": 9520,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9493,
											"end": 9521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 9493,
											"end": 9521,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9493,
											"end": 9521,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9493,
											"end": 9521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9493,
											"end": 9521,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9493,
											"end": 9521,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 9493,
											"end": 9521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9562,
											"end": 9563,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9564,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9564,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9540,
											"end": 9550,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9540,
											"end": 9564,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9564,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9540,
											"end": 9564,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9540,
											"end": 9564,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9532,
											"end": 9577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 9532,
											"end": 9577,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9532,
											"end": 9577,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9532,
											"end": 9577,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9532,
											"end": 9577,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9532,
											"end": 9577,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9532,
											"end": 9577,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9532,
											"end": 9577,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9532,
											"end": 9577,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9532,
											"end": 9577,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9532,
											"end": 9577,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9532,
											"end": 9577,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9532,
											"end": 9577,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9532,
											"end": 9577,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9532,
											"end": 9577,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9532,
											"end": 9577,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9532,
											"end": 9577,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9532,
											"end": 9577,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9532,
											"end": 9577,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9532,
											"end": 9577,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9532,
											"end": 9577,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9532,
											"end": 9577,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9532,
											"end": 9577,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9532,
											"end": 9577,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9532,
											"end": 9577,
											"name": "PUSH",
											"source": 0,
											"value": "73657420746F2030000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9532,
											"end": 9577,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9532,
											"end": 9577,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9532,
											"end": 9577,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9532,
											"end": 9577,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9532,
											"end": 9577,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9532,
											"end": 9577,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9532,
											"end": 9577,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9532,
											"end": 9577,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9532,
											"end": 9577,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9532,
											"end": 9577,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9532,
											"end": 9577,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9532,
											"end": 9577,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9532,
											"end": 9577,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9532,
											"end": 9577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9532,
											"end": 9577,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9532,
											"end": 9577,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 9532,
											"end": 9577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9618,
											"end": 9624,
											"name": "PUSH",
											"source": 0,
											"value": "DEAD"
										},
										{
											"begin": 9596,
											"end": 9625,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9596,
											"end": 9625,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9596,
											"end": 9606,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9596,
											"end": 9625,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9596,
											"end": 9625,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9596,
											"end": 9625,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9596,
											"end": 9625,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9588,
											"end": 9643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 9588,
											"end": 9643,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9588,
											"end": 9643,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9588,
											"end": 9643,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9588,
											"end": 9643,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9588,
											"end": 9643,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9588,
											"end": 9643,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9588,
											"end": 9643,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9588,
											"end": 9643,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9588,
											"end": 9643,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9588,
											"end": 9643,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9588,
											"end": 9643,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9588,
											"end": 9643,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9588,
											"end": 9643,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9588,
											"end": 9643,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9588,
											"end": 9643,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9588,
											"end": 9643,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9588,
											"end": 9643,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9588,
											"end": 9643,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 9588,
											"end": 9643,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9588,
											"end": 9643,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9588,
											"end": 9643,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9588,
											"end": 9643,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9588,
											"end": 9643,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9588,
											"end": 9643,
											"name": "PUSH",
											"source": 0,
											"value": "73657420746F2030786465616400000000000000000000000000000000000000"
										},
										{
											"begin": 9588,
											"end": 9643,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9588,
											"end": 9643,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9588,
											"end": 9643,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9588,
											"end": 9643,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9588,
											"end": 9643,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9588,
											"end": 9643,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9588,
											"end": 9643,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9588,
											"end": 9643,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9588,
											"end": 9643,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9588,
											"end": 9643,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9588,
											"end": 9643,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9588,
											"end": 9643,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9588,
											"end": 9643,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9588,
											"end": 9643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9588,
											"end": 9643,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9588,
											"end": 9643,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 9588,
											"end": 9643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9675,
											"end": 9685,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9654,
											"end": 9672,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9654,
											"end": 9672,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9654,
											"end": 9685,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9654,
											"end": 9685,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9654,
											"end": 9685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9654,
											"end": 9685,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9654,
											"end": 9685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9654,
											"end": 9685,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9654,
											"end": 9685,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9654,
											"end": 9685,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9654,
											"end": 9685,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9654,
											"end": 9685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9654,
											"end": 9685,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9654,
											"end": 9685,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9654,
											"end": 9685,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9654,
											"end": 9685,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9654,
											"end": 9685,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 9654,
											"end": 9685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9654,
											"end": 9685,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9654,
											"end": 9685,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9432,
											"end": 9693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9432,
											"end": 9693,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1215,
											"end": 1235,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1215,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1235,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1215,
											"end": 1235,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1235,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1235,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1215,
											"end": 1235,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1235,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1235,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1215,
											"end": 1235,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1215,
											"end": 1235,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7067,
											"end": 7506,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 7067,
											"end": 7506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7110,
											"end": 7117,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7149,
											"end": 7150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7134,
											"end": 7145,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7134,
											"end": 7145,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7134,
											"end": 7150,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7130,
											"end": 7174,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7130,
											"end": 7174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 7130,
											"end": 7174,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7173,
											"end": 7174,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7166,
											"end": 7174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7166,
											"end": 7174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 7166,
											"end": 7174,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7130,
											"end": 7174,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 7130,
											"end": 7174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7185,
											"end": 7206,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7209,
											"end": 7217,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 7209,
											"end": 7229,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7218,
											"end": 7228,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7209,
											"end": 7229,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7209,
											"end": 7229,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7209,
											"end": 7229,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7209,
											"end": 7229,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7209,
											"end": 7229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7209,
											"end": 7229,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7209,
											"end": 7229,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7209,
											"end": 7229,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7209,
											"end": 7229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7209,
											"end": 7229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7209,
											"end": 7229,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7209,
											"end": 7229,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7209,
											"end": 7229,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7209,
											"end": 7229,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7209,
											"end": 7229,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7185,
											"end": 7229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7185,
											"end": 7229,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7240,
											"end": 7258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7261,
											"end": 7318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 7277,
											"end": 7317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 7286,
											"end": 7290,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7302,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7286,
											"end": 7302,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7302,
											"name": "PUSH",
											"source": 0,
											"value": "FC3E532B"
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7304,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7305,
											"end": 7316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 7305,
											"end": 7314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 7305,
											"end": 7316,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7305,
											"end": 7316,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 7305,
											"end": 7316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7277,
											"end": 7285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 7277,
											"end": 7317,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7277,
											"end": 7317,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 7277,
											"end": 7317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7261,
											"end": 7272,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7261,
											"end": 7272,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7261,
											"end": 7276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 7261,
											"end": 7276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7261,
											"end": 7318,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7261,
											"end": 7318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7261,
											"end": 7318,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7261,
											"end": 7318,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7261,
											"end": 7318,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7261,
											"end": 7318,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 7261,
											"end": 7318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7240,
											"end": 7318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7240,
											"end": 7318,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7329,
											"end": 7340,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7343,
											"end": 7377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 7354,
											"end": 7358,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7354,
											"end": 7365,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7354,
											"end": 7365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7354,
											"end": 7365,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7366,
											"end": 7376,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7343,
											"end": 7353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 7343,
											"end": 7377,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7343,
											"end": 7377,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 7343,
											"end": 7377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7329,
											"end": 7377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7329,
											"end": 7377,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7400,
											"end": 7404,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7400,
											"end": 7415,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7400,
											"end": 7415,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7400,
											"end": 7415,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7394,
											"end": 7397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7394,
											"end": 7415,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7390,
											"end": 7498,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7390,
											"end": 7498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 7390,
											"end": 7498,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7437,
											"end": 7461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 7445,
											"end": 7449,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7445,
											"end": 7460,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7445,
											"end": 7460,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7445,
											"end": 7460,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7437,
											"end": 7440,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7437,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 7437,
											"end": 7444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7437,
											"end": 7461,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7437,
											"end": 7461,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7437,
											"end": 7461,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7437,
											"end": 7461,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7437,
											"end": 7461,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7437,
											"end": 7461,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 7437,
											"end": 7461,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7461,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7461,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7461,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7461,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7461,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 7430,
											"end": 7461,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7390,
											"end": 7498,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 7390,
											"end": 7498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7497,
											"end": 7498,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7490,
											"end": 7498,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7490,
											"end": 7498,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7490,
											"end": 7498,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7490,
											"end": 7498,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7490,
											"end": 7498,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7067,
											"end": 7506,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 7067,
											"end": 7506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7067,
											"end": 7506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7067,
											"end": 7506,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2835,
											"end": 4110,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2835,
											"end": 4110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2905,
											"end": 2906,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2895,
											"end": 2902,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 2906,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 2887,
											"end": 2929,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2929,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2887,
											"end": 2929,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2929,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2887,
											"end": 2929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2929,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2887,
											"end": 2929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2929,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2929,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2929,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2887,
											"end": 2929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2929,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2929,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2929,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2929,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2887,
											"end": 2929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2929,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2887,
											"end": 2929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2929,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2929,
											"name": "PUSH",
											"source": 0,
											"value": "4E6F7468696E6720746F206465706F7369740000000000000000000000000000"
										},
										{
											"begin": 2887,
											"end": 2929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2929,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2887,
											"end": 2929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2929,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2929,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2887,
											"end": 2929,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2929,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2929,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2929,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2929,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2929,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 2887,
											"end": 2929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2942,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 2942,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2942,
											"end": 2954,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2942,
											"end": 2954,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 2942,
											"end": 2954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 2976,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2979,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2979,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2979,
											"end": 2990,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2979,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2979,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3003,
											"end": 3024,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3027,
											"end": 3035,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 3027,
											"end": 3047,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3036,
											"end": 3046,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3027,
											"end": 3047,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3027,
											"end": 3047,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3027,
											"end": 3047,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3027,
											"end": 3047,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3027,
											"end": 3047,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3027,
											"end": 3047,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3027,
											"end": 3047,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3027,
											"end": 3047,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3027,
											"end": 3047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3027,
											"end": 3047,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3027,
											"end": 3047,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3027,
											"end": 3047,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3027,
											"end": 3047,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3027,
											"end": 3047,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3027,
											"end": 3047,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3003,
											"end": 3047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3003,
											"end": 3047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3078,
											"end": 3079,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3064,
											"end": 3068,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3064,
											"end": 3075,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3064,
											"end": 3075,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3064,
											"end": 3075,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3064,
											"end": 3079,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3060,
											"end": 3369,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3060,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 3060,
											"end": 3369,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3111,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3114,
											"end": 3203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 3173,
											"end": 3177,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3188,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3173,
											"end": 3188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3173,
											"end": 3188,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3114,
											"end": 3150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 3125,
											"end": 3129,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3125,
											"end": 3136,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3125,
											"end": 3136,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3125,
											"end": 3136,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3138,
											"end": 3149,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3138,
											"end": 3149,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3114,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 3114,
											"end": 3150,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3114,
											"end": 3150,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 3114,
											"end": 3150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3114,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 3114,
											"end": 3154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3114,
											"end": 3203,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3114,
											"end": 3203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3114,
											"end": 3203,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3114,
											"end": 3203,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3114,
											"end": 3203,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3114,
											"end": 3203,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 3114,
											"end": 3203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3096,
											"end": 3203,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3288,
											"end": 3313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 3305,
											"end": 3312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3288,
											"end": 3292,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3288,
											"end": 3300,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3288,
											"end": 3300,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3288,
											"end": 3300,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3288,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3288,
											"end": 3304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3288,
											"end": 3313,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3288,
											"end": 3313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3288,
											"end": 3313,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3288,
											"end": 3313,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3288,
											"end": 3313,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3288,
											"end": 3313,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 3288,
											"end": 3313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3273,
											"end": 3277,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3273,
											"end": 3285,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3273,
											"end": 3285,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3273,
											"end": 3313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3273,
											"end": 3313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3273,
											"end": 3313,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3273,
											"end": 3313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3060,
											"end": 3369,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3060,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 3060,
											"end": 3369,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3060,
											"end": 3369,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 3060,
											"end": 3369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3368,
											"end": 3369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3353,
											"end": 3357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3353,
											"end": 3365,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3353,
											"end": 3365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3353,
											"end": 3369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3353,
											"end": 3369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3353,
											"end": 3369,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3353,
											"end": 3369,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3060,
											"end": 3369,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 3060,
											"end": 3369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3384,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3382,
											"end": 3384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3382,
											"end": 3384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3384,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3384,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3382,
											"end": 3384,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3384,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3384,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3382,
											"end": 3384,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3397,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3382,
											"end": 3397,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3397,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 3398,
											"end": 3408,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3418,
											"end": 3422,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 3425,
											"end": 3432,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3446,
											"end": 3467,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3501,
											"end": 3502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3486,
											"end": 3497,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3486,
											"end": 3497,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3486,
											"end": 3502,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3482,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 3482,
											"end": 3654,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 3566,
											"end": 3569,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3536,
											"end": 3560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 3548,
											"end": 3559,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3548,
											"end": 3559,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3536,
											"end": 3543,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3536,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 3536,
											"end": 3547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3536,
											"end": 3560,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3536,
											"end": 3560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3536,
											"end": 3560,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3536,
											"end": 3560,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3536,
											"end": 3560,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3536,
											"end": 3560,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 3536,
											"end": 3560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 3535,
											"end": 3565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3570,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3570,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3535,
											"end": 3570,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3535,
											"end": 3570,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3535,
											"end": 3570,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 3535,
											"end": 3570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3570,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3482,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 3482,
											"end": 3654,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3482,
											"end": 3654,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 3482,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3619,
											"end": 3642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 3631,
											"end": 3641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 3631,
											"end": 3639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3631,
											"end": 3641,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3631,
											"end": 3641,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 3631,
											"end": 3641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3619,
											"end": 3626,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3619,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 3619,
											"end": 3630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3619,
											"end": 3642,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3619,
											"end": 3642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3619,
											"end": 3642,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3619,
											"end": 3642,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3619,
											"end": 3642,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3619,
											"end": 3642,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 3619,
											"end": 3642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3603,
											"end": 3642,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3603,
											"end": 3642,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3482,
											"end": 3654,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 3482,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 3696,
											"end": 3709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3684,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3680,
											"end": 3691,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3691,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3680,
											"end": 3695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3710,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3710,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3680,
											"end": 3710,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3680,
											"end": 3710,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3680,
											"end": 3710,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 3680,
											"end": 3710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3666,
											"end": 3670,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3666,
											"end": 3677,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3666,
											"end": 3677,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3666,
											"end": 3710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3666,
											"end": 3710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3666,
											"end": 3710,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3666,
											"end": 3710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3735,
											"end": 3765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 3751,
											"end": 3764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3735,
											"end": 3746,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3735,
											"end": 3746,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3735,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3735,
											"end": 3750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3735,
											"end": 3765,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3735,
											"end": 3765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3735,
											"end": 3765,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3735,
											"end": 3765,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3735,
											"end": 3765,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3735,
											"end": 3765,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 3735,
											"end": 3765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3721,
											"end": 3732,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3721,
											"end": 3765,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3721,
											"end": 3765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3721,
											"end": 3765,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3721,
											"end": 3765,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3816,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3804,
											"end": 3816,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3804,
											"end": 3816,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3776,
											"end": 3780,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3776,
											"end": 3801,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3776,
											"end": 3801,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3776,
											"end": 3816,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3776,
											"end": 3816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3776,
											"end": 3816,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3776,
											"end": 3816,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3843,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 3859,
											"end": 3866,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3843,
											"end": 3847,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3843,
											"end": 3854,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3843,
											"end": 3854,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3843,
											"end": 3854,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3843,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3843,
											"end": 3858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3843,
											"end": 3867,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3843,
											"end": 3867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3843,
											"end": 3867,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3843,
											"end": 3867,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3843,
											"end": 3867,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3843,
											"end": 3867,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 3843,
											"end": 3867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3829,
											"end": 3833,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3829,
											"end": 3840,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3829,
											"end": 3840,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3829,
											"end": 3867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3829,
											"end": 3867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3829,
											"end": 3867,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3829,
											"end": 3867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 3907,
											"end": 3911,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3907,
											"end": 3918,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3907,
											"end": 3918,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3907,
											"end": 3918,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3919,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3919,
											"end": 3930,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 3896,
											"end": 3931,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3896,
											"end": 3931,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 3896,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3882,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3893,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3878,
											"end": 3893,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3931,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3878,
											"end": 3931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 3979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 3970,
											"end": 3977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3970,
											"end": 3979,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3970,
											"end": 3979,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 3970,
											"end": 3979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3944,
											"end": 3948,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3944,
											"end": 3967,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3944,
											"end": 3967,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3944,
											"end": 3979,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3944,
											"end": 3979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3944,
											"end": 3979,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3944,
											"end": 3979,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 4015,
											"end": 4022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 4015,
											"end": 4024,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4015,
											"end": 4024,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 4015,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 3994,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4012,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3990,
											"end": 4012,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4024,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4024,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4024,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4060,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4042,
											"end": 4102,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "36AF321EC8D3C75236829C5317AFFD40DDB308863A1236D2D277A4025CCCEE1E"
										},
										{
											"begin": 4062,
											"end": 4069,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4071,
											"end": 4084,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4086,
											"end": 4101,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4042,
											"end": 4102,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4102,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4102,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4042,
											"end": 4102,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4102,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4102,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4042,
											"end": 4102,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4102,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4102,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4042,
											"end": 4102,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4102,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4102,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4102,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4102,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4102,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4102,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4042,
											"end": 4102,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4102,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4102,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4042,
											"end": 4102,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 4110,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 4110,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 4110,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 4110,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 4110,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8513,
											"end": 9424,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 8513,
											"end": 9424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8566,
											"end": 8573,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8586,
											"end": 8597,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8600,
											"end": 8609,
											"name": "PUSH",
											"source": 0,
											"value": "15180"
										},
										{
											"begin": 8586,
											"end": 8609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8586,
											"end": 8609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 8635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8638,
											"end": 8647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 8638,
											"end": 8645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 8638,
											"end": 8647,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8638,
											"end": 8647,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 8638,
											"end": 8647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 8647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8620,
											"end": 8647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8658,
											"end": 8670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8673,
											"end": 8674,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8658,
											"end": 8674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8658,
											"end": 8674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8708,
											"end": 8713,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8691,
											"end": 8713,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8691,
											"end": 8713,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8691,
											"end": 8704,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 8691,
											"end": 8704,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8691,
											"end": 8704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8691,
											"end": 8704,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8691,
											"end": 8704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8691,
											"end": 8704,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8691,
											"end": 8704,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8691,
											"end": 8704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8691,
											"end": 8704,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8691,
											"end": 8704,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8691,
											"end": 8704,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8691,
											"end": 8713,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8691,
											"end": 8713,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8691,
											"end": 8713,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8687,
											"end": 8859,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8687,
											"end": 8859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 8687,
											"end": 8859,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8730,
											"end": 8745,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8748,
											"end": 8754,
											"name": "PUSH",
											"source": 0,
											"value": "1DDBC"
										},
										{
											"begin": 8730,
											"end": 8754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8730,
											"end": 8754,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8776,
											"end": 8821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 8817,
											"end": 8820,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8776,
											"end": 8812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 8801,
											"end": 8809,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 8801,
											"end": 8809,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8789,
											"end": 8791,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 8789,
											"end": 8810,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8776,
											"end": 8783,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8776,
											"end": 8787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 8776,
											"end": 8787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8776,
											"end": 8812,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8776,
											"end": 8812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8776,
											"end": 8812,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8776,
											"end": 8812,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8776,
											"end": 8812,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8776,
											"end": 8812,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 8776,
											"end": 8812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8776,
											"end": 8816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 8776,
											"end": 8816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8776,
											"end": 8821,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8776,
											"end": 8821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8776,
											"end": 8821,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8776,
											"end": 8821,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8776,
											"end": 8821,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8776,
											"end": 8821,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 8776,
											"end": 8821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8769,
											"end": 8821,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8769,
											"end": 8821,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8843,
											"end": 8847,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8836,
											"end": 8847,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8836,
											"end": 8847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8836,
											"end": 8847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8836,
											"end": 8847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8836,
											"end": 8847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8836,
											"end": 8847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8836,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 8836,
											"end": 8847,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8687,
											"end": 8859,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 8687,
											"end": 8859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8935,
											"end": 8941,
											"name": "PUSH",
											"source": 0,
											"value": "12C"
										},
										{
											"begin": 8916,
											"end": 8932,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 8916,
											"end": 8932,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8916,
											"end": 8941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8905,
											"end": 8912,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8905,
											"end": 8942,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8901,
											"end": 9395,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8901,
											"end": 9395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 8901,
											"end": 9395,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8959,
											"end": 8974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8977,
											"end": 8984,
											"name": "PUSH",
											"source": 0,
											"value": "2AB980"
										},
										{
											"begin": 8959,
											"end": 8984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8959,
											"end": 8984,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9006,
											"end": 9051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 9047,
											"end": 9050,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9006,
											"end": 9042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 9031,
											"end": 9039,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 9031,
											"end": 9039,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9019,
											"end": 9021,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 9019,
											"end": 9040,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9006,
											"end": 9013,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9006,
											"end": 9017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 9006,
											"end": 9017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9006,
											"end": 9042,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9006,
											"end": 9042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9006,
											"end": 9042,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9006,
											"end": 9042,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9006,
											"end": 9042,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9006,
											"end": 9042,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 9006,
											"end": 9042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9006,
											"end": 9046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 9006,
											"end": 9046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9006,
											"end": 9051,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9006,
											"end": 9051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9006,
											"end": 9051,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9006,
											"end": 9051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9006,
											"end": 9051,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9006,
											"end": 9051,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 9006,
											"end": 9051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8999,
											"end": 9051,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8999,
											"end": 9051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8901,
											"end": 9395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8901,
											"end": 9395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 8901,
											"end": 9395,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8901,
											"end": 9395,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 8901,
											"end": 9395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9142,
											"end": 9149,
											"name": "PUSH",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 9123,
											"end": 9139,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 9123,
											"end": 9139,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9123,
											"end": 9149,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9112,
											"end": 9119,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9112,
											"end": 9150,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9108,
											"end": 9395,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9108,
											"end": 9395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 9108,
											"end": 9395,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9167,
											"end": 9182,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9185,
											"end": 9192,
											"name": "PUSH",
											"source": 0,
											"value": "155CC0"
										},
										{
											"begin": 9167,
											"end": 9192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9167,
											"end": 9192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9214,
											"end": 9259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 9255,
											"end": 9258,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9214,
											"end": 9250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 9239,
											"end": 9247,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 9239,
											"end": 9247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9227,
											"end": 9229,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 9227,
											"end": 9248,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9214,
											"end": 9221,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9214,
											"end": 9225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 9214,
											"end": 9225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9214,
											"end": 9250,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9214,
											"end": 9250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9214,
											"end": 9250,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9214,
											"end": 9250,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9214,
											"end": 9250,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9214,
											"end": 9250,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 9214,
											"end": 9250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9214,
											"end": 9254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 9214,
											"end": 9254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9214,
											"end": 9259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9214,
											"end": 9259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9214,
											"end": 9259,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9214,
											"end": 9259,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9214,
											"end": 9259,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9214,
											"end": 9259,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 9214,
											"end": 9259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9207,
											"end": 9259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9207,
											"end": 9259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9108,
											"end": 9395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9108,
											"end": 9395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 9108,
											"end": 9395,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9108,
											"end": 9395,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 9108,
											"end": 9395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9307,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9310,
											"end": 9316,
											"name": "PUSH",
											"source": 0,
											"value": "1DDBC"
										},
										{
											"begin": 9292,
											"end": 9316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 9379,
											"end": 9382,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 9363,
											"end": 9371,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 9363,
											"end": 9371,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9351,
											"end": 9353,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 9351,
											"end": 9372,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9345,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 9338,
											"end": 9349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9374,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9374,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9338,
											"end": 9374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9374,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9338,
											"end": 9374,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 9338,
											"end": 9374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 9338,
											"end": 9378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9383,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9383,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9338,
											"end": 9383,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9338,
											"end": 9383,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9338,
											"end": 9383,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 9338,
											"end": 9383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9331,
											"end": 9383,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9331,
											"end": 9383,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9108,
											"end": 9395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9108,
											"end": 9395,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 9108,
											"end": 9395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8901,
											"end": 9395,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 8901,
											"end": 9395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9412,
											"end": 9416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9405,
											"end": 9416,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9405,
											"end": 9416,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9405,
											"end": 9416,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9405,
											"end": 9416,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9405,
											"end": 9416,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8513,
											"end": 9424,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 8513,
											"end": 9424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8513,
											"end": 9424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8513,
											"end": 9424,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1975,
											"end": 2008,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1975,
											"end": 2008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1975,
											"end": 2008,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1975,
											"end": 2008,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1975,
											"end": 2008,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1975,
											"end": 2008,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6938,
											"end": 7059,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 6938,
											"end": 7059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6989,
											"end": 6996,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7016,
											"end": 7051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 7039,
											"end": 7050,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7039,
											"end": 7050,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7020,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7032,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7016,
											"end": 7032,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7032,
											"name": "PUSH",
											"source": 0,
											"value": "FC3E532B"
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 7016,
											"end": 7038,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7051,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7051,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7016,
											"end": 7051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7016,
											"end": 7051,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7016,
											"end": 7051,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 7016,
											"end": 7051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7009,
											"end": 7051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7009,
											"end": 7051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6938,
											"end": 7059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6938,
											"end": 7059,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1828,
											"end": 1858,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1828,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 1858,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1828,
											"end": 1858,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 1858,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 1858,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8374,
											"end": 8471,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 8374,
											"end": 8471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8415,
											"end": 8422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8454,
											"end": 8462,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 8454,
											"end": 8462,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8444,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 8442,
											"end": 8463,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8435,
											"end": 8463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8435,
											"end": 8463,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8374,
											"end": 8471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8374,
											"end": 8471,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2015,
											"end": 2056,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2015,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2056,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2015,
											"end": 2056,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2056,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2015,
											"end": 2056,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6018,
											"end": 6608,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 6018,
											"end": 6608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6058,
											"end": 6073,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6076,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 6076,
											"end": 6083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 6076,
											"end": 6085,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6076,
											"end": 6085,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 6076,
											"end": 6085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6058,
											"end": 6085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6058,
											"end": 6085,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6111,
											"end": 6125,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 6111,
											"end": 6125,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6125,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6096,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 6096,
											"end": 6160,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6142,
											"end": 6149,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6142,
											"end": 6149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 6142,
											"end": 6149,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6096,
											"end": 6160,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 6096,
											"end": 6160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6170,
											"end": 6181,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6184,
											"end": 6195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 6184,
											"end": 6193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 6184,
											"end": 6195,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6184,
											"end": 6195,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 6184,
											"end": 6195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6170,
											"end": 6195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6170,
											"end": 6195,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6217,
											"end": 6218,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6210,
											"end": 6213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6210,
											"end": 6218,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 6206,
											"end": 6292,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6252,
											"end": 6259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6235,
											"end": 6249,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 6235,
											"end": 6259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6235,
											"end": 6259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6235,
											"end": 6259,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6235,
											"end": 6259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 6281,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 6281,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 6281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 6274,
											"end": 6281,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6292,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 6206,
											"end": 6292,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6304,
											"end": 6322,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6331,
											"end": 6345,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 6331,
											"end": 6345,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6325,
											"end": 6328,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 6325,
											"end": 6345,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6304,
											"end": 6345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6304,
											"end": 6345,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6356,
											"end": 6370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6373,
											"end": 6411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 6388,
											"end": 6410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 6388,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 6388,
											"end": 6410,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6388,
											"end": 6410,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 6388,
											"end": 6410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6373,
											"end": 6383,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6373,
											"end": 6387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 6373,
											"end": 6387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6373,
											"end": 6411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6373,
											"end": 6411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6373,
											"end": 6411,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6373,
											"end": 6411,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6373,
											"end": 6411,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6373,
											"end": 6411,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 6373,
											"end": 6411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6356,
											"end": 6411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6356,
											"end": 6411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6439,
											"end": 6446,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6422,
											"end": 6436,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 6422,
											"end": 6446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6422,
											"end": 6446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6422,
											"end": 6446,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6422,
											"end": 6446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6471,
											"end": 6494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 6487,
											"end": 6493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6471,
											"end": 6482,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6471,
											"end": 6482,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6471,
											"end": 6486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 6471,
											"end": 6486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6471,
											"end": 6494,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6471,
											"end": 6494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6471,
											"end": 6494,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6471,
											"end": 6494,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6471,
											"end": 6494,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6471,
											"end": 6494,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 6471,
											"end": 6494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6457,
											"end": 6468,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6457,
											"end": 6494,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6457,
											"end": 6494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6457,
											"end": 6494,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6457,
											"end": 6494,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6519,
											"end": 6556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 6535,
											"end": 6555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 6544,
											"end": 6550,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6551,
											"end": 6554,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6535,
											"end": 6543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 6535,
											"end": 6555,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6535,
											"end": 6555,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 6535,
											"end": 6555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6519,
											"end": 6530,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6519,
											"end": 6530,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6519,
											"end": 6534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 6519,
											"end": 6534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6519,
											"end": 6556,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6519,
											"end": 6556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6519,
											"end": 6556,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6519,
											"end": 6556,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6519,
											"end": 6556,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6519,
											"end": 6556,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 6519,
											"end": 6556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6505,
											"end": 6516,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6505,
											"end": 6556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6505,
											"end": 6556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6505,
											"end": 6556,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6505,
											"end": 6556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6572,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6567,
											"end": 6572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6572,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6572,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6567,
											"end": 6572,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6572,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6572,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6567,
											"end": 6572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6577,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6567,
											"end": 6577,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6577,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 6586,
											"end": 6590,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 6593,
											"end": 6599,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6018,
											"end": 6608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6018,
											"end": 6608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6018,
											"end": 6608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6018,
											"end": 6608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6018,
											"end": 6608,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 6018,
											"end": 6608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6018,
											"end": 6608,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2188,
											"end": 2221,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2188,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2188,
											"end": 2221,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 2188,
											"end": 2221,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2188,
											"end": 2221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2188,
											"end": 2221,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2188,
											"end": 2221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2188,
											"end": 2221,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2188,
											"end": 2221,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2188,
											"end": 2221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2188,
											"end": 2221,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2188,
											"end": 2221,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2188,
											"end": 2221,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2188,
											"end": 2221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2188,
											"end": 2221,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10267,
											"end": 10381,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 10267,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10332,
											"end": 10337,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10332,
											"end": 10337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10332,
											"end": 10337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10332,
											"end": 10337,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10332,
											"end": 10337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10332,
											"end": 10337,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10332,
											"end": 10337,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 10332,
											"end": 10337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10332,
											"end": 10337,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10332,
											"end": 10337,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10332,
											"end": 10337,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10318,
											"end": 10337,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10318,
											"end": 10337,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10318,
											"end": 10328,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10318,
											"end": 10337,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10318,
											"end": 10337,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10318,
											"end": 10337,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10314,
											"end": 10374,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10314,
											"end": 10374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 10314,
											"end": 10374,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10359,
											"end": 10362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10354,
											"end": 10356,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10354,
											"end": 10356,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10354,
											"end": 10362,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10354,
											"end": 10362,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 10354,
											"end": 10362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10354,
											"end": 10362,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10354,
											"end": 10362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10354,
											"end": 10362,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10354,
											"end": 10362,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10354,
											"end": 10362,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10354,
											"end": 10362,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10354,
											"end": 10362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10354,
											"end": 10362,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10354,
											"end": 10362,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10354,
											"end": 10362,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10354,
											"end": 10362,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10354,
											"end": 10362,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10354,
											"end": 10362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10354,
											"end": 10362,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10354,
											"end": 10362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10314,
											"end": 10374,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 10314,
											"end": 10374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10267,
											"end": 10381,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10267,
											"end": 10381,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6616,
											"end": 6930,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6616,
											"end": 6930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6662,
											"end": 6669,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6682,
											"end": 6697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6700,
											"end": 6709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 6700,
											"end": 6707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 6700,
											"end": 6709,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6700,
											"end": 6709,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 6700,
											"end": 6709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6682,
											"end": 6709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6682,
											"end": 6709,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6739,
											"end": 6740,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6724,
											"end": 6735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 6724,
											"end": 6733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 6724,
											"end": 6735,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6724,
											"end": 6735,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 6724,
											"end": 6735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6724,
											"end": 6740,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6720,
											"end": 6777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 6720,
											"end": 6777,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6764,
											"end": 6765,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6757,
											"end": 6765,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6757,
											"end": 6765,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6757,
											"end": 6765,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6757,
											"end": 6765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 6757,
											"end": 6765,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6720,
											"end": 6777,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 6720,
											"end": 6777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6787,
											"end": 6805,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6818,
											"end": 6832,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 6818,
											"end": 6832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6815,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6832,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6787,
											"end": 6832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6787,
											"end": 6832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6843,
											"end": 6857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6860,
											"end": 6898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 6875,
											"end": 6897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 6875,
											"end": 6895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 6875,
											"end": 6897,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6875,
											"end": 6897,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 6875,
											"end": 6897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6860,
											"end": 6870,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6860,
											"end": 6874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 6860,
											"end": 6874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6860,
											"end": 6898,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6860,
											"end": 6898,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6860,
											"end": 6898,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6860,
											"end": 6898,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6860,
											"end": 6898,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6860,
											"end": 6898,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 6860,
											"end": 6898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6843,
											"end": 6898,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6843,
											"end": 6898,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6916,
											"end": 6922,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6909,
											"end": 6922,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6909,
											"end": 6922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6909,
											"end": 6922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6909,
											"end": 6922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6909,
											"end": 6922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6616,
											"end": 6930,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 6616,
											"end": 6930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6616,
											"end": 6930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6616,
											"end": 6930,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 773,
											"end": 957,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 773,
											"end": 957,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 831,
											"end": 838,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 864,
											"end": 865,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 859,
											"end": 860,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 859,
											"end": 865,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 859,
											"end": 865,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "1E"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 911,
											"end": 920,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 927,
											"end": 928,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 923,
											"end": 924,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 923,
											"end": 928,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 911,
											"end": 928,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 911,
											"end": 928,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 948,
											"end": 949,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 941,
											"end": 949,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 941,
											"end": 949,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 941,
											"end": 949,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 773,
											"end": 957,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 773,
											"end": 957,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 773,
											"end": 957,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 773,
											"end": 957,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 773,
											"end": 957,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2425,
											"end": 2549,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2425,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2495,
											"end": 2502,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2281,
											"end": 2287,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2522,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 2533,
											"end": 2534,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2528,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2522,
											"end": 2532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2535,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2535,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2535,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2522,
											"end": 2535,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2535,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2522,
											"end": 2535,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 2522,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 2522,
											"end": 2541,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2541,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2541,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 2522,
											"end": 2541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2541,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 2541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2515,
											"end": 2541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2425,
											"end": 2549,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2425,
											"end": 2549,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2425,
											"end": 2549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2425,
											"end": 2549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2425,
											"end": 2549,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 317,
											"end": 498,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 317,
											"end": 498,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 375,
											"end": 382,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 395,
											"end": 404,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 407,
											"end": 408,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 407,
											"end": 412,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 395,
											"end": 412,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 395,
											"end": 412,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 436,
											"end": 437,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 431,
											"end": 432,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 431,
											"end": 437,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 431,
											"end": 437,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "1B"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "tag",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 489,
											"end": 490,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 482,
											"end": 490,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 482,
											"end": 490,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 482,
											"end": 490,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 317,
											"end": 498,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 317,
											"end": 498,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 317,
											"end": 498,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 317,
											"end": 498,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 317,
											"end": 498,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1208,
											"end": 1678,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 1208,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1266,
											"end": 1273,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1515,
											"end": 1516,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1510,
											"end": 1511,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1510,
											"end": 1516,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1506,
											"end": 1553,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1506,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 1506,
											"end": 1553,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1541,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1541,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 1533,
											"end": 1541,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1506,
											"end": 1553,
											"name": "tag",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 1506,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1574,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1581,
											"end": 1582,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1577,
											"end": 1578,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1577,
											"end": 1582,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1582,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1582,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1610,
											"end": 1611,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1606,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1602,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1606,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1606,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 1601,
											"end": 1606,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1606,
											"name": "INVALID",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1606,
											"name": "tag",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 1601,
											"end": 1606,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1606,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1611,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "PUSH data",
											"source": 5,
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "tag",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 1593,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1669,
											"end": 1670,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1662,
											"end": 1670,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1662,
											"end": 1670,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1662,
											"end": 1670,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1208,
											"end": 1678,
											"name": "tag",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 1208,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1208,
											"end": 1678,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1208,
											"end": 1678,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1208,
											"end": 1678,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1208,
											"end": 1678,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1208,
											"end": 1678,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2146,
											"end": 2479,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2146,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2211,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2303,
											"end": 2304,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2300,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2304,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "PUSH",
											"source": 5,
											"value": "1A"
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 2291,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 2355,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2363,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2358,
											"end": 2359,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2358,
											"end": 2363,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2358,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 2358,
											"end": 2363,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2358,
											"end": 2363,
											"name": "INVALID",
											"source": 5
										},
										{
											"begin": 2358,
											"end": 2363,
											"name": "tag",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 2358,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2358,
											"end": 2363,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 2363,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2346,
											"end": 2363,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2470,
											"end": 2471,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2463,
											"end": 2471,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2463,
											"end": 2471,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2463,
											"end": 2471,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2146,
											"end": 2479,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2146,
											"end": 2479,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2146,
											"end": 2479,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2146,
											"end": 2479,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2146,
											"end": 2479,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2294,
											"end": 2419,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2294,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2389,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 2409,
											"end": 2410,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 2281,
											"end": 2287,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2389,
											"end": 2395,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2389,
											"end": 2399,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2404,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2404,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2389,
											"end": 2404,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2404,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2389,
											"end": 2404,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 2389,
											"end": 2404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2389,
											"end": 2408,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2411,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2389,
											"end": 2411,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2389,
											"end": 2411,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2389,
											"end": 2411,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 2389,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2382,
											"end": 2411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2382,
											"end": 2411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2294,
											"end": 2419,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2294,
											"end": 2419,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2294,
											"end": 2419,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2294,
											"end": 2419,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2294,
											"end": 2419,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									],
									".data": {
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77"
									}
								}
							}
						},
						"methodIdentifiers": {
							"accPerShare()": "d2890a01",
							"deposit(uint256)": "b6b55f25",
							"getEther()": "de0ff7c5",
							"getPkBalance()": "7b27c1d1",
							"getStakingCoinPerSec()": "b8a3b366",
							"getTime()": "557ed1ba",
							"lastUpdateTime()": "c8f33c91",
							"lpBalance()": "2059f615",
							"myBenefits()": "936b6cec",
							"myValue()": "47f1aae7",
							"newContractAddress()": "6af04a57",
							"owner()": "8da5cb5b",
							"pendingCoin()": "fc3e532b",
							"setFeeAddress(address)": "8705fcd4",
							"setLp(address)": "f4c2baa9",
							"setStakingSwitch(bool)": "81ad5718",
							"sharesPrice()": "77926869",
							"stakingStartTime()": "6abfd183",
							"stakingSwitch()": "e6fa445d",
							"totalAmount()": "1a39d8ef",
							"totalLpFee()": "6d3c832f",
							"totalShares()": "3a98ef39",
							"totalStakingAmount()": "d201114a",
							"transferLpFee(uint256)": "0b26b6a8",
							"updatePool()": "e3161ddd",
							"userInfo(address)": "1959a002",
							"withdraw(uint256)": "2e1a7d4d",
							"withdrawFeePeriod()": "df10b4e6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IPokerToken\",\"name\":\"_poker\",\"type\":\"address\"},{\"internalType\":\"contract ILPToken\",\"name\":\"_lp\",\"type\":\"address\"},{\"internalType\":\"contract IBurnCoin\",\"name\":\"_burncoin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastDepositedTime\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"accPerShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEther\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPkBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakingCoinPerSec\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lpBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"myBenefits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"myValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingCoin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setFeeAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ILPToken\",\"name\":\"_lp\",\"type\":\"address\"}],\"name\":\"setLp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"flag\",\"type\":\"bool\"}],\"name\":\"setStakingSwitch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sharesPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingSwitch\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalLpFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStakingAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferLpFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastDepositedTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUserActionTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coinAtlastUserAction\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coinPerShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFeePeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"LP/LP.sol\":\"LP\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"LP/LP.sol\":{\"keccak256\":\"0x51ad02051f4740b76e8b3ff9615014f48e8c8f07b38e832fc0d8af2194550e7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54e999c82dd136087d50cc5334166c90a5137c1ac8106f403a693c450105024d\",\"dweb:/ipfs/QmUBbRN6DkHB7qsKz7gLhUcE1nUMqBtqS1cwoAFETJXEwM\"]},\"_lib/Context.sol\":{\"keccak256\":\"0x77ec8b534124690b04754bc03aaa982479b91b9f7508bed54455c161e93a02e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf08de24c3951531b87b85a75157d4b26ddcb8952452672f9da9f63c06982e9f\",\"dweb:/ipfs/QmaUzytpjpYHNTXw3Hy4cdKmNoU5PWpyMZBhorK69pk8sA\"]},\"_lib/ERC20.sol\":{\"keccak256\":\"0x2ce16e09e444519aec6a0e1f355325dfe2af844ea539ae8f8a7d53a2daf6d844\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb89e49b22ff4dd4d67fe590e95ce997d8a5a83db5ca8a246086dd4a56f01a72\",\"dweb:/ipfs/QmfZbMN1MNau96zL4xS1EtA9gVyNRWPwZCWwGVVeNG8uNF\"]},\"_lib/IERC20.sol\":{\"keccak256\":\"0x943e16fe1fdaa84c7329da3fa5aab8ce507ff7b6776a3925e97ffc0beef9692a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7727696ef766547aaa34152d06a443c5c8924fa363f47e51335d0e3d619c194\",\"dweb:/ipfs/QmRYgfYhpyjHaQjSJMG5fDdDGbQA9eXCGhuSRnwGfoSyCD\"]},\"_lib/Ownable.sol\":{\"keccak256\":\"0x9bb16a0785f0f888e4b470311e02af5bb72f0663d7be20eb7a60902e29e35406\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://014bf309648c0793be70899bc260d7094e17de223ed8eaebae9327643623cf93\",\"dweb:/ipfs/QmR4LhypLf6CVNvqxgDDAJ4E9E5h3wqV6RT8g7jERZdVLT\"]},\"_lib/SafeMath.sol\":{\"keccak256\":\"0xe1bb41b0568cdd4364bb5fcba4fd6065df59c3ea8147e040fb9c978bc3a89af5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e4192a8253ea1f04e97ac1ac3df25dc77719696b0bee70b3af1a4a56edcb5b\",\"dweb:/ipfs/QmaQ4TkRxpXxjtKKewy2oAgJXFbdqSwacBUMrNaSgZ72jt\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"_lib/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"_lib/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"_lib/Context.sol\":{\"keccak256\":\"0x77ec8b534124690b04754bc03aaa982479b91b9f7508bed54455c161e93a02e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf08de24c3951531b87b85a75157d4b26ddcb8952452672f9da9f63c06982e9f\",\"dweb:/ipfs/QmaUzytpjpYHNTXw3Hy4cdKmNoU5PWpyMZBhorK69pk8sA\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"_lib/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								},
								{
									"internalType": "uint8",
									"name": "_decimals",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "_supply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `_spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {_name} and {_symbol}, {_decimals} To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `_to` cannot be the zero address. - the caller must have a balance of at least `_amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `_from` and `_to` cannot be the zero address. - `_from` must have a balance of at least `_amount`. - the caller must have allowance for `_from`'s tokens of at least `_amount`."
							}
						},
						"stateVariables": {
							"decimals": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name": {
								"details": "Returns the name of the token."
							},
							"symbol": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"_lib/ERC20.sol\":139:7117  contract ERC20 is IERC20, Context {\r... */\n  mstore(0x40, 0x80)\n    /* \"_lib/ERC20.sol\":1552:1909  constructor(\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x80\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  dup4\n  dup3\n  add\n  swap2\n  pop\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  dup3\n  mload\n  dup7\n  0x01\n  dup3\n  mul\n  dup4\n  add\n  gt\n  0x0100000000\n  dup3\n  gt\n  or\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  dup1\n  dup4\n  mstore\n  0x20\n  dup4\n  add\n  swap3\n  pop\n  pop\n  pop\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_6:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_8\n  jumpi\n  dup1\n  dup3\n  add\n  mload\n  dup2\n  dup5\n  add\n  mstore\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  jump(tag_6)\ntag_8:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_10\n  jumpi\n  0x00\n  dup1\n  revert\ntag_10:\n  dup4\n  dup3\n  add\n  swap2\n  pop\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  0x00\n  dup1\n  revert\ntag_11:\n  dup3\n  mload\n  dup7\n  0x01\n  dup3\n  mul\n  dup4\n  add\n  gt\n  0x0100000000\n  dup3\n  gt\n  or\n  iszero\n  tag_12\n  jumpi\n  0x00\n  dup1\n  revert\ntag_12:\n  dup1\n  dup4\n  mstore\n  0x20\n  dup4\n  add\n  swap3\n  pop\n  pop\n  pop\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_13:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_15\n  jumpi\n  dup1\n  dup3\n  add\n  mload\n  dup2\n  dup5\n  add\n  mstore\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  jump(tag_13)\ntag_15:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"_lib/ERC20.sol\":1710:1715  _name */\n  dup4\n    /* \"_lib/ERC20.sol\":1703:1707  name */\n  0x03\n    /* \"_lib/ERC20.sol\":1703:1715  name = _name */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_19\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n    /* \"_lib/ERC20.sol\":1735:1742  _symbol */\n  dup3\n    /* \"_lib/ERC20.sol\":1726:1732  symbol */\n  0x04\n    /* \"_lib/ERC20.sol\":1726:1742  symbol = _symbol */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_21\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_21:\n  pop\n    /* \"_lib/ERC20.sol\":1764:1773  _decimals */\n  dup2\n    /* \"_lib/ERC20.sol\":1753:1761  decimals */\n  0x05\n  0x00\n    /* \"_lib/ERC20.sol\":1753:1773  decimals = _decimals */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"_lib/ERC20.sol\":1816:1825  _decimals */\n  dup2\n    /* \"_lib/ERC20.sol\":1808:1826  uint256(_decimals) */\n  0xff\n  and\n    /* \"_lib/ERC20.sol\":1804:1806  10 */\n  0x0a\n    /* \"_lib/ERC20.sol\":1804:1826  10**uint256(_decimals) */\n  exp\n    /* \"_lib/ERC20.sol\":1794:1801  _supply */\n  dup2\n    /* \"_lib/ERC20.sol\":1794:1826  _supply * 10**uint256(_decimals) */\n  mul\n    /* \"_lib/ERC20.sol\":1784:1826  _supply = _supply * 10**uint256(_decimals) */\n  swap1\n  pop\n    /* \"_lib/ERC20.sol\":1852:1859  _supply */\n  dup1\n    /* \"_lib/ERC20.sol\":1837:1849  _totalSupply */\n  0x02\n    /* \"_lib/ERC20.sol\":1837:1859  _totalSupply = _supply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"_lib/ERC20.sol\":1894:1901  _supply */\n  dup1\n    /* \"_lib/ERC20.sol\":1870:1879  _balances */\n  0x00\n    /* \"_lib/ERC20.sol\":1870:1891  _balances[msg.sender] */\n  dup1\n    /* \"_lib/ERC20.sol\":1880:1890  msg.sender */\n  caller\n    /* \"_lib/ERC20.sol\":1870:1891  _balances[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"_lib/ERC20.sol\":1870:1901  _balances[msg.sender] = _supply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"_lib/ERC20.sol\":1552:1909  constructor(\r... */\n  pop\n  pop\n  pop\n  pop\n    /* \"_lib/ERC20.sol\":139:7117  contract ERC20 is IERC20, Context {\r... */\n  jump(tag_22)\ntag_20:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_24\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_23)\ntag_24:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_23\n  jumpi\n  swap2\n  dup3\n  add\ntag_25:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_26\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_25)\ntag_26:\ntag_23:\n  pop\n  swap1\n  pop\n  tag_27\n  swap2\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n  pop\n  swap1\n  jump\t// out\ntag_28:\ntag_29:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_30\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_29)\ntag_30:\n  pop\n  swap1\n  jump\t// out\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"_lib/ERC20.sol\":139:7117  contract ERC20 is IERC20, Context {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x313ce567\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"_lib/ERC20.sol\":445:463  string public name */\n    tag_3:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_15:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_17\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_15)\n    tag_17:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_18\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_18:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_lib/ERC20.sol\":3099:3298  function approve(address _spender, uint256 _amount)\r... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_21\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_lib/ERC20.sol\":1974:2076  function totalSupply() external view override returns (uint256) {\r... */\n    tag_5:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_lib/ERC20.sol\":3771:4175  function transferFrom(\r... */\n    tag_6:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_26\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_lib/ERC20.sol\":1242:1263  uint8 public decimals */\n    tag_7:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_lib/ERC20.sol\":2139:2299  function balanceOf(address _owner)\r... */\n    tag_8:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_31\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_lib/ERC20.sol\":583:603  string public symbol */\n    tag_9:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_34:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_36\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_34)\n    tag_36:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_37\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_37:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_lib/ERC20.sol\":2507:2698  function transfer(address _to, uint256 _amount)\r... */\n    tag_10:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_lib/ERC20.sol\":2761:2951  function allowance(address _owner, address _spender)\r... */\n    tag_11:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_43\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"_lib/ERC20.sol\":445:463  string public name */\n    tag_14:\n      0x03\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_44\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_45\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_44)\n    tag_45:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_46:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_46\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_44:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"_lib/ERC20.sol\":3099:3298  function approve(address _spender, uint256 _amount)\r... */\n    tag_21:\n        /* \"_lib/ERC20.sol\":3205:3209  bool */\n      0x00\n        /* \"_lib/ERC20.sol\":3227:3268  _approve(_msgSender(), _spender, _amount) */\n      tag_48\n        /* \"_lib/ERC20.sol\":3236:3248  _msgSender() */\n      tag_49\n        /* \"_lib/ERC20.sol\":3236:3246  _msgSender */\n      tag_50\n        /* \"_lib/ERC20.sol\":3236:3248  _msgSender() */\n      jump\t// in\n    tag_49:\n        /* \"_lib/ERC20.sol\":3250:3258  _spender */\n      dup5\n        /* \"_lib/ERC20.sol\":3260:3267  _amount */\n      dup5\n        /* \"_lib/ERC20.sol\":3227:3235  _approve */\n      tag_51\n        /* \"_lib/ERC20.sol\":3227:3268  _approve(_msgSender(), _spender, _amount) */\n      jump\t// in\n    tag_48:\n        /* \"_lib/ERC20.sol\":3286:3290  true */\n      0x01\n        /* \"_lib/ERC20.sol\":3279:3290  return true */\n      swap1\n      pop\n        /* \"_lib/ERC20.sol\":3099:3298  function approve(address _spender, uint256 _amount)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"_lib/ERC20.sol\":1974:2076  function totalSupply() external view override returns (uint256) {\r... */\n    tag_23:\n        /* \"_lib/ERC20.sol\":2029:2036  uint256 */\n      0x00\n        /* \"_lib/ERC20.sol\":2056:2068  _totalSupply */\n      sload(0x02)\n        /* \"_lib/ERC20.sol\":2049:2068  return _totalSupply */\n      swap1\n      pop\n        /* \"_lib/ERC20.sol\":1974:2076  function totalSupply() external view override returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"_lib/ERC20.sol\":3771:4175  function transferFrom(\r... */\n    tag_26:\n        /* \"_lib/ERC20.sol\":3899:3903  bool */\n      0x00\n        /* \"_lib/ERC20.sol\":3941:3942  0 */\n      dup1\n        /* \"_lib/ERC20.sol\":3924:3943  _from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":3924:3929  _from */\n      dup5\n        /* \"_lib/ERC20.sol\":3924:3943  _from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"_lib/ERC20.sol\":3924:3964  _from != address(0) && _to != address(0) */\n      dup1\n      iszero\n      tag_54\n      jumpi\n      pop\n        /* \"_lib/ERC20.sol\":3962:3963  0 */\n      0x00\n        /* \"_lib/ERC20.sol\":3947:3964  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":3947:3950  _to */\n      dup4\n        /* \"_lib/ERC20.sol\":3947:3964  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"_lib/ERC20.sol\":3924:3964  _from != address(0) && _to != address(0) */\n    tag_54:\n        /* \"_lib/ERC20.sol\":3916:3965  require(_from != address(0) && _to != address(0)) */\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n        /* \"_lib/ERC20.sol\":3978:4104  _approve(\r... */\n      tag_56\n        /* \"_lib/ERC20.sol\":4001:4006  _from */\n      dup5\n        /* \"_lib/ERC20.sol\":4021:4033  _msgSender() */\n      tag_57\n        /* \"_lib/ERC20.sol\":4021:4031  _msgSender */\n      tag_50\n        /* \"_lib/ERC20.sol\":4021:4033  _msgSender() */\n      jump\t// in\n    tag_57:\n        /* \"_lib/ERC20.sol\":4048:4093  _allowances[_from][_msgSender()].sub(_amount) */\n      tag_58\n        /* \"_lib/ERC20.sol\":4085:4092  _amount */\n      dup6\n        /* \"_lib/ERC20.sol\":4048:4059  _allowances */\n      0x01\n        /* \"_lib/ERC20.sol\":4048:4066  _allowances[_from] */\n      0x00\n        /* \"_lib/ERC20.sol\":4060:4065  _from */\n      dup11\n        /* \"_lib/ERC20.sol\":4048:4066  _allowances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"_lib/ERC20.sol\":4048:4080  _allowances[_from][_msgSender()] */\n      0x00\n        /* \"_lib/ERC20.sol\":4067:4079  _msgSender() */\n      tag_59\n        /* \"_lib/ERC20.sol\":4067:4077  _msgSender */\n      tag_50\n        /* \"_lib/ERC20.sol\":4067:4079  _msgSender() */\n      jump\t// in\n    tag_59:\n        /* \"_lib/ERC20.sol\":4048:4080  _allowances[_from][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"_lib/ERC20.sol\":4048:4084  _allowances[_from][_msgSender()].sub */\n      tag_60\n      swap1\n        /* \"_lib/ERC20.sol\":4048:4093  _allowances[_from][_msgSender()].sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_58:\n        /* \"_lib/ERC20.sol\":3978:3986  _approve */\n      tag_51\n        /* \"_lib/ERC20.sol\":3978:4104  _approve(\r... */\n      jump\t// in\n    tag_56:\n        /* \"_lib/ERC20.sol\":4115:4145  _transfer(_from, _to, _amount) */\n      tag_61\n        /* \"_lib/ERC20.sol\":4125:4130  _from */\n      dup5\n        /* \"_lib/ERC20.sol\":4132:4135  _to */\n      dup5\n        /* \"_lib/ERC20.sol\":4137:4144  _amount */\n      dup5\n        /* \"_lib/ERC20.sol\":4115:4124  _transfer */\n      tag_62\n        /* \"_lib/ERC20.sol\":4115:4145  _transfer(_from, _to, _amount) */\n      jump\t// in\n    tag_61:\n        /* \"_lib/ERC20.sol\":4163:4167  true */\n      0x01\n        /* \"_lib/ERC20.sol\":4156:4167  return true */\n      swap1\n      pop\n        /* \"_lib/ERC20.sol\":3771:4175  function transferFrom(\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"_lib/ERC20.sol\":1242:1263  uint8 public decimals */\n    tag_28:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"_lib/ERC20.sol\":2139:2299  function balanceOf(address _owner)\r... */\n    tag_31:\n        /* \"_lib/ERC20.sol\":2242:2249  uint256 */\n      0x00\n        /* \"_lib/ERC20.sol\":2274:2283  _balances */\n      dup1\n        /* \"_lib/ERC20.sol\":2274:2291  _balances[_owner] */\n      0x00\n        /* \"_lib/ERC20.sol\":2284:2290  _owner */\n      dup4\n        /* \"_lib/ERC20.sol\":2274:2291  _balances[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"_lib/ERC20.sol\":2267:2291  return _balances[_owner] */\n      swap1\n      pop\n        /* \"_lib/ERC20.sol\":2139:2299  function balanceOf(address _owner)\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"_lib/ERC20.sol\":583:603  string public symbol */\n    tag_33:\n      0x04\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_64\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_65\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_64)\n    tag_65:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_66:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_66\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_64:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"_lib/ERC20.sol\":2507:2698  function transfer(address _to, uint256 _amount)\r... */\n    tag_40:\n        /* \"_lib/ERC20.sol\":2609:2613  bool */\n      0x00\n        /* \"_lib/ERC20.sol\":2631:2668  _transfer(_msgSender(), _to, _amount) */\n      tag_68\n        /* \"_lib/ERC20.sol\":2641:2653  _msgSender() */\n      tag_69\n        /* \"_lib/ERC20.sol\":2641:2651  _msgSender */\n      tag_50\n        /* \"_lib/ERC20.sol\":2641:2653  _msgSender() */\n      jump\t// in\n    tag_69:\n        /* \"_lib/ERC20.sol\":2655:2658  _to */\n      dup5\n        /* \"_lib/ERC20.sol\":2660:2667  _amount */\n      dup5\n        /* \"_lib/ERC20.sol\":2631:2640  _transfer */\n      tag_62\n        /* \"_lib/ERC20.sol\":2631:2668  _transfer(_msgSender(), _to, _amount) */\n      jump\t// in\n    tag_68:\n        /* \"_lib/ERC20.sol\":2686:2690  true */\n      0x01\n        /* \"_lib/ERC20.sol\":2679:2690  return true */\n      swap1\n      pop\n        /* \"_lib/ERC20.sol\":2507:2698  function transfer(address _to, uint256 _amount)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"_lib/ERC20.sol\":2761:2951  function allowance(address _owner, address _spender)\r... */\n    tag_43:\n        /* \"_lib/ERC20.sol\":2882:2889  uint256 */\n      0x00\n        /* \"_lib/ERC20.sol\":2914:2925  _allowances */\n      0x01\n        /* \"_lib/ERC20.sol\":2914:2933  _allowances[_owner] */\n      0x00\n        /* \"_lib/ERC20.sol\":2926:2932  _owner */\n      dup5\n        /* \"_lib/ERC20.sol\":2914:2933  _allowances[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"_lib/ERC20.sol\":2914:2943  _allowances[_owner][_spender] */\n      0x00\n        /* \"_lib/ERC20.sol\":2934:2942  _spender */\n      dup4\n        /* \"_lib/ERC20.sol\":2914:2943  _allowances[_owner][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"_lib/ERC20.sol\":2907:2943  return _allowances[_owner][_spender] */\n      swap1\n      pop\n        /* \"_lib/ERC20.sol\":2761:2951  function allowance(address _owner, address _spender)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"_lib/Context.sol\":605:711  function _msgSender() internal view virtual returns (address payable) {\r... */\n    tag_50:\n        /* \"_lib/Context.sol\":658:673  address payable */\n      0x00\n        /* \"_lib/Context.sol\":693:703  msg.sender */\n      caller\n        /* \"_lib/Context.sol\":686:703  return msg.sender */\n      swap1\n      pop\n        /* \"_lib/Context.sol\":605:711  function _msgSender() internal view virtual returns (address payable) {\r... */\n      swap1\n      jump\t// out\n        /* \"_lib/ERC20.sol\":5546:5885  function _approve(\r... */\n    tag_51:\n        /* \"_lib/ERC20.sol\":5695:5696  0 */\n      0x00\n        /* \"_lib/ERC20.sol\":5677:5697  _owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":5677:5683  _owner */\n      dup4\n        /* \"_lib/ERC20.sol\":5677:5697  _owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"_lib/ERC20.sol\":5669:5716  require(_owner != address(0), \"approve from 0\") */\n      tag_73\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x617070726f76652066726f6d2030000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_73:\n        /* \"_lib/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"_lib/ERC20.sol\":5735:5757  _spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":5735:5743  _spender */\n      dup3\n        /* \"_lib/ERC20.sol\":5735:5757  _spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"_lib/ERC20.sol\":5727:5774  require(_spender != address(0), \"approve to 0\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x617070726f766520746f20300000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_74:\n        /* \"_lib/ERC20.sol\":5819:5826  _amount */\n      dup1\n        /* \"_lib/ERC20.sol\":5787:5798  _allowances */\n      0x01\n        /* \"_lib/ERC20.sol\":5787:5806  _allowances[_owner] */\n      0x00\n        /* \"_lib/ERC20.sol\":5799:5805  _owner */\n      dup6\n        /* \"_lib/ERC20.sol\":5787:5806  _allowances[_owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"_lib/ERC20.sol\":5787:5816  _allowances[_owner][_spender] */\n      0x00\n        /* \"_lib/ERC20.sol\":5807:5815  _spender */\n      dup5\n        /* \"_lib/ERC20.sol\":5787:5816  _allowances[_owner][_spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"_lib/ERC20.sol\":5787:5826  _allowances[_owner][_spender] = _amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"_lib/ERC20.sol\":5859:5867  _spender */\n      dup2\n        /* \"_lib/ERC20.sol\":5842:5877  Approval(_owner, _spender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":5851:5857  _owner */\n      dup4\n        /* \"_lib/ERC20.sol\":5842:5877  Approval(_owner, _spender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"_lib/ERC20.sol\":5869:5876  _amount */\n      dup4\n        /* \"_lib/ERC20.sol\":5842:5877  Approval(_owner, _spender, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"_lib/ERC20.sol\":5546:5885  function _approve(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"_lib/SafeMath.sol\":773:957  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_60:\n        /* \"_lib/SafeMath.sol\":831:838  uint256 */\n      0x00\n        /* \"_lib/SafeMath.sol\":864:865  a */\n      dup3\n        /* \"_lib/SafeMath.sol\":859:860  b */\n      dup3\n        /* \"_lib/SafeMath.sol\":859:865  b <= a */\n      gt\n      iszero\n        /* \"_lib/SafeMath.sol\":851:900  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_76\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_76:\n        /* \"_lib/SafeMath.sol\":911:920  uint256 c */\n      0x00\n        /* \"_lib/SafeMath.sol\":927:928  b */\n      dup3\n        /* \"_lib/SafeMath.sol\":923:924  a */\n      dup5\n        /* \"_lib/SafeMath.sol\":923:928  a - b */\n      sub\n        /* \"_lib/SafeMath.sol\":911:928  uint256 c = a - b */\n      swap1\n      pop\n        /* \"_lib/SafeMath.sol\":948:949  c */\n      dup1\n        /* \"_lib/SafeMath.sol\":941:949  return c */\n      swap2\n      pop\n      pop\n        /* \"_lib/SafeMath.sol\":773:957  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"_lib/ERC20.sol\":4652:5104  function _transfer(\r... */\n    tag_62:\n        /* \"_lib/ERC20.sol\":4795:4796  0 */\n      0x00\n        /* \"_lib/ERC20.sol\":4778:4797  _from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":4778:4783  _from */\n      dup4\n        /* \"_lib/ERC20.sol\":4778:4797  _from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"_lib/ERC20.sol\":4770:4817  require(_from != address(0), \"transfer from 0\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x7472616e736665722066726f6d20300000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_78:\n        /* \"_lib/ERC20.sol\":4851:4852  0 */\n      0x00\n        /* \"_lib/ERC20.sol\":4836:4853  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":4836:4839  _to */\n      dup3\n        /* \"_lib/ERC20.sol\":4836:4853  _to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"_lib/ERC20.sol\":4828:4871  require(_to != address(0), \"transfer to 0\") */\n      tag_79\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x7472616e7366657220746f203000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_79:\n        /* \"_lib/ERC20.sol\":4905:4911  0xdead */\n      0xdead\n        /* \"_lib/ERC20.sol\":4890:4912  _to != address(0xdead) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":4890:4893  _to */\n      dup3\n        /* \"_lib/ERC20.sol\":4890:4912  _to != address(0xdead) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"_lib/ERC20.sol\":4882:4935  require(_to != address(0xdead), \"transfer to 0xdead\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x7472616e7366657220746f203078646561640000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"_lib/ERC20.sol\":4967:4996  _balances[_from].sub(_amount) */\n      tag_81\n        /* \"_lib/ERC20.sol\":4988:4995  _amount */\n      dup2\n        /* \"_lib/ERC20.sol\":4967:4976  _balances */\n      0x00\n        /* \"_lib/ERC20.sol\":4967:4983  _balances[_from] */\n      dup1\n        /* \"_lib/ERC20.sol\":4977:4982  _from */\n      dup7\n        /* \"_lib/ERC20.sol\":4967:4983  _balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"_lib/ERC20.sol\":4967:4987  _balances[_from].sub */\n      tag_60\n      swap1\n        /* \"_lib/ERC20.sol\":4967:4996  _balances[_from].sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_81:\n        /* \"_lib/ERC20.sol\":4948:4957  _balances */\n      0x00\n        /* \"_lib/ERC20.sol\":4948:4964  _balances[_from] */\n      dup1\n        /* \"_lib/ERC20.sol\":4958:4963  _from */\n      dup6\n        /* \"_lib/ERC20.sol\":4948:4964  _balances[_from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"_lib/ERC20.sol\":4948:4996  _balances[_from] = _balances[_from].sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"_lib/ERC20.sol\":5024:5051  _balances[_to].add(_amount) */\n      tag_82\n        /* \"_lib/ERC20.sol\":5043:5050  _amount */\n      dup2\n        /* \"_lib/ERC20.sol\":5024:5033  _balances */\n      0x00\n        /* \"_lib/ERC20.sol\":5024:5038  _balances[_to] */\n      dup1\n        /* \"_lib/ERC20.sol\":5034:5037  _to */\n      dup6\n        /* \"_lib/ERC20.sol\":5024:5038  _balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"_lib/ERC20.sol\":5024:5042  _balances[_to].add */\n      tag_83\n      swap1\n        /* \"_lib/ERC20.sol\":5024:5051  _balances[_to].add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_82:\n        /* \"_lib/ERC20.sol\":5007:5016  _balances */\n      0x00\n        /* \"_lib/ERC20.sol\":5007:5021  _balances[_to] */\n      dup1\n        /* \"_lib/ERC20.sol\":5017:5020  _to */\n      dup5\n        /* \"_lib/ERC20.sol\":5007:5021  _balances[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"_lib/ERC20.sol\":5007:5051  _balances[_to] = _balances[_to].add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"_lib/ERC20.sol\":5083:5086  _to */\n      dup2\n        /* \"_lib/ERC20.sol\":5067:5096  Transfer(_from, _to, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"_lib/ERC20.sol\":5076:5081  _from */\n      dup4\n        /* \"_lib/ERC20.sol\":5067:5096  Transfer(_from, _to, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"_lib/ERC20.sol\":5088:5095  _amount */\n      dup4\n        /* \"_lib/ERC20.sol\":5067:5096  Transfer(_from, _to, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"_lib/ERC20.sol\":4652:5104  function _transfer(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"_lib/SafeMath.sol\":317:498  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n    tag_83:\n        /* \"_lib/SafeMath.sol\":375:382  uint256 */\n      0x00\n        /* \"_lib/SafeMath.sol\":395:404  uint256 c */\n      dup1\n        /* \"_lib/SafeMath.sol\":411:412  b */\n      dup3\n        /* \"_lib/SafeMath.sol\":407:408  a */\n      dup5\n        /* \"_lib/SafeMath.sol\":407:412  a + b */\n      add\n        /* \"_lib/SafeMath.sol\":395:412  uint256 c = a + b */\n      swap1\n      pop\n        /* \"_lib/SafeMath.sol\":436:437  a */\n      dup4\n        /* \"_lib/SafeMath.sol\":431:432  c */\n      dup2\n        /* \"_lib/SafeMath.sol\":431:437  c >= a */\n      lt\n      iszero\n        /* \"_lib/SafeMath.sol\":423:469  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_85\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_85:\n        /* \"_lib/SafeMath.sol\":489:490  c */\n      dup1\n        /* \"_lib/SafeMath.sol\":482:490  return c */\n      swap2\n      pop\n      pop\n        /* \"_lib/SafeMath.sol\":317:498  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122003d781075401c8c4954bd0a10f8369a9b582ebb7db4d2913f03ed832ff9613ef64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620011b6380380620011b6833981810160405260808110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660018202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019080838360005b83811015620000c3578082015181840152602081019050620000a6565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011557600080fd5b838201915060208201858111156200012c57600080fd5b82518660018202830111640100000000821117156200014a57600080fd5b8083526020830192505050908051906020019080838360005b838110156200018057808201518184015260208101905062000163565b50505050905090810190601f168015620001ae5780820380516001836020036101000a031916815260200191505b5060405260200180519060200190929190805190602001909291905050508360039080519060200190620001e492919062000278565b508260049080519060200190620001fd92919062000278565b5081600560006101000a81548160ff021916908360ff1602179055508160ff16600a0a8102905080600281905550806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050506200031e565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002bb57805160ff1916838001178555620002ec565b82800160010185558215620002ec579182015b82811115620002eb578251825591602001919060010190620002ce565b5b509050620002fb9190620002ff565b5090565b5b808211156200031a57600081600090555060010162000300565b5090565b610e88806200032e6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461022157806370a082311461024257806395d89b411461029a578063a9059cbb1461031d578063dd62ed3e1461038157610093565b806306fdde0314610098578063095ea7b31461011b57806318160ddd1461017f57806323b872dd1461019d575b600080fd5b6100a06103f9565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100e05780820151818401526020810190506100c5565b50505050905090810190601f16801561010d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101676004803603604081101561013157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610497565b60405180821515815260200191505060405180910390f35b6101876104b5565b6040518082815260200191505060405180910390f35b610209600480360360608110156101b357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506104bf565b60405180821515815260200191505060405180910390f35b6102296105f0565b604051808260ff16815260200191505060405180910390f35b6102846004803603602081101561025857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610603565b6040518082815260200191505060405180910390f35b6102a261064b565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102e25780820151818401526020810190506102c7565b50505050905090810190601f16801561030f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103696004803603604081101561033357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106e9565b60405180821515815260200191505060405180910390f35b6103e36004803603604081101561039757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610707565b6040518082815260200191505060405180910390f35b60038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561048f5780601f106104645761010080835404028352916020019161048f565b820191906000526020600020905b81548152906001019060200180831161047257829003601f168201915b505050505081565b60006104ab6104a461078e565b8484610796565b6001905092915050565b6000600254905090565b60008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415801561052a5750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b61053357600080fd5b6105da8461053f61078e565b6105d585600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061058c61078e565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546109c790919063ffffffff16565b610796565b6105e5848484610a50565b600190509392505050565b600560009054906101000a900460ff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106e15780601f106106b6576101008083540402835291602001916106e1565b820191906000526020600020905b8154815290600101906020018083116106c457829003601f168201915b505050505081565b60006106fd6106f661078e565b8484610a50565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610839576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f617070726f76652066726f6d203000000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f617070726f766520746f2030000000000000000000000000000000000000000081525060200191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600082821115610a3f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610af3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f7472616e736665722066726f6d2030000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b96576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f7472616e7366657220746f20300000000000000000000000000000000000000081525060200191505060405180910390fd5b61dead73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c3a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f7472616e7366657220746f20307864656164000000000000000000000000000081525060200191505060405180910390fd5b610c8b816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546109c790919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d1e816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610dca90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600080828401905083811015610e48576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fea264697066735822122003d781075401c8c4954bd0a10f8369a9b582ebb7db4d2913f03ed832ff9613ef64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x11B6 CODESIZE SUB DUP1 PUSH3 0x11B6 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x80 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xC3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xA6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xF1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x180 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x163 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x1AE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP4 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1E4 SWAP3 SWAP2 SWAP1 PUSH3 0x278 JUMP JUMPDEST POP DUP3 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1FD SWAP3 SWAP2 SWAP1 PUSH3 0x278 JUMP JUMPDEST POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0xFF AND PUSH1 0xA EXP DUP2 MUL SWAP1 POP DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP POP PUSH3 0x31E JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x2BB JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2EC JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2EC JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2EB JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2CE JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x2FB SWAP2 SWAP1 PUSH3 0x2FF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x31A JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x300 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0xE88 DUP1 PUSH3 0x32E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x381 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x10D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x167 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x497 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x229 PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x284 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x603 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH2 0x64B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2C7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x30F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x369 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x707 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x48F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x464 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x48F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x472 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AB PUSH2 0x4A4 PUSH2 0x78E JUMP JUMPDEST DUP5 DUP5 PUSH2 0x796 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x52A JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x533 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5DA DUP5 PUSH2 0x53F PUSH2 0x78E JUMP JUMPDEST PUSH2 0x5D5 DUP6 PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x58C PUSH2 0x78E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x9C7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x796 JUMP JUMPDEST PUSH2 0x5E5 DUP5 DUP5 DUP5 PUSH2 0xA50 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x6E1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6B6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6E1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6C4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FD PUSH2 0x6F6 PUSH2 0x78E JUMP JUMPDEST DUP5 DUP5 PUSH2 0xA50 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x839 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x617070726F76652066726F6D2030000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x617070726F766520746F20300000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xA3F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAF3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E736665722066726F6D20300000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB96 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E7366657220746F203000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDEAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC3A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E7366657220746F203078646561640000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC8B DUP2 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x9C7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xD1E DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xDCA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xE48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB 0xD7 DUP2 SMOD SLOAD ADD 0xC8 0xC4 SWAP6 0x4B 0xD0 LOG1 0xF DUP4 PUSH10 0xA9B582EBB7DB4D2913F0 RETURNDATACOPY 0xD8 ORIGIN SELFDESTRUCT SWAP7 SGT 0xEF PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "139:6978:2:-:0;;;1552:357;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1710:5;1703:4;:12;;;;;;;;;;;;:::i;:::-;;1735:7;1726:6;:16;;;;;;;;;;;;:::i;:::-;;1764:9;1753:8;;:20;;;;;;;;;;;;;;;;;;1816:9;1808:18;;1804:2;:22;1794:7;:32;1784:42;;1852:7;1837:12;:22;;;;1894:7;1870:9;:21;1880:10;1870:21;;;;;;;;;;;;;;;:31;;;;1552:357;;;;139:6978;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461022157806370a082311461024257806395d89b411461029a578063a9059cbb1461031d578063dd62ed3e1461038157610093565b806306fdde0314610098578063095ea7b31461011b57806318160ddd1461017f57806323b872dd1461019d575b600080fd5b6100a06103f9565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100e05780820151818401526020810190506100c5565b50505050905090810190601f16801561010d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101676004803603604081101561013157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610497565b60405180821515815260200191505060405180910390f35b6101876104b5565b6040518082815260200191505060405180910390f35b610209600480360360608110156101b357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506104bf565b60405180821515815260200191505060405180910390f35b6102296105f0565b604051808260ff16815260200191505060405180910390f35b6102846004803603602081101561025857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610603565b6040518082815260200191505060405180910390f35b6102a261064b565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102e25780820151818401526020810190506102c7565b50505050905090810190601f16801561030f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103696004803603604081101561033357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106e9565b60405180821515815260200191505060405180910390f35b6103e36004803603604081101561039757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610707565b6040518082815260200191505060405180910390f35b60038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561048f5780601f106104645761010080835404028352916020019161048f565b820191906000526020600020905b81548152906001019060200180831161047257829003601f168201915b505050505081565b60006104ab6104a461078e565b8484610796565b6001905092915050565b6000600254905090565b60008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415801561052a5750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b61053357600080fd5b6105da8461053f61078e565b6105d585600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061058c61078e565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546109c790919063ffffffff16565b610796565b6105e5848484610a50565b600190509392505050565b600560009054906101000a900460ff1681565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106e15780601f106106b6576101008083540402835291602001916106e1565b820191906000526020600020905b8154815290600101906020018083116106c457829003601f168201915b505050505081565b60006106fd6106f661078e565b8484610a50565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610839576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f617070726f76652066726f6d203000000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f617070726f766520746f2030000000000000000000000000000000000000000081525060200191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600082821115610a3f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b600082840390508091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610af3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f7472616e736665722066726f6d2030000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b96576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f7472616e7366657220746f20300000000000000000000000000000000000000081525060200191505060405180910390fd5b61dead73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c3a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f7472616e7366657220746f20307864656164000000000000000000000000000081525060200191505060405180910390fd5b610c8b816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546109c790919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d1e816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610dca90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600080828401905083811015610e48576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fea264697066735822122003d781075401c8c4954bd0a10f8369a9b582ebb7db4d2913f03ed832ff9613ef64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x381 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x10D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x167 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x497 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH2 0x4B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x229 PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x284 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x603 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH2 0x64B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2C7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x30F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x369 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x707 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x48F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x464 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x48F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x472 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AB PUSH2 0x4A4 PUSH2 0x78E JUMP JUMPDEST DUP5 DUP5 PUSH2 0x796 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x52A JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x533 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5DA DUP5 PUSH2 0x53F PUSH2 0x78E JUMP JUMPDEST PUSH2 0x5D5 DUP6 PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x58C PUSH2 0x78E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x9C7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x796 JUMP JUMPDEST PUSH2 0x5E5 DUP5 DUP5 DUP5 PUSH2 0xA50 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x6E1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6B6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6E1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6C4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FD PUSH2 0x6F6 PUSH2 0x78E JUMP JUMPDEST DUP5 DUP5 PUSH2 0xA50 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x839 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x617070726F76652066726F6D2030000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x617070726F766520746F20300000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0xA3F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAF3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E736665722066726F6D20300000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB96 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E7366657220746F203000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDEAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC3A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7472616E7366657220746F203078646561640000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC8B DUP2 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x9C7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xD1E DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xDCA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xE48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB 0xD7 DUP2 SMOD SLOAD ADD 0xC8 0xC4 SWAP6 0x4B 0xD0 LOG1 0xF DUP4 PUSH10 0xA9B582EBB7DB4D2913F0 RETURNDATACOPY 0xD8 ORIGIN SELFDESTRUCT SWAP7 SGT 0xEF PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "139:6978:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;445:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3099:199;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1974:102;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3771:404;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1242:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2139:160;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;583:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2507:191;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2761:190;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;445:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3099:199::-;3205:4;3227:41;3236:12;:10;:12::i;:::-;3250:8;3260:7;3227:8;:41::i;:::-;3286:4;3279:11;;3099:199;;;;:::o;1974:102::-;2029:7;2056:12;;2049:19;;1974:102;:::o;3771:404::-;3899:4;3941:1;3924:19;;:5;:19;;;;:40;;;;;3962:1;3947:17;;:3;:17;;;;3924:40;3916:49;;;;;;3978:126;4001:5;4021:12;:10;:12::i;:::-;4048:45;4085:7;4048:11;:18;4060:5;4048:18;;;;;;;;;;;;;;;:32;4067:12;:10;:12::i;:::-;4048:32;;;;;;;;;;;;;;;;:36;;:45;;;;:::i;:::-;3978:8;:126::i;:::-;4115:30;4125:5;4132:3;4137:7;4115:9;:30::i;:::-;4163:4;4156:11;;3771:404;;;;;:::o;1242:21::-;;;;;;;;;;;;;:::o;2139:160::-;2242:7;2274:9;:17;2284:6;2274:17;;;;;;;;;;;;;;;;2267:24;;2139:160;;;:::o;583:20::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2507:191::-;2609:4;2631:37;2641:12;:10;:12::i;:::-;2655:3;2660:7;2631:9;:37::i;:::-;2686:4;2679:11;;2507:191;;;;:::o;2761:190::-;2882:7;2914:11;:19;2926:6;2914:19;;;;;;;;;;;;;;;:29;2934:8;2914:29;;;;;;;;;;;;;;;;2907:36;;2761:190;;;;:::o;605:106:1:-;658:15;693:10;686:17;;605:106;:::o;5546:339:2:-;5695:1;5677:20;;:6;:20;;;;5669:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5755:1;5735:22;;:8;:22;;;;5727:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5819:7;5787:11;:19;5799:6;5787:19;;;;;;;;;;;;;;;:29;5807:8;5787:29;;;;;;;;;;;;;;;:39;;;;5859:8;5842:35;;5851:6;5842:35;;;5869:7;5842:35;;;;;;;;;;;;;;;;;;5546:339;;;:::o;773:184:5:-;831:7;864:1;859;:6;;851:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;911:9;927:1;923;:5;911:17;;948:1;941:8;;;773:184;;;;:::o;4652:452:2:-;4795:1;4778:19;;:5;:19;;;;4770:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4851:1;4836:17;;:3;:17;;;;4828:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4905:6;4890:22;;:3;:22;;;;4882:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4967:29;4988:7;4967:9;:16;4977:5;4967:16;;;;;;;;;;;;;;;;:20;;:29;;;;:::i;:::-;4948:9;:16;4958:5;4948:16;;;;;;;;;;;;;;;:48;;;;5024:27;5043:7;5024:9;:14;5034:3;5024:14;;;;;;;;;;;;;;;;:18;;:27;;;;:::i;:::-;5007:9;:14;5017:3;5007:14;;;;;;;;;;;;;;;:44;;;;5083:3;5067:29;;5076:5;5067:29;;;5088:7;5067:29;;;;;;;;;;;;;;;;;;4652:452;;;:::o;317:181:5:-;375:7;395:9;411:1;407;:5;395:17;;436:1;431;:6;;423:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;489:1;482:8;;;317:181;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "744000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1409",
								"approve(address,uint256)": "22536",
								"balanceOf(address)": "1218",
								"decimals()": "1047",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1058",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "100000000"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "100000000"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "100000000"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "100000000"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1710,
									"end": 1715,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1707,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1703,
									"end": 1715,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1735,
									"end": 1742,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1726,
									"end": 1732,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1726,
									"end": 1742,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1764,
									"end": 1773,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1761,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1753,
									"end": 1761,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1753,
									"end": 1773,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1816,
									"end": 1825,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1808,
									"end": 1826,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 1808,
									"end": 1826,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1804,
									"end": 1806,
									"name": "PUSH",
									"source": 2,
									"value": "A"
								},
								{
									"begin": 1804,
									"end": 1826,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1794,
									"end": 1801,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1794,
									"end": 1826,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1784,
									"end": 1826,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1784,
									"end": 1826,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1852,
									"end": 1859,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1837,
									"end": 1849,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1837,
									"end": 1859,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1837,
									"end": 1859,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1837,
									"end": 1859,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1837,
									"end": 1859,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1894,
									"end": 1901,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1879,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1880,
									"end": 1890,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1870,
									"end": 1891,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1901,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1901,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1901,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1870,
									"end": 1901,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1552,
									"end": 1909,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 7117,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122003d781075401c8c4954bd0a10f8369a9b582ebb7db4d2913f03ed832ff9613ef64736f6c634300060c0033",
									".code": [
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "95D89B41"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "6FDDE03"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 7117,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 445,
											"end": 463,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3205,
											"end": 3209,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3227,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3236,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3236,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3236,
											"end": 3248,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3236,
											"end": 3248,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3236,
											"end": 3248,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3250,
											"end": 3258,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3260,
											"end": 3267,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3227,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3227,
											"end": 3268,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3227,
											"end": 3268,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3227,
											"end": 3268,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3286,
											"end": 3290,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3279,
											"end": 3290,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3279,
											"end": 3290,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3099,
											"end": 3298,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2036,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2068,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2056,
											"end": 2068,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2049,
											"end": 2068,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2049,
											"end": 2068,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 2076,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3899,
											"end": 3903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3942,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3943,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3924,
											"end": 3943,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3929,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3943,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3924,
											"end": 3943,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3943,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3943,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3964,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3964,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3964,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3924,
											"end": 3964,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3962,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3947,
											"end": 3964,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3947,
											"end": 3964,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3947,
											"end": 3950,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3947,
											"end": 3964,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3947,
											"end": 3964,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3947,
											"end": 3964,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3947,
											"end": 3964,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3964,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3924,
											"end": 3964,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3916,
											"end": 3965,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3916,
											"end": 3965,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3916,
											"end": 3965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3916,
											"end": 3965,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3916,
											"end": 3965,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3916,
											"end": 3965,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3916,
											"end": 3965,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3978,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4001,
											"end": 4006,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4021,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4021,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4021,
											"end": 4033,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4021,
											"end": 4033,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4021,
											"end": 4033,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4085,
											"end": 4092,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4059,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4060,
											"end": 4065,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4048,
											"end": 4066,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4067,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4067,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4067,
											"end": 4079,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4067,
											"end": 4079,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4067,
											"end": 4079,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4080,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4048,
											"end": 4084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4048,
											"end": 4093,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3978,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3978,
											"end": 4104,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3978,
											"end": 4104,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3978,
											"end": 4104,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4115,
											"end": 4145,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4125,
											"end": 4130,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4132,
											"end": 4135,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4137,
											"end": 4144,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4115,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 4115,
											"end": 4145,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4115,
											"end": 4145,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4115,
											"end": 4145,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4163,
											"end": 4167,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4156,
											"end": 4167,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4156,
											"end": 4167,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3771,
											"end": 4175,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1242,
											"end": 1263,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2290,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2291,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2267,
											"end": 2291,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2267,
											"end": 2291,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2139,
											"end": 2299,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 583,
											"end": 603,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2609,
											"end": 2613,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2631,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2641,
											"end": 2653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2641,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2641,
											"end": 2653,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2641,
											"end": 2653,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2641,
											"end": 2653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2658,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2660,
											"end": 2667,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2631,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2631,
											"end": 2668,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2631,
											"end": 2668,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2631,
											"end": 2668,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2686,
											"end": 2690,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2679,
											"end": 2690,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2679,
											"end": 2690,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2507,
											"end": 2698,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2882,
											"end": 2889,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2914,
											"end": 2925,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2932,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2914,
											"end": 2933,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2934,
											"end": 2942,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2914,
											"end": 2943,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2907,
											"end": 2943,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2907,
											"end": 2943,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2951,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 605,
											"end": 711,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 605,
											"end": 711,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 658,
											"end": 673,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 693,
											"end": 703,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 686,
											"end": 703,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 686,
											"end": 703,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 605,
											"end": 711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 605,
											"end": 711,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5546,
											"end": 5885,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 5546,
											"end": 5885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5695,
											"end": 5696,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5677,
											"end": 5697,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5677,
											"end": 5697,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5683,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5697,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5677,
											"end": 5697,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5697,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5697,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH",
											"source": 2,
											"value": "E"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH",
											"source": 2,
											"value": "617070726F76652066726F6D2030000000000000000000000000000000000000"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 5669,
											"end": 5716,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5735,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5735,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5743,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5735,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5757,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5757,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH",
											"source": 2,
											"value": "617070726F766520746F20300000000000000000000000000000000000000000"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 5727,
											"end": 5774,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5819,
											"end": 5826,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5798,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5805,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5787,
											"end": 5806,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5815,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5787,
											"end": 5816,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5826,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5826,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5826,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5787,
											"end": 5826,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5859,
											"end": 5867,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5851,
											"end": 5857,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 5869,
											"end": 5876,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5842,
											"end": 5877,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 5546,
											"end": 5885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5546,
											"end": 5885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5546,
											"end": 5885,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5546,
											"end": 5885,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 773,
											"end": 957,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 773,
											"end": 957,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 831,
											"end": 838,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 864,
											"end": 865,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 859,
											"end": 860,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 859,
											"end": 865,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 859,
											"end": 865,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "1E"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 851,
											"end": 900,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 851,
											"end": 900,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 911,
											"end": 920,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 927,
											"end": 928,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 923,
											"end": 924,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 923,
											"end": 928,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 911,
											"end": 928,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 911,
											"end": 928,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 948,
											"end": 949,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 941,
											"end": 949,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 941,
											"end": 949,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 941,
											"end": 949,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 773,
											"end": 957,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 773,
											"end": 957,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 773,
											"end": 957,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 773,
											"end": 957,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 773,
											"end": 957,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4652,
											"end": 5104,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 4652,
											"end": 5104,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4795,
											"end": 4796,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4778,
											"end": 4797,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4778,
											"end": 4797,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4778,
											"end": 4783,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4778,
											"end": 4797,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4778,
											"end": 4797,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4778,
											"end": 4797,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4778,
											"end": 4797,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH",
											"source": 2,
											"value": "F"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH",
											"source": 2,
											"value": "7472616E736665722066726F6D20300000000000000000000000000000000000"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4770,
											"end": 4817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4851,
											"end": 4852,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4836,
											"end": 4853,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4836,
											"end": 4853,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4836,
											"end": 4839,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4836,
											"end": 4853,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4836,
											"end": 4853,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4836,
											"end": 4853,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4836,
											"end": 4853,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH",
											"source": 2,
											"value": "D"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH",
											"source": 2,
											"value": "7472616E7366657220746F203000000000000000000000000000000000000000"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4905,
											"end": 4911,
											"name": "PUSH",
											"source": 2,
											"value": "DEAD"
										},
										{
											"begin": 4890,
											"end": 4912,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4890,
											"end": 4912,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4890,
											"end": 4893,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4890,
											"end": 4912,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4890,
											"end": 4912,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4890,
											"end": 4912,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4890,
											"end": 4912,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH",
											"source": 2,
											"value": "7472616E7366657220746F203078646561640000000000000000000000000000"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4882,
											"end": 4935,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4988,
											"end": 4995,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4976,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4977,
											"end": 4982,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4987,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4967,
											"end": 4987,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4996,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4967,
											"end": 4996,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4996,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4967,
											"end": 4996,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4967,
											"end": 4996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4957,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4958,
											"end": 4963,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4948,
											"end": 4964,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4996,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4996,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 5043,
											"end": 5050,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5034,
											"end": 5037,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5038,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5042,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 5024,
											"end": 5042,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5051,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5051,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5051,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5024,
											"end": 5051,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5051,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5024,
											"end": 5051,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 5024,
											"end": 5051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5016,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5017,
											"end": 5020,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5051,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5051,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5051,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5007,
											"end": 5051,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5083,
											"end": 5086,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5081,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 5088,
											"end": 5095,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5067,
											"end": 5096,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 4652,
											"end": 5104,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4652,
											"end": 5104,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4652,
											"end": 5104,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4652,
											"end": 5104,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 317,
											"end": 498,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 317,
											"end": 498,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 375,
											"end": 382,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 395,
											"end": 404,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 407,
											"end": 408,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 407,
											"end": 412,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 395,
											"end": 412,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 395,
											"end": 412,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 436,
											"end": 437,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 431,
											"end": 432,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 431,
											"end": 437,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 431,
											"end": 437,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "1B"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 423,
											"end": 469,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 423,
											"end": 469,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 489,
											"end": 490,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 482,
											"end": 490,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 482,
											"end": 490,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 482,
											"end": 490,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 317,
											"end": 498,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 317,
											"end": 498,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 317,
											"end": 498,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 317,
											"end": 498,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 317,
											"end": 498,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_supply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `_spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {_name} and {_symbol}, {_decimals} To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `_to` cannot be the zero address. - the caller must have a balance of at least `_amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `_from` and `_to` cannot be the zero address. - `_from` must have a balance of at least `_amount`. - the caller must have allowance for `_from`'s tokens of at least `_amount`.\"}},\"stateVariables\":{\"decimals\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name\":{\"details\":\"Returns the name of the token.\"},\"symbol\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"_lib/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"_lib/Context.sol\":{\"keccak256\":\"0x77ec8b534124690b04754bc03aaa982479b91b9f7508bed54455c161e93a02e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf08de24c3951531b87b85a75157d4b26ddcb8952452672f9da9f63c06982e9f\",\"dweb:/ipfs/QmaUzytpjpYHNTXw3Hy4cdKmNoU5PWpyMZBhorK69pk8sA\"]},\"_lib/ERC20.sol\":{\"keccak256\":\"0x2ce16e09e444519aec6a0e1f355325dfe2af844ea539ae8f8a7d53a2daf6d844\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb89e49b22ff4dd4d67fe590e95ce997d8a5a83db5ca8a246086dd4a56f01a72\",\"dweb:/ipfs/QmfZbMN1MNau96zL4xS1EtA9gVyNRWPwZCWwGVVeNG8uNF\"]},\"_lib/IERC20.sol\":{\"keccak256\":\"0x943e16fe1fdaa84c7329da3fa5aab8ce507ff7b6776a3925e97ffc0beef9692a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7727696ef766547aaa34152d06a443c5c8924fa363f47e51335d0e3d619c194\",\"dweb:/ipfs/QmRYgfYhpyjHaQjSJMG5fDdDGbQA9eXCGhuSRnwGfoSyCD\"]},\"_lib/SafeMath.sol\":{\"keccak256\":\"0xe1bb41b0568cdd4364bb5fcba4fd6065df59c3ea8147e040fb9c978bc3a89af5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e4192a8253ea1f04e97ac1ac3df25dc77719696b0bee70b3af1a4a56edcb5b\",\"dweb:/ipfs/QmaQ4TkRxpXxjtKKewy2oAgJXFbdqSwacBUMrNaSgZ72jt\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"_lib/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP. From https://github.com/OpenZeppelin/openzeppelin-contracts",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP. From https://github.com/OpenZeppelin/openzeppelin-contracts\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"_lib/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"_lib/IERC20.sol\":{\"keccak256\":\"0x943e16fe1fdaa84c7329da3fa5aab8ce507ff7b6776a3925e97ffc0beef9692a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7727696ef766547aaa34152d06a443c5c8924fa363f47e51335d0e3d619c194\",\"dweb:/ipfs/QmRYgfYhpyjHaQjSJMG5fDdDGbQA9eXCGhuSRnwGfoSyCD\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"_lib/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"_lib/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"_lib/Context.sol\":{\"keccak256\":\"0x77ec8b534124690b04754bc03aaa982479b91b9f7508bed54455c161e93a02e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf08de24c3951531b87b85a75157d4b26ddcb8952452672f9da9f63c06982e9f\",\"dweb:/ipfs/QmaUzytpjpYHNTXw3Hy4cdKmNoU5PWpyMZBhorK69pk8sA\"]},\"_lib/Ownable.sol\":{\"keccak256\":\"0x9bb16a0785f0f888e4b470311e02af5bb72f0663d7be20eb7a60902e29e35406\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://014bf309648c0793be70899bc260d7094e17de223ed8eaebae9327643623cf93\",\"dweb:/ipfs/QmR4LhypLf6CVNvqxgDDAJ4E9E5h3wqV6RT8g7jERZdVLT\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"_lib/SafeMath.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"_lib/SafeMath.sol\":4604:5299  library Math {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"_lib/SafeMath.sol\":4604:5299  library Math {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206e04663ba7d4d7996cc8dbe663d4baffa3d9e7d95afee582dd0a49334044b9fb64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206e04663ba7d4d7996cc8dbe663d4baffa3d9e7d95afee582dd0a49334044b9fb64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x4663BA7D4D7996CC8DBE663D4BAFF LOG3 0xD9 0xE7 0xD9 GAS INVALID 0xE5 DUP3 0xDD EXP 0x49 CALLER BLOCKHASH DIFFICULTY 0xB9 0xFB PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "4604:695:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206e04663ba7d4d7996cc8dbe663d4baffa3d9e7d95afee582dd0a49334044b9fb64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x4663BA7D4D7996CC8DBE663D4BAFF LOG3 0xD9 0xE7 0xD9 GAS INVALID 0xE5 DUP3 0xDD EXP 0x49 CALLER BLOCKHASH DIFFICULTY 0xB9 0xFB PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "4604:695:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4604,
									"end": 5299,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "INVALID",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4604,
									"end": 5299,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206e04663ba7d4d7996cc8dbe663d4baffa3d9e7d95afee582dd0a49334044b9fb64736f6c634300060c0033",
									".code": [
										{
											"begin": 4604,
											"end": 5299,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 4604,
											"end": 5299,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 4604,
											"end": 5299,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4604,
											"end": 5299,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4604,
											"end": 5299,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4604,
											"end": 5299,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4604,
											"end": 5299,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4604,
											"end": 5299,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4604,
											"end": 5299,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"_lib/SafeMath.sol\":\"Math\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"_lib/SafeMath.sol\":{\"keccak256\":\"0xe1bb41b0568cdd4364bb5fcba4fd6065df59c3ea8147e040fb9c978bc3a89af5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e4192a8253ea1f04e97ac1ac3df25dc77719696b0bee70b3af1a4a56edcb5b\",\"dweb:/ipfs/QmaQ4TkRxpXxjtKKewy2oAgJXFbdqSwacBUMrNaSgZ72jt\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"_lib/SafeMath.sol\":62:3091  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"_lib/SafeMath.sol\":62:3091  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122068b375269c1d6f3484f11227346ae9d0b15e0fea769d778896867163d1544b3e64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122068b375269c1d6f3484f11227346ae9d0b15e0fea769d778896867163d1544b3e64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0xB375269C1D6F3484F1 SLT 0x27 CALLVALUE PUSH11 0xE9D0B15E0FEA769D778896 DUP7 PUSH18 0x63D1544B3E64736F6C634300060C00330000 ",
							"sourceMap": "62:3029:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122068b375269c1d6f3484f11227346ae9d0b15e0fea769d778896867163d1544b3e64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0xB375269C1D6F3484F1 SLT 0x27 CALLVALUE PUSH11 0xE9D0B15E0FEA769D778896 DUP7 PUSH18 0x63D1544B3E64736F6C634300060C00330000 ",
							"sourceMap": "62:3029:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 62,
									"end": 3091,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "INVALID",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 62,
									"end": 3091,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122068b375269c1d6f3484f11227346ae9d0b15e0fea769d778896867163d1544b3e64736f6c634300060c0033",
									".code": [
										{
											"begin": 62,
											"end": 3091,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 62,
											"end": 3091,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 62,
											"end": 3091,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 62,
											"end": 3091,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 62,
											"end": 3091,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 62,
											"end": 3091,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 62,
											"end": 3091,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 62,
											"end": 3091,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 62,
											"end": 3091,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"_lib/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"_lib/SafeMath.sol\":{\"keccak256\":\"0xe1bb41b0568cdd4364bb5fcba4fd6065df59c3ea8147e040fb9c978bc3a89af5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e4192a8253ea1f04e97ac1ac3df25dc77719696b0bee70b3af1a4a56edcb5b\",\"dweb:/ipfs/QmaQ4TkRxpXxjtKKewy2oAgJXFbdqSwacBUMrNaSgZ72jt\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMathExt": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"_lib/SafeMath.sol\":3095:4600  library SafeMathExt {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"_lib/SafeMath.sol\":3095:4600  library SafeMathExt {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a626b76c907f888293c32fb457a49bf6f694e941ef3e36c80569f4fce9e6ce4e64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a626b76c907f888293c32fb457a49bf6f694e941ef3e36c80569f4fce9e6ce4e64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 0x26 0xB7 PUSH13 0x907F888293C32FB457A49BF6F6 SWAP5 0xE9 COINBASE 0xEF RETURNDATACOPY CALLDATASIZE 0xC8 SDIV PUSH10 0xF4FCE9E6CE4E64736F6C PUSH4 0x4300060C STOP CALLER ",
							"sourceMap": "3095:1505:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a626b76c907f888293c32fb457a49bf6f694e941ef3e36c80569f4fce9e6ce4e64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 0x26 0xB7 PUSH13 0x907F888293C32FB457A49BF6F6 SWAP5 0xE9 COINBASE 0xEF RETURNDATACOPY CALLDATASIZE 0xC8 SDIV PUSH10 0xF4FCE9E6CE4E64736F6C PUSH4 0x4300060C STOP CALLER ",
							"sourceMap": "3095:1505:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add128(uint128,uint128)": "infinite",
								"add64(uint64,uint64)": "infinite",
								"safe128(uint256)": "infinite",
								"safe16(uint256)": "infinite",
								"safe32(uint256)": "infinite",
								"safe64(uint256)": "infinite",
								"sub128(uint128,uint128)": "infinite",
								"sub64(uint64,uint64)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3095,
									"end": 4600,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "INVALID",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 4600,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a626b76c907f888293c32fb457a49bf6f694e941ef3e36c80569f4fce9e6ce4e64736f6c634300060c0033",
									".code": [
										{
											"begin": 3095,
											"end": 4600,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 4600,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 4600,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 4600,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3095,
											"end": 4600,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3095,
											"end": 4600,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 4600,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 4600,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 4600,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"_lib/SafeMath.sol\":\"SafeMathExt\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"_lib/SafeMath.sol\":{\"keccak256\":\"0xe1bb41b0568cdd4364bb5fcba4fd6065df59c3ea8147e040fb9c978bc3a89af5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e4192a8253ea1f04e97ac1ac3df25dc77719696b0bee70b3af1a4a56edcb5b\",\"dweb:/ipfs/QmaQ4TkRxpXxjtKKewy2oAgJXFbdqSwacBUMrNaSgZ72jt\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"LP/LP.sol": {
				"ast": {
					"absolutePath": "LP/LP.sol",
					"exportedSymbols": {
						"IBurnCoin": [
							88
						],
						"ILPToken": [
							82
						],
						"IPokerToken": [
							49
						],
						"LP": [
							1199
						]
					},
					"id": 1200,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:0"
						},
						{
							"absolutePath": "_lib/SafeMath.sol",
							"file": "../_lib/SafeMath.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 1200,
							"sourceUnit": 2202,
							"src": "62:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "_lib/ERC20.sol",
							"file": "../_lib/ERC20.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 1200,
							"sourceUnit": 1657,
							"src": "94:27:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "_lib/Ownable.sol",
							"file": "../_lib/Ownable.sol",
							"id": 4,
							"nodeType": "ImportDirective",
							"scope": 1200,
							"sourceUnit": 1811,
							"src": "123:29:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 49,
							"linearizedBaseContracts": [
								49
							],
							"name": "IPokerToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "18160ddd",
									"id": 9,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "207:2:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 9,
												"src": "233:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "232:9:0"
									},
									"scope": 49,
									"src": "187:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "70a08231",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 16,
												"src": "269:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "269:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "268:16:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 16,
												"src": "308:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "307:9:0"
									},
									"scope": 49,
									"src": "250:67:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "a9059cbb",
									"id": 25,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 25,
												"src": "343:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "343:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 25,
												"src": "356:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 19,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "342:30:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 25,
												"src": "391:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 22,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "391:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "390:6:0"
									},
									"scope": 49,
									"src": "325:72:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "23b872dd",
									"id": 36,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 36,
												"src": "437:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 36,
												"src": "461:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 36,
												"src": "483:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "483:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "426:79:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 36,
												"src": "524:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 33,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "524:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "523:6:0"
									},
									"scope": 49,
									"src": "405:125:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "40c10f19",
									"id": 43,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 43,
												"src": "552:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "552:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 43,
												"src": "565:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "565:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "551:30:0"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "590:0:0"
									},
									"scope": 49,
									"src": "538:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "42966c68",
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 48,
												"src": "613:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "612:17:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "638:0:0"
									},
									"scope": 49,
									"src": "599:40:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1200,
							"src": "158:484:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 82,
							"linearizedBaseContracts": [
								82
							],
							"name": "ILPToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "18160ddd",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "692:2:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 54,
												"src": "718:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "718:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "717:9:0"
									},
									"scope": 82,
									"src": "672:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "70a08231",
									"id": 61,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 61,
												"src": "754:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "754:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "753:16:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 61,
												"src": "793:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "793:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "792:9:0"
									},
									"scope": 82,
									"src": "735:67:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "a9059cbb",
									"id": 70,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 70,
												"src": "828:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "828:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 70,
												"src": "841:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "841:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "827:30:0"
									},
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 70,
												"src": "876:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 67,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "876:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "875:6:0"
									},
									"scope": 82,
									"src": "810:72:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "23b872dd",
									"id": 81,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 81,
												"src": "922:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "922:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 81,
												"src": "946:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "946:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 81,
												"src": "968:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "968:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "911:79:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 81,
												"src": "1009:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 78,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1009:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1008:6:0"
									},
									"scope": 82,
									"src": "890:125:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1200,
							"src": "646:372:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 88,
							"linearizedBaseContracts": [
								88
							],
							"name": "IBurnCoin",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "42966c68",
									"id": 87,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 87,
												"src": "1063:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 83,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1063:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1062:17:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1088:0:0"
									},
									"scope": 88,
									"src": "1049:40:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1200,
							"src": "1022:70:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1199,
							"linearizedBaseContracts": [
								1199
							],
							"name": "LP",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 91,
									"libraryName": {
										"contractScope": null,
										"id": 89,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1948,
										"src": "1121:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1948",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1115:27:0",
									"typeName": {
										"id": 90,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1134:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 93,
									"mutability": "mutable",
									"name": "poker",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1199,
									"src": "1148:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IPokerToken_$49",
										"typeString": "contract IPokerToken"
									},
									"typeName": {
										"contractScope": null,
										"id": 92,
										"name": "IPokerToken",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 49,
										"src": "1148:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPokerToken_$49",
											"typeString": "contract IPokerToken"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 95,
									"mutability": "mutable",
									"name": "lp",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1199,
									"src": "1172:11:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ILPToken_$82",
										"typeString": "contract ILPToken"
									},
									"typeName": {
										"contractScope": null,
										"id": 94,
										"name": "ILPToken",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 82,
										"src": "1172:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ILPToken_$82",
											"typeString": "contract ILPToken"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 97,
									"mutability": "mutable",
									"name": "burnCoin",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1199,
									"src": "1190:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IBurnCoin_$88",
										"typeString": "contract IBurnCoin"
									},
									"typeName": {
										"contractScope": null,
										"id": 96,
										"name": "IBurnCoin",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 88,
										"src": "1190:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBurnCoin_$88",
											"typeString": "contract IBurnCoin"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 99,
									"mutability": "mutable",
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1199,
									"src": "1215:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 98,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1215:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6af04a57",
									"id": 101,
									"mutability": "mutable",
									"name": "newContractAddress",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1199,
									"src": "1242:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 100,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1242:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "1392:149:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 110,
														"name": "poker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 93,
														"src": "1403:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPokerToken_$49",
															"typeString": "contract IPokerToken"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 111,
														"name": "_poker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1411:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IPokerToken_$49",
															"typeString": "contract IPokerToken"
														}
													},
													"src": "1403:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPokerToken_$49",
														"typeString": "contract IPokerToken"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "1403:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 114,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "1428:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 115,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "1436:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1436:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1428:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 118,
												"nodeType": "ExpressionStatement",
												"src": "1428:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 119,
														"name": "lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "1457:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 120,
															"name": "getTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "1474:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1474:9:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1457:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 123,
												"nodeType": "ExpressionStatement",
												"src": "1457:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 124,
														"name": "burnCoin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "1494:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBurnCoin_$88",
															"typeString": "contract IBurnCoin"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 125,
														"name": "_burncoin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 107,
														"src": "1505:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBurnCoin_$88",
															"typeString": "contract IBurnCoin"
														}
													},
													"src": "1494:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBurnCoin_$88",
														"typeString": "contract IBurnCoin"
													}
												},
												"id": 127,
												"nodeType": "ExpressionStatement",
												"src": "1494:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 128,
														"name": "lp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "1525:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILPToken_$82",
															"typeString": "contract ILPToken"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 129,
														"name": "_lp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 105,
														"src": "1530:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ILPToken_$82",
															"typeString": "contract ILPToken"
														}
													},
													"src": "1525:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILPToken_$82",
														"typeString": "contract ILPToken"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "1525:8:0"
											}
										]
									},
									"documentation": null,
									"id": 133,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "_poker",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 133,
												"src": "1306:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IPokerToken_$49",
													"typeString": "contract IPokerToken"
												},
												"typeName": {
													"contractScope": null,
													"id": 102,
													"name": "IPokerToken",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 49,
													"src": "1306:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IPokerToken_$49",
														"typeString": "contract IPokerToken"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "_lp",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 133,
												"src": "1335:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ILPToken_$82",
													"typeString": "contract ILPToken"
												},
												"typeName": {
													"contractScope": null,
													"id": 104,
													"name": "ILPToken",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 82,
													"src": "1335:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILPToken_$82",
														"typeString": "contract ILPToken"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "_burncoin",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 133,
												"src": "1358:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IBurnCoin_$88",
													"typeString": "contract IBurnCoin"
												},
												"typeName": {
													"contractScope": null,
													"id": 106,
													"name": "IBurnCoin",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 88,
													"src": "1358:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBurnCoin_$88",
														"typeString": "contract IBurnCoin"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1295:89:0"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1392:0:0"
									},
									"scope": 1199,
									"src": "1284:257:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"canonicalName": "LP.UserInfo",
									"id": 150,
									"members": [
										{
											"constant": false,
											"id": 135,
											"mutability": "mutable",
											"name": "shares",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 150,
											"src": "1576:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 134,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1576:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 137,
											"mutability": "mutable",
											"name": "lastDepositedTime",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 150,
											"src": "1601:25:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 136,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1601:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 139,
											"mutability": "mutable",
											"name": "lastUserActionTime",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 150,
											"src": "1637:26:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 138,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1637:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 141,
											"mutability": "mutable",
											"name": "coinAtlastUserAction",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 150,
											"src": "1674:28:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 140,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1674:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 143,
											"mutability": "mutable",
											"name": "coinPerShares",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 150,
											"src": "1713:21:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 142,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1713:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 145,
											"mutability": "mutable",
											"name": "rewardDebt",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 150,
											"src": "1745:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 144,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1745:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 147,
											"mutability": "mutable",
											"name": "rewards",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 150,
											"src": "1774:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 146,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1774:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 149,
											"mutability": "mutable",
											"name": "amount",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 150,
											"src": "1800:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 148,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1800:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nodeType": "StructDefinition",
									"scope": 1199,
									"src": "1549:273:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d2890a01",
									"id": 153,
									"mutability": "mutable",
									"name": "accPerShare",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1199,
									"src": "1828:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 151,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1828:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 152,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1857:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6d3c832f",
									"id": 156,
									"mutability": "mutable",
									"name": "totalLpFee",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1199,
									"src": "1865:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 154,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1865:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 155,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1893:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3a98ef39",
									"id": 159,
									"mutability": "mutable",
									"name": "totalShares",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1199,
									"src": "1901:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 157,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1901:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 158,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1930:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1a39d8ef",
									"id": 162,
									"mutability": "mutable",
									"name": "totalAmount",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1199,
									"src": "1938:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 160,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1938:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 161,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1967:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c8f33c91",
									"id": 165,
									"mutability": "mutable",
									"name": "lastUpdateTime",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1199,
									"src": "1975:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 163,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1975:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 164,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2007:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "df10b4e6",
									"id": 168,
									"mutability": "mutable",
									"name": "withdrawFeePeriod",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1199,
									"src": "2015:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2015:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "37",
										"id": 167,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2050:6:0",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_604800_by_1",
											"typeString": "int_const 604800"
										},
										"value": "7"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6abfd183",
									"id": 171,
									"mutability": "mutable",
									"name": "stakingStartTime",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1199,
									"src": "2146:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 169,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2146:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 170,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2180:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e6fa445d",
									"id": 174,
									"mutability": "mutable",
									"name": "stakingSwitch",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1199,
									"src": "2188:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 172,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2188:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "66616c7365",
										"id": 173,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2216:5:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 177,
									"mutability": "mutable",
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1199,
									"src": "2228:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 175,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2228:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3138",
										"id": 176,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2247:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 182,
									"mutability": "constant",
									"name": "ONE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1199,
									"src": "2258:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 178,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2258:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"id": 181,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "3130",
											"id": 179,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2281:2:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"argumentTypes": null,
											"hexValue": "3138",
											"id": 180,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2285:2:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18_by_1",
												"typeString": "int_const 18"
											},
											"value": "18"
										},
										"src": "2281:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "2371:48:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 196,
															"name": "d",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "2409:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 193,
																	"name": "ONE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 182,
																	"src": "2400:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 191,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 184,
																	"src": "2389:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1899,
																"src": "2389:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2389:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1925,
														"src": "2389:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2389:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 190,
												"id": 198,
												"nodeType": "Return",
												"src": "2382:29:0"
											}
										]
									},
									"documentation": null,
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "divFloor",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 200,
												"src": "2312:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2312:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "d",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 200,
												"src": "2328:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2328:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2311:27:0"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 200,
												"src": "2362:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2362:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2361:9:0"
									},
									"scope": 1199,
									"src": "2294:125:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "2504:45:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 211,
																"name": "d",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "2533:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 209,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "2522:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1899,
															"src": "2522:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 212,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2522:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 213,
														"name": "ONE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 182,
														"src": "2538:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2522:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 208,
												"id": 215,
												"nodeType": "Return",
												"src": "2515:26:0"
											}
										]
									},
									"documentation": null,
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimalMul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 217,
												"src": "2445:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "d",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 217,
												"src": "2461:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2444:27:0"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 217,
												"src": "2495:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2495:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2494:9:0"
									},
									"scope": 1199,
									"src": "2425:124:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "1959a002",
									"id": 221,
									"mutability": "mutable",
									"name": "userInfo",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1199,
									"src": "2557:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$150_storage_$",
										"typeString": "mapping(address => struct LP.UserInfo)"
									},
									"typeName": {
										"id": 220,
										"keyType": {
											"id": 218,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2565:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2557:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$150_storage_$",
											"typeString": "mapping(address => struct LP.UserInfo)"
										},
										"valueType": {
											"contractScope": null,
											"id": 219,
											"name": "UserInfo",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 150,
											"src": "2576:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
												"typeString": "struct LP.UserInfo"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 231,
									"name": "Deposit",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 231,
												"src": "2634:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 231,
												"src": "2667:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"indexed": false,
												"mutability": "mutable",
												"name": "shares",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 231,
												"src": "2692:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2692:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"indexed": false,
												"mutability": "mutable",
												"name": "lastDepositedTime",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 231,
												"src": "2717:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2717:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2623:126:0"
									},
									"src": "2610:140:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 239,
									"name": "Withdraw",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 239,
												"src": "2771:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2771:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 239,
												"src": "2795:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2795:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"indexed": false,
												"mutability": "mutable",
												"name": "shares",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 239,
												"src": "2811:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2811:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2770:56:0"
									},
									"src": "2756:71:0"
								},
								{
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "2876:1234:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 245,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "2895:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2905:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2895:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e6f7468696e6720746f206465706f736974",
															"id": 248,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2908:20:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0286ebca00a5e4a573432e60f4227ca76955fded88c2ddaafd3b02077af17470",
																"typeString": "literal_string \"Nothing to deposit\""
															},
															"value": "Nothing to deposit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0286ebca00a5e4a573432e60f4227ca76955fded88c2ddaafd3b02077af17470",
																"typeString": "literal_string \"Nothing to deposit\""
															}
														],
														"id": 244,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2887:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2887:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 250,
												"nodeType": "ExpressionStatement",
												"src": "2887:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 251,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "2942:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2942:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 253,
												"nodeType": "ExpressionStatement",
												"src": "2942:12:0"
											},
											{
												"assignments": [
													255
												],
												"declarations": [
													{
														"constant": false,
														"id": 255,
														"mutability": "mutable",
														"name": "bal",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 408,
														"src": "2965:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 254,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2965:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 258,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 256,
														"name": "lpBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 649,
														"src": "2979:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2979:11:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2965:25:0"
											},
											{
												"assignments": [
													260
												],
												"declarations": [
													{
														"constant": false,
														"id": 260,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 408,
														"src": "3003:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
															"typeString": "struct LP.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 259,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 150,
															"src": "3003:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																"typeString": "struct LP.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 265,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 261,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 221,
														"src": "3027:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$150_storage_$",
															"typeString": "mapping(address => struct LP.UserInfo storage ref)"
														}
													},
													"id": 264,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 262,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "3036:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3036:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3027:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$150_storage",
														"typeString": "struct LP.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3003:44:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 266,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "3064:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																"typeString": "struct LP.UserInfo storage pointer"
															}
														},
														"id": 267,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 149,
														"src": "3064:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 268,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3078:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3064:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"expression": {
														"argumentTypes": null,
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 293,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 260,
																"src": "3353:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																	"typeString": "struct LP.UserInfo storage pointer"
																}
															},
															"id": 295,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"memberName": "rewards",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 147,
															"src": "3353:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3368:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3353:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 298,
													"nodeType": "ExpressionStatement",
													"src": "3353:16:0"
												},
												"id": 299,
												"nodeType": "IfStatement",
												"src": "3060:309:0",
												"trueBody": {
													"id": 292,
													"nodeType": "Block",
													"src": "3081:244:0",
													"statements": [
														{
															"assignments": [
																271
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 271,
																	"mutability": "mutable",
																	"name": "pending",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 292,
																	"src": "3096:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 270,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3096:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 281,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 278,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 260,
																			"src": "3173:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																				"typeString": "struct LP.UserInfo storage pointer"
																			}
																		},
																		"id": 279,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardDebt",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 145,
																		"src": "3173:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 273,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 260,
																					"src": "3125:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																						"typeString": "struct LP.UserInfo storage pointer"
																					}
																				},
																				"id": 274,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "amount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 149,
																				"src": "3125:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"id": 275,
																				"name": "accPerShare",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 153,
																				"src": "3138:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 272,
																			"name": "decimalMul",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 217,
																			"src": "3114:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3114:36:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1864,
																	"src": "3114:40:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3114:89:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3096:107:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 282,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "3273:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																			"typeString": "struct LP.UserInfo storage pointer"
																		}
																	},
																	"id": 284,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "rewards",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 147,
																	"src": "3273:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 288,
																			"name": "pending",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 271,
																			"src": "3305:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 285,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 260,
																				"src": "3288:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																					"typeString": "struct LP.UserInfo storage pointer"
																				}
																			},
																			"id": 286,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "rewards",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 147,
																			"src": "3288:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 287,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1838,
																		"src": "3288:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3288:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3273:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 291,
															"nodeType": "ExpressionStatement",
															"src": "3273:40:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 303,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "3398:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3398:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 307,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "3418:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LP_$1199",
																		"typeString": "contract LP"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LP_$1199",
																		"typeString": "contract LP"
																	}
																],
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3410:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 305,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3410:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3410:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 309,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "3425:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 300,
															"name": "lp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "3382:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILPToken_$82",
																"typeString": "contract ILPToken"
															}
														},
														"id": 302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 81,
														"src": "3382:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3382:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 311,
												"nodeType": "ExpressionStatement",
												"src": "3382:51:0"
											},
											{
												"assignments": [
													313
												],
												"declarations": [
													{
														"constant": false,
														"id": 313,
														"mutability": "mutable",
														"name": "currentShares",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 408,
														"src": "3446:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 312,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3446:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 315,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3470:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3446:25:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 316,
														"name": "totalShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3486:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 317,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3501:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3486:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 339,
													"nodeType": "Block",
													"src": "3588:66:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 337,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 331,
																	"name": "currentShares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 313,
																	"src": "3603:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 334,
																				"name": "getEther",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 948,
																				"src": "3631:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																					"typeString": "function () view returns (uint256)"
																				}
																			},
																			"id": 335,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3631:10:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 332,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 241,
																			"src": "3619:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 333,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1899,
																		"src": "3619:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3619:23:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3603:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 338,
															"nodeType": "ExpressionStatement",
															"src": "3603:39:0"
														}
													]
												},
												"id": 340,
												"nodeType": "IfStatement",
												"src": "3482:172:0",
												"trueBody": {
													"id": 330,
													"nodeType": "Block",
													"src": "3504:78:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 319,
																	"name": "currentShares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 313,
																	"src": "3519:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 326,
																			"name": "bal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 255,
																			"src": "3566:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"components": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 322,
																							"name": "totalShares",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 159,
																							"src": "3548:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"id": 320,
																							"name": "_amount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 241,
																							"src": "3536:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 321,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1899,
																						"src": "3536:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 323,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3536:24:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 324,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3535:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1925,
																		"src": "3535:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3535:35:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3519:51:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 329,
															"nodeType": "ExpressionStatement",
															"src": "3519:51:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 341,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "3666:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																"typeString": "struct LP.UserInfo storage pointer"
															}
														},
														"id": 343,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "shares",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 135,
														"src": "3666:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 347,
																"name": "currentShares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "3696:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 344,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 260,
																	"src": "3680:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																		"typeString": "struct LP.UserInfo storage pointer"
																	}
																},
																"id": 345,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "shares",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 135,
																"src": "3680:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1838,
															"src": "3680:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3680:30:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3666:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 350,
												"nodeType": "ExpressionStatement",
												"src": "3666:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 351,
														"name": "totalShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3721:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 354,
																"name": "currentShares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "3751:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 352,
																"name": "totalShares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 159,
																"src": "3735:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1838,
															"src": "3735:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 355,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3735:30:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3721:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "3721:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 358,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "3776:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																"typeString": "struct LP.UserInfo storage pointer"
															}
														},
														"id": 360,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "coinAtlastUserAction",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 141,
														"src": "3776:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 361,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "3804:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																"typeString": "struct LP.UserInfo storage pointer"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "rewards",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 147,
														"src": "3804:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3776:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 364,
												"nodeType": "ExpressionStatement",
												"src": "3776:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 365,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "3829:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																"typeString": "struct LP.UserInfo storage pointer"
															}
														},
														"id": 367,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 149,
														"src": "3829:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 371,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "3859:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 368,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 260,
																	"src": "3843:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																		"typeString": "struct LP.UserInfo storage pointer"
																	}
																},
																"id": 369,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 149,
																"src": "3843:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1838,
															"src": "3843:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3843:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3829:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "3829:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 375,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "3878:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																"typeString": "struct LP.UserInfo storage pointer"
															}
														},
														"id": 377,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 145,
														"src": "3878:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 379,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 260,
																	"src": "3907:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																		"typeString": "struct LP.UserInfo storage pointer"
																	}
																},
																"id": 380,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 149,
																"src": "3907:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"id": 381,
																"name": "accPerShare",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 153,
																"src": "3919:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 378,
															"name": "decimalMul",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "3896:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3896:35:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3878:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "3878:53:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 385,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "3944:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																"typeString": "struct LP.UserInfo storage pointer"
															}
														},
														"id": 387,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastUserActionTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 139,
														"src": "3944:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 388,
															"name": "getTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "3970:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 389,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3970:9:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3944:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 391,
												"nodeType": "ExpressionStatement",
												"src": "3944:35:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 392,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "3990:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																"typeString": "struct LP.UserInfo storage pointer"
															}
														},
														"id": 394,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastDepositedTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 137,
														"src": "3990:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 395,
															"name": "getTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "4015:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 396,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4015:9:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3990:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 398,
												"nodeType": "ExpressionStatement",
												"src": "3990:34:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 400,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "4050:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4050:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 402,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "4062:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 403,
															"name": "currentShares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "4071:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 404,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "4086:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4086:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 399,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 231,
														"src": "4042:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4042:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 407,
												"nodeType": "EmitStatement",
												"src": "4037:65:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "b6b55f25",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 409,
												"src": "2852:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2852:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2851:17:0"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2876:0:0"
									},
									"scope": 1199,
									"src": "2835:1275:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 631,
										"nodeType": "Block",
										"src": "4160:1722:0",
										"statements": [
											{
												"assignments": [
													415
												],
												"declarations": [
													{
														"constant": false,
														"id": 415,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 631,
														"src": "4171:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
															"typeString": "struct LP.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 414,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 150,
															"src": "4171:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																"typeString": "struct LP.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 420,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 416,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 221,
														"src": "4195:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$150_storage_$",
															"typeString": "mapping(address => struct LP.UserInfo storage ref)"
														}
													},
													"id": 419,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 417,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "4204:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "4204:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4195:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$150_storage",
														"typeString": "struct LP.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4171:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 422,
																"name": "_shares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "4234:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4244:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4234:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e6f7468696e6720746f207769746864726177",
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4247:21:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394",
																"typeString": "literal_string \"Nothing to withdraw\""
															},
															"value": "Nothing to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b19ac089d87f4146c293e731799080c98f8ee751187f94356e96cb0c086a394",
																"typeString": "literal_string \"Nothing to withdraw\""
															}
														],
														"id": 421,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4226:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4226:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 427,
												"nodeType": "ExpressionStatement",
												"src": "4226:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 429,
																"name": "_shares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "4288:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 430,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 415,
																	"src": "4299:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																		"typeString": "struct LP.UserInfo storage pointer"
																	}
																},
																"id": 431,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "shares",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 135,
																"src": "4299:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4288:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "576974686472617720616d6f756e7420657863656564732062616c616e6365",
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4312:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4c501aa39f818920bdbabc4e74fb2842a64ecd00cde0a748633014f4258571f4",
																"typeString": "literal_string \"Withdraw amount exceeds balance\""
															},
															"value": "Withdraw amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4c501aa39f818920bdbabc4e74fb2842a64ecd00cde0a748633014f4258571f4",
																"typeString": "literal_string \"Withdraw amount exceeds balance\""
															}
														],
														"id": 428,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4280:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4280:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "4280:66:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 436,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "4359:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4359:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 438,
												"nodeType": "ExpressionStatement",
												"src": "4359:12:0"
											},
											{
												"assignments": [
													440
												],
												"declarations": [
													{
														"constant": false,
														"id": 440,
														"mutability": "mutable",
														"name": "userTotalAmount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 631,
														"src": "4414:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 439,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4414:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 454,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 451,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "4502:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																	"typeString": "struct LP.UserInfo storage pointer"
																}
															},
															"id": 452,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewards",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 147,
															"src": "4502:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 447,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 415,
																		"src": "4481:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																			"typeString": "struct LP.UserInfo storage pointer"
																		}
																	},
																	"id": 448,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "rewardDebt",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 145,
																	"src": "4481:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 442,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 415,
																				"src": "4452:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																					"typeString": "struct LP.UserInfo storage pointer"
																				}
																			},
																			"id": 443,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 149,
																			"src": "4452:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 444,
																			"name": "accPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 153,
																			"src": "4464:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 441,
																		"name": "decimalMul",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 217,
																		"src": "4441:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4441:35:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1864,
																"src": "4441:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4441:56:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 450,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1838,
														"src": "4441:60:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4441:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4414:101:0"
											},
											{
												"assignments": [
													456
												],
												"declarations": [
													{
														"constant": false,
														"id": 456,
														"mutability": "mutable",
														"name": "withdrawAmount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 631,
														"src": "4574:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 455,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4574:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 465,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 462,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "4632:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																	"typeString": "struct LP.UserInfo storage pointer"
																}
															},
															"id": 463,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "shares",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 135,
															"src": "4632:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 459,
																	"name": "_shares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "4619:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 457,
																	"name": "userTotalAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 440,
																	"src": "4599:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1899,
																"src": "4599:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4599:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 461,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1925,
														"src": "4599:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4599:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4574:70:0"
											},
											{
												"assignments": [
													467
												],
												"declarations": [
													{
														"constant": false,
														"id": 467,
														"mutability": "mutable",
														"name": "curLp",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 631,
														"src": "4657:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 466,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4657:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 477,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 474,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "4702:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																	"typeString": "struct LP.UserInfo storage pointer"
																}
															},
															"id": 475,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "shares",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 135,
															"src": "4702:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 471,
																	"name": "_shares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "4689:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 468,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 415,
																		"src": "4673:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																			"typeString": "struct LP.UserInfo storage pointer"
																		}
																	},
																	"id": 469,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 149,
																	"src": "4673:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1899,
																"src": "4673:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4673:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 473,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1925,
														"src": "4673:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4673:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4657:57:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 478,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "4725:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																"typeString": "struct LP.UserInfo storage pointer"
															}
														},
														"id": 480,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "shares",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 135,
														"src": "4725:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 484,
																"name": "_shares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "4755:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 481,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 415,
																	"src": "4739:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																		"typeString": "struct LP.UserInfo storage pointer"
																	}
																},
																"id": 482,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "shares",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 135,
																"src": "4739:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1864,
															"src": "4739:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 485,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4739:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4725:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "4725:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 488,
														"name": "totalShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "4774:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 491,
																"name": "_shares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "4804:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 489,
																"name": "totalShares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 159,
																"src": "4788:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1864,
															"src": "4788:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 492,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4788:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4774:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 494,
												"nodeType": "ExpressionStatement",
												"src": "4774:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 496,
																"name": "totalAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 162,
																"src": "4847:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 497,
																"name": "withdrawAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 456,
																"src": "4862:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4847:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "576974686472617720616d6f756e7420657863656564732062616c616e6365",
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4891:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4c501aa39f818920bdbabc4e74fb2842a64ecd00cde0a748633014f4258571f4",
																"typeString": "literal_string \"Withdraw amount exceeds balance\""
															},
															"value": "Withdraw amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4c501aa39f818920bdbabc4e74fb2842a64ecd00cde0a748633014f4258571f4",
																"typeString": "literal_string \"Withdraw amount exceeds balance\""
															}
														],
														"id": 495,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4825:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4825:110:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 501,
												"nodeType": "ExpressionStatement",
												"src": "4825:110:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 502,
														"name": "totalAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "4948:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 505,
																"name": "withdrawAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 456,
																"src": "4978:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 503,
																"name": "totalAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 162,
																"src": "4962:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1864,
															"src": "4962:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4962:31:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4948:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 508,
												"nodeType": "ExpressionStatement",
												"src": "4948:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 509,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "5038:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																"typeString": "struct LP.UserInfo storage pointer"
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewards",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 147,
														"src": "5038:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 514,
																"name": "withdrawAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 456,
																"src": "5073:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 512,
																"name": "userTotalAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 440,
																"src": "5053:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1864,
															"src": "5053:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5053:35:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5038:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 517,
												"nodeType": "ExpressionStatement",
												"src": "5038:50:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 518,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "5131:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																"typeString": "struct LP.UserInfo storage pointer"
															}
														},
														"id": 520,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 149,
														"src": "5131:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 524,
																"name": "curLp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "5161:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 521,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 415,
																	"src": "5145:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																		"typeString": "struct LP.UserInfo storage pointer"
																	}
																},
																"id": 522,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 149,
																"src": "5145:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1864,
															"src": "5145:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 525,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5145:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5131:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5131:36:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 528,
															"name": "getTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "5184:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5184:9:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 533,
																"name": "withdrawFeePeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 168,
																"src": "5223:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 530,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 415,
																	"src": "5196:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																		"typeString": "struct LP.UserInfo storage pointer"
																	}
																},
																"id": 531,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "lastDepositedTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 137,
																"src": "5196:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1838,
															"src": "5196:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5196:45:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5184:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 561,
												"nodeType": "IfStatement",
												"src": "5180:213:0",
												"trueBody": {
													"id": 560,
													"nodeType": "Block",
													"src": "5243:150:0",
													"statements": [
														{
															"assignments": [
																537
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 537,
																	"mutability": "mutable",
																	"name": "fee",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 560,
																	"src": "5258:11:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 536,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5258:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 545,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "3130303030",
																		"id": 543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5291:5:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		},
																		"value": "10000"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "313030",
																				"id": 540,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5282:3:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 538,
																				"name": "curLp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 467,
																				"src": "5272:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 539,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1899,
																			"src": "5272:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5272:14:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1925,
																	"src": "5272:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 544,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5272:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5258:39:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 546,
																	"name": "curLp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 467,
																	"src": "5312:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 549,
																			"name": "fee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 537,
																			"src": "5330:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 547,
																			"name": "curLp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 467,
																			"src": "5320:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1864,
																		"src": "5320:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5320:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5312:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 552,
															"nodeType": "ExpressionStatement",
															"src": "5312:22:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 553,
																	"name": "totalLpFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 156,
																	"src": "5349:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 556,
																			"name": "fee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 537,
																			"src": "5377:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 554,
																			"name": "totalLpFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 156,
																			"src": "5362:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1838,
																		"src": "5362:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5362:19:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5349:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 559,
															"nodeType": "ExpressionStatement",
															"src": "5349:32:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 567,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "5425:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 568,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "5425:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 566,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5417:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 565,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5417:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5417:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 570,
															"name": "curLp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "5438:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 562,
															"name": "lp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "5405:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILPToken_$82",
																"typeString": "contract ILPToken"
															}
														},
														"id": 564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 70,
														"src": "5405:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5405:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 572,
												"nodeType": "ExpressionStatement",
												"src": "5405:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 576,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "5470:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5470:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 578,
															"name": "withdrawAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "5482:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 573,
															"name": "poker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "5455:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPokerToken_$49",
																"typeString": "contract IPokerToken"
															}
														},
														"id": 575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 25,
														"src": "5455:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5455:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 580,
												"nodeType": "ExpressionStatement",
												"src": "5455:42:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 581,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "5514:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																"typeString": "struct LP.UserInfo storage pointer"
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "shares",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 135,
														"src": "5514:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 583,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5528:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5514:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"expression": {
														"argumentTypes": null,
														"id": 614,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 610,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "5735:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																	"typeString": "struct LP.UserInfo storage pointer"
																}
															},
															"id": 612,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"memberName": "coinPerShares",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 143,
															"src": "5735:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5756:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5735:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 615,
													"nodeType": "ExpressionStatement",
													"src": "5735:22:0"
												},
												"id": 616,
												"nodeType": "IfStatement",
												"src": "5510:247:0",
												"trueBody": {
													"id": 609,
													"nodeType": "Block",
													"src": "5531:184:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 585,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 415,
																		"src": "5546:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																			"typeString": "struct LP.UserInfo storage pointer"
																		}
																	},
																	"id": 587,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "rewardDebt",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 145,
																	"src": "5546:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 589,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 415,
																				"src": "5575:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																					"typeString": "struct LP.UserInfo storage pointer"
																				}
																			},
																			"id": 590,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 149,
																			"src": "5575:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 591,
																			"name": "accPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 153,
																			"src": "5587:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 588,
																		"name": "decimalMul",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 217,
																		"src": "5564:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5564:35:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5546:53:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 594,
															"nodeType": "ExpressionStatement",
															"src": "5546:53:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 600,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 595,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 415,
																		"src": "5614:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																			"typeString": "struct LP.UserInfo storage pointer"
																		}
																	},
																	"id": 597,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "coinPerShares",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 143,
																	"src": "5614:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 598,
																		"name": "sharesPrice",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 913,
																		"src": "5635:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 599,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5635:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5614:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 601,
															"nodeType": "ExpressionStatement",
															"src": "5614:34:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 602,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 415,
																		"src": "5663:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																			"typeString": "struct LP.UserInfo storage pointer"
																		}
																	},
																	"id": 604,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "coinAtlastUserAction",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 141,
																	"src": "5663:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 605,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 415,
																		"src": "5691:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																			"typeString": "struct LP.UserInfo storage pointer"
																		}
																	},
																	"id": 606,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "rewards",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 147,
																	"src": "5691:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5663:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 608,
															"nodeType": "ExpressionStatement",
															"src": "5663:40:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 617,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "5770:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																"typeString": "struct LP.UserInfo storage pointer"
															}
														},
														"id": 619,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastUserActionTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 139,
														"src": "5770:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 620,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "5796:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 621,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "5796:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5770:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 623,
												"nodeType": "ExpressionStatement",
												"src": "5770:41:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 625,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "5838:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5838:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 627,
															"name": "withdrawAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "5850:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 628,
															"name": "_shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "5866:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 624,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "5829:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5829:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 630,
												"nodeType": "EmitStatement",
												"src": "5824:50:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "2e1a7d4d",
									"id": 632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "_shares",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 632,
												"src": "4136:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4135:17:0"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4160:0:0"
									},
									"scope": 1199,
									"src": "4118:1764:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 648,
										"nodeType": "Block",
										"src": "5941:69:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 645,
															"name": "totalLpFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "5991:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 641,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "5980:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_LP_$1199",
																				"typeString": "contract LP"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_LP_$1199",
																				"typeString": "contract LP"
																			}
																		],
																		"id": 640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5972:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 639,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5972:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 642,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5972:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 637,
																	"name": "lp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 95,
																	"src": "5959:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ILPToken_$82",
																		"typeString": "contract ILPToken"
																	}
																},
																"id": 638,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 61,
																"src": "5959:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5959:27:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1864,
														"src": "5959:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5959:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 636,
												"id": 647,
												"nodeType": "Return",
												"src": "5952:50:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "2059f615",
									"id": 649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lpBalance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5908:2:0"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 649,
												"src": "5932:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5932:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5931:9:0"
									},
									"scope": 1199,
									"src": "5890:120:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 723,
										"nodeType": "Block",
										"src": "6047:561:0",
										"statements": [
											{
												"assignments": [
													653
												],
												"declarations": [
													{
														"constant": false,
														"id": 653,
														"mutability": "mutable",
														"name": "curTime",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 723,
														"src": "6058:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 652,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6058:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 656,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 654,
														"name": "getTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "6076:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6076:9:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6058:27:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 657,
														"name": "curTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 653,
														"src": "6100:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 658,
														"name": "lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "6111:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6100:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 662,
												"nodeType": "IfStatement",
												"src": "6096:64:0",
												"trueBody": {
													"id": 661,
													"nodeType": "Block",
													"src": "6127:33:0",
													"statements": [
														{
															"expression": null,
															"functionReturnParameters": 651,
															"id": 660,
															"nodeType": "Return",
															"src": "6142:7:0"
														}
													]
												}
											},
											{
												"assignments": [
													664
												],
												"declarations": [
													{
														"constant": false,
														"id": 664,
														"mutability": "mutable",
														"name": "lpb",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 723,
														"src": "6170:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 663,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6170:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 667,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 665,
														"name": "lpBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 649,
														"src": "6184:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6184:11:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6170:25:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 668,
														"name": "lpb",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "6210:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 669,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6217:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6210:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 677,
												"nodeType": "IfStatement",
												"src": "6206:86:0",
												"trueBody": {
													"id": 676,
													"nodeType": "Block",
													"src": "6220:72:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 673,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 671,
																	"name": "lastUpdateTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 165,
																	"src": "6235:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 672,
																	"name": "curTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 653,
																	"src": "6252:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6235:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 674,
															"nodeType": "ExpressionStatement",
															"src": "6235:24:0"
														},
														{
															"expression": null,
															"functionReturnParameters": 651,
															"id": 675,
															"nodeType": "Return",
															"src": "6274:7:0"
														}
													]
												}
											},
											{
												"assignments": [
													679
												],
												"declarations": [
													{
														"constant": false,
														"id": 679,
														"mutability": "mutable",
														"name": "multiplier",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 723,
														"src": "6304:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 678,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6304:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 683,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 680,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -17,
														"src": "6325:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 681,
														"name": "lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "6331:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6325:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6304:41:0"
											},
											{
												"assignments": [
													685
												],
												"declarations": [
													{
														"constant": false,
														"id": 685,
														"mutability": "mutable",
														"name": "reward",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 723,
														"src": "6356:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 684,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6356:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 691,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 688,
																"name": "getStakingCoinPerSec",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1079,
																"src": "6388:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6388:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 686,
															"name": "multiplier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "6373:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 687,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1899,
														"src": "6373:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6373:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6356:55:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 692,
														"name": "lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "6422:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 693,
														"name": "curTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 653,
														"src": "6439:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6422:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 695,
												"nodeType": "ExpressionStatement",
												"src": "6422:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 696,
														"name": "totalAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "6457:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 699,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 685,
																"src": "6487:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 697,
																"name": "totalAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 162,
																"src": "6471:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1838,
															"src": "6471:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 700,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6471:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6457:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "6457:37:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 703,
														"name": "accPerShare",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "6505:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 707,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 685,
																		"src": "6544:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 708,
																		"name": "lpb",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 664,
																		"src": "6551:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 706,
																	"name": "divFloor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 200,
																	"src": "6535:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6535:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 704,
																"name": "accPerShare",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 153,
																"src": "6519:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1838,
															"src": "6519:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 710,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6519:37:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6505:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 712,
												"nodeType": "ExpressionStatement",
												"src": "6505:51:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 718,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "6586:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LP_$1199",
																		"typeString": "contract LP"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LP_$1199",
																		"typeString": "contract LP"
																	}
																],
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6578:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 716,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6578:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6578:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 720,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "6593:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 713,
															"name": "poker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "6567:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPokerToken_$49",
																"typeString": "contract IPokerToken"
															}
														},
														"id": 715,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 43,
														"src": "6567:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6567:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 722,
												"nodeType": "ExpressionStatement",
												"src": "6567:33:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "e3161ddd",
									"id": 724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updatePool",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6037:2:0"
									},
									"returnParameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6047:0:0"
									},
									"scope": 1199,
									"src": "6018:590:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 758,
										"nodeType": "Block",
										"src": "6671:259:0",
										"statements": [
											{
												"assignments": [
													730
												],
												"declarations": [
													{
														"constant": false,
														"id": 730,
														"mutability": "mutable",
														"name": "curTime",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 758,
														"src": "6682:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 729,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6682:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 733,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 731,
														"name": "getTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "6700:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6700:9:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6682:27:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 734,
															"name": "lpBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "6724:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 735,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6724:11:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 736,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6739:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6724:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 741,
												"nodeType": "IfStatement",
												"src": "6720:57:0",
												"trueBody": {
													"id": 740,
													"nodeType": "Block",
													"src": "6742:35:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 738,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6764:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 728,
															"id": 739,
															"nodeType": "Return",
															"src": "6757:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													743
												],
												"declarations": [
													{
														"constant": false,
														"id": 743,
														"mutability": "mutable",
														"name": "multiplier",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 758,
														"src": "6787:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 742,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6787:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 747,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 744,
														"name": "curTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "6808:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 745,
														"name": "lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "6818:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6808:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6787:45:0"
											},
											{
												"assignments": [
													749
												],
												"declarations": [
													{
														"constant": false,
														"id": 749,
														"mutability": "mutable",
														"name": "reward",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 758,
														"src": "6843:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 748,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6843:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 755,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 752,
																"name": "getStakingCoinPerSec",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1079,
																"src": "6875:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6875:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 750,
															"name": "multiplier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "6860:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 751,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1899,
														"src": "6860:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6860:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6843:55:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 756,
													"name": "reward",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 749,
													"src": "6916:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 728,
												"id": 757,
												"nodeType": "Return",
												"src": "6909:13:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "fc3e532b",
									"id": 759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingCoin",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6636:2:0"
									},
									"returnParameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 759,
												"src": "6662:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6661:9:0"
									},
									"scope": 1199,
									"src": "6616:314:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 771,
										"nodeType": "Block",
										"src": "6998:61:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 768,
															"name": "totalAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "7039:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"argumentTypes": null,
																	"id": 764,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "7016:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LP_$1199",
																		"typeString": "contract LP"
																	}
																},
																"id": 765,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "pendingCoin",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 759,
																"src": "7016:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																	"typeString": "function () view external returns (uint256)"
																}
															},
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7016:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 767,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1838,
														"src": "7016:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7016:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 763,
												"id": 770,
												"nodeType": "Return",
												"src": "7009:42:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "d201114a",
									"id": 772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalStakingAmount",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6965:2:0"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 772,
												"src": "6989:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6989:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6988:9:0"
									},
									"scope": 1199,
									"src": "6938:121:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 824,
										"nodeType": "Block",
										"src": "7119:387:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 777,
														"name": "totalShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "7134:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 778,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7149:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7134:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 782,
												"nodeType": "IfStatement",
												"src": "7130:44:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 780,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7173:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 776,
													"id": 781,
													"nodeType": "Return",
													"src": "7166:8:0"
												}
											},
											{
												"assignments": [
													784
												],
												"declarations": [
													{
														"constant": false,
														"id": 784,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 824,
														"src": "7185:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
															"typeString": "struct LP.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 783,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 150,
															"src": "7185:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																"typeString": "struct LP.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 789,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 785,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 221,
														"src": "7209:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$150_storage_$",
															"typeString": "mapping(address => struct LP.UserInfo storage ref)"
														}
													},
													"id": 788,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 786,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "7218:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 787,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "7218:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7209:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$150_storage",
														"typeString": "struct LP.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7185:44:0"
											},
											{
												"assignments": [
													791
												],
												"declarations": [
													{
														"constant": false,
														"id": 791,
														"mutability": "mutable",
														"name": "computePer",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 824,
														"src": "7240:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 790,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7240:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 802,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"argumentTypes": null,
																			"id": 795,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "7286:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_LP_$1199",
																				"typeString": "contract LP"
																			}
																		},
																		"id": 796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "pendingCoin",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 759,
																		"src": "7286:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																			"typeString": "function () view external returns (uint256)"
																		}
																	},
																	"id": 797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7286:18:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 798,
																		"name": "lpBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 649,
																		"src": "7305:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7305:11:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 794,
																"name": "divFloor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "7277:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7277:40:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 792,
															"name": "accPerShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "7261:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 793,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1838,
														"src": "7261:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7261:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7240:78:0"
											},
											{
												"assignments": [
													804
												],
												"declarations": [
													{
														"constant": false,
														"id": 804,
														"mutability": "mutable",
														"name": "ben",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 824,
														"src": "7329:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 803,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7329:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 810,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 806,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "7354:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																	"typeString": "struct LP.UserInfo storage pointer"
																}
															},
															"id": 807,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 149,
															"src": "7354:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 808,
															"name": "computePer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "7366:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 805,
														"name": "decimalMul",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "7343:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7343:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7329:48:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 811,
														"name": "ben",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 804,
														"src": "7394:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 812,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 784,
															"src": "7400:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																"typeString": "struct LP.UserInfo storage pointer"
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 145,
														"src": "7400:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7394:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 821,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7497:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 776,
													"id": 822,
													"nodeType": "Return",
													"src": "7490:8:0"
												},
												"id": 823,
												"nodeType": "IfStatement",
												"src": "7390:108:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 817,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 784,
																	"src": "7445:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																		"typeString": "struct LP.UserInfo storage pointer"
																	}
																},
																"id": 818,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "rewardDebt",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 145,
																"src": "7445:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 815,
																"name": "ben",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 804,
																"src": "7437:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1864,
															"src": "7437:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 819,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7437:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"functionReturnParameters": 776,
													"id": 820,
													"nodeType": "Return",
													"src": "7430:31:0"
												}
											}
										]
									},
									"documentation": null,
									"functionSelector": "936b6cec",
									"id": 825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "myBenefits",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7086:2:0"
									},
									"returnParameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 825,
												"src": "7110:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7110:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7109:9:0"
									},
									"scope": 1199,
									"src": "7067:439:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 871,
										"nodeType": "Block",
										"src": "7563:283:0",
										"statements": [
											{
												"assignments": [
													831
												],
												"declarations": [
													{
														"constant": false,
														"id": 831,
														"mutability": "mutable",
														"name": "computePer",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 871,
														"src": "7574:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 830,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7574:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 842,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"argumentTypes": null,
																			"id": 835,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "7620:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_LP_$1199",
																				"typeString": "contract LP"
																			}
																		},
																		"id": 836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "pendingCoin",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 759,
																		"src": "7620:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																			"typeString": "function () view external returns (uint256)"
																		}
																	},
																	"id": 837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7620:18:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 838,
																		"name": "lpBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 649,
																		"src": "7639:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7639:11:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 834,
																"name": "divFloor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "7611:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7611:40:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 832,
															"name": "accPerShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "7595:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 833,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1838,
														"src": "7595:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7595:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7574:78:0"
											},
											{
												"assignments": [
													844
												],
												"declarations": [
													{
														"constant": false,
														"id": 844,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 871,
														"src": "7663:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
															"typeString": "struct LP.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 843,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 150,
															"src": "7663:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																"typeString": "struct LP.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 849,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 845,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 221,
														"src": "7687:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$150_storage_$",
															"typeString": "mapping(address => struct LP.UserInfo storage ref)"
														}
													},
													"id": 848,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 846,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "7696:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 847,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "7696:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7687:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$150_storage",
														"typeString": "struct LP.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7663:44:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 850,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "7721:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																"typeString": "struct LP.UserInfo storage pointer"
															}
														},
														"id": 851,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "shares",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 135,
														"src": "7721:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 852,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7736:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7721:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 856,
												"nodeType": "IfStatement",
												"src": "7718:29:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 854,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7746:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 829,
													"id": 855,
													"nodeType": "Return",
													"src": "7739:8:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 867,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 844,
																"src": "7825:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																	"typeString": "struct LP.UserInfo storage pointer"
																}
															},
															"id": 868,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewards",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 147,
															"src": "7825:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 863,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 844,
																		"src": "7804:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																			"typeString": "struct LP.UserInfo storage pointer"
																		}
																	},
																	"id": 864,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "rewardDebt",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 145,
																	"src": "7804:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 858,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 844,
																				"src": "7776:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$150_storage_ptr",
																					"typeString": "struct LP.UserInfo storage pointer"
																				}
																			},
																			"id": 859,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 149,
																			"src": "7776:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 860,
																			"name": "computePer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 831,
																			"src": "7788:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 857,
																		"name": "decimalMul",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 217,
																		"src": "7765:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 861,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7765:34:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1864,
																"src": "7765:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7765:55:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 866,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1838,
														"src": "7765:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7765:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 829,
												"id": 870,
												"nodeType": "Return",
												"src": "7758:80:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "47f1aae7",
									"id": 872,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "myValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7530:2:0"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 872,
												"src": "7554:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7554:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7553:9:0"
									},
									"scope": 1199,
									"src": "7514:332:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 912,
										"nodeType": "Block",
										"src": "7907:228:0",
										"statements": [
											{
												"assignments": [
													878
												],
												"declarations": [
													{
														"constant": false,
														"id": 878,
														"mutability": "mutable",
														"name": "lpb",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 912,
														"src": "7918:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 877,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7918:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 881,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 879,
														"name": "lpBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 649,
														"src": "7932:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7932:11:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7918:25:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 882,
														"name": "lpb",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "7958:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 883,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7965:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7958:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 887,
												"nodeType": "IfStatement",
												"src": "7954:22:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 885,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7975:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 876,
													"id": 886,
													"nodeType": "Return",
													"src": "7968:8:0"
												}
											},
											{
												"assignments": [
													889
												],
												"declarations": [
													{
														"constant": false,
														"id": 889,
														"mutability": "mutable",
														"name": "computePer",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 912,
														"src": "7987:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 888,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7987:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 899,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"argumentTypes": null,
																			"id": 893,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "8033:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_LP_$1199",
																				"typeString": "contract LP"
																			}
																		},
																		"id": 894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "pendingCoin",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 759,
																		"src": "8033:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																			"typeString": "function () view external returns (uint256)"
																		}
																	},
																	"id": 895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8033:18:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 896,
																	"name": "lpb",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 878,
																	"src": "8052:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 892,
																"name": "divFloor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "8024:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 897,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8024:32:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 890,
															"name": "accPerShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "8008:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 891,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1838,
														"src": "8008:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8008:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7987:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 909,
															"name": "totalShares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "8115:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 906,
																	"name": "computePer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 889,
																	"src": "8099:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 902,
																				"name": "getEther",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 948,
																				"src": "8083:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																					"typeString": "function () view returns (uint256)"
																				}
																			},
																			"id": 903,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8083:10:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 900,
																			"name": "lpb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 878,
																			"src": "8075:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 901,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1899,
																		"src": "8075:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8075:19:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 905,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1899,
																"src": "8075:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 907,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8075:35:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 908,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1925,
														"src": "8075:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8075:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 876,
												"id": 911,
												"nodeType": "Return",
												"src": "8068:59:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "77926869",
									"id": 913,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sharesPrice",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7874:2:0"
									},
									"returnParameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 913,
												"src": "7898:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7898:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7897:9:0"
									},
									"scope": 1199,
									"src": "7854:281:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 920,
										"nodeType": "Block",
										"src": "8219:29:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 918,
													"name": "now",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -17,
													"src": "8237:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 917,
												"id": 919,
												"nodeType": "Return",
												"src": "8230:10:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "557ed1ba",
									"id": 921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTime",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8186:2:0"
									},
									"returnParameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 921,
												"src": "8210:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8210:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8209:9:0"
									},
									"scope": 1199,
									"src": "8170:78:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 934,
										"nodeType": "Block",
										"src": "8310:56:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 930,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "8352:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LP_$1199",
																		"typeString": "contract LP"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LP_$1199",
																		"typeString": "contract LP"
																	}
																],
																"id": 929,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8344:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 928,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8344:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8344:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 926,
															"name": "poker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "8328:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IPokerToken_$49",
																"typeString": "contract IPokerToken"
															}
														},
														"id": 927,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "8328:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8328:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 925,
												"id": 933,
												"nodeType": "Return",
												"src": "8321:37:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "7b27c1d1",
									"id": 935,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPkBalance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8277:2:0"
									},
									"returnParameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 935,
												"src": "8301:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8301:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8300:9:0"
									},
									"scope": 1199,
									"src": "8256:110:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 947,
										"nodeType": "Block",
										"src": "8424:47:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "3130",
														"id": 940,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8442:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 943,
																"name": "decimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 177,
																"src": "8454:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8446:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 941,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8446:7:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 944,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8446:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8442:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 939,
												"id": 946,
												"nodeType": "Return",
												"src": "8435:28:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "de0ff7c5",
									"id": 948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getEther",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8391:2:0"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 948,
												"src": "8415:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8415:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8414:9:0"
									},
									"scope": 1199,
									"src": "8374:97:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1078,
										"nodeType": "Block",
										"src": "8575:849:0",
										"statements": [
											{
												"assignments": [
													954
												],
												"declarations": [
													{
														"constant": false,
														"id": 954,
														"mutability": "mutable",
														"name": "sec",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1078,
														"src": "8586:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 953,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8586:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 958,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_rational_86400_by_1",
														"typeString": "int_const 86400"
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "3234",
														"id": 955,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8600:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_24_by_1",
															"typeString": "int_const 24"
														},
														"value": "24"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "33363030",
														"id": 956,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8605:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3600_by_1",
															"typeString": "int_const 3600"
														},
														"value": "3600"
													},
													"src": "8600:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_86400_by_1",
														"typeString": "int_const 86400"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8586:23:0"
											},
											{
												"assignments": [
													960
												],
												"declarations": [
													{
														"constant": false,
														"id": 960,
														"mutability": "mutable",
														"name": "curTime",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1078,
														"src": "8620:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 959,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8620:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 963,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 961,
														"name": "getTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "8638:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8638:9:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8620:27:0"
											},
											{
												"assignments": [
													965
												],
												"declarations": [
													{
														"constant": false,
														"id": 965,
														"mutability": "mutable",
														"name": "coin",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1078,
														"src": "8658:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 964,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8658:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 967,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "31",
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8673:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8658:16:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 968,
														"name": "stakingSwitch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "8691:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 969,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8708:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "8691:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 994,
												"nodeType": "IfStatement",
												"src": "8687:172:0",
												"trueBody": {
													"id": 993,
													"nodeType": "Block",
													"src": "8715:144:0",
													"statements": [
														{
															"assignments": [
																972
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 972,
																	"mutability": "mutable",
																	"name": "maxCoin",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 993,
																	"src": "8730:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 971,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8730:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 974,
															"initialValue": {
																"argumentTypes": null,
																"hexValue": "313232333030",
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8748:6:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_122300_by_1",
																	"typeString": "int_const 122300"
																},
																"value": "122300"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8730:24:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 975,
																	"name": "coin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 965,
																	"src": "8769:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 987,
																			"name": "sec",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 954,
																			"src": "8817:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"components": [
																						{
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 983,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"hexValue": "3130",
																								"id": 978,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "8789:2:0",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_10_by_1",
																									"typeString": "int_const 10"
																								},
																								"value": "10"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "**",
																							"rightExpression": {
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"id": 981,
																										"name": "decimals",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 177,
																										"src": "8801:8:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"id": 980,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "8793:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 979,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "8793:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": null,
																											"typeString": null
																										}
																									}
																								},
																								"id": 982,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "8793:17:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "8789:21:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 984,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "8788:23:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 976,
																					"name": "maxCoin",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 972,
																					"src": "8776:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 977,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1899,
																				"src": "8776:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 985,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8776:36:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 986,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1925,
																		"src": "8776:40:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8776:45:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8769:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 990,
															"nodeType": "ExpressionStatement",
															"src": "8769:52:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 991,
																"name": "coin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 965,
																"src": "8843:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 952,
															"id": 992,
															"nodeType": "Return",
															"src": "8836:11:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 995,
														"name": "curTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "8905:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1000,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 996,
																	"name": "stakingStartTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 171,
																	"src": "8916:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_rational_300_by_1",
																		"typeString": "int_const 300"
																	},
																	"id": 999,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"hexValue": "3630",
																		"id": 997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8935:2:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_60_by_1",
																			"typeString": "int_const 60"
																		},
																		"value": "60"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "35",
																		"id": 998,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8940:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_5_by_1",
																			"typeString": "int_const 5"
																		},
																		"value": "5"
																	},
																	"src": "8935:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_300_by_1",
																		"typeString": "int_const 300"
																	}
																},
																"src": "8916:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1001,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8915:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8905:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1031,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1024,
															"name": "curTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "9112:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1025,
																		"name": "stakingStartTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 171,
																		"src": "9123:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_rational_600_by_1",
																			"typeString": "int_const 600"
																		},
																		"id": 1028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"hexValue": "3630",
																			"id": 1026,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9142:2:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_60_by_1",
																				"typeString": "int_const 60"
																			},
																			"value": "60"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "3130",
																			"id": 1027,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9147:2:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "9142:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_600_by_1",
																			"typeString": "int_const 600"
																		}
																	},
																	"src": "9123:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1030,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "9122:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9112:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1073,
														"nodeType": "Block",
														"src": "9277:118:0",
														"statements": [
															{
																"assignments": [
																	1054
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1054,
																		"mutability": "mutable",
																		"name": "maxCoin",
																		"nodeType": "VariableDeclaration",
																		"overrides": null,
																		"scope": 1073,
																		"src": "9292:15:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1053,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9292:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"value": null,
																		"visibility": "internal"
																	}
																],
																"id": 1056,
																"initialValue": {
																	"argumentTypes": null,
																	"hexValue": "313232333030",
																	"id": 1055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9310:6:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_122300_by_1",
																		"typeString": "int_const 122300"
																	},
																	"value": "122300"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "9292:24:0"
															},
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 1071,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 1057,
																		"name": "coin",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 965,
																		"src": "9331:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1069,
																				"name": "sec",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 954,
																				"src": "9379:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"components": [
																							{
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1065,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"argumentTypes": null,
																									"hexValue": "3130",
																									"id": 1060,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "9351:2:0",
																									"subdenomination": null,
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "**",
																								"rightExpression": {
																									"argumentTypes": null,
																									"arguments": [
																										{
																											"argumentTypes": null,
																											"id": 1063,
																											"name": "decimals",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 177,
																											"src": "9363:8:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"id": 1062,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"nodeType": "ElementaryTypeNameExpression",
																										"src": "9355:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_uint256_$",
																											"typeString": "type(uint256)"
																										},
																										"typeName": {
																											"id": 1061,
																											"name": "uint256",
																											"nodeType": "ElementaryTypeName",
																											"src": "9355:7:0",
																											"typeDescriptions": {
																												"typeIdentifier": null,
																												"typeString": null
																											}
																										}
																									},
																									"id": 1064,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "typeConversion",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "9355:17:0",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "9351:21:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1066,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "9350:23:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 1058,
																						"name": "maxCoin",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1054,
																						"src": "9338:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1059,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1899,
																					"src": "9338:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1067,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9338:36:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1068,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1925,
																			"src": "9338:40:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1070,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9338:45:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9331:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1072,
																"nodeType": "ExpressionStatement",
																"src": "9331:52:0"
															}
														]
													},
													"id": 1074,
													"nodeType": "IfStatement",
													"src": "9108:287:0",
													"trueBody": {
														"id": 1052,
														"nodeType": "Block",
														"src": "9152:119:0",
														"statements": [
															{
																"assignments": [
																	1033
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1033,
																		"mutability": "mutable",
																		"name": "maxCoin",
																		"nodeType": "VariableDeclaration",
																		"overrides": null,
																		"scope": 1052,
																		"src": "9167:15:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1032,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9167:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"value": null,
																		"visibility": "internal"
																	}
																],
																"id": 1035,
																"initialValue": {
																	"argumentTypes": null,
																	"hexValue": "31343030303030",
																	"id": 1034,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9185:7:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1400000_by_1",
																		"typeString": "int_const 1400000"
																	},
																	"value": "1400000"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "9167:25:0"
															},
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 1050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 1036,
																		"name": "coin",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 965,
																		"src": "9207:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1048,
																				"name": "sec",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 954,
																				"src": "9255:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"components": [
																							{
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1044,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"argumentTypes": null,
																									"hexValue": "3130",
																									"id": 1039,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "9227:2:0",
																									"subdenomination": null,
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "**",
																								"rightExpression": {
																									"argumentTypes": null,
																									"arguments": [
																										{
																											"argumentTypes": null,
																											"id": 1042,
																											"name": "decimals",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 177,
																											"src": "9239:8:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"id": 1041,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"nodeType": "ElementaryTypeNameExpression",
																										"src": "9231:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_uint256_$",
																											"typeString": "type(uint256)"
																										},
																										"typeName": {
																											"id": 1040,
																											"name": "uint256",
																											"nodeType": "ElementaryTypeName",
																											"src": "9231:7:0",
																											"typeDescriptions": {
																												"typeIdentifier": null,
																												"typeString": null
																											}
																										}
																									},
																									"id": 1043,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "typeConversion",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "9231:17:0",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "9227:21:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1045,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "9226:23:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"id": 1037,
																						"name": "maxCoin",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1033,
																						"src": "9214:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1038,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1899,
																					"src": "9214:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1046,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9214:36:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1047,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1925,
																			"src": "9214:40:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1049,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9214:45:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9207:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1051,
																"nodeType": "ExpressionStatement",
																"src": "9207:52:0"
															}
														]
													}
												},
												"id": 1075,
												"nodeType": "IfStatement",
												"src": "8901:494:0",
												"trueBody": {
													"id": 1023,
													"nodeType": "Block",
													"src": "8944:119:0",
													"statements": [
														{
															"assignments": [
																1004
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1004,
																	"mutability": "mutable",
																	"name": "maxCoin",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1023,
																	"src": "8959:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1003,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8959:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1006,
															"initialValue": {
																"argumentTypes": null,
																"hexValue": "32383030303030",
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8977:7:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2800000_by_1",
																	"typeString": "int_const 2800000"
																},
																"value": "2800000"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8959:25:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1021,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1007,
																	"name": "coin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 965,
																	"src": "8999:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1019,
																			"name": "sec",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 954,
																			"src": "9047:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"components": [
																						{
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1015,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"hexValue": "3130",
																								"id": 1010,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "9019:2:0",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_10_by_1",
																									"typeString": "int_const 10"
																								},
																								"value": "10"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "**",
																							"rightExpression": {
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"id": 1013,
																										"name": "decimals",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 177,
																										"src": "9031:8:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"id": 1012,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "9023:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 1011,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "9023:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": null,
																											"typeString": null
																										}
																									}
																								},
																								"id": 1014,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "9023:17:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "9019:21:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1016,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "9018:23:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1008,
																					"name": "maxCoin",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1004,
																					"src": "9006:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1009,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1899,
																				"src": "9006:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1017,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9006:36:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1018,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1925,
																		"src": "9006:40:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1020,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9006:45:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8999:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1022,
															"nodeType": "ExpressionStatement",
															"src": "8999:52:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1076,
													"name": "coin",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 965,
													"src": "9412:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 952,
												"id": 1077,
												"nodeType": "Return",
												"src": "9405:11:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "b8a3b366",
									"id": 1079,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakingCoinPerSec",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8542:2:0"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1079,
												"src": "8566:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8566:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8565:9:0"
									},
									"scope": 1199,
									"src": "8513:911:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1115,
										"nodeType": "Block",
										"src": "9482:211:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1085,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "9501:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1086,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "9501:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1087,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "9515:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9501:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1084,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9493:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9493:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1090,
												"nodeType": "ExpressionStatement",
												"src": "9493:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1092,
																"name": "newAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1081,
																"src": "9540:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1095,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9562:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1094,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9554:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1093,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9554:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1096,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9554:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9540:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "73657420746f2030",
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9566:10:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_73168d6b89bec365acf8a0115b3cf0d6ead8e7e0e400945c545c23a5ccc4671a",
																"typeString": "literal_string \"set to 0\""
															},
															"value": "set to 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_73168d6b89bec365acf8a0115b3cf0d6ead8e7e0e400945c545c23a5ccc4671a",
																"typeString": "literal_string \"set to 0\""
															}
														],
														"id": 1091,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9532:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9532:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1100,
												"nodeType": "ExpressionStatement",
												"src": "9532:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1102,
																"name": "newAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1081,
																"src": "9596:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "307864656164",
																		"id": 1105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9618:6:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_57005_by_1",
																			"typeString": "int_const 57005"
																		},
																		"value": "0xdead"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_57005_by_1",
																			"typeString": "int_const 57005"
																		}
																	],
																	"id": 1104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9610:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1103,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9610:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1106,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9610:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9596:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "73657420746f20307864656164",
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9627:15:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_80be194a8258e69f2b8ac94e264d1c801cf00d162f7dd64e4415bcf938877e29",
																"typeString": "literal_string \"set to 0xdead\""
															},
															"value": "set to 0xdead"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_80be194a8258e69f2b8ac94e264d1c801cf00d162f7dd64e4415bcf938877e29",
																"typeString": "literal_string \"set to 0xdead\""
															}
														],
														"id": 1101,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9588:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9588:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1110,
												"nodeType": "ExpressionStatement",
												"src": "9588:55:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1111,
														"name": "newContractAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "9654:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1112,
														"name": "newAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1081,
														"src": "9675:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9654:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1114,
												"nodeType": "ExpressionStatement",
												"src": "9654:31:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "8705fcd4",
									"id": 1116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeAddress",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "newAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1116,
												"src": "9455:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9455:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9454:20:0"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9482:0:0"
									},
									"scope": 1199,
									"src": "9432:261:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1152,
										"nodeType": "Block",
										"src": "9747:222:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1122,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "9766:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "9766:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1124,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "9780:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9766:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1121,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9758:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9758:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1127,
												"nodeType": "ExpressionStatement",
												"src": "9758:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1129,
																"name": "newContractAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "9805:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9835:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9827:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1130,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9827:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1133,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9827:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9805:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "7472616e7366657220746f2030",
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9839:15:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01bc61e3f4d850e3eb22a5a0ac43476dcc54e69adac1202623178f29549b4b44",
																"typeString": "literal_string \"transfer to 0\""
															},
															"value": "transfer to 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01bc61e3f4d850e3eb22a5a0ac43476dcc54e69adac1202623178f29549b4b44",
																"typeString": "literal_string \"transfer to 0\""
															}
														],
														"id": 1128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9797:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9797:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1137,
												"nodeType": "ExpressionStatement",
												"src": "9797:58:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1139,
																"name": "totalLpFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "9874:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1140,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1118,
																"src": "9888:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9874:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6e6f7420656e6f756768",
															"id": 1142,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9896:12:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3babbd11c73bab7b719fecdd156739310b31ddf276e563dd1f6744864622ba56",
																"typeString": "literal_string \"not enough\""
															},
															"value": "not enough"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3babbd11c73bab7b719fecdd156739310b31ddf276e563dd1f6744864622ba56",
																"typeString": "literal_string \"not enough\""
															}
														],
														"id": 1138,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9866:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9866:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1144,
												"nodeType": "ExpressionStatement",
												"src": "9866:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1148,
															"name": "newContractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "9934:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1149,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1118,
															"src": "9954:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1145,
															"name": "lp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "9922:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ILPToken_$82",
																"typeString": "contract ILPToken"
															}
														},
														"id": 1147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 70,
														"src": "9922:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9922:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1151,
												"nodeType": "ExpressionStatement",
												"src": "9922:39:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "0b26b6a8",
									"id": 1153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferLpFee",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1153,
												"src": "9724:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9724:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9723:16:0"
									},
									"returnParameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9747:0:0"
									},
									"scope": 1199,
									"src": "9701:268:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1181,
										"nodeType": "Block",
										"src": "10021:238:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1158,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "10036:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "10036:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1160,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "10050:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10036:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1180,
												"nodeType": "IfStatement",
												"src": "10032:220:0",
												"trueBody": {
													"id": 1179,
													"nodeType": "Block",
													"src": "10057:195:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"id": 1162,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1155,
																"src": "10076:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1173,
																"nodeType": "Block",
																"src": "10151:55:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 1171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 1169,
																				"name": "stakingStartTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 171,
																				"src": "10170:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 1170,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10189:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "10170:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1172,
																		"nodeType": "ExpressionStatement",
																		"src": "10170:20:0"
																	}
																]
															},
															"id": 1174,
															"nodeType": "IfStatement",
															"src": "10072:134:0",
															"trueBody": {
																"id": 1168,
																"nodeType": "Block",
																"src": "10082:63:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 1166,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 1163,
																				"name": "stakingStartTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 171,
																				"src": "10101:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1164,
																					"name": "getTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 921,
																					"src": "10120:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																						"typeString": "function () view returns (uint256)"
																					}
																				},
																				"id": 1165,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10120:9:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10101:28:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1167,
																		"nodeType": "ExpressionStatement",
																		"src": "10101:28:0"
																	}
																]
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1175,
																	"name": "stakingSwitch",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 174,
																	"src": "10220:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 1176,
																	"name": "flag",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1155,
																	"src": "10236:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "10220:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1178,
															"nodeType": "ExpressionStatement",
															"src": "10220:20:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"functionSelector": "81ad5718",
									"id": 1182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setStakingSwitch",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "flag",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1182,
												"src": "10003:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1154,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10003:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10002:11:0"
									},
									"returnParameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10021:0:0"
									},
									"scope": 1199,
									"src": "9977:282:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1197,
										"nodeType": "Block",
										"src": "10303:78:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1187,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "10318:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1188,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "10318:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1189,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "10332:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10318:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1196,
												"nodeType": "IfStatement",
												"src": "10314:60:0",
												"trueBody": {
													"id": 1195,
													"nodeType": "Block",
													"src": "10339:35:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1191,
																	"name": "lp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 95,
																	"src": "10354:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ILPToken_$82",
																		"typeString": "contract ILPToken"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 1192,
																	"name": "_lp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1184,
																	"src": "10359:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ILPToken_$82",
																		"typeString": "contract ILPToken"
																	}
																},
																"src": "10354:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ILPToken_$82",
																	"typeString": "contract ILPToken"
																}
															},
															"id": 1194,
															"nodeType": "ExpressionStatement",
															"src": "10354:8:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"functionSelector": "f4c2baa9",
									"id": 1198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setLp",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "_lp",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1198,
												"src": "10282:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ILPToken_$82",
													"typeString": "contract ILPToken"
												},
												"typeName": {
													"contractScope": null,
													"id": 1183,
													"name": "ILPToken",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 82,
													"src": "10282:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ILPToken_$82",
														"typeString": "contract ILPToken"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10281:14:0"
									},
									"returnParameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10303:0:0"
									},
									"scope": 1199,
									"src": "10267:114:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1200,
							"src": "1096:9288:0"
						}
					],
					"src": "35:10351:0"
				},
				"id": 0
			},
			"_lib/Context.sol": {
				"ast": {
					"absolutePath": "_lib/Context.sol",
					"exportedSymbols": {
						"Context": [
							1222
						]
					},
					"id": 1223,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1201,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1222,
							"linearizedBaseContracts": [
								1222
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1209,
										"nodeType": "Block",
										"src": "675:36:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1206,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "693:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "693:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 1205,
												"id": 1208,
												"nodeType": "Return",
												"src": "686:17:1"
											}
										]
									},
									"documentation": null,
									"id": 1210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "624:2:1"
									},
									"returnParameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1210,
												"src": "658:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:15:1",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "657:17:1"
									},
									"scope": 1222,
									"src": "605:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1220,
										"nodeType": "Block",
										"src": "784:168:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1215,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "795:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$1222",
														"typeString": "contract Context"
													}
												},
												"id": 1216,
												"nodeType": "ExpressionStatement",
												"src": "795:4:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1217,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "936:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "936:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1214,
												"id": 1219,
												"nodeType": "Return",
												"src": "929:15:1"
											}
										]
									},
									"documentation": null,
									"id": 1221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "736:2:1"
									},
									"returnParameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1221,
												"src": "770:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1212,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "770:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "769:14:1"
									},
									"scope": 1222,
									"src": "719:233:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1223,
							"src": "572:383:1"
						}
					],
					"src": "35:920:1"
				},
				"id": 1
			},
			"_lib/ERC20.sol": {
				"ast": {
					"absolutePath": "_lib/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							1656
						]
					},
					"id": 1657,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1224,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:2"
						},
						{
							"absolutePath": "_lib/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 1225,
							"nodeType": "ImportDirective",
							"scope": 1657,
							"sourceUnit": 2202,
							"src": "62:24:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "_lib/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 1226,
							"nodeType": "ImportDirective",
							"scope": 1657,
							"sourceUnit": 1735,
							"src": "88:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "_lib/Context.sol",
							"file": "./Context.sol",
							"id": 1227,
							"nodeType": "ImportDirective",
							"scope": 1657,
							"sourceUnit": 1223,
							"src": "112:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1228,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1734,
										"src": "157:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1734",
											"typeString": "contract IERC20"
										}
									},
									"id": 1229,
									"nodeType": "InheritanceSpecifier",
									"src": "157:6:2"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1230,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1222,
										"src": "165:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$1222",
											"typeString": "contract Context"
										}
									},
									"id": 1231,
									"nodeType": "InheritanceSpecifier",
									"src": "165:7:2"
								}
							],
							"contractDependencies": [
								1222,
								1734
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1656,
							"linearizedBaseContracts": [
								1656,
								1222,
								1734
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1234,
									"libraryName": {
										"contractScope": null,
										"id": 1232,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1948,
										"src": "186:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1948",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "180:27:2",
									"typeName": {
										"id": 1233,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "199:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 1238,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1656,
									"src": "215:46:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1237,
										"keyType": {
											"id": 1235,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "223:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "215:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1236,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "234:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1244,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1656,
									"src": "268:68:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1243,
										"keyType": {
											"id": 1239,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "276:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "268:47:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 1242,
											"keyType": {
												"id": 1240,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "295:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "287:27:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 1241,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "306:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1246,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1656,
									"src": "345:29:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1245,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "345:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1247,
										"nodeType": "StructuredDocumentation",
										"src": "383:56:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1249,
									"mutability": "mutable",
									"name": "name",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1656,
									"src": "445:18:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1248,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "445:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1250,
										"nodeType": "StructuredDocumentation",
										"src": "472:105:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 1252,
									"mutability": "mutable",
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1656,
									"src": "583:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1251,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "583:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1253,
										"nodeType": "StructuredDocumentation",
										"src": "612:624:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 1255,
									"mutability": "mutable",
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1656,
									"src": "1242:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1254,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1242:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1301,
										"nodeType": "Block",
										"src": "1692:217:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1267,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1249,
														"src": "1703:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1268,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1258,
														"src": "1710:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1703:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1270,
												"nodeType": "ExpressionStatement",
												"src": "1703:12:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1271,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1252,
														"src": "1726:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1272,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "1735:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1726:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1274,
												"nodeType": "ExpressionStatement",
												"src": "1726:16:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1275,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1255,
														"src": "1753:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1276,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1262,
														"src": "1764:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1753:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1278,
												"nodeType": "ExpressionStatement",
												"src": "1753:20:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1279,
														"name": "_supply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1264,
														"src": "1784:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1280,
															"name": "_supply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1264,
															"src": "1794:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "3130",
																"id": 1281,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1804:2:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1284,
																		"name": "_decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1262,
																		"src": "1816:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 1283,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1808:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1282,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1808:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1808:18:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1804:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1794:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1784:42:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1289,
												"nodeType": "ExpressionStatement",
												"src": "1784:42:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1290,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1246,
														"src": "1837:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1291,
														"name": "_supply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1264,
														"src": "1852:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1837:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1293,
												"nodeType": "ExpressionStatement",
												"src": "1837:22:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1294,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "1870:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1297,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1295,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "1880:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1880:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1870:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1298,
														"name": "_supply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1264,
														"src": "1894:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1870:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1300,
												"nodeType": "ExpressionStatement",
												"src": "1870:31:2"
											}
										]
									},
									"documentation": {
										"id": 1256,
										"nodeType": "StructuredDocumentation",
										"src": "1272:274:2",
										"text": " @dev Sets the values for {_name} and {_symbol}, {_decimals}\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."
									},
									"id": 1302,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "_name",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1302,
												"src": "1574:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1257,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1574:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "_symbol",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1302,
												"src": "1604:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1259,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1604:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "_decimals",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1302,
												"src": "1636:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1261,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1636:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "_supply",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1302,
												"src": "1662:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1662:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1563:121:2"
									},
									"returnParameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1692:0:2"
									},
									"scope": 1656,
									"src": "1552:357:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1665
									],
									"body": {
										"id": 1311,
										"nodeType": "Block",
										"src": "2038:38:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1309,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1246,
													"src": "2056:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1308,
												"id": 1310,
												"nodeType": "Return",
												"src": "2049:19:2"
											}
										]
									},
									"documentation": {
										"id": 1303,
										"nodeType": "StructuredDocumentation",
										"src": "1917:51:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 1312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1305,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2011:8:2"
									},
									"parameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1994:2:2"
									},
									"returnParameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1312,
												"src": "2029:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2029:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2028:9:2"
									},
									"scope": 1656,
									"src": "1974:102:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1673
									],
									"body": {
										"id": 1325,
										"nodeType": "Block",
										"src": "2256:43:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1321,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1238,
														"src": "2274:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1323,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1322,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1315,
														"src": "2284:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2274:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1320,
												"id": 1324,
												"nodeType": "Return",
												"src": "2267:24:2"
											}
										]
									},
									"documentation": {
										"id": 1313,
										"nodeType": "StructuredDocumentation",
										"src": "2084:49:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 1326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1317,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2215:8:2"
									},
									"parameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1326,
												"src": "2158:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2158:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2157:16:2"
									},
									"returnParameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1326,
												"src": "2242:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2242:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2241:9:2"
									},
									"scope": 1656,
									"src": "2139:160:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1683
									],
									"body": {
										"id": 1346,
										"nodeType": "Block",
										"src": "2620:78:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1338,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1210,
																"src": "2641:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2641:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1340,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1329,
															"src": "2655:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1341,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1331,
															"src": "2660:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1337,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1508,
														"src": "2631:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2631:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1343,
												"nodeType": "ExpressionStatement",
												"src": "2631:37:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2686:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1336,
												"id": 1345,
												"nodeType": "Return",
												"src": "2679:11:2"
											}
										]
									},
									"documentation": {
										"id": 1327,
										"nodeType": "StructuredDocumentation",
										"src": "2307:194:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `_to` cannot be the zero address.\n - the caller must have a balance of at least `_amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 1347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1333,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2582:8:2"
									},
									"parameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1347,
												"src": "2525:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2525:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1347,
												"src": "2538:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2538:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2524:30:2"
									},
									"returnParameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1347,
												"src": "2609:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1334,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2609:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2608:6:2"
									},
									"scope": 1656,
									"src": "2507:191:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1693
									],
									"body": {
										"id": 1364,
										"nodeType": "Block",
										"src": "2896:55:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1358,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "2914:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1360,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1359,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1350,
															"src": "2926:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2914:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1362,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1361,
														"name": "_spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1352,
														"src": "2934:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2914:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1357,
												"id": 1363,
												"nodeType": "Return",
												"src": "2907:36:2"
											}
										]
									},
									"documentation": {
										"id": 1348,
										"nodeType": "StructuredDocumentation",
										"src": "2706:49:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 1365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1354,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2855:8:2"
									},
									"parameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1365,
												"src": "2780:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2780:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1365,
												"src": "2796:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2796:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2779:34:2"
									},
									"returnParameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1365,
												"src": "2882:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2881:9:2"
									},
									"scope": 1656,
									"src": "2761:190:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1703
									],
									"body": {
										"id": 1385,
										"nodeType": "Block",
										"src": "3216:82:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1377,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1210,
																"src": "3236:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3236:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1379,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1368,
															"src": "3250:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1380,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1370,
															"src": "3260:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1376,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1553,
														"src": "3227:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3227:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1382,
												"nodeType": "ExpressionStatement",
												"src": "3227:41:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3286:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1375,
												"id": 1384,
												"nodeType": "Return",
												"src": "3279:11:2"
											}
										]
									},
									"documentation": {
										"id": 1366,
										"nodeType": "StructuredDocumentation",
										"src": "2959:134:2",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `_spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 1386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1372,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3178:8:2"
									},
									"parameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1386,
												"src": "3116:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3116:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1386,
												"src": "3134:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3134:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3115:35:2"
									},
									"returnParameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1386,
												"src": "3205:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1373,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3205:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3204:6:2"
									},
									"scope": 1656,
									"src": "3099:199:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1715
									],
									"body": {
										"id": 1438,
										"nodeType": "Block",
										"src": "3905:270:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1400,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1389,
																	"src": "3924:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1403,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3941:1:2",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1402,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3933:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1401,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3933:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3933:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "3924:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1406,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1391,
																	"src": "3947:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3962:1:2",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3954:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1407,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3954:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3954:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "3947:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3924:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1399,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3916:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3916:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1414,
												"nodeType": "ExpressionStatement",
												"src": "3916:49:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1416,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1389,
															"src": "4001:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1417,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1210,
																"src": "4021:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4021:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1426,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1393,
																	"src": "4085:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 1419,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1244,
																			"src": "4048:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1421,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 1420,
																			"name": "_from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1389,
																			"src": "4060:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4048:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1424,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1422,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1210,
																			"src": "4067:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 1423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4067:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4048:32:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1864,
																"src": "4048:36:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4048:45:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1415,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1553,
														"src": "3978:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3978:126:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1429,
												"nodeType": "ExpressionStatement",
												"src": "3978:126:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1431,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1389,
															"src": "4125:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1432,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1391,
															"src": "4132:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1433,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1393,
															"src": "4137:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1430,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1508,
														"src": "4115:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4115:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1435,
												"nodeType": "ExpressionStatement",
												"src": "4115:30:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4163:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1398,
												"id": 1437,
												"nodeType": "Return",
												"src": "4156:11:2"
											}
										]
									},
									"documentation": {
										"id": 1387,
										"nodeType": "StructuredDocumentation",
										"src": "3306:459:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `_from` and `_to` cannot be the zero address.\n - `_from` must have a balance of at least `_amount`.\n - the caller must have allowance for `_from`'s tokens of at least\n `_amount`."
									},
									"functionSelector": "23b872dd",
									"id": 1439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1395,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3881:8:2"
									},
									"parameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1439,
												"src": "3803:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3803:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1439,
												"src": "3827:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3827:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1439,
												"src": "3849:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3792:79:2"
									},
									"returnParameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1439,
												"src": "3899:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1396,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3899:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3898:6:2"
									},
									"scope": 1656,
									"src": "3771:404:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1507,
										"nodeType": "Block",
										"src": "4759:345:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1450,
																"name": "_from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1442,
																"src": "4778:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1453,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4795:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4787:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1451,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4787:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1454,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4787:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "4778:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "7472616e736665722066726f6d2030",
															"id": 1456,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4799:17:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_088211d17706da49ecdf58f6ac409477cc9130fd43883e0443984cdf77b1dbc9",
																"typeString": "literal_string \"transfer from 0\""
															},
															"value": "transfer from 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_088211d17706da49ecdf58f6ac409477cc9130fd43883e0443984cdf77b1dbc9",
																"typeString": "literal_string \"transfer from 0\""
															}
														],
														"id": 1449,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4770:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4770:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1458,
												"nodeType": "ExpressionStatement",
												"src": "4770:47:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1460,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1444,
																"src": "4836:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4851:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4843:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1461,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4843:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1464,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4843:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "4836:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "7472616e7366657220746f2030",
															"id": 1466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4855:15:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01bc61e3f4d850e3eb22a5a0ac43476dcc54e69adac1202623178f29549b4b44",
																"typeString": "literal_string \"transfer to 0\""
															},
															"value": "transfer to 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01bc61e3f4d850e3eb22a5a0ac43476dcc54e69adac1202623178f29549b4b44",
																"typeString": "literal_string \"transfer to 0\""
															}
														],
														"id": 1459,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4828:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4828:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1468,
												"nodeType": "ExpressionStatement",
												"src": "4828:43:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1470,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1444,
																"src": "4890:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "307864656164",
																		"id": 1473,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4905:6:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_57005_by_1",
																			"typeString": "int_const 57005"
																		},
																		"value": "0xdead"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_57005_by_1",
																			"typeString": "int_const 57005"
																		}
																	],
																	"id": 1472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4897:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1471,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4897:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1474,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4897:15:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "4890:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "7472616e7366657220746f20307864656164",
															"id": 1476,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4914:20:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0f76b0e999ef8392e30c214f6024bd49c272969cba01c2b93095d2fe0bf18da5",
																"typeString": "literal_string \"transfer to 0xdead\""
															},
															"value": "transfer to 0xdead"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0f76b0e999ef8392e30c214f6024bd49c272969cba01c2b93095d2fe0bf18da5",
																"typeString": "literal_string \"transfer to 0xdead\""
															}
														],
														"id": 1469,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4882:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4882:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1478,
												"nodeType": "ExpressionStatement",
												"src": "4882:53:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1479,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "4948:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1481,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1480,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1442,
															"src": "4958:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4948:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1486,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1446,
																"src": "4988:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1482,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1238,
																	"src": "4967:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1484,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1483,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1442,
																	"src": "4977:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4967:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1864,
															"src": "4967:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1487,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4967:29:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4948:48:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1489,
												"nodeType": "ExpressionStatement",
												"src": "4948:48:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1490,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "5007:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1492,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1491,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1444,
															"src": "5017:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5007:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1497,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1446,
																"src": "5043:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1493,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1238,
																	"src": "5024:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1495,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1494,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1444,
																	"src": "5034:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5024:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1838,
															"src": "5024:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1498,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5024:27:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5007:44:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1500,
												"nodeType": "ExpressionStatement",
												"src": "5007:44:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1502,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1442,
															"src": "5076:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1503,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1444,
															"src": "5083:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1504,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1446,
															"src": "5088:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1501,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1724,
														"src": "5067:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5067:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1506,
												"nodeType": "EmitStatement",
												"src": "5062:34:2"
											}
										]
									},
									"documentation": {
										"id": 1440,
										"nodeType": "StructuredDocumentation",
										"src": "4183:463:2",
										"text": " @dev Moves tokens `_amount` from `_from` to `_to`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `_from` cannot be the zero address.\n - `_to` cannot be the zero address.\n - `_from` must have a balance of at least `_amount`."
									},
									"id": 1508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1508,
												"src": "4681:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4681:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1508,
												"src": "4705:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4705:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1508,
												"src": "4727:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4727:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4670:79:2"
									},
									"returnParameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4759:0:2"
									},
									"scope": 1656,
									"src": "4652:452:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1552,
										"nodeType": "Block",
										"src": "5658:227:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1519,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1511,
																"src": "5677:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5695:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5687:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1520,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5687:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1523,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5687:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "5677:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "617070726f76652066726f6d2030",
															"id": 1525,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5699:16:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7be6a29a82c9e54f3748332e2433ff641b96e589a0c2b257be32ecb8594857aa",
																"typeString": "literal_string \"approve from 0\""
															},
															"value": "approve from 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7be6a29a82c9e54f3748332e2433ff641b96e589a0c2b257be32ecb8594857aa",
																"typeString": "literal_string \"approve from 0\""
															}
														],
														"id": 1518,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5669:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5669:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1527,
												"nodeType": "ExpressionStatement",
												"src": "5669:47:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1529,
																"name": "_spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1513,
																"src": "5735:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5755:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5747:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1530,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5747:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1533,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5747:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "5735:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "617070726f766520746f2030",
															"id": 1535,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:14:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9735ec0b566eec43aef8e55c8869448c5c3b0e1f23c26343eec9ec39a891c8b4",
																"typeString": "literal_string \"approve to 0\""
															},
															"value": "approve to 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9735ec0b566eec43aef8e55c8869448c5c3b0e1f23c26343eec9ec39a891c8b4",
																"typeString": "literal_string \"approve to 0\""
															}
														],
														"id": 1528,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5727:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5727:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1537,
												"nodeType": "ExpressionStatement",
												"src": "5727:47:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1538,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1244,
																"src": "5787:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1541,
															"indexExpression": {
																"argumentTypes": null,
																"id": 1539,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1511,
																"src": "5799:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5787:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1542,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1540,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "5807:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5787:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1543,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1515,
														"src": "5819:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5787:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1545,
												"nodeType": "ExpressionStatement",
												"src": "5787:39:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1547,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1511,
															"src": "5851:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1548,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "5859:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1549,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1515,
															"src": "5869:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1546,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1733,
														"src": "5842:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5842:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1551,
												"nodeType": "EmitStatement",
												"src": "5837:40:2"
											}
										]
									},
									"documentation": {
										"id": 1509,
										"nodeType": "StructuredDocumentation",
										"src": "5112:428:2",
										"text": " @dev Sets `amount` as the allowance of `_spender` over the `_owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `_owner` cannot be the zero address.\n - `_spender` cannot be the zero address."
									},
									"id": 1553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1553,
												"src": "5574:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5574:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "_spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1553,
												"src": "5599:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5599:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1553,
												"src": "5626:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5626:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5563:85:2"
									},
									"returnParameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5658:0:2"
									},
									"scope": 1656,
									"src": "5546:339:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1598,
										"nodeType": "Block",
										"src": "6218:216:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1562,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1556,
																"src": "6237:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1565,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6252:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6244:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1563,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6244:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1566,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6244:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6237:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6d696e7420746f2030",
															"id": 1568,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6256:11:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_341351e35cc1cea7d00a25dee4c4c0513a1d39ea1954597cbb7cb19fe6a8a930",
																"typeString": "literal_string \"mint to 0\""
															},
															"value": "mint to 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_341351e35cc1cea7d00a25dee4c4c0513a1d39ea1954597cbb7cb19fe6a8a930",
																"typeString": "literal_string \"mint to 0\""
															}
														],
														"id": 1561,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6229:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6229:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1570,
												"nodeType": "ExpressionStatement",
												"src": "6229:39:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1571,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1246,
														"src": "6281:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1574,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1558,
																"src": "6313:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1572,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1246,
																"src": "6296:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1838,
															"src": "6296:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6296:25:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6281:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1577,
												"nodeType": "ExpressionStatement",
												"src": "6281:40:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1578,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "6332:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1580,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1579,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1556,
															"src": "6342:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6332:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1585,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1558,
																"src": "6368:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1581,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1238,
																	"src": "6349:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1583,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1582,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1556,
																	"src": "6359:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6349:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1838,
															"src": "6349:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1586,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6349:27:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6332:44:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1588,
												"nodeType": "ExpressionStatement",
												"src": "6332:44:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6409:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1591,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6401:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1590,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6401:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1593,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6401:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1594,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1556,
															"src": "6413:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1595,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1558,
															"src": "6418:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1589,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1724,
														"src": "6392:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6392:34:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1597,
												"nodeType": "EmitStatement",
												"src": "6387:39:2"
											}
										]
									},
									"documentation": {
										"id": 1554,
										"nodeType": "StructuredDocumentation",
										"src": "5893:265:2",
										"text": "@dev Creates `_amount` tokens and assigns them to `_to`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `to` cannot be the zero address."
									},
									"id": 1599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1599,
												"src": "6179:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6179:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1599,
												"src": "6192:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6192:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6178:30:2"
									},
									"returnParameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6218:0:2"
									},
									"scope": 1656,
									"src": "6164:270:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1654,
										"nodeType": "Block",
										"src": "6819:295:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1608,
																"name": "_from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1602,
																"src": "6838:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1611,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6855:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6847:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1609,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6847:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1612,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6847:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6838:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6275726e2066726f6d2030",
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6859:13:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_787b4790c0cc1d5398d1165119b3cd89324d059eed4a4e3b5563167482dac8b9",
																"typeString": "literal_string \"burn from 0\""
															},
															"value": "burn from 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_787b4790c0cc1d5398d1165119b3cd89324d059eed4a4e3b5563167482dac8b9",
																"typeString": "literal_string \"burn from 0\""
															}
														],
														"id": 1607,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6830:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6830:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1616,
												"nodeType": "ExpressionStatement",
												"src": "6830:43:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1618,
																"name": "_from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1602,
																"src": "6892:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "307864656164",
																		"id": 1621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6909:6:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_57005_by_1",
																			"typeString": "int_const 57005"
																		},
																		"value": "0xdead"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_57005_by_1",
																			"typeString": "int_const 57005"
																		}
																	],
																	"id": 1620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6901:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1619,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6901:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6901:15:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "6892:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6275726e2066726f6d20307864656164",
															"id": 1624,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6918:18:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6b25ae7242490c676be63d6d4b6e88a8900efbe5296fb7f67d86b6a7c21cf04a",
																"typeString": "literal_string \"burn from 0xdead\""
															},
															"value": "burn from 0xdead"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6b25ae7242490c676be63d6d4b6e88a8900efbe5296fb7f67d86b6a7c21cf04a",
																"typeString": "literal_string \"burn from 0xdead\""
															}
														],
														"id": 1617,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6884:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6884:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1626,
												"nodeType": "ExpressionStatement",
												"src": "6884:53:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1627,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "6950:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1629,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1628,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1602,
															"src": "6960:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6950:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1634,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1604,
																"src": "6990:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1630,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1238,
																	"src": "6969:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1632,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1631,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1602,
																	"src": "6979:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6969:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1864,
															"src": "6969:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1635,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6969:29:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6950:48:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1637,
												"nodeType": "ExpressionStatement",
												"src": "6950:48:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1638,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1246,
														"src": "7009:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1641,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1604,
																"src": "7041:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 1639,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1246,
																"src": "7024:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1864,
															"src": "7024:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1642,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7024:25:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7009:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1644,
												"nodeType": "ExpressionStatement",
												"src": "7009:40:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1646,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1602,
															"src": "7074:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "307864656164",
																	"id": 1649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7089:6:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_57005_by_1",
																		"typeString": "int_const 57005"
																	},
																	"value": "0xdead"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_57005_by_1",
																		"typeString": "int_const 57005"
																	}
																],
																"id": 1648,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7081:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1647,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7081:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1650,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7081:15:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1651,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1604,
															"src": "7098:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1645,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1724,
														"src": "7065:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7065:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1653,
												"nodeType": "EmitStatement",
												"src": "7060:46:2"
											}
										]
									},
									"documentation": {
										"id": 1600,
										"nodeType": "StructuredDocumentation",
										"src": "6442:315:2",
										"text": " @dev Destroys `_amount` tokens from `_from`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `_from` cannot be the zero address.\n - `_from` must have at least `_amount` tokens."
									},
									"id": 1655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "_from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1655,
												"src": "6778:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6778:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1604,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1655,
												"src": "6793:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6793:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6777:32:2"
									},
									"returnParameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6819:0:2"
									},
									"scope": 1656,
									"src": "6763:351:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1657,
							"src": "139:6978:2"
						}
					],
					"src": "35:7084:2"
				},
				"id": 2
			},
			"_lib/IERC20.sol": {
				"ast": {
					"absolutePath": "_lib/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1734
						]
					},
					"id": 1735,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1658,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1659,
								"nodeType": "StructuredDocumentation",
								"src": "62:136:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP.\n From https://github.com/OpenZeppelin/openzeppelin-contracts"
							},
							"fullyImplemented": false,
							"id": 1734,
							"linearizedBaseContracts": [
								1734
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 1660,
										"nodeType": "StructuredDocumentation",
										"src": "222:64:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1665,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "310:2:3"
									},
									"returnParameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1665,
												"src": "336:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "336:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "335:9:3"
									},
									"scope": 1734,
									"src": "290:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1666,
										"nodeType": "StructuredDocumentation",
										"src": "351:70:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1673,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1673,
												"src": "444:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "444:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "443:17:3"
									},
									"returnParameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1673,
												"src": "484:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "484:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "483:9:3"
									},
									"scope": 1734,
									"src": "425:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1674,
										"nodeType": "StructuredDocumentation",
										"src": "499:203:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1683,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1683,
												"src": "724:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "724:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1683,
												"src": "743:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "743:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "723:35:3"
									},
									"returnParameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1683,
												"src": "777:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1680,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "777:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "776:6:3"
									},
									"scope": 1734,
									"src": "706:77:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1684,
										"nodeType": "StructuredDocumentation",
										"src": "789:258:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1693,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1693,
												"src": "1070:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1070:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1693,
												"src": "1085:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1085:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1069:32:3"
									},
									"returnParameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1693,
												"src": "1125:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1124:9:3"
									},
									"scope": 1734,
									"src": "1051:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1694,
										"nodeType": "StructuredDocumentation",
										"src": "1140:629:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1703,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1696,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1703,
												"src": "1790:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1790:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1703,
												"src": "1807:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1807:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1789:33:3"
									},
									"returnParameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1703,
												"src": "1841:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1700,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1841:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1840:6:3"
									},
									"scope": 1734,
									"src": "1773:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1704,
										"nodeType": "StructuredDocumentation",
										"src": "1853:288:3",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1715,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1715,
												"src": "2173:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2173:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1715,
												"src": "2194:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2194:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1715,
												"src": "2218:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2218:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2166:71:3"
									},
									"returnParameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1715,
												"src": "2256:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1712,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2256:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2255:6:3"
									},
									"scope": 1734,
									"src": "2145:117:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1716,
										"nodeType": "StructuredDocumentation",
										"src": "2268:153:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 1724,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1718,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1724,
												"src": "2440:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1720,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1724,
												"src": "2462:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2462:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1722,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1724,
												"src": "2482:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2482:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2439:57:3"
									},
									"src": "2425:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1725,
										"nodeType": "StructuredDocumentation",
										"src": "2503:145:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 1733,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1733,
												"src": "2667:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1729,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1733,
												"src": "2690:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2690:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1731,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1733,
												"src": "2715:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2715:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2666:63:3"
									},
									"src": "2652:78:3"
								}
							],
							"scope": 1735,
							"src": "200:2533:3"
						}
					],
					"src": "35:2702:3"
				},
				"id": 3
			},
			"_lib/Ownable.sol": {
				"ast": {
					"absolutePath": "_lib/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							1810
						]
					},
					"id": 1811,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1736,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:4"
						},
						{
							"absolutePath": "_lib/Context.sol",
							"file": "./Context.sol",
							"id": 1737,
							"nodeType": "ImportDirective",
							"scope": 1811,
							"sourceUnit": 1223,
							"src": "62:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1738,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1222,
										"src": "118:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$1222",
											"typeString": "contract Context"
										}
									},
									"id": 1739,
									"nodeType": "InheritanceSpecifier",
									"src": "118:7:4"
								}
							],
							"contractDependencies": [
								1222
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1810,
							"linearizedBaseContracts": [
								1810,
								1222
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1741,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1810,
									"src": "133:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1740,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "133:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1747,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1747,
												"src": "191:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "191:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1745,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1747,
												"src": "222:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "190:57:4"
									},
									"src": "164:84:4"
								},
								{
									"body": {
										"id": 1764,
										"nodeType": "Block",
										"src": "378:96:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1751,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1741,
														"src": "389:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1752,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1210,
															"src": "398:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																"typeString": "function () view returns (address payable)"
															}
														},
														"id": 1753,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "398:12:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "389:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1755,
												"nodeType": "ExpressionStatement",
												"src": "389:21:4"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "455:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1758,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "447:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1757,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "447:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1760,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "447:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1761,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1741,
															"src": "459:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1756,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1747,
														"src": "426:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "426:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1763,
												"nodeType": "EmitStatement",
												"src": "421:45:4"
											}
										]
									},
									"documentation": {
										"id": 1748,
										"nodeType": "StructuredDocumentation",
										"src": "256:93:4",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 1765,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "366:2:4"
									},
									"returnParameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "378:0:4"
									},
									"scope": 1810,
									"src": "355:119:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1773,
										"nodeType": "Block",
										"src": "602:32:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1771,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1741,
													"src": "620:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1770,
												"id": 1772,
												"nodeType": "Return",
												"src": "613:13:4"
											}
										]
									},
									"documentation": {
										"id": 1766,
										"nodeType": "StructuredDocumentation",
										"src": "482:67:4",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1774,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "569:2:4"
									},
									"returnParameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1774,
												"src": "593:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "593:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "592:9:4"
									},
									"scope": 1810,
									"src": "555:79:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1786,
										"nodeType": "Block",
										"src": "748:75:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1778,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1210,
																	"src": "767:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 1779,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "767:12:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1780,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1741,
																"src": "783:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "767:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6e6f74206f776e6572",
															"id": 1782,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "791:11:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
																"typeString": "literal_string \"not owner\""
															},
															"value": "not owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
																"typeString": "literal_string \"not owner\""
															}
														],
														"id": 1777,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "759:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "759:44:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1784,
												"nodeType": "ExpressionStatement",
												"src": "759:44:4"
											},
											{
												"id": 1785,
												"nodeType": "PlaceholderStatement",
												"src": "814:1:4"
											}
										]
									},
									"documentation": {
										"id": 1775,
										"nodeType": "StructuredDocumentation",
										"src": "642:79:4",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1787,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "745:2:4"
									},
									"src": "727:96:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1808,
										"nodeType": "Block",
										"src": "880:117:4",
										"statements": [
											{
												"assignments": [
													1793
												],
												"declarations": [
													{
														"constant": false,
														"id": 1793,
														"mutability": "mutable",
														"name": "flag",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1808,
														"src": "891:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1792,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "891:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1798,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1794,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1210,
															"src": "903:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																"typeString": "function () view returns (address payable)"
															}
														},
														"id": 1795,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "903:12:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1796,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1741,
														"src": "919:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "903:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "891:34:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1800,
																"name": "flag",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1793,
																"src": "944:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 1801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "950:4:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "944:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6e6f74206f776e6572",
															"id": 1803,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "955:11:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
																"typeString": "literal_string \"not owner\""
															},
															"value": "not owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
																"typeString": "literal_string \"not owner\""
															}
														],
														"id": 1799,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "936:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1805,
												"nodeType": "ExpressionStatement",
												"src": "936:31:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1806,
													"name": "flag",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1793,
													"src": "985:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1791,
												"id": 1807,
												"nodeType": "Return",
												"src": "978:11:4"
											}
										]
									},
									"documentation": null,
									"functionSelector": "8f32d59b",
									"id": 1809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOwner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "851:2:4"
									},
									"returnParameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1809,
												"src": "875:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1789,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "875:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "874:6:4"
									},
									"scope": 1810,
									"src": "835:162:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1811,
							"src": "89:913:4"
						}
					],
					"src": "35:969:4"
				},
				"id": 4
			},
			"_lib/SafeMath.sol": {
				"ast": {
					"absolutePath": "_lib/SafeMath.sol",
					"exportedSymbols": {
						"Math": [
							2201
						],
						"SafeMath": [
							1948
						],
						"SafeMathExt": [
							2129
						]
					},
					"id": 2202,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1812,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1948,
							"linearizedBaseContracts": [
								1948
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1837,
										"nodeType": "Block",
										"src": "384:114:5",
										"statements": [
											{
												"assignments": [
													1823
												],
												"declarations": [
													{
														"constant": false,
														"id": 1823,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1837,
														"src": "395:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1822,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "395:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1827,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1824,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1815,
														"src": "407:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1825,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1817,
														"src": "411:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "407:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "395:17:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1829,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1823,
																"src": "431:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1830,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1815,
																"src": "436:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "431:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 1832,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "439:29:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 1828,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "423:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "423:46:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1834,
												"nodeType": "ExpressionStatement",
												"src": "423:46:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1835,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1823,
													"src": "489:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1821,
												"id": 1836,
												"nodeType": "Return",
												"src": "482:8:5"
											}
										]
									},
									"documentation": {
										"id": 1813,
										"nodeType": "StructuredDocumentation",
										"src": "86:225:5",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1838,
												"src": "330:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "330:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1838,
												"src": "341:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "341:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "329:22:5"
									},
									"returnParameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1838,
												"src": "375:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "375:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "374:9:5"
									},
									"scope": 1948,
									"src": "317:181:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1863,
										"nodeType": "Block",
										"src": "840:117:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1849,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1843,
																"src": "859:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1850,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1841,
																"src": "864:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "859:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 1852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "867:32:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 1848,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "851:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "851:49:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1854,
												"nodeType": "ExpressionStatement",
												"src": "851:49:5"
											},
											{
												"assignments": [
													1856
												],
												"declarations": [
													{
														"constant": false,
														"id": 1856,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1863,
														"src": "911:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1855,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "911:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1860,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1857,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1841,
														"src": "923:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1858,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1843,
														"src": "927:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "923:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "911:17:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1861,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1856,
													"src": "948:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1847,
												"id": 1862,
												"nodeType": "Return",
												"src": "941:8:5"
											}
										]
									},
									"documentation": {
										"id": 1839,
										"nodeType": "StructuredDocumentation",
										"src": "506:261:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1864,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1841,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1864,
												"src": "786:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "786:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1843,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1864,
												"src": "797:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "785:22:5"
									},
									"returnParameters": {
										"id": 1847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1864,
												"src": "831:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "830:9:5"
									},
									"scope": 1948,
									"src": "773:184:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1898,
										"nodeType": "Block",
										"src": "1275:403:5",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1874,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1867,
														"src": "1510:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1875,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1515:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1510:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1880,
												"nodeType": "IfStatement",
												"src": "1506:47:5",
												"trueBody": {
													"id": 1879,
													"nodeType": "Block",
													"src": "1518:35:5",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1877,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1540:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1873,
															"id": 1878,
															"nodeType": "Return",
															"src": "1533:8:5"
														}
													]
												}
											},
											{
												"assignments": [
													1882
												],
												"declarations": [
													{
														"constant": false,
														"id": 1882,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1898,
														"src": "1565:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1881,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1565:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1886,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1883,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1867,
														"src": "1577:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1884,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1869,
														"src": "1581:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1577:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1565:17:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1890,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1888,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1882,
																	"src": "1601:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1889,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1867,
																	"src": "1605:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1601:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1891,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1869,
																"src": "1610:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 1893,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1613:35:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 1887,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1593:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1593:56:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1895,
												"nodeType": "ExpressionStatement",
												"src": "1593:56:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1896,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1882,
													"src": "1669:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1873,
												"id": 1897,
												"nodeType": "Return",
												"src": "1662:8:5"
											}
										]
									},
									"documentation": {
										"id": 1865,
										"nodeType": "StructuredDocumentation",
										"src": "965:237:5",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1899,
												"src": "1221:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1899,
												"src": "1232:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1232:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1220:22:5"
									},
									"returnParameters": {
										"id": 1873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1899,
												"src": "1266:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1266:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1265:9:5"
									},
									"scope": 1948,
									"src": "1208:470:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1924,
										"nodeType": "Block",
										"src": "2213:266:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1910,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1904,
																"src": "2299:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1911,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2303:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2299:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 1913,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2306:28:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 1909,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2291:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2291:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1915,
												"nodeType": "ExpressionStatement",
												"src": "2291:44:5"
											},
											{
												"assignments": [
													1917
												],
												"declarations": [
													{
														"constant": false,
														"id": 1917,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1924,
														"src": "2346:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1916,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2346:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1921,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1918,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1902,
														"src": "2358:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1919,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1904,
														"src": "2362:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2358:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2346:17:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1922,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1917,
													"src": "2470:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1908,
												"id": 1923,
												"nodeType": "Return",
												"src": "2463:8:5"
											}
										]
									},
									"documentation": {
										"id": 1900,
										"nodeType": "StructuredDocumentation",
										"src": "1686:454:5",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1925,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1902,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1925,
												"src": "2159:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2159:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1904,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1925,
												"src": "2170:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2170:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2158:22:5"
									},
									"returnParameters": {
										"id": 1908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1907,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1925,
												"src": "2204:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2204:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2203:9:5"
									},
									"scope": 1948,
									"src": "2146:333:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1946,
										"nodeType": "Block",
										"src": "3003:85:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1936,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1930,
																"src": "3022:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1937,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3027:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3022:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 1939,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3030:26:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 1935,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3014:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3014:43:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1941,
												"nodeType": "ExpressionStatement",
												"src": "3014:43:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1942,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1928,
														"src": "3075:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1943,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1930,
														"src": "3079:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3075:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1934,
												"id": 1945,
												"nodeType": "Return",
												"src": "3068:12:5"
											}
										]
									},
									"documentation": {
										"id": 1926,
										"nodeType": "StructuredDocumentation",
										"src": "2487:443:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1947,
												"src": "2949:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2949:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1947,
												"src": "2960:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2960:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2948:22:5"
									},
									"returnParameters": {
										"id": 1934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1947,
												"src": "2994:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2994:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2993:9:5"
									},
									"scope": 1948,
									"src": "2936:152:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2202,
							"src": "62:3029:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2129,
							"linearizedBaseContracts": [
								2129
							],
							"name": "SafeMathExt",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1972,
										"nodeType": "Block",
										"src": "3192:113:5",
										"statements": [
											{
												"assignments": [
													1958
												],
												"declarations": [
													{
														"constant": false,
														"id": 1958,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1972,
														"src": "3203:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 1957,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "3203:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1962,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 1961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1959,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1950,
														"src": "3215:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1960,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1952,
														"src": "3219:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "3215:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3203:17:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															"id": 1966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1964,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1958,
																"src": "3239:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1965,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1950,
																"src": "3244:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "3239:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "75696e743132383a206164646974696f6e206f766572666c6f77",
															"id": 1967,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3247:28:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c99ac7713d922e549dbfa2ca1a444e3009e7b3e2c0457def1559be2bff104a96",
																"typeString": "literal_string \"uint128: addition overflow\""
															},
															"value": "uint128: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c99ac7713d922e549dbfa2ca1a444e3009e7b3e2c0457def1559be2bff104a96",
																"typeString": "literal_string \"uint128: addition overflow\""
															}
														],
														"id": 1963,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3231:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3231:45:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1969,
												"nodeType": "ExpressionStatement",
												"src": "3231:45:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1970,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1958,
													"src": "3296:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 1956,
												"id": 1971,
												"nodeType": "Return",
												"src": "3289:8:5"
											}
										]
									},
									"documentation": null,
									"id": 1973,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add128",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1950,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1973,
												"src": "3138:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1949,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3138:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1952,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1973,
												"src": "3149:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1951,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3149:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3137:22:5"
									},
									"returnParameters": {
										"id": 1956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1955,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1973,
												"src": "3183:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1954,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3183:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3182:9:5"
									},
									"scope": 2129,
									"src": "3122:183:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1997,
										"nodeType": "Block",
										"src": "3383:116:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															},
															"id": 1985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1983,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1977,
																"src": "3402:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1984,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1975,
																"src": "3407:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "3402:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "75696e743132383a207375627472616374696f6e206f766572666c6f77",
															"id": 1986,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3410:31:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_214bf26b84263a08b229ee18f74895fde1be3a33320f210ca0af7e474e7eca45",
																"typeString": "literal_string \"uint128: subtraction overflow\""
															},
															"value": "uint128: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_214bf26b84263a08b229ee18f74895fde1be3a33320f210ca0af7e474e7eca45",
																"typeString": "literal_string \"uint128: subtraction overflow\""
															}
														],
														"id": 1982,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3394:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:48:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1988,
												"nodeType": "ExpressionStatement",
												"src": "3394:48:5"
											},
											{
												"assignments": [
													1990
												],
												"declarations": [
													{
														"constant": false,
														"id": 1990,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1997,
														"src": "3453:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 1989,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "3453:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1994,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 1993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1991,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1975,
														"src": "3465:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1992,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1977,
														"src": "3469:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "3465:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3453:17:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1995,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1990,
													"src": "3490:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 1981,
												"id": 1996,
												"nodeType": "Return",
												"src": "3483:8:5"
											}
										]
									},
									"documentation": null,
									"id": 1998,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub128",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1998,
												"src": "3329:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1974,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3329:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1977,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1998,
												"src": "3340:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1976,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3328:22:5"
									},
									"returnParameters": {
										"id": 1981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1980,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1998,
												"src": "3374:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1979,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3374:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3373:9:5"
									},
									"scope": 2129,
									"src": "3313:186:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2022,
										"nodeType": "Block",
										"src": "3573:111:5",
										"statements": [
											{
												"assignments": [
													2008
												],
												"declarations": [
													{
														"constant": false,
														"id": 2008,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2022,
														"src": "3584:8:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 2007,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "3584:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2012,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 2011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2009,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2000,
														"src": "3595:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2010,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2002,
														"src": "3599:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "3595:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3584:16:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"id": 2016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2014,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2008,
																"src": "3619:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2015,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2000,
																"src": "3624:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "3619:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "75696e7436343a206164646974696f6e206f766572666c6f77",
															"id": 2017,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3627:27:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7675c39f44124aa9788d16e91930c0fa6aa81eb57a5f5d1f222c20d9527e3d87",
																"typeString": "literal_string \"uint64: addition overflow\""
															},
															"value": "uint64: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7675c39f44124aa9788d16e91930c0fa6aa81eb57a5f5d1f222c20d9527e3d87",
																"typeString": "literal_string \"uint64: addition overflow\""
															}
														],
														"id": 2013,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3611:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3611:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2019,
												"nodeType": "ExpressionStatement",
												"src": "3611:44:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2020,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2008,
													"src": "3675:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 2006,
												"id": 2021,
												"nodeType": "Return",
												"src": "3668:8:5"
											}
										]
									},
									"documentation": null,
									"id": 2023,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add64",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2000,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2023,
												"src": "3522:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1999,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3522:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2002,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2023,
												"src": "3532:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2001,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3532:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3521:20:5"
									},
									"returnParameters": {
										"id": 2006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2005,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2023,
												"src": "3565:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2004,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3565:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3564:8:5"
									},
									"scope": 2129,
									"src": "3507:177:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2047,
										"nodeType": "Block",
										"src": "3758:114:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"id": 2035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2033,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2027,
																"src": "3777:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 2034,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2025,
																"src": "3782:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "3777:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "75696e7436343a207375627472616374696f6e206f766572666c6f77",
															"id": 2036,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3785:30:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_79791704ba5ccf52eae5c0e67d393b26febf6f2799eb0d958daaee578ba9781f",
																"typeString": "literal_string \"uint64: subtraction overflow\""
															},
															"value": "uint64: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_79791704ba5ccf52eae5c0e67d393b26febf6f2799eb0d958daaee578ba9781f",
																"typeString": "literal_string \"uint64: subtraction overflow\""
															}
														],
														"id": 2032,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3769:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3769:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2038,
												"nodeType": "ExpressionStatement",
												"src": "3769:47:5"
											},
											{
												"assignments": [
													2040
												],
												"declarations": [
													{
														"constant": false,
														"id": 2040,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2047,
														"src": "3827:8:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 2039,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "3827:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2044,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 2043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2041,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2025,
														"src": "3838:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2042,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2027,
														"src": "3842:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "3838:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3827:16:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2045,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2040,
													"src": "3863:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 2031,
												"id": 2046,
												"nodeType": "Return",
												"src": "3856:8:5"
											}
										]
									},
									"documentation": null,
									"id": 2048,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub64",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2025,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2048,
												"src": "3707:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2024,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3707:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2027,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2048,
												"src": "3717:8:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2026,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3717:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3706:20:5"
									},
									"returnParameters": {
										"id": 2031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2030,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2048,
												"src": "3750:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2029,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3750:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3749:8:5"
									},
									"scope": 2129,
									"src": "3692:180:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2067,
										"nodeType": "Block",
										"src": "3940:161:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2056,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2050,
																"src": "3973:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "307830313030303030303030303030303030303030303030303030303030303030303030",
																"id": 2057,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3977:36:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																	"typeString": "int_const 3402...(31 digits omitted)...1456"
																},
																"value": "0x0100000000000000000000000000000000"
															},
															"src": "3973:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "75696e743132383a206e756d626572206f766572666c6f77",
															"id": 2059,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4028:26:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a55ac4ef8ccd14ae33c9df525bfff93daf1b2199312485325ac861b80b5a6c04",
																"typeString": "literal_string \"uint128: number overflow\""
															},
															"value": "uint128: number overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a55ac4ef8ccd14ae33c9df525bfff93daf1b2199312485325ac861b80b5a6c04",
																"typeString": "literal_string \"uint128: number overflow\""
															}
														],
														"id": 2055,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3951:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3951:114:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2061,
												"nodeType": "ExpressionStatement",
												"src": "3951:114:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2064,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2050,
															"src": "4091:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2063,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4083:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint128_$",
															"typeString": "type(uint128)"
														},
														"typeName": {
															"id": 2062,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "4083:7:5",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 2065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4083:10:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 2054,
												"id": 2066,
												"nodeType": "Return",
												"src": "4076:17:5"
											}
										]
									},
									"documentation": null,
									"id": 2068,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe128",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2050,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2068,
												"src": "3897:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3897:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3896:11:5"
									},
									"returnParameters": {
										"id": 2054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2053,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2068,
												"src": "3931:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2052,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3931:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3930:9:5"
									},
									"scope": 2129,
									"src": "3880:221:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2087,
										"nodeType": "Block",
										"src": "4167:106:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2076,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2070,
																"src": "4186:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3078303130303030303030303030303030303030",
																"id": 2077,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4190:20:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18446744073709551616_by_1",
																	"typeString": "int_const 18446744073709551616"
																},
																"value": "0x010000000000000000"
															},
															"src": "4186:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "75696e7436343a206e756d626572206f766572666c6f77",
															"id": 2079,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4212:25:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_71a394c299de6cc8d998535a4904909b3af23ceccb6c6935d76929de286c9460",
																"typeString": "literal_string \"uint64: number overflow\""
															},
															"value": "uint64: number overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_71a394c299de6cc8d998535a4904909b3af23ceccb6c6935d76929de286c9460",
																"typeString": "literal_string \"uint64: number overflow\""
															}
														],
														"id": 2075,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4178:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4178:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2081,
												"nodeType": "ExpressionStatement",
												"src": "4178:60:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2084,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2070,
															"src": "4263:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2083,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4256:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 2082,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4256:6:5",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 2085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4256:9:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 2074,
												"id": 2086,
												"nodeType": "Return",
												"src": "4249:16:5"
											}
										]
									},
									"documentation": null,
									"id": 2088,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe64",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2070,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2088,
												"src": "4125:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4125:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4124:11:5"
									},
									"returnParameters": {
										"id": 2074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2073,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2088,
												"src": "4159:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2072,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4159:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4158:8:5"
									},
									"scope": 2129,
									"src": "4109:164:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2107,
										"nodeType": "Block",
										"src": "4339:98:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2096,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2090,
																"src": "4358:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "307830313030303030303030",
																"id": 2097,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4362:12:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																},
																"value": "0x0100000000"
															},
															"src": "4358:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "75696e7433323a206e756d626572206f766572666c6f77",
															"id": 2099,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4376:25:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b896ab161d2704c243b43595cba333aac88f946cbf2b30e564ab729c121cac8",
																"typeString": "literal_string \"uint32: number overflow\""
															},
															"value": "uint32: number overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b896ab161d2704c243b43595cba333aac88f946cbf2b30e564ab729c121cac8",
																"typeString": "literal_string \"uint32: number overflow\""
															}
														],
														"id": 2095,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4350:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4350:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2101,
												"nodeType": "ExpressionStatement",
												"src": "4350:52:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2104,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2090,
															"src": "4427:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2103,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4420:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": {
															"id": 2102,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "4420:6:5",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 2105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:9:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 2094,
												"id": 2106,
												"nodeType": "Return",
												"src": "4413:16:5"
											}
										]
									},
									"documentation": null,
									"id": 2108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe32",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2090,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2108,
												"src": "4297:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4297:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4296:11:5"
									},
									"returnParameters": {
										"id": 2094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2093,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2108,
												"src": "4331:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2092,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4331:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4330:8:5"
									},
									"scope": 2129,
									"src": "4281:156:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2127,
										"nodeType": "Block",
										"src": "4503:94:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2116,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2110,
																"src": "4522:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3078303130303030",
																"id": 2117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4526:8:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_65536_by_1",
																	"typeString": "int_const 65536"
																},
																"value": "0x010000"
															},
															"src": "4522:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "75696e7433323a206e756d626572206f766572666c6f77",
															"id": 2119,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4536:25:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b896ab161d2704c243b43595cba333aac88f946cbf2b30e564ab729c121cac8",
																"typeString": "literal_string \"uint32: number overflow\""
															},
															"value": "uint32: number overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b896ab161d2704c243b43595cba333aac88f946cbf2b30e564ab729c121cac8",
																"typeString": "literal_string \"uint32: number overflow\""
															}
														],
														"id": 2115,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4514:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4514:48:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2121,
												"nodeType": "ExpressionStatement",
												"src": "4514:48:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2124,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2110,
															"src": "4587:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2123,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4580:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint16_$",
															"typeString": "type(uint16)"
														},
														"typeName": {
															"id": 2122,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "4580:6:5",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 2125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4580:9:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 2114,
												"id": 2126,
												"nodeType": "Return",
												"src": "4573:16:5"
											}
										]
									},
									"documentation": null,
									"id": 2128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safe16",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2128,
												"src": "4461:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4461:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4460:11:5"
									},
									"returnParameters": {
										"id": 2114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2113,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2128,
												"src": "4495:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2112,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4495:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4494:8:5"
									},
									"scope": 2129,
									"src": "4445:152:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2202,
							"src": "3095:1505:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2201,
							"linearizedBaseContracts": [
								2201
							],
							"name": "Math",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2146,
										"nodeType": "Block",
										"src": "4758:40:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2141,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 2139,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2132,
															"src": "4776:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 2140,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2134,
															"src": "4781:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4776:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"id": 2143,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2134,
														"src": "4789:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4776:14:5",
													"trueExpression": {
														"argumentTypes": null,
														"id": 2142,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2132,
														"src": "4785:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2138,
												"id": 2145,
												"nodeType": "Return",
												"src": "4769:21:5"
											}
										]
									},
									"documentation": {
										"id": 2130,
										"nodeType": "StructuredDocumentation",
										"src": "4624:61:5",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2132,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2147,
												"src": "4704:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4704:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2134,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2147,
												"src": "4715:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4715:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4703:22:5"
									},
									"returnParameters": {
										"id": 2138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2137,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2147,
												"src": "4749:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4749:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4748:9:5"
									},
									"scope": 2201,
									"src": "4691:107:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2164,
										"nodeType": "Block",
										"src": "4941:39:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 2157,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2150,
															"src": "4959:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"argumentTypes": null,
															"id": 2158,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2152,
															"src": "4963:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4959:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"argumentTypes": null,
														"id": 2161,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2152,
														"src": "4971:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4959:13:5",
													"trueExpression": {
														"argumentTypes": null,
														"id": 2160,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2150,
														"src": "4967:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2156,
												"id": 2163,
												"nodeType": "Return",
												"src": "4952:20:5"
											}
										]
									},
									"documentation": {
										"id": 2148,
										"nodeType": "StructuredDocumentation",
										"src": "4806:62:5",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2150,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2165,
												"src": "4887:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2152,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2165,
												"src": "4898:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4898:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4886:22:5"
									},
									"returnParameters": {
										"id": 2156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2155,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2165,
												"src": "4932:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4932:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4931:9:5"
									},
									"scope": 2201,
									"src": "4874:106:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2199,
										"nodeType": "Block",
										"src": "5170:126:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 2175,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2168,
																		"src": "5244:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 2176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5248:1:5",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "5244:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2178,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5243:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"components": [
																{
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 2179,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2170,
																		"src": "5254:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "32",
																		"id": 2180,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5258:1:5",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "5254:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2182,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5253:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5243:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2195,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2192,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2186,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 2184,
																							"name": "a",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2168,
																							"src": "5266:1:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "%",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "32",
																							"id": 2185,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "5270:1:5",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2_by_1",
																								"typeString": "int_const 2"
																							},
																							"value": "2"
																						},
																						"src": "5266:5:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 2187,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5265:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2190,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 2188,
																							"name": "b",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2170,
																							"src": "5276:1:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "%",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "32",
																							"id": 2189,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "5280:1:5",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2_by_1",
																								"typeString": "int_const 2"
																							},
																							"value": "2"
																						},
																						"src": "5276:5:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 2191,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5275:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5265:17:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2193,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5264:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "32",
																	"id": 2194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5286:1:5",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "5264:23:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2196,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5263:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5243:45:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2174,
												"id": 2198,
												"nodeType": "Return",
												"src": "5236:52:5"
											}
										]
									},
									"documentation": {
										"id": 2166,
										"nodeType": "StructuredDocumentation",
										"src": "4988:105:5",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2168,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2200,
												"src": "5116:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2200,
												"src": "5127:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5127:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5115:22:5"
									},
									"returnParameters": {
										"id": 2174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2173,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2200,
												"src": "5161:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5161:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5160:9:5"
									},
									"scope": 2201,
									"src": "5099:197:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2202,
							"src": "4604:695:5"
						}
					],
					"src": "35:5266:5"
				},
				"id": 5
			}
		}
	}
}